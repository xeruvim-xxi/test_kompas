# -*- coding: mbcs -*-
# Created by makepy.py version 0.5.01
# By python version 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
# From type library 'kApi7.tlb'
# On Fri Jul 23 10:00:23 2021
''
makepy_version = '0.5.01'
python_version = 0x30905f0

import win32com.client.CLSIDToClass, pythoncom, pywintypes
import win32com.client.util
from pywintypes import IID
from win32com.client import Dispatch

# The following 3 lines may need tweaking for the particular server
# Candidates are pythoncom.Missing, .Empty and .ArgNotFound
defaultNamedOptArg=pythoncom.Empty
defaultNamedNotOptArg=pythoncom.Empty
defaultUnnamedArg=pythoncom.Empty

CLSID = IID('{69AC2981-37C0-4379-84FD-5DD2F3C0A520}')
MajorVersion = 1
MinorVersion = 0
LibraryFlags = 8
LCID = 0x0

from win32com.client import DispatchBaseClass
class IAdditionalBlockSectionTuning(DispatchBaseClass):
	'Ќастройка раздела блока дополнительных разделов.'
	CLSID = IID('{E04B8464-C8D6-4BAC-99B5-AE79EBBDB205}')
	coclass_clsid = IID('{39BDE053-03AA-4B95-8E25-5B8041C7BE12}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Number": (1, 2, (3, 0), (), "Number", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Use": (2, 2, (11, 0), (), "Use", None),
	}
	_prop_map_put_ = {
		"Use": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAdditionalBlockSectionTunings(DispatchBaseClass):
	' оллекци€ настроек разделов блока дополнительных разделов.'
	CLSID = IID('{43EFA203-F956-43D6-B603-87807DDEFD0A}')
	coclass_clsid = IID('{821A5929-98F3-4C67-BC2C-D3A8A1442086}')

	# Result is of type IAdditionalBlockSectionTuning
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает настройки блока дополнительных разделов, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E04B8464-C8D6-4BAC-99B5-AE79EBBDB205}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает настройки блока дополнительных разделов, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E04B8464-C8D6-4BAC-99B5-AE79EBBDB205}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E04B8464-C8D6-4BAC-99B5-AE79EBBDB205}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAdditionalBlockStyle(DispatchBaseClass):
	'—тиль блока дополнительных разделов.'
	CLSID = IID('{B2A43FA6-9BCE-4468-9662-811A6255E220}')
	coclass_clsid = IID('{704BC0BD-189C-4B8B-A97A-AB5F0C6897EF}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Name": (1, 2, (8, 0), (), "Name", None),
		"Number": (2, 2, (3, 0), (), "Number", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAdditionalBlockStyles(DispatchBaseClass):
	' оллекци€ стилей блоков дополнительных разделов.'
	CLSID = IID('{90E2FBEC-A56F-423C-B89F-479673EDD895}')
	coclass_clsid = IID('{2A248D5E-8B8F-4F43-91EC-10C7F02E2064}')

	# Result is of type IAdditionalBlockStyle
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает блок дополнительных разделов, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{B2A43FA6-9BCE-4468-9662-811A6255E220}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает блок дополнительных разделов, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{B2A43FA6-9BCE-4468-9662-811A6255E220}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{B2A43FA6-9BCE-4468-9662-811A6255E220}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAdditionalBlockTuning(DispatchBaseClass):
	'Ќастройка блока дополнительных разделов.'
	CLSID = IID('{9CD5B016-9CE9-4E0A-8902-196D11360536}')
	coclass_clsid = IID('{D62780C1-EDD6-49B6-B619-04E22189D288}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"DocumentName": (2, 2, (8, 0), (), "DocumentName", None),
		"FirstOnSheet": (4, 2, (11, 0), (), "FirstOnSheet", None),
		"IndependentPosition": (6, 2, (11, 0), (), "IndependentPosition", None),
		"Mark": (8, 2, (8, 0), (), "Mark", None),
		"MarkOn": (7, 2, (11, 0), (), "MarkOn", None),
		"Number": (1, 2, (3, 0), (), "Number", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'Sections' returns object of type 'IAdditionalBlockSectionTunings'
		"Sections": (5, 2, (9, 0), (), "Sections", '{43EFA203-F956-43D6-B603-87807DDEFD0A}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Use": (3, 2, (11, 0), (), "Use", None),
	}
	_prop_map_put_ = {
		"DocumentName": ((2, LCID, 4, 0),()),
		"FirstOnSheet": ((4, LCID, 4, 0),()),
		"IndependentPosition": ((6, LCID, 4, 0),()),
		"Mark": ((8, LCID, 4, 0),()),
		"MarkOn": ((7, LCID, 4, 0),()),
		"Use": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAdditionalBlockTunings(DispatchBaseClass):
	' оллекци€ настроек блоков дополнительных разделов.'
	CLSID = IID('{8910CC92-AC76-4837-AB7A-5FD3C7B74728}')
	coclass_clsid = IID('{B6CC6F97-B1F1-42CF-ADC7-7875B06A7089}')

	# Result is of type IAdditionalBlockTuning
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает настройки блока дополнительных разделов, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{9CD5B016-9CE9-4E0A-8902-196D11360536}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает настройки блока дополнительных разделов, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{9CD5B016-9CE9-4E0A-8902-196D11360536}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{9CD5B016-9CE9-4E0A-8902-196D11360536}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAngleDimension(DispatchBaseClass):
	'”гловой размер.'
	CLSID = IID('{0F2CE9EC-5D2A-4B21-B96A-46201C120ED1}')
	coclass_clsid = IID('{D33D3BFC-BEDC-4E91-A78C-D03461379E15}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle1": (4, 2, (5, 0), (), "Angle1", None),
		"Angle2": (5, 2, (5, 0), (), "Angle2", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BaseObject1' returns object of type 'IDrawingObject'
		"BaseObject1": (10, 2, (9, 0), (), "BaseObject1", '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}'),
		# Method 'BaseObject2' returns object of type 'IDrawingObject'
		"BaseObject2": (11, 2, (9, 0), (), "BaseObject2", '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}'),
		"DimensionType": (12, 2, (3, 0), (), "DimensionType", None),
		"Direction": (15, 2, (11, 0), (), "Direction", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Radius": (3, 2, (5, 0), (), "Radius", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"ShelfX": (13, 2, (5, 0), (), "ShelfX", None),
		"ShelfY": (14, 2, (5, 0), (), "ShelfY", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"X1": (6, 2, (5, 0), (), "X1", None),
		"X2": (8, 2, (5, 0), (), "X2", None),
		"X3": (16, 2, (5, 0), (), "X3", None),
		"Xc": (1, 2, (5, 0), (), "Xc", None),
		"Y1": (7, 2, (5, 0), (), "Y1", None),
		"Y2": (9, 2, (5, 0), (), "Y2", None),
		"Y3": (17, 2, (5, 0), (), "Y3", None),
		"Yc": (2, 2, (5, 0), (), "Yc", None),
	}
	_prop_map_put_ = {
		"Angle1": ((4, LCID, 4, 0),()),
		"Angle2": ((5, LCID, 4, 0),()),
		"BaseObject1": ((10, LCID, 4, 0),()),
		"BaseObject2": ((11, LCID, 4, 0),()),
		"DimensionType": ((12, LCID, 4, 0),()),
		"Direction": ((15, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"Radius": ((3, LCID, 4, 0),()),
		"ShelfX": ((13, LCID, 4, 0),()),
		"ShelfY": ((14, LCID, 4, 0),()),
		"X1": ((6, LCID, 4, 0),()),
		"X2": ((8, LCID, 4, 0),()),
		"X3": ((16, LCID, 4, 0),()),
		"Xc": ((1, LCID, 4, 0),()),
		"Y1": ((7, LCID, 4, 0),()),
		"Y2": ((9, LCID, 4, 0),()),
		"Y3": ((17, LCID, 4, 0),()),
		"Yc": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAngleDimension3D(DispatchBaseClass):
	'”гловой размер 3D.'
	CLSID = IID('{C22870B5-F002-4C76-9E67-46854E938824}')
	coclass_clsid = IID('{9D769F23-62B6-46FB-9BC9-A74A28E98501}')

	def GetCenterPoint(self, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		' оординаты центра.'
		return self._ApplyTypes_(6, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2)), 'GetCenterPoint', None,X
			, Y, Z)

	def Inverse(self):
		'»зменить направление размерных линий.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), (),)

	def SetCenterPoint(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg):
		' оординаты центра.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1)),X
			, Y, Z)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"DimensionType": (4, 2, (3, 0), (), "DimensionType", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"Length": (3, 2, (5, 0), (), "Length", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Object1' returns object of type 'IModelObject'
		"Object1": (1, 2, (9, 0), (), "Object1", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'Object2' returns object of type 'IModelObject'
		"Object2": (2, 2, (9, 0), (), "Object2", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"DimensionType": ((4, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Length": ((3, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Object1": ((1, LCID, 4, 0),()),
		"Object2": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAngleDimensions(DispatchBaseClass):
	' оллекци€ угловых размеров.'
	CLSID = IID('{DF9ABB77-BBB6-4B29-A0E0-81DCFD525C2E}')
	coclass_clsid = IID('{82DDC7DF-D7C3-41A6-9913-DEB4CE349203}')

	# Result is of type IAngleDimension
	def Add(self, DimType=defaultNamedNotOptArg):
		'ƒобавить угловой размер в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((3, 1),),DimType
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{0F2CE9EC-5D2A-4B21-B96A-46201C120ED1}')
		return ret

	# Result is of type IAngleDimension
	# The method AngleDimension is actually a property, but must be used as a method to correctly pass the arguments
	def AngleDimension(self, Index=defaultNamedNotOptArg):
		'ѕолучить угловой размер, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'AngleDimension', '{0F2CE9EC-5D2A-4B21-B96A-46201C120ED1}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAngleDimensions3D(DispatchBaseClass):
	' оллекци€ угловых размеров 3D.'
	CLSID = IID('{E0E8DB05-F71B-457E-BFEB-7EC2E803E77A}')
	coclass_clsid = IID('{154CBD57-2124-4667-BECA-61A6D8AB380A}')

	# Result is of type IAngleDimension3D
	def Add(self):
		'ƒобавить угловой размер в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{C22870B5-F002-4C76-9E67-46854E938824}')
		return ret

	# Result is of type IAngleDimension3D
	# The method AngleDimension3D is actually a property, but must be used as a method to correctly pass the arguments
	def AngleDimension3D(self, Index=defaultNamedNotOptArg):
		'ѕолучить угловой размер, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'AngleDimension3D', '{C22870B5-F002-4C76-9E67-46854E938824}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAnnotativeContainer(DispatchBaseClass):
	' онтейнер аннотационных объектов.'
	CLSID = IID('{AE6C238C-4398-4057-9D28-D275954D9506}')
	coclass_clsid = None

	# Result is of type IAnnotativeObject
	def Add(self, Type=defaultNamedNotOptArg):
		'ƒобавить объект.'
		ret = self._oleobj_.InvokeTypes(7002, LCID, 1, (9, 0), ((3, 1),),Type
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{0DBD7BCD-F78E-4BDA-BCAD-3004C60B6D06}')
		return ret

	# Result is of type IAnnotativeObject
	def CreateByGeomObject(self, Obj=defaultNamedNotOptArg):
		'ѕреобразовать геометрический объект в аннотационный.'
		ret = self._oleobj_.InvokeTypes(7003, LCID, 1, (9, 0), ((9, 1),),Obj
			)
		if ret is not None:
			ret = Dispatch(ret, 'CreateByGeomObject', '{0DBD7BCD-F78E-4BDA-BCAD-3004C60B6D06}')
		return ret

	# Result is of type IAnnotativeObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'ѕолучить элемент по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{0DBD7BCD-F78E-4BDA-BCAD-3004C60B6D06}')
		return ret

	_prop_map_get_ = {
		"Count": (7001, 2, (3, 0), (), "Count", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'ѕолучить элемент по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{0DBD7BCD-F78E-4BDA-BCAD-3004C60B6D06}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{0DBD7BCD-F78E-4BDA-BCAD-3004C60B6D06}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(7001, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAnnotativeObject(DispatchBaseClass):
	'јннотационный объект.'
	CLSID = IID('{0DBD7BCD-F78E-4BDA-BCAD-3004C60B6D06}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Sign1": (1501, 2, (3, 0), (), "Sign1", None),
		"Sign2": (1502, 2, (3, 0), (), "Sign2", None),
	}
	_prop_map_put_ = {
		"Sign1": ((1501, LCID, 4, 0),()),
		"Sign2": ((1502, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IApplication(DispatchBaseClass):
	'»нтерфейс приложени€  ќћѕј— 3D'
	CLSID = IID('{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}')
	coclass_clsid = IID('{1A4C2A9B-3B2A-49D1-B75F-3810DD4A2086}')

	# The method ApplicationName is actually a property, but must be used as a method to correctly pass the arguments
	def ApplicationName(self, FullName=defaultNamedNotOptArg):
		'»м€ приложени€.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(18, LCID, 2, (8, 0), ((11, 1),),FullName
			)

	# Result is of type IConverter
	# The method Converter is actually a property, but must be used as a method to correctly pass the arguments
	def Converter(self, Library=defaultNamedNotOptArg):
		'»нтерфейс конвертации документов  ќћѕј—.'
		ret = self._oleobj_.InvokeTypes(10, LCID, 2, (9, 0), ((12, 1),),Library
			)
		if ret is not None:
			ret = Dispatch(ret, 'Converter', '{642D03AB-4798-48A5-B075-3CD9AFA18554}')
		return ret

	# Result is of type IProcessParam
	def CreateProcessParam(self):
		'¬озвращает интерфейс параметров процесса'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'CreateProcessParam', '{CB5FDBC8-4DAE-4C4B-87D5-6FD1F2705C38}')
		return ret

	# Result is of type IPropertyManager
	def CreatePropertyManager(self, NewManager=False):
		'¬озвращает интерфейс панели свойств'
		ret = self._oleobj_.InvokeTypes(6, LCID, 1, (9, 0), ((11, 49),),NewManager
			)
		if ret is not None:
			ret = Dispatch(ret, 'CreatePropertyManager', '{34196EC3-58B2-436C-A353-427703740874}')
		return ret

	def ExecuteKompasCommand(self, CommandID=defaultNamedNotOptArg, PostMessage=True):
		'¬ыполнить команду  омпаса.'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (11, 0), ((3, 1), (11, 49)),CommandID
			, PostMessage)

	def IsKompasCommandCheck(self, CommandID=defaultNamedNotOptArg):
		'ѕроверить нажата ли кнопка команды.'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (3, 0), ((3, 1),),CommandID
			)

	def IsKompasCommandEnable(self, CommandID=defaultNamedNotOptArg):
		'ѕроверить доступна ли команда.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (11, 0), ((3, 1),),CommandID
			)

	# Result is of type IStyles
	# The method LibraryStyles is actually a property, but must be used as a method to correctly pass the arguments
	def LibraryStyles(self, Path=defaultNamedNotOptArg, StylesType=defaultNamedNotOptArg):
		'—тили из библиотеки.'
		ret = self._oleobj_.InvokeTypes(24, LCID, 2, (9, 0), ((8, 1), (3, 1)),Path
			, StylesType)
		if ret is not None:
			ret = Dispatch(ret, 'LibraryStyles', '{E821AE61-FA05-4B39-8908-BD37D6D044A4}')
		return ret

	def MessageBoxEx(self, Text=defaultNamedNotOptArg, Caption=defaultNamedNotOptArg, Flags=defaultNamedNotOptArg):
		'¬ыдать сообщение.'
		return self._oleobj_.InvokeTypes(21, LCID, 1, (3, 0), ((8, 1), (8, 1), (3, 1)),Text
			, Caption, Flags)

	def MessageDlg(self, Parent=defaultNamedNotOptArg, Text=defaultNamedNotOptArg, Caption=defaultNamedNotOptArg, Explanation=defaultNamedNotOptArg
			, Flags=defaultNamedNotOptArg, PositiveButton=defaultNamedNotOptArg, NegativeButton=defaultNamedNotOptArg, CancelButton=defaultNamedNotOptArg, HelpId=defaultNamedNotOptArg
			, HelpFileName=defaultNamedNotOptArg):
		'¬ыдать модельное сообщение.'
		return self._oleobj_.InvokeTypes(22, LCID, 1, (3, 0), ((3, 1), (8, 1), (8, 1), (8, 1), (3, 1), (8, 1), (8, 1), (8, 1), (3, 1), (8, 1)),Parent
			, Text, Caption, Explanation, Flags, PositiveButton
			, NegativeButton, CancelButton, HelpId, HelpFileName)

	def Quit(self):
		'«акрывает приложение'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (24, 0), (),)

	def StopCurrentProcess(self, PostMessage=False, PDoc=0):
		'ќстановить текущий процесс в документе'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((11, 49), (9, 49)),PostMessage
			, PDoc)

	_prop_map_get_ = {
		# Method 'ActiveDocument' returns object of type 'IKompasDocument'
		"ActiveDocument": (7, 2, (9, 0), (), "ActiveDocument", '{5C6E318D-BD6E-4AFA-8A13-977EAA0845EF}'),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'CheckSum' returns object of type 'ICheckSum'
		"CheckSum": (11, 2, (9, 0), (), "CheckSum", '{2AA9F713-2328-4E8F-B996-9DFDABC67DC9}'),
		"CurrentDirectory": (23, 2, (8, 0), (), "CurrentDirectory", None),
		# Method 'Documents' returns object of type 'IDocuments'
		"Documents": (2, 2, (9, 0), (), "Documents", '{8BF39F08-5537-4910-84CE-B338E55F7BCF}'),
		"HideMessage": (13, 2, (3, 0), (), "HideMessage", None),
		# Method 'KompasError' returns object of type 'IKompasError'
		"KompasError": (9, 2, (9, 0), (), "KompasError", '{0A8B4CD1-7158-4CE6-96E0-885376F5DE1B}'),
		# Method 'LibraryManager' returns object of type 'ILibraryManager'
		"LibraryManager": (8, 2, (9, 0), (), "LibraryManager", '{53CDC510-99EA-4736-8542-194F4D8FB32B}'),
		# Method 'Math2D' returns object of type 'IMath2D'
		"Math2D": (19, 2, (9, 0), (), "Math2D", '{0409EC8F-88F7-4242-81E7-965ABEAE932C}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'PrintJob' returns object of type 'IPrintJob'
		"PrintJob": (20, 2, (9, 0), (), "PrintJob", '{9D86880B-C004-475D-8221-B786FD5A228B}'),
		# Method 'ProgressBarIndicator' returns object of type 'IProgressBarIndicator'
		"ProgressBarIndicator": (12, 2, (9, 0), (), "ProgressBarIndicator", '{BE125ABA-EAB2-4A22-99D7-108C84B6DCC5}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'SystemSettings' returns object of type 'ISystemSettings'
		"SystemSettings": (17, 2, (9, 0), (), "SystemSettings", '{FFB66332-17FF-47EB-AC43-32084F8F6077}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Visible": (1, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"ActiveDocument": ((7, LCID, 4, 0),()),
		"CurrentDirectory": ((23, LCID, 4, 0),()),
		"HideMessage": ((13, LCID, 4, 0),()),
		"Visible": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IApplicationDialogs(DispatchBaseClass):
	'»нтерфейс доступа к диалогам  омпас.'
	CLSID = IID('{C825C801-D6D3-4456-BD37-D48ED799E033}')
	coclass_clsid = None

	# Result is of type IKompasAPIObject
	def GetDialogParam(self, ParamType=defaultNamedNotOptArg):
		'ѕолучить интерфейс параметров дл€ вызова диалога.'
		ret = self._oleobj_.InvokeTypes(2001, LCID, 1, (9, 0), ((3, 1),),ParamType
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetDialogParam', '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')
		return ret

	def SelectThread(self, ParentHwnd=defaultNamedNotOptArg, DialogParam=defaultNamedNotOptArg):
		'¬ыбор стандарта резьбы.'
		return self._oleobj_.InvokeTypes(2002, LCID, 1, (11, 0), ((3, 1), (9, 1)),ParentHwnd
			, DialogParam)

	def ShowContentDialog(self, ParentHwnd=defaultNamedNotOptArg, DialogParam=defaultNamedNotOptArg):
		'¬ыбор стандарта резьбы.'
		return self._oleobj_.InvokeTypes(2003, LCID, 1, (3, 0), ((3, 1), (9, 1)),ParentHwnd
			, DialogParam)

	def WhatsWrongDlg(self, Objs=defaultNamedNotOptArg):
		'ƒиалог что неверно.'
		return self._oleobj_.InvokeTypes(2004, LCID, 1, (3, 0), ((12, 1),),Objs
			)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IApplicationLicenseManager(DispatchBaseClass):
	'ћенеджер лицензий.'
	CLSID = IID('{742AA7CC-8019-4854-A8FF-9EE1FFBD0460}')
	coclass_clsid = None

	def EnableKompasInvisible(self, Key=defaultNamedNotOptArg, Signature=defaultNamedNotOptArg):
		'”становить ключ дл€  ќћѕј—-Invisible.'
		return self._oleobj_.InvokeTypes(8003, LCID, 1, (11, 0), ((8, 1), (8, 1)),Key
			, Signature)

	# The method KompasModuleActive is actually a property, but must be used as a method to correctly pass the arguments
	def KompasModuleActive(self, Module=defaultNamedNotOptArg):
		'ƒоступность компонентов  ќћѕј—.'
		return self._oleobj_.InvokeTypes(8002, LCID, 2, (11, 0), ((3, 1),),Module
			)

	# The method LibraryActive is actually a property, but must be used as a method to correctly pass the arguments
	def LibraryActive(self, ProductNumber=defaultNamedNotOptArg):
		'ƒоступность продукта по номеру.'
		return self._oleobj_.InvokeTypes(8004, LCID, 2, (11, 0), ((3, 1),),ProductNumber
			)

	# The method LibraryLocalStatus is actually a property, but must be used as a method to correctly pass the arguments
	def LibraryLocalStatus(self, ProductNumber=defaultNamedNotOptArg):
		'ѕризнак локальный/сетевой продукт.'
		return self._oleobj_.InvokeTypes(8007, LCID, 2, (11, 0), ((3, 1),),ProductNumber
			)

	# The method LibraryProductKeyInfo is actually a property, but must be used as a method to correctly pass the arguments
	def LibraryProductKeyInfo(self, ProductNumber=defaultNamedNotOptArg):
		'»нформаци€ о текущей сессии.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(8009, LCID, 2, (8, 0), ((3, 1),),ProductNumber
			)

	# The method LibraryProductName is actually a property, but must be used as a method to correctly pass the arguments
	def LibraryProductName(self, ProductNumber=defaultNamedNotOptArg):
		'ѕолучить название продукта.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(8008, LCID, 2, (8, 0), ((3, 1),),ProductNumber
			)

	# The method LibraryStatus is actually a property, but must be used as a method to correctly pass the arguments
	def LibraryStatus(self, ProductNumber=defaultNamedNotOptArg):
		'ѕолучить текущий статус продукта по номеру.'
		return self._oleobj_.InvokeTypes(8005, LCID, 2, (3, 0), ((3, 1),),ProductNumber
			)

	# The method LibraryTrialStatus is actually a property, but must be used as a method to correctly pass the arguments
	def LibraryTrialStatus(self, ProductNumber=defaultNamedNotOptArg):
		'ќзнакомительный период.'
		return self._oleobj_.InvokeTypes(8006, LCID, 2, (11, 0), ((3, 1),),ProductNumber
			)

	def RegisterLibraryNumber(self, ProductNumber=defaultNamedNotOptArg):
		'«арегистрировать номер продукта на сервере лицензий  омпас.'
		return self._oleobj_.InvokeTypes(8010, LCID, 1, (3, 0), ((3, 1),),ProductNumber
			)

	# The method SetKompasModuleActive is actually a property, but must be used as a method to correctly pass the arguments
	def SetKompasModuleActive(self, Module=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ƒоступность компонентов  ќћѕј—.'
		return self._oleobj_.InvokeTypes(8002, LCID, 4, (24, 0), ((3, 1), (11, 1)),Module
			, arg1)

	# The method SetLibraryActive is actually a property, but must be used as a method to correctly pass the arguments
	def SetLibraryActive(self, ProductNumber=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ƒоступность продукта по номеру.'
		return self._oleobj_.InvokeTypes(8004, LCID, 4, (24, 0), ((3, 1), (11, 1)),ProductNumber
			, arg1)

	def UnRegisterLibraryNumber(self, ProductNumbUnicueId=defaultNamedNotOptArg):
		'–азрегистрировать номер продукта на сервере лицензий  омпас.'
		return self._oleobj_.InvokeTypes(8011, LCID, 1, (11, 0), ((3, 1),),ProductNumbUnicueId
			)

	_prop_map_get_ = {
		"KompasVariant": (8001, 2, (3, 0), (), "KompasVariant", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IApplicationServises(DispatchBaseClass):
	'»нтерфейс вспомогательного функционала  омпас.'
	CLSID = IID('{EE36CADB-07D1-457A-8D7C-1D2D4B240CF3}')
	coclass_clsid = None

	def CheckDocumentMatchingNames(self, Document=defaultNamedNotOptArg):
		'ѕроверить наличие совпадающих идентификаторов объектов. TRUE - есть объекты с совпадающими именами'
		return self._oleobj_.InvokeTypes(30001, LCID, 1, (11, 0), ((9, 1),),Document
			)

	def GetCurrentUniqueName(self, Document=defaultNamedNotOptArg):
		'ѕолучить текущее значение счетчика в документе.'
		return self._oleobj_.InvokeTypes(30002, LCID, 1, (3, 0), ((9, 1),),Document
			)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IArc(DispatchBaseClass):
	'ƒуга.'
	CLSID = IID('{A22DFB7E-21E0-4B28-9CA1-29B7950CF256}')
	coclass_clsid = IID('{6BA18A3D-28A8-47C3-A97C-E324282F93FD}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle1": (11, 2, (5, 0), (), "Angle1", None),
		"Angle2": (12, 2, (5, 0), (), "Angle2", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Direction": (2, 2, (11, 0), (), "Direction", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Radius": (1, 2, (5, 0), (), "Radius", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Style": (13, 2, (3, 0), (), "Style", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"X1": (5, 2, (5, 0), (), "X1", None),
		"X2": (7, 2, (5, 0), (), "X2", None),
		"X3": (9, 2, (5, 0), (), "X3", None),
		"Xc": (3, 2, (5, 0), (), "Xc", None),
		"Y1": (6, 2, (5, 0), (), "Y1", None),
		"Y2": (8, 2, (5, 0), (), "Y2", None),
		"Y3": (10, 2, (5, 0), (), "Y3", None),
		"Yc": (4, 2, (5, 0), (), "Yc", None),
	}
	_prop_map_put_ = {
		"Angle1": ((11, LCID, 4, 0),()),
		"Angle2": ((12, LCID, 4, 0),()),
		"Direction": ((2, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"Radius": ((1, LCID, 4, 0),()),
		"Style": ((13, LCID, 4, 0),()),
		"X1": ((5, LCID, 4, 0),()),
		"X2": ((7, LCID, 4, 0),()),
		"X3": ((9, LCID, 4, 0),()),
		"Xc": ((3, LCID, 4, 0),()),
		"Y1": ((6, LCID, 4, 0),()),
		"Y2": ((8, LCID, 4, 0),()),
		"Y3": ((10, LCID, 4, 0),()),
		"Yc": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IArc3D(DispatchBaseClass):
	'3D дуга.'
	CLSID = IID('{79CC225F-C4F9-4721-9FE8-8AF3AA887523}')
	coclass_clsid = IID('{D26BAED3-E5C6-422F-A6E9-C5FAB91C39DB}')

	# Result is of type IModelObject
	# The method AssociationObject is actually a property, but must be used as a method to correctly pass the arguments
	def AssociationObject(self, Index=defaultNamedNotOptArg):
		'”становить опорный объект дл€ вершины.'
		ret = self._oleobj_.InvokeTypes(9, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'AssociationObject', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def GetPoint(self, Index=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'ѕолучить координату точки.'
		return self._ApplyTypes_(7, 1, (11, 0), ((3, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetPoint', None,Index
			, X, Y, Z)

	# Result is of type IKompasAPIObject
	# The method PointParameters is actually a property, but must be used as a method to correctly pass the arguments
	def PointParameters(self, Index=defaultNamedNotOptArg):
		'ѕолучить интерфейс параметров точки'
		ret = self._oleobj_.InvokeTypes(14, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'PointParameters', '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')
		return ret

	# The method PointType is actually a property, but must be used as a method to correctly pass the arguments
	def PointType(self, Index=defaultNamedNotOptArg):
		'“ип параметров построени€ точки.'
		return self._oleobj_.InvokeTypes(13, LCID, 2, (3, 0), ((3, 1),),Index
			)

	# The method SetAssociationObject is actually a property, but must be used as a method to correctly pass the arguments
	def SetAssociationObject(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'”становить опорный объект дл€ вершины.'
		return self._oleobj_.InvokeTypes(9, LCID, 4, (24, 0), ((3, 1), (9, 1)),Index
			, arg1)

	def SetPoint(self, Index=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg):
		'”становить координату точки.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), ((3, 1), (5, 1), (5, 1), (5, 1)),Index
			, X, Y, Z)

	# The method SetPointType is actually a property, but must be used as a method to correctly pass the arguments
	def SetPointType(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'“ип параметров построени€ точки.'
		return self._oleobj_.InvokeTypes(13, LCID, 4, (24, 0), ((3, 1), (3, 1)),Index
			, arg1)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle1": (5, 2, (5, 0), (), "Angle1", None),
		"Angle2": (6, 2, (5, 0), (), "Angle2", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BuildingObject' returns object of type 'IModelObject'
		"BuildingObject": (10, 2, (9, 0), (), "BuildingObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"BuildingType": (3, 2, (3, 0), (), "BuildingType", None),
		# Method 'BuildingVectorParameters' returns object of type 'IVector3D'
		"BuildingVectorParameters": (11, 2, (9, 0), (), "BuildingVectorParameters", '{D51A4DCF-627D-44F5-89BA-46EF2449A212}'),
		"Closed": (1, 2, (11, 0), (), "Closed", None),
		"Direction": (2, 2, (11, 0), (), "Direction", None),
		"DirectionPointIndex": (12, 2, (3, 0), (), "DirectionPointIndex", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Radius": (4, 2, (5, 0), (), "Radius", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Angle1": ((5, LCID, 4, 0),()),
		"Angle2": ((6, LCID, 4, 0),()),
		"BuildingObject": ((10, LCID, 4, 0),()),
		"BuildingType": ((3, LCID, 4, 0),()),
		"Closed": ((1, LCID, 4, 0),()),
		"Direction": ((2, LCID, 4, 0),()),
		"DirectionPointIndex": ((12, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Radius": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IArcAxis(DispatchBaseClass):
	'ƒугова€ ось.'
	CLSID = IID('{DAA9755A-3971-4713-B281-15995CBF2E56}')
	coclass_clsid = IID('{AE2C24D6-17E4-4E5F-BA2B-ED62AC2323EC}')

	# Result is of type IMarkNode
	def AddNodeByPoint(self, Type=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg):
		'ƒобавить узел марки по координатам.'
		ret = self._oleobj_.InvokeTypes(2012, LCID, 1, (9, 0), ((3, 1), (5, 1), (5, 1)),Type
			, X, Y)
		if ret is not None:
			ret = Dispatch(ret, 'AddNodeByPoint', '{5AC48E97-80B1-459F-9709-1F3F374559BE}')
		return ret

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def GetInsertionPoints(self, First=defaultNamedNotOptArg, Points=pythoncom.Missing, Directions=pythoncom.Missing, Nodes=pythoncom.Missing):
		'ѕолучить координаты точек дл€ вставки дополнительных элементов.'
		return self._ApplyTypes_(2010, 1, (11, 0), ((11, 1), (16396, 2), (16396, 2), (16396, 2)), 'GetInsertionPoints', None,First
			, Points, Directions, Nodes)

	# Result is of type IMarkNode
	def GetNodeByPoint(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Limit=defaultNamedNotOptArg):
		'ѕолучить узел марки по координатам.'
		ret = self._oleobj_.InvokeTypes(2011, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1)),X
			, Y, Limit)
		if ret is not None:
			ret = Dispatch(ret, 'GetNodeByPoint', '{5AC48E97-80B1-459F-9709-1F3F374559BE}')
		return ret

	# Result is of type IAxisJut
	# The method Jut is actually a property, but must be used as a method to correctly pass the arguments
	def Jut(self, First=defaultNamedNotOptArg):
		'ѕолучить ¬ыступ.First = TRUE первый, First = FALSE второй.'
		ret = self._oleobj_.InvokeTypes(11, LCID, 2, (9, 0), ((11, 1),),First
			)
		if ret is not None:
			ret = Dispatch(ret, 'Jut', '{5A22E024-F530-45DB-A3F2-CA0587BDA1B5}')
		return ret

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle1": (7, 2, (5, 0), (), "Angle1", None),
		"Angle2": (8, 2, (5, 0), (), "Angle2", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AutoStroke": (2009, 2, (11, 0), (), "AutoStroke", None),
		"Direction": (10, 2, (11, 0), (), "Direction", None),
		"DottedLength": (2003, 2, (5, 0), (), "DottedLength", None),
		"DoubleMark": (2001, 2, (11, 0), (), "DoubleMark", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"Interval": (2004, 2, (5, 0), (), "Interval", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'MarkNodes' returns object of type 'IMarkNodes'
		"MarkNodes": (12, 2, (9, 0), (), "MarkNodes", '{EB8ACD77-8008-4F89-A311-2F4712462F72}'),
		"MarkSize": (2002, 2, (5, 0), (), "MarkSize", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Radius": (9, 2, (5, 0), (), "Radius", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Stroke": (2005, 2, (5, 0), (), "Stroke", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		# Method 'Text' returns object of type 'IText'
		"Text": (2006, 2, (9, 0), (), "Text", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		# Method 'TextAfter' returns object of type 'IText'
		"TextAfter": (2008, 2, (9, 0), (), "TextAfter", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		# Method 'TextBefore' returns object of type 'IText'
		"TextBefore": (2007, 2, (9, 0), (), "TextBefore", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"X1": (3, 2, (5, 0), (), "X1", None),
		"X2": (5, 2, (5, 0), (), "X2", None),
		"X3": (13, 2, (5, 0), (), "X3", None),
		"Xc": (1, 2, (5, 0), (), "Xc", None),
		"Y1": (4, 2, (5, 0), (), "Y1", None),
		"Y2": (6, 2, (5, 0), (), "Y2", None),
		"Y3": (14, 2, (5, 0), (), "Y3", None),
		"Yc": (2, 2, (5, 0), (), "Yc", None),
	}
	_prop_map_put_ = {
		"Angle1": ((7, LCID, 4, 0),()),
		"Angle2": ((8, LCID, 4, 0),()),
		"AutoStroke": ((2009, LCID, 4, 0),()),
		"Direction": ((10, LCID, 4, 0),()),
		"DottedLength": ((2003, LCID, 4, 0),()),
		"DoubleMark": ((2001, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"Interval": ((2004, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"MarkSize": ((2002, LCID, 4, 0),()),
		"Radius": ((9, LCID, 4, 0),()),
		"Stroke": ((2005, LCID, 4, 0),()),
		"X1": ((3, LCID, 4, 0),()),
		"X2": ((5, LCID, 4, 0),()),
		"X3": ((13, LCID, 4, 0),()),
		"Xc": ((1, LCID, 4, 0),()),
		"Y1": ((4, LCID, 4, 0),()),
		"Y2": ((6, LCID, 4, 0),()),
		"Y3": ((14, LCID, 4, 0),()),
		"Yc": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IArcDimension(DispatchBaseClass):
	'–азмер дуги окружности.'
	CLSID = IID('{11487495-B18A-4877-9E85-3DC9016DF8BD}')
	coclass_clsid = IID('{37F30E53-7355-436D-8EEF-3B1DE7E9EFCE}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BaseObject' returns object of type 'IDrawingObject'
		"BaseObject": (1, 2, (9, 0), (), "BaseObject", '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}'),
		"DimensionType": (13, 2, (11, 0), (), "DimensionType", None),
		"Direction": (12, 2, (11, 0), (), "Direction", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"ShelfX": (10, 2, (5, 0), (), "ShelfX", None),
		"ShelfY": (11, 2, (5, 0), (), "ShelfY", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"TextPointer": (14, 2, (11, 0), (), "TextPointer", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"X1": (4, 2, (5, 0), (), "X1", None),
		"X2": (6, 2, (5, 0), (), "X2", None),
		"X3": (8, 2, (5, 0), (), "X3", None),
		"Xc": (2, 2, (5, 0), (), "Xc", None),
		"Y1": (5, 2, (5, 0), (), "Y1", None),
		"Y2": (7, 2, (5, 0), (), "Y2", None),
		"Y3": (9, 2, (5, 0), (), "Y3", None),
		"Yc": (3, 2, (5, 0), (), "Yc", None),
	}
	_prop_map_put_ = {
		"BaseObject": ((1, LCID, 4, 0),()),
		"DimensionType": ((13, LCID, 4, 0),()),
		"Direction": ((12, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"ShelfX": ((10, LCID, 4, 0),()),
		"ShelfY": ((11, LCID, 4, 0),()),
		"TextPointer": ((14, LCID, 4, 0),()),
		"X1": ((4, LCID, 4, 0),()),
		"X2": ((6, LCID, 4, 0),()),
		"X3": ((8, LCID, 4, 0),()),
		"Xc": ((2, LCID, 4, 0),()),
		"Y1": ((5, LCID, 4, 0),()),
		"Y2": ((7, LCID, 4, 0),()),
		"Y3": ((9, LCID, 4, 0),()),
		"Yc": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IArcDimensions(DispatchBaseClass):
	' оллекци€ размеров дуг окружностей.'
	CLSID = IID('{FE2755D9-48E2-44CC-BC24-86CF86BE08E2}')
	coclass_clsid = IID('{D18DFB31-8A26-4281-BF18-C462CEDBE714}')

	# Result is of type IArcDimension
	def Add(self):
		'ƒобавить размер дуги окружности в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{11487495-B18A-4877-9E85-3DC9016DF8BD}')
		return ret

	# Result is of type IArcDimension
	# The method ArcDimension is actually a property, but must be used as a method to correctly pass the arguments
	def ArcDimension(self, Index=defaultNamedNotOptArg):
		'ѕолучить размер дуги окружности, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'ArcDimension', '{11487495-B18A-4877-9E85-3DC9016DF8BD}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IArcs(DispatchBaseClass):
	' оллекци€ дуг.'
	CLSID = IID('{4FCB4C17-3B9E-45E8-B83C-9284027BAA0D}')
	coclass_clsid = IID('{307690EF-0E80-4CD1-93E1-49288C5697A7}')

	# Result is of type IArc
	def Add(self):
		'—оздать дугу (ƒобавить дугу в коллекцию).'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{A22DFB7E-21E0-4B28-9CA1-29B7950CF256}')
		return ret

	# Result is of type IArc
	# The method Arc is actually a property, but must be used as a method to correctly pass the arguments
	def Arc(self, Index=defaultNamedNotOptArg):
		'¬озвращает дугу, заданную по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Arc', '{A22DFB7E-21E0-4B28-9CA1-29B7950CF256}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IArcs3D(DispatchBaseClass):
	' оллекци€ дуг 3D.'
	CLSID = IID('{0C7E7D56-F8AF-4803-9291-6351DDE52B69}')
	coclass_clsid = IID('{0B792EA8-E117-4B5C-8775-C466A1108422}')

	# Result is of type IArc3D
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{79CC225F-C4F9-4721-9FE8-8AF3AA887523}')
		return ret

	# Result is of type IArc3D
	# The method Arc3D is actually a property, but must be used as a method to correctly pass the arguments
	def Arc3D(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Arc3D', '{79CC225F-C4F9-4721-9FE8-8AF3AA887523}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAreaMeasurement3D(DispatchBaseClass):
	'»змерение площади.'
	CLSID = IID('{02D1F030-8709-4602-8BAE-E47CE1C9C13D}')
	coclass_clsid = IID('{A0D30170-DD32-466A-9CDB-AC91B0795995}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Areas": (2, 2, (12, 0), (), "Areas", None),
		"Faces": (1, 2, (12, 0), (), "Faces", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Sum": (3, 2, (5, 0), (), "Sum", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Faces": ((1, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAreaMeasurements3D(DispatchBaseClass):
	' оллекци€ измерений площади.'
	CLSID = IID('{12126558-EA51-46E0-BAED-07E523F4B7C6}')
	coclass_clsid = IID('{D1B34114-0946-4074-9E57-A84A8325845A}')

	# Result is of type IAreaMeasurement3D
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{02D1F030-8709-4602-8BAE-E47CE1C9C13D}')
		return ret

	# Result is of type IAreaMeasurement3D
	# The method AreaMeasurement3D is actually a property, but must be used as a method to correctly pass the arguments
	def AreaMeasurement3D(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу или по имени.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'AreaMeasurement3D', '{02D1F030-8709-4602-8BAE-E47CE1C9C13D}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAssemblyDocument(DispatchBaseClass):
	'»нтерфейс сборки.'
	CLSID = IID('{F6B3F33A-3273-43EF-9B8A-7C0AF8FAA129}')
	coclass_clsid = IID('{705B37C7-CA52-4588-980E-1105C919E20C}')

	# The method AttributesEx is actually a property, but must be used as a method to correctly pass the arguments
	def AttributesEx(self, Key1=defaultNamedNotOptArg, Key2=defaultNamedNotOptArg, Key3=defaultNamedNotOptArg, Key4=defaultNamedNotOptArg
			, Numb=defaultNamedNotOptArg, Objects=defaultNamedNotOptArg, SourcePart=defaultNamedNotOptArg):
		'ћассив атрибутов документа в виде массива SAFEARRAY DISPATCH - VT_ARRAY | VT_DISPATCH.'
		return self._ApplyTypes_(5022, 2, (12, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (5, 1), (12, 1), (9, 1)), 'AttributesEx', None,Key1
			, Key2, Key3, Key4, Numb, Objects
			, SourcePart)

	def Close(self, closeOptions=defaultNamedNotOptArg):
		'«акрыть документ. ≈сли SaveChanges = False, то система предложит пользователю сохранить имеющиес€ изменени€.'
		return self._oleobj_.InvokeTypes(3002, LCID, 1, (11, 0), ((3, 1),),closeOptions
			)

	# Result is of type IAttribute
	def CreateAttrEx(self, AttrID=defaultNamedNotOptArg, Libname=defaultNamedNotOptArg, Objects=defaultNamedNotOptArg, SourcePart=defaultNamedNotOptArg):
		'—оздать атрибут по номеру типа атрибута из библиотеки libname.'
		ret = self._oleobj_.InvokeTypes(5021, LCID, 1, (9, 0), ((5, 1), (8, 1), (12, 1), (9, 1)),AttrID
			, Libname, Objects, SourcePart)
		if ret is not None:
			ret = Dispatch(ret, 'CreateAttrEx', '{94F965B0-5ABB-4994-98C7-B08FA8515452}')
		return ret

	def DeleteHistory(self):
		'”далить историю построени€.'
		return self._oleobj_.InvokeTypes(5026, LCID, 1, (11, 0), (),)

	def RebuildDocument(self):
		'ѕерестроить документ.'
		return self._oleobj_.InvokeTypes(5023, LCID, 1, (11, 0), (),)

	def Save(self):
		'—охранить документ на диске.'
		return self._oleobj_.InvokeTypes(3003, LCID, 1, (24, 0), (),)

	def SaveAs(self, PathName=defaultNamedNotOptArg):
		'—охранить документ под другим именем.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (24, 0), ((8, 1),),PathName
			)

	_prop_map_get_ = {
		"Active": (3009, 2, (11, 0), (), "Active", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Changed": (3011, 2, (11, 0), (), "Changed", None),
		# Method 'ChooseManager' returns object of type 'IChooseManager'
		"ChooseManager": (5020, 2, (9, 0), (), "ChooseManager", '{E2D9EAA6-F88C-4ADB-AC32-854E32E9FEE1}'),
		"CreateObjectsInCurrentLocalCS": (5014, 2, (11, 0), (), "CreateObjectsInCurrentLocalCS", None),
		"DismantleMode": (2001, 2, (11, 0), (), "DismantleMode", None),
		# Method 'DocumentFrames' returns object of type 'IDocumentFrames'
		"DocumentFrames": (3001, 2, (9, 0), (), "DocumentFrames", '{1D18C466-C085-4D68-A465-A85D0C8E3A0E}'),
		# Method 'DocumentSettings' returns object of type 'IDocumentSettings'
		"DocumentSettings": (3012, 2, (9, 0), (), "DocumentSettings", '{B35FF50E-2991-4630-8AB8-DC3153E7971A}'),
		"DocumentType": (3000, 2, (3, 0), (), "DocumentType", None),
		"DrawMode": (5012, 2, (3, 0), (), "DrawMode", None),
		"EnableUndo": (5024, 2, (11, 0), (), "EnableUndo", None),
		"HideAllAuxiliaryGeom": (5017, 2, (11, 0), (), "HideAllAuxiliaryGeom", None),
		"HideAllAxis": (5004, 2, (11, 0), (), "HideAllAxis", None),
		"HideAllControlPoints": (5010, 2, (11, 0), (), "HideAllControlPoints", None),
		"HideAllCurves": (5009, 2, (11, 0), (), "HideAllCurves", None),
		"HideAllDesignations": (5016, 2, (11, 0), (), "HideAllDesignations", None),
		"HideAllDimensions": (5015, 2, (11, 0), (), "HideAllDimensions", None),
		"HideAllPlaces": (5006, 2, (11, 0), (), "HideAllPlaces", None),
		"HideAllPlanes": (5003, 2, (11, 0), (), "HideAllPlanes", None),
		"HideAllSketches": (5005, 2, (11, 0), (), "HideAllSketches", None),
		"HideAllSurfaces": (5007, 2, (11, 0), (), "HideAllSurfaces", None),
		"HideAllThreads": (5008, 2, (11, 0), (), "HideAllThreads", None),
		"HideInComponentsMode": (5018, 2, (11, 0), (), "HideInComponentsMode", None),
		# Method 'LayoutSheets' returns object of type 'ILayoutSheets'
		"LayoutSheets": (3014, 2, (9, 0), (), "LayoutSheets", '{7AB54196-0B76-4B01-B769-7F47637173C4}'),
		"Name": (3005, 2, (8, 0), (), "Name", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Path": (3007, 2, (8, 0), (), "Path", None),
		"PathName": (3006, 2, (8, 0), (), "PathName", None),
		"Perspective": (5011, 2, (11, 0), (), "Perspective", None),
		"ReadOnly": (3010, 2, (11, 0), (), "ReadOnly", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'SelectionManager' returns object of type 'ISelectionManager'
		"SelectionManager": (5019, 2, (9, 0), (), "SelectionManager", '{E6DF688C-5B23-436B-A027-A96BFD5484CC}'),
		"ShadedWireframe": (5013, 2, (11, 0), (), "ShadedWireframe", None),
		# Method 'SpecificationDescriptions' returns object of type 'ISpecificationDescriptions'
		"SpecificationDescriptions": (3013, 2, (9, 0), (), "SpecificationDescriptions", '{B9632C5C-86E1-4BC9-83A5-A954E407246A}'),
		# Method 'TechnicalDemand3D' returns object of type 'ITechnicalDemand3D'
		"TechnicalDemand3D": (5027, 2, (9, 0), (), "TechnicalDemand3D", '{CD435B3D-175C-4E18-BAA0-81FDD7EB6A86}'),
		"ToleranceMode": (5028, 2, (11, 0), (), "ToleranceMode", None),
		# Method 'TopPart' returns object of type 'IPart7'
		"TopPart": (5002, 2, (9, 0), (), "TopPart", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"UndoContainer": (5025, 2, (11, 0), (), "UndoContainer", None),
		# Method 'UserDataStoragesMng' returns object of type 'IUserDataStoragesMng'
		"UserDataStoragesMng": (3015, 2, (9, 0), (), "UserDataStoragesMng", '{77A6D4CA-6418-4DEE-B59C-400BFD052375}'),
		"Visible": (3008, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Active": ((3009, LCID, 4, 0),()),
		"CreateObjectsInCurrentLocalCS": ((5014, LCID, 4, 0),()),
		"DismantleMode": ((2001, LCID, 4, 0),()),
		"DrawMode": ((5012, LCID, 4, 0),()),
		"EnableUndo": ((5024, LCID, 4, 0),()),
		"HideAllAuxiliaryGeom": ((5017, LCID, 4, 0),()),
		"HideAllAxis": ((5004, LCID, 4, 0),()),
		"HideAllControlPoints": ((5010, LCID, 4, 0),()),
		"HideAllCurves": ((5009, LCID, 4, 0),()),
		"HideAllDesignations": ((5016, LCID, 4, 0),()),
		"HideAllDimensions": ((5015, LCID, 4, 0),()),
		"HideAllPlaces": ((5006, LCID, 4, 0),()),
		"HideAllPlanes": ((5003, LCID, 4, 0),()),
		"HideAllSketches": ((5005, LCID, 4, 0),()),
		"HideAllSurfaces": ((5007, LCID, 4, 0),()),
		"HideAllThreads": ((5008, LCID, 4, 0),()),
		"HideInComponentsMode": ((5018, LCID, 4, 0),()),
		"Perspective": ((5011, LCID, 4, 0),()),
		"ReadOnly": ((3010, LCID, 4, 0),()),
		"ShadedWireframe": ((5013, LCID, 4, 0),()),
		"ToleranceMode": ((5028, LCID, 4, 0),()),
		"UndoContainer": ((5025, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAssociationTable(DispatchBaseClass):
	'јссоциативна€ таблица.'
	CLSID = IID('{44F0752E-E25B-4896-95B4-6376AC23A2A9}')
	coclass_clsid = IID('{8883DD05-F024-4C44-B9D2-E29EF361A23C}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Rebuild(self):
		'ѕерестроить отчет.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Actual": (5, 2, (11, 0), (), "Actual", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'Report' returns object of type 'IReport'
		"Report": (4, 2, (9, 0), (), "Report", '{37FD3C77-6032-4459-95E9-C8DFC43B85FF}'),
		"TablePlaceType": (3, 2, (3, 0), (), "TablePlaceType", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"X": (1, 2, (5, 0), (), "X", None),
		"Y": (2, 2, (5, 0), (), "Y", None),
	}
	_prop_map_put_ = {
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"TablePlaceType": ((3, LCID, 4, 0),()),
		"X": ((1, LCID, 4, 0),()),
		"Y": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAssociationTables(DispatchBaseClass):
	' оллекци€ ассоциативных таблиц.'
	CLSID = IID('{96F02F01-04E1-44D1-9974-48330EBE801B}')
	coclass_clsid = IID('{A124F0E6-DA11-45B4-8618-95B63C36C7C3}')

	# Result is of type IAssociationTable
	def Add(self, Document=defaultNamedNotOptArg, Type=defaultNamedNotOptArg):
		'ƒобавить таблицу в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((12, 1), (3, 1)),Document
			, Type)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{44F0752E-E25B-4896-95B4-6376AC23A2A9}')
		return ret

	# Result is of type IAssociationTable
	# The method AssociationTable is actually a property, but must be used as a method to correctly pass the arguments
	def AssociationTable(self, Index=defaultNamedNotOptArg):
		'ѕолучить таблицу по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'AssociationTable', '{44F0752E-E25B-4896-95B4-6376AC23A2A9}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAssociationView(DispatchBaseClass):
	'јссоциативный вид.'
	CLSID = IID('{0825F23C-0A73-48DE-BEAB-DA2FF39962C3}')
	coclass_clsid = IID('{9F144F3A-A296-46C6-99C2-1877B83B0E63}')

	def CreateLocalView(self, Contour=defaultNamedNotOptArg):
		'ћестный вид.'
		return self._oleobj_.InvokeTypes(2018, LCID, 1, (11, 0), ((9, 1),),Contour
			)

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	# Result is of type IVariable7
	# The method Variable is actually a property, but must be used as a method to correctly pass the arguments
	def Variable(self, Index=defaultNamedNotOptArg):
		'ѕолучить параметрическую переменную по имени, индексу или указателю на размер'
		ret = self._oleobj_.InvokeTypes(16, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Variable', '{8BAB52D9-8EF6-43A6-A1B8-AF42D5961A94}')
		return ret

	_prop_map_get_ = {
		"Angle": (12, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Background": (3, 2, (11, 0), (), "Background", None),
		# Method 'BaseObject' returns object of type 'IDrawingObject'
		"BaseObject": (2016, 2, (9, 0), (), "BaseObject", '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}'),
		# Method 'BaseView' returns object of type 'IView'
		"BaseView": (2015, 2, (9, 0), (), "BaseView", '{21A7BA87-1C8B-41B4-8247-CDD593546F37}'),
		"BendLinesStyle": (2014, 2, (3, 0), (), "BendLinesStyle", None),
		"BendLinesVisible": (2013, 2, (11, 0), (), "BendLinesVisible", None),
		"BreakLinesStyle": (2012, 2, (3, 0), (), "BreakLinesStyle", None),
		"BreakLinesVisible": (2011, 2, (11, 0), (), "BreakLinesVisible", None),
		"CenterLinesVisible": (2021, 2, (11, 0), (), "CenterLinesVisible", None),
		"Color": (6, 2, (3, 0), (), "Color", None),
		"Comment": (7, 2, (8, 0), (), "Comment", None),
		"Current": (5, 2, (11, 0), (), "Current", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"ExplodedView": (2002, 2, (11, 0), (), "ExplodedView", None),
		"HiddenLines": (2008, 2, (11, 0), (), "HiddenLines", None),
		"HiddenLinesStyle": (2010, 2, (3, 0), (), "HiddenLinesStyle", None),
		"HiddenLinesVisible": (2009, 2, (11, 0), (), "HiddenLinesVisible", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Layers' returns object of type 'ILayers'
		"Layers": (14, 2, (9, 0), (), "Layers", '{F6DC2898-D596-4418-A21A-D15AE07B9A40}'),
		"Local": (2017, 2, (11, 0), (), "Local", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"Number": (1, 2, (3, 0), (), "Number", None),
		"ObjectCount": (8, 2, (3, 0), (), "ObjectCount", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"ProjectionLink": (2004, 2, (11, 0), (), "ProjectionLink", None),
		"ProjectionMatrix": (2020, 2, (12, 0), (), "ProjectionMatrix", None),
		"ProjectionName": (2001, 2, (8, 0), (), "ProjectionName", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"SameHatch": (2019, 2, (11, 0), (), "SameHatch", None),
		"Scale": (11, 2, (5, 0), (), "Scale", None),
		"Section": (2005, 2, (11, 0), (), "Section", None),
		"SourceFileName": (2000, 2, (8, 0), (), "SourceFileName", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Unfold": (2006, 2, (11, 0), (), "Unfold", None),
		"UseOcclusion": (2022, 2, (11, 0), (), "UseOcclusion", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"Variables": (15, 2, (12, 0), (), "Variables", None),
		"VariablesCount": (17, 2, (3, 0), (), "VariablesCount", None),
		"ViewType": (13, 2, (3, 0), (), "ViewType", None),
		"Visible": (4, 2, (11, 0), (), "Visible", None),
		"VisibleLinesStyle": (2007, 2, (3, 0), (), "VisibleLinesStyle", None),
		"X": (9, 2, (5, 0), (), "X", None),
		"Y": (10, 2, (5, 0), (), "Y", None),
	}
	_prop_map_put_ = {
		"Angle": ((12, LCID, 4, 0),()),
		"Background": ((3, LCID, 4, 0),()),
		"BaseObject": ((2016, LCID, 4, 0),()),
		"BaseView": ((2015, LCID, 4, 0),()),
		"BendLinesStyle": ((2014, LCID, 4, 0),()),
		"BendLinesVisible": ((2013, LCID, 4, 0),()),
		"BreakLinesStyle": ((2012, LCID, 4, 0),()),
		"BreakLinesVisible": ((2011, LCID, 4, 0),()),
		"CenterLinesVisible": ((2021, LCID, 4, 0),()),
		"Color": ((6, LCID, 4, 0),()),
		"Comment": ((7, LCID, 4, 0),()),
		"Current": ((5, LCID, 4, 0),()),
		"DimensionLayoutScaling": ((2003, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"ExplodedView": ((2002, LCID, 4, 0),()),
		"HiddenLines": ((2008, LCID, 4, 0),()),
		"HiddenLinesStyle": ((2010, LCID, 4, 0),()),
		"HiddenLinesVisible": ((2009, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"Local": ((2017, LCID, 4, 0),()),
		"Name": ((2, LCID, 4, 0),()),
		"Number": ((1, LCID, 4, 0),()),
		"ProjectionLink": ((2004, LCID, 4, 0),()),
		"ProjectionMatrix": ((2020, LCID, 4, 0),()),
		"ProjectionName": ((2001, LCID, 4, 0),()),
		"SameHatch": ((2019, LCID, 4, 0),()),
		"Scale": ((11, LCID, 4, 0),()),
		"Section": ((2005, LCID, 4, 0),()),
		"SourceFileName": ((2000, LCID, 4, 0),()),
		"Unfold": ((2006, LCID, 4, 0),()),
		"UseOcclusion": ((2022, LCID, 4, 0),()),
		"Visible": ((4, LCID, 4, 0),()),
		"VisibleLinesStyle": ((2007, LCID, 4, 0),()),
		"X": ((9, LCID, 4, 0),()),
		"Y": ((10, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAssociationViewElements(DispatchBaseClass):
	'ќбъекты и элементы дл€ передачи в ассоциативный вид.'
	CLSID = IID('{E4E42871-E799-4273-8EDB-E5EF83CC66C2}')
	coclass_clsid = None

	_prop_map_get_ = {
		"CreateAxis": (2522, 2, (11, 0), (), "CreateAxis", None),
		"CreateCentresMarkers": (2525, 2, (11, 0), (), "CreateCentresMarkers", None),
		"CreateCircularCentres": (2523, 2, (11, 0), (), "CreateCircularCentres", None),
		"CreateLinearCentres": (2524, 2, (11, 0), (), "CreateLinearCentres", None),
		"HiddenObjectsVisible": (2502, 2, (11, 0), (), "HiddenObjectsVisible", None),
		"ProjectAllDesignations": (2517, 2, (11, 0), (), "ProjectAllDesignations", None),
		"ProjectAllObjects": (2516, 2, (11, 0), (), "ProjectAllObjects", None),
		"ProjectAxis": (2521, 2, (11, 0), (), "ProjectAxis", None),
		"ProjectBases": (2506, 2, (11, 0), (), "ProjectBases", None),
		"ProjectBodies": (2500, 2, (11, 0), (), "ProjectBodies", None),
		"ProjectBrandLeaders": (2511, 2, (11, 0), (), "ProjectBrandLeaders", None),
		"ProjectCurves": (2514, 2, (11, 0), (), "ProjectCurves", None),
		"ProjectDimensions": (2504, 2, (11, 0), (), "ProjectDimensions", None),
		"ProjectHiddenComponents": (2512, 2, (11, 0), (), "ProjectHiddenComponents", None),
		"ProjectLayers": (2519, 2, (11, 0), (), "ProjectLayers", None),
		"ProjectLeaders": (2509, 2, (11, 0), (), "ProjectLeaders", None),
		"ProjectMarkLeaders": (2510, 2, (11, 0), (), "ProjectMarkLeaders", None),
		"ProjectPoints": (2515, 2, (11, 0), (), "ProjectPoints", None),
		"ProjectPositions": (2508, 2, (11, 0), (), "ProjectPositions", None),
		"ProjectRoughs": (2505, 2, (11, 0), (), "ProjectRoughs", None),
		"ProjectSketches": (2520, 2, (11, 0), (), "ProjectSketches", None),
		"ProjectSpecRough": (2518, 2, (11, 0), (), "ProjectSpecRough", None),
		"ProjectStandartElements": (2513, 2, (11, 0), (), "ProjectStandartElements", None),
		"ProjectSurfaces": (2501, 2, (11, 0), (), "ProjectSurfaces", None),
		"ProjectThreads": (2503, 2, (11, 0), (), "ProjectThreads", None),
		"ProjectTolerances": (2507, 2, (11, 0), (), "ProjectTolerances", None),
	}
	_prop_map_put_ = {
		"CreateAxis": ((2522, LCID, 4, 0),()),
		"CreateCentresMarkers": ((2525, LCID, 4, 0),()),
		"CreateCircularCentres": ((2523, LCID, 4, 0),()),
		"CreateLinearCentres": ((2524, LCID, 4, 0),()),
		"HiddenObjectsVisible": ((2502, LCID, 4, 0),()),
		"ProjectAllDesignations": ((2517, LCID, 4, 0),()),
		"ProjectAllObjects": ((2516, LCID, 4, 0),()),
		"ProjectAxis": ((2521, LCID, 4, 0),()),
		"ProjectBases": ((2506, LCID, 4, 0),()),
		"ProjectBodies": ((2500, LCID, 4, 0),()),
		"ProjectBrandLeaders": ((2511, LCID, 4, 0),()),
		"ProjectCurves": ((2514, LCID, 4, 0),()),
		"ProjectDimensions": ((2504, LCID, 4, 0),()),
		"ProjectHiddenComponents": ((2512, LCID, 4, 0),()),
		"ProjectLayers": ((2519, LCID, 4, 0),()),
		"ProjectLeaders": ((2509, LCID, 4, 0),()),
		"ProjectMarkLeaders": ((2510, LCID, 4, 0),()),
		"ProjectPoints": ((2515, LCID, 4, 0),()),
		"ProjectPositions": ((2508, LCID, 4, 0),()),
		"ProjectRoughs": ((2505, LCID, 4, 0),()),
		"ProjectSketches": ((2520, LCID, 4, 0),()),
		"ProjectSpecRough": ((2518, LCID, 4, 0),()),
		"ProjectStandartElements": ((2513, LCID, 4, 0),()),
		"ProjectSurfaces": ((2501, LCID, 4, 0),()),
		"ProjectThreads": ((2503, LCID, 4, 0),()),
		"ProjectTolerances": ((2507, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAttachedDocument(DispatchBaseClass):
	'ѕараметры присоединенного документа к объекту спецификации.'
	CLSID = IID('{333E9E11-D161-49AE-9791-8BEDB58B4C78}')
	coclass_clsid = IID('{30251A40-34EA-4DA6-A0B0-66E7A556A813}')

	def Delete(self):
		'”далить документ.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Comment": (3, 2, (8, 0), (), "Comment", None),
		"Name": (1, 2, (8, 0), (), "Name", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Transmit": (2, 2, (11, 0), (), "Transmit", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"Comment": ((3, LCID, 4, 0),()),
		"Transmit": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAttachedDocuments(DispatchBaseClass):
	' оллекци€ присоединенных документов к объекту спецификации.'
	CLSID = IID('{81FAB1C5-F566-4D06-8D3D-17FF01D3566F}')
	coclass_clsid = IID('{7E97523D-C412-4DA4-9FEC-E4769E88B340}')

	# Result is of type IAttachedDocument
	def Add(self, Name=defaultNamedNotOptArg, Transmit=defaultNamedNotOptArg):
		'ƒобавл€ет новый документ к объекту спецификации и в коллекцию.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 1, (9, 0), ((8, 1), (11, 1)),Name
			, Transmit)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{333E9E11-D161-49AE-9791-8BEDB58B4C78}')
		return ret

	# Result is of type IAttachedDocument
	def AddDocument(self, Name=defaultNamedNotOptArg, Transmit=defaultNamedNotOptArg, FillText=defaultNamedNotOptArg, EmbodimentMarking=defaultNamedNotOptArg):
		'ƒобавл€ет новый документ к объекту спецификации и в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1), (11, 1), (11, 1), (8, 1)),Name
			, Transmit, FillText, EmbodimentMarking)
		if ret is not None:
			ret = Dispatch(ret, 'AddDocument', '{333E9E11-D161-49AE-9791-8BEDB58B4C78}')
		return ret

	# Result is of type IAttachedDocument
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает присоединенный документ, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{333E9E11-D161-49AE-9791-8BEDB58B4C78}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает присоединенный документ, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{333E9E11-D161-49AE-9791-8BEDB58B4C78}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{333E9E11-D161-49AE-9791-8BEDB58B4C78}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAttrTypeMng(DispatchBaseClass):
	'ћенеджер типов атрибутов'
	CLSID = IID('{5378690E-A57D-473F-84DC-CA508B34FAD7}')
	coclass_clsid = None

	# Result is of type IAttributeType
	def ChoiceAttrTypes(self, HWnd=defaultNamedNotOptArg, Libname=defaultNamedNotOptArg):
		'¬ыводитс€ диалог дл€ просмотра в библиотеке атрибутов списка типов атрибутов и выбора нужного типа.'
		ret = self._oleobj_.InvokeTypes(502, LCID, 1, (9, 0), ((3, 1), (12, 1)),HWnd
			, Libname)
		if ret is not None:
			ret = Dispatch(ret, 'ChoiceAttrTypes', '{414CF83E-4FA3-42AB-BC26-6C6BBF91BB0F}')
		return ret

	# Result is of type IAttributeType
	def CreateAttrType(self, Libname=defaultNamedNotOptArg):
		'—оздать тип атрибута в библиотеке libname.'
		ret = self._oleobj_.InvokeTypes(500, LCID, 1, (9, 0), ((12, 1),),Libname
			)
		if ret is not None:
			ret = Dispatch(ret, 'CreateAttrType', '{414CF83E-4FA3-42AB-BC26-6C6BBF91BB0F}')
		return ret

	# Result is of type IAttributeType
	def GetAttrType(self, AttrID=defaultNamedNotOptArg, Libname=defaultNamedNotOptArg):
		'ѕолучить тип атрибута из библиотеки libname.'
		ret = self._oleobj_.InvokeTypes(501, LCID, 1, (9, 0), ((5, 1), (12, 1)),AttrID
			, Libname)
		if ret is not None:
			ret = Dispatch(ret, 'GetAttrType', '{414CF83E-4FA3-42AB-BC26-6C6BBF91BB0F}')
		return ret

	def GetAttrTypes(self, Libname=defaultNamedNotOptArg):
		'¬озвращает массив типов атрибутов, наход€щихс€ в заданной библиотеке типов.'
		return self._ApplyTypes_(503, 1, (12, 0), ((12, 1),), 'GetAttrTypes', None,Libname
			)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAttribute(DispatchBaseClass):
	'јттрибут.'
	CLSID = IID('{94F965B0-5ABB-4994-98C7-B08FA8515452}')
	coclass_clsid = IID('{AEC9CA96-A058-49DF-B566-195C82FE3576}')

	def AddRow(self, Password=defaultNamedNotOptArg, RowNumb=defaultNamedNotOptArg):
		'ƒобавить строку к табличному атрибуту неопределенной длины.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), ((8, 1), (3, 1)),Password
			, RowNumb)

	def Delete(self, Password=defaultNamedNotOptArg, Objects=defaultNamedNotOptArg):
		'”далить аттрибут.'
		return self._oleobj_.InvokeTypes(18, LCID, 1, (11, 0), ((8, 1), (12, 1)),Password
			, Objects)

	def DeleteRow(self, Password=defaultNamedNotOptArg, RowNumb=defaultNamedNotOptArg):
		'”далить строку табличного атрибута неопределенной длины.'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (11, 0), ((8, 1), (3, 1)),Password
			, RowNumb)

	def GetKeysInfo(self, Key1=pythoncom.Missing, Key2=pythoncom.Missing, Key3=pythoncom.Missing, Key4=pythoncom.Missing
			, Numb=pythoncom.Missing):
		'¬ыдать информацию о ключах атрибута.'
		return self._ApplyTypes_(13, 1, (11, 0), ((16387, 2), (16387, 2), (16387, 2), (16387, 2), (16389, 2)), 'GetKeysInfo', None,Key1
			, Key2, Key3, Key4, Numb)

	# The method RecordFlagVisible is actually a property, but must be used as a method to correctly pass the arguments
	def RecordFlagVisible(self, ColumnNumb=defaultNamedNotOptArg):
		"ѕолучить значени€ видимости колонок внутри записи в виде SAFEARRAY'€ VT_ARRAY | VT_BOOL."
		return self._ApplyTypes_(20, 2, (12, 0), ((3, 1),), 'RecordFlagVisible', None,ColumnNumb
			)

	def SetColumnKey(self, Password=defaultNamedNotOptArg, Keys=defaultNamedNotOptArg):
		'”становить ключи колонок.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), ((8, 1), (12, 1)),Password
			, Keys)

	def SetFlagVisible(self, Password=defaultNamedNotOptArg, Values=defaultNamedNotOptArg):
		"”становить значени€ видимости колонок в виде SAFEARRAY'€ VT_ARRAY | VT_BOOL."
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), ((8, 1), (12, 1)),Password
			, Values)

	def SetKeysInfo(self, Password=defaultNamedNotOptArg, Key1=defaultNamedNotOptArg, Key2=defaultNamedNotOptArg, Key3=defaultNamedNotOptArg
			, Key4=defaultNamedNotOptArg):
		'”становить информацию о ключах атрибута.'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (11, 0), ((8, 1), (3, 1), (3, 1), (3, 1), (3, 1)),Password
			, Key1, Key2, Key3, Key4)

	def SetPassword(self, OldPassword=defaultNamedNotOptArg, NewPassword=defaultNamedNotOptArg):
		'”становить новый пароль на изменение данных аттрибута.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), ((8, 1), (8, 1)),OldPassword
			, NewPassword)

	def SetRecordFlagVisible(self, Password=defaultNamedNotOptArg, ColumnNumb=defaultNamedNotOptArg, Values=defaultNamedNotOptArg):
		"”становить значени€ видимости колонок внутри записи в виде SAFEARRAY'€ VT_ARRAY | VT_BOOL."
		return self._oleobj_.InvokeTypes(21, LCID, 1, (11, 0), ((8, 1), (3, 1), (12, 1)),Password
			, ColumnNumb, Values)

	def SetValue(self, Password=defaultNamedNotOptArg, RowNumb=defaultNamedNotOptArg, ColumnNumb=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		'”становить значение €чейки.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), ((8, 1), (3, 1), (3, 1), (12, 1)),Password
			, RowNumb, ColumnNumb, Value)

	def SetValues(self, Password=defaultNamedNotOptArg, Values=defaultNamedNotOptArg):
		'”становить все €чейки таблицы атрибута.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), ((8, 1), (12, 1)),Password
			, Values)

	# The method Value is actually a property, but must be used as a method to correctly pass the arguments
	def Value(self, RowNumb=defaultNamedNotOptArg, ColumnNumb=defaultNamedNotOptArg):
		'ѕолучить значение €чейки из таблицы атрибута.'
		return self._ApplyTypes_(2, 2, (12, 0), ((3, 1), (3, 1)), 'Value', None,RowNumb
			, ColumnNumb)

	def ViewEdit(self, Parent=defaultNamedNotOptArg, Password=defaultNamedNotOptArg, ReadOnly=defaultNamedNotOptArg):
		'¬ыводитс€ диалог дл€ просмотра и редактировани€ атрибута.'
		return self._oleobj_.InvokeTypes(19, LCID, 1, (11, 0), ((3, 1), (8, 1), (11, 1)),Parent
			, Password, ReadOnly)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'AttributeType' returns object of type 'IAttributeType'
		"AttributeType": (15, 2, (9, 0), (), "AttributeType", '{414CF83E-4FA3-42AB-BC26-6C6BBF91BB0F}'),
		"ColumnKey": (8, 2, (12, 0), (), "ColumnKey", None),
		"ColumnsCount": (17, 2, (3, 0), (), "ColumnsCount", None),
		"FlagVisible": (6, 2, (12, 0), (), "FlagVisible", None),
		"Objects": (1, 2, (12, 0), (), "Objects", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"RowsCount": (16, 2, (3, 0), (), "RowsCount", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Values": (4, 2, (12, 0), (), "Values", None),
	}
	_prop_map_put_ = {
		"Objects": ((1, LCID, 4, 0),()),
	}
	# Default method for this class is 'Value'
	def __call__(self, RowNumb=defaultNamedNotOptArg, ColumnNumb=defaultNamedNotOptArg):
		'ѕолучить значение €чейки из таблицы атрибута.'
		return self._ApplyTypes_(2, 2, (12, 0), ((3, 1), (3, 1)), '__call__', None,RowNumb
			, ColumnNumb)

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAttributeType(DispatchBaseClass):
	'ѕараметры столбца табличного атрибута.'
	CLSID = IID('{414CF83E-4FA3-42AB-BC26-6C6BBF91BB0F}')
	coclass_clsid = IID('{949BD5DD-A728-4009-8176-222DFEC7B7FC}')

	# Result is of type IColumnInfo
	def AddColumn(self, Index=defaultNamedNotOptArg, Type=defaultNamedNotOptArg, Name=defaultNamedNotOptArg):
		'ƒобавить колонку.'
		ret = self._oleobj_.InvokeTypes(8, LCID, 1, (9, 0), ((3, 1), (3, 1), (8, 1)),Index
			, Type, Name)
		if ret is not None:
			ret = Dispatch(ret, 'AddColumn', '{3FDE0F44-4459-49F3-A012-E64F9BFA454D}')
		return ret

	# Result is of type IColumnInfo
	# The method ColumnInfo is actually a property, but must be used as a method to correctly pass the arguments
	def ColumnInfo(self, Index=defaultNamedNotOptArg):
		'ѕолучить информацию о столбце атрибута.'
		ret = self._oleobj_.InvokeTypes(7, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'ColumnInfo', '{3FDE0F44-4459-49F3-A012-E64F9BFA454D}')
		return ret

	def Delete(self, Password=defaultNamedNotOptArg):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), ((8, 1),),Password
			)

	def GetKeysInfo(self, Key1=pythoncom.Missing, Key2=pythoncom.Missing, Key3=pythoncom.Missing, Key4=pythoncom.Missing):
		'¬ыдать информацию о ключах атрибута.'
		return self._ApplyTypes_(3, 1, (11, 0), ((16387, 2), (16387, 2), (16387, 2), (16387, 2)), 'GetKeysInfo', None,Key1
			, Key2, Key3, Key4)

	def SetKeysInfo(self, Key1=defaultNamedNotOptArg, Key2=defaultNamedNotOptArg, Key3=defaultNamedNotOptArg, Key4=defaultNamedNotOptArg):
		'”становить информацию о ключах атрибута.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),Key1
			, Key2, Key3, Key4)

	def SetPassword(self, OldPassword=defaultNamedNotOptArg, NewPassword=defaultNamedNotOptArg):
		'”становить новый пароль на изменение данных аттрибута.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), ((8, 1), (8, 1)),OldPassword
			, NewPassword)

	def Update(self, Password=defaultNamedNotOptArg):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), ((8, 1),),Password
			)

	def ViewEdit(self, Parent=defaultNamedNotOptArg, Password=defaultNamedNotOptArg, ReadOnly=defaultNamedNotOptArg):
		'¬ыводитс€ диалог дл€ просмотра и редактировани€ типа атрибута.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), ((3, 1), (8, 1), (11, 1)),Parent
			, Password, ReadOnly)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AttrType": (2, 2, (3, 0), (), "AttrType", None),
		"ColumnsCount": (14, 2, (3, 0), (), "ColumnsCount", None),
		"FileName": (13, 2, (8, 0), (), "FileName", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"RowsCount": (12, 2, (3, 0), (), "RowsCount", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"TypeName": (1, 2, (8, 0), (), "TypeName", None),
		"UniqueNumb": (5, 2, (5, 0), (), "UniqueNumb", None),
	}
	_prop_map_put_ = {
		"AttrType": ((2, LCID, 4, 0),()),
		"RowsCount": ((12, LCID, 4, 0),()),
		"TypeName": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAuxiliaryGeomContainer(DispatchBaseClass):
	'»нтерфейс контейнера объектов вспомогательной геометрии.'
	CLSID = IID('{950FEBE2-F916-4E77-A37D-B061E5C22FA8}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Arcs3D' returns object of type 'IArcs3D'
		"Arcs3D": (14012, 2, (9, 0), (), "Arcs3D", '{0C7E7D56-F8AF-4803-9291-6351DDE52B69}'),
		# Method 'Axes3D' returns object of type 'IAxes3D'
		"Axes3D": (14027, 2, (9, 0), (), "Axes3D", '{F2645E37-5D28-4821-8716-86C3F0B13892}'),
		# Method 'ConjunctivePoints' returns object of type 'IConjunctivePoints'
		"ConjunctivePoints": (14005, 2, (9, 0), (), "ConjunctivePoints", '{4DF343A0-8744-429D-A605-0EEABB7B5F23}'),
		# Method 'ConnectCurves' returns object of type 'IConnectCurves'
		"ConnectCurves": (14010, 2, (9, 0), (), "ConnectCurves", '{2E869CEE-5432-48C8-B750-5DAC8B6094D6}'),
		# Method 'Contours3D' returns object of type 'IContours3D'
		"Contours3D": (14020, 2, (9, 0), (), "Contours3D", '{9C1419EE-E99E-47DD-8BA3-9132E03F1307}'),
		# Method 'ControlPoints' returns object of type 'IControlPoints'
		"ControlPoints": (14004, 2, (9, 0), (), "ControlPoints", '{E22E30F6-05EE-4FB5-9EEB-E288234F256A}'),
		# Method 'CurveByLaws' returns object of type 'ICurveByLaws'
		"CurveByLaws": (14014, 2, (9, 0), (), "CurveByLaws", '{7DD7BF03-5348-4345-A2A2-FC116C100B2E}'),
		# Method 'CurveOutLines' returns object of type 'ICurveOutLines'
		"CurveOutLines": (14013, 2, (9, 0), (), "CurveOutLines", '{491F65E7-F227-42FD-AB49-82487EAE7775}'),
		# Method 'CurvesBy2Projectionses' returns object of type 'ICurvesBy2Projectionses'
		"CurvesBy2Projectionses": (14019, 2, (9, 0), (), "CurvesBy2Projectionses", '{8062145F-C6AC-4006-A89B-F1FC6A08FCC5}'),
		# Method 'Equidistants3D' returns object of type 'IEquidistants3D'
		"Equidistants3D": (14008, 2, (9, 0), (), "Equidistants3D", '{8B94F332-EEFD-4610-9C55-20A1F7336122}'),
		# Method 'FilletCurves' returns object of type 'IFilletCurves'
		"FilletCurves": (14011, 2, (9, 0), (), "FilletCurves", '{E530740C-AB81-4DAA-AFB2-18E90121C8DC}'),
		# Method 'IsoparametricCurves' returns object of type 'IIsoparametricCurves'
		"IsoparametricCurves": (14015, 2, (9, 0), (), "IsoparametricCurves", '{6046FD5E-434A-4B9F-826F-37ECC1730AD4}'),
		# Method 'IsoparametricCurvesSets' returns object of type 'IIsoparametricCurvesSets'
		"IsoparametricCurvesSets": (14016, 2, (9, 0), (), "IsoparametricCurvesSets", '{8A0AADFB-D56C-46BB-90E7-29BEEB42EA63}'),
		# Method 'LineSegments3D' returns object of type 'ILineSegments3D'
		"LineSegments3D": (14021, 2, (9, 0), (), "LineSegments3D", '{0DFA5C90-9674-4C27-9441-ACDCD46C0AF4}'),
		# Method 'LocalCoordinateSystems' returns object of type 'ILocalCoordinateSystems'
		"LocalCoordinateSystems": (14001, 2, (9, 0), (), "LocalCoordinateSystems", '{CC04CBF6-F0D4-456E-903A-C0B0D3551368}'),
		# Method 'Planes3D' returns object of type 'IPlanes3D'
		"Planes3D": (14028, 2, (9, 0), (), "Planes3D", '{71B69C8B-FEAE-484F-BBDA-F7C71A94DDC7}'),
		# Method 'PointsArrsFromFiles' returns object of type 'IPointsArrsFromFiles'
		"PointsArrsFromFiles": (14026, 2, (9, 0), (), "PointsArrsFromFiles", '{7EA13B3A-7D45-4E40-A5C3-1920B53437A6}'),
		# Method 'PointsArrsOnCurves' returns object of type 'IPointsArrsOnCurves'
		"PointsArrsOnCurves": (14024, 2, (9, 0), (), "PointsArrsOnCurves", '{1A156DEF-0854-4FBD-9DC6-A6B415385C25}'),
		# Method 'PointsArrsOnSurfaces' returns object of type 'IPointsArrsOnSurfaces'
		"PointsArrsOnSurfaces": (14025, 2, (9, 0), (), "PointsArrsOnSurfaces", '{5BD348D2-2E20-4A8D-87B7-C74EF22D0310}'),
		# Method 'PolyLines' returns object of type 'IPolyLines'
		"PolyLines": (14003, 2, (9, 0), (), "PolyLines", '{0CF9B989-29F8-495F-9DDA-8C2CAD840BB6}'),
		# Method 'ProjectionCurves' returns object of type 'IProjectionCurves'
		"ProjectionCurves": (14018, 2, (9, 0), (), "ProjectionCurves", '{88819055-3211-47DD-908F-187B5826FE67}'),
		# Method 'Spirals3D' returns object of type 'ISpirals3D'
		"Spirals3D": (14023, 2, (9, 0), (), "Spirals3D", '{AFA7329D-E69C-4980-B3B3-8A2AA39DE979}'),
		# Method 'Splines3D' returns object of type 'ISplines3D'
		"Splines3D": (14002, 2, (9, 0), (), "Splines3D", '{C4BC0839-932F-4DBC-9A84-5D1FE8927351}'),
		# Method 'SplinesOnSurfaces' returns object of type 'ISplinesOnSurfaces'
		"SplinesOnSurfaces": (14017, 2, (9, 0), (), "SplinesOnSurfaces", '{0E670E69-68AB-4075-9CE4-99E0A1547538}'),
		# Method 'SplitLines' returns object of type 'ISplitLines'
		"SplitLines": (14006, 2, (9, 0), (), "SplitLines", '{986E4A45-362F-469D-A3AE-CE081B8EA93A}'),
		# Method 'SurfacesIntersectionCurves' returns object of type 'ISurfacesIntersectionCurves'
		"SurfacesIntersectionCurves": (14007, 2, (9, 0), (), "SurfacesIntersectionCurves", '{453E0E34-4D2D-47B2-8E95-EB05C731961D}'),
		# Method 'TrimmedCurves' returns object of type 'ITrimmedCurves'
		"TrimmedCurves": (14009, 2, (9, 0), (), "TrimmedCurves", '{E0916A32-60A7-4786-859F-C4B08402CC36}'),
		# Method 'UnhistoredCurves3D' returns object of type 'IUnhistoredCurves3D'
		"UnhistoredCurves3D": (14022, 2, (9, 0), (), "UnhistoredCurves3D", '{AAADB4EE-6F26-4865-9A83-01E71A438621}'),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAxes3D(DispatchBaseClass):
	' оллекци€ вспомогательных осей 3D.'
	CLSID = IID('{F2645E37-5D28-4821-8716-86C3F0B13892}')
	coclass_clsid = IID('{7C3D9245-648E-49D4-A4CA-DB8D3257683F}')

	# Result is of type IAxis3D
	def Add(self, Type=defaultNamedNotOptArg):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((3, 1),),Type
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{BC67CE6C-C27B-4C72-A2BF-F850373D8E13}')
		return ret

	# Result is of type IAxis3D
	# The method Axis3D is actually a property, but must be used as a method to correctly pass the arguments
	def Axis3D(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по ссылке или индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Axis3D', '{BC67CE6C-C27B-4C72-A2BF-F850373D8E13}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IAxis3D(DispatchBaseClass):
	'¬спомогательна€ ось 3D.'
	CLSID = IID('{BC67CE6C-C27B-4C72-A2BF-F850373D8E13}')
	coclass_clsid = IID('{11F1CF98-3563-4DFA-B6AC-E3BCD6197085}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		# Method 'MathCurve' returns object of type 'IMathCurve3D'
		"MathCurve": (1, 2, (9, 0), (), "MathCurve", '{6D2112DD-F6E1-49CF-9678-89B0C6CC6ACA}'),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAxis3DBy2Planes(DispatchBaseClass):
	'ќсь на пересечении плоскостей.'
	CLSID = IID('{AE53DF83-5D00-4851-BBCD-BEDFCA50BF1C}')
	coclass_clsid = IID('{EF803C9D-8E47-4EB4-A1F4-FD4D3769A76D}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		# Method 'MathCurve' returns object of type 'IMathCurve3D'
		"MathCurve": (1, 2, (9, 0), (), "MathCurve", '{6D2112DD-F6E1-49CF-9678-89B0C6CC6ACA}'),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		# Method 'Plane1' returns object of type 'IModelObject'
		"Plane1": (101, 2, (9, 0), (), "Plane1", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'Plane2' returns object of type 'IModelObject'
		"Plane2": (102, 2, (9, 0), (), "Plane2", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Plane1": ((101, LCID, 4, 0),()),
		"Plane2": ((102, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAxis3DBy2Points(DispatchBaseClass):
	'ќсь через две вершины.'
	CLSID = IID('{8CF29D41-23E9-4E19-8DF7-C56560F1A237}')
	coclass_clsid = IID('{F0D21C54-2816-4FE2-9AA0-A88821488AB3}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		# Method 'MathCurve' returns object of type 'IMathCurve3D'
		"MathCurve": (1, 2, (9, 0), (), "MathCurve", '{6D2112DD-F6E1-49CF-9678-89B0C6CC6ACA}'),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		# Method 'Point1' returns object of type 'IModelObject'
		"Point1": (101, 2, (9, 0), (), "Point1", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'Point2' returns object of type 'IModelObject'
		"Point2": (102, 2, (9, 0), (), "Point2", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Point1": ((101, LCID, 4, 0),()),
		"Point2": ((102, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAxis3DByConeface(DispatchBaseClass):
	'ќсь конической поверхности.'
	CLSID = IID('{2E23903D-9C7C-42B5-861A-A28DA3EEA2E6}')
	coclass_clsid = IID('{C0202ADA-0962-41DA-ADE2-D3015A3E4533}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Face' returns object of type 'IModelObject'
		"Face": (101, 2, (9, 0), (), "Face", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		# Method 'MathCurve' returns object of type 'IMathCurve3D'
		"MathCurve": (1, 2, (9, 0), (), "MathCurve", '{6D2112DD-F6E1-49CF-9678-89B0C6CC6ACA}'),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Face": ((101, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAxis3DByEdge(DispatchBaseClass):
	'ќсь через ребро.'
	CLSID = IID('{95BE2F02-3B18-4BBC-9451-54B4AB70CC7A}')
	coclass_clsid = IID('{59309A8D-E9B0-45C2-98E8-792EC6C93F15}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Edge' returns object of type 'IModelObject'
		"Edge": (101, 2, (9, 0), (), "Edge", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		# Method 'MathCurve' returns object of type 'IMathCurve3D'
		"MathCurve": (1, 2, (9, 0), (), "MathCurve", '{6D2112DD-F6E1-49CF-9678-89B0C6CC6ACA}'),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Edge": ((101, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAxis3DByOperation(DispatchBaseClass):
	'ќсь через вершину по объекту.'
	CLSID = IID('{C068BBE9-180D-4D82-A827-124166A451EE}')
	coclass_clsid = IID('{572AF961-64C8-4335-808C-17F2E8AF012E}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		# Method 'MathCurve' returns object of type 'IMathCurve3D'
		"MathCurve": (1, 2, (9, 0), (), "MathCurve", '{6D2112DD-F6E1-49CF-9678-89B0C6CC6ACA}'),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Operation' returns object of type 'IModelObject'
		"Operation": (101, 2, (9, 0), (), "Operation", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Operation": ((101, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAxis3DByPointAndObject(DispatchBaseClass):
	'ќсь через вершину по объекту.'
	CLSID = IID('{2CC2E874-B336-4A24-BD03-9AC7E30123B6}')
	coclass_clsid = IID('{A3BE6C5C-E339-4B42-900E-2719848CDC85}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'DirectObject' returns object of type 'IModelObject'
		"DirectObject": (102, 2, (9, 0), (), "DirectObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		# Method 'MathCurve' returns object of type 'IMathCurve3D'
		"MathCurve": (1, 2, (9, 0), (), "MathCurve", '{6D2112DD-F6E1-49CF-9678-89B0C6CC6ACA}'),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		"Parallel": (104, 2, (11, 0), (), "Parallel", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		# Method 'Point' returns object of type 'IModelObject'
		"Point": (101, 2, (9, 0), (), "Point", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
		# Method 'Vector3D' returns object of type 'IVector3D'
		"Vector3D": (103, 2, (9, 0), (), "Vector3D", '{D51A4DCF-627D-44F5-89BA-46EF2449A212}'),
	}
	_prop_map_put_ = {
		"DirectObject": ((102, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Parallel": ((104, LCID, 4, 0),()),
		"Point": ((101, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAxisJut(DispatchBaseClass):
	'¬ыступ строительной оси.'
	CLSID = IID('{5A22E024-F530-45DB-A3F2-CA0587BDA1B5}')
	coclass_clsid = IID('{97559604-8CCC-44E4-B332-7E16C34522D5}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"BreakDirection": (4, 2, (11, 0), (), "BreakDirection", None),
		"BreakOffset": (3, 2, (5, 0), (), "BreakOffset", None),
		"Length": (1, 2, (5, 0), (), "Length", None),
		"MarkOffset": (2, 2, (5, 0), (), "MarkOffset", None),
		"MarkOn": (5, 2, (11, 0), (), "MarkOn", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"BreakDirection": ((4, LCID, 4, 0),()),
		"BreakOffset": ((3, LCID, 4, 0),()),
		"Length": ((1, LCID, 4, 0),()),
		"MarkOffset": ((2, LCID, 4, 0),()),
		"MarkOn": ((5, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAxisLine(DispatchBaseClass):
	'ќсева€ лини€.'
	CLSID = IID('{5C5CAEBD-70A9-41DB-9F74-F9760D822D95}')
	coclass_clsid = IID('{325C006C-C993-4656-BC1A-DE65D8401527}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (5, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		"Length": (6, 2, (5, 0), (), "Length", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"X1": (1, 2, (5, 0), (), "X1", None),
		"X2": (3, 2, (5, 0), (), "X2", None),
		"Y1": (2, 2, (5, 0), (), "Y1", None),
		"Y2": (4, 2, (5, 0), (), "Y2", None),
	}
	_prop_map_put_ = {
		"Angle": ((5, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"Length": ((6, LCID, 4, 0),()),
		"X1": ((1, LCID, 4, 0),()),
		"X2": ((3, LCID, 4, 0),()),
		"Y1": ((2, LCID, 4, 0),()),
		"Y2": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAxisLine3D(DispatchBaseClass):
	'ќсева€ лини€ 3D.'
	CLSID = IID('{4477B6CE-4F64-4BDF-9EAF-C07C7833CE8A}')
	coclass_clsid = IID('{11F1CF98-3563-4DFA-B6AC-E3BCD6197085}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		# Method 'MathCurve' returns object of type 'IMathCurve3D'
		"MathCurve": (1, 2, (9, 0), (), "MathCurve", '{6D2112DD-F6E1-49CF-9678-89B0C6CC6ACA}'),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Object1' returns object of type 'IModelObject'
		"Object1": (101, 2, (9, 0), (), "Object1", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'Object2' returns object of type 'IModelObject'
		"Object2": (102, 2, (9, 0), (), "Object2", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Object1": ((101, LCID, 4, 0),()),
		"Object2": ((102, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAxisLineParam(DispatchBaseClass):
	'ѕараметры осевой линии (или обозначени€ центра).'
	CLSID = IID('{620CC8EB-A5C0-4978-BD98-38344DC6ADC0}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AutoDetectedDash": (1504, 2, (11, 0), (), "AutoDetectedDash", None),
		"AutoDetectedDashModify": (1509, 2, (11, 0), (), "AutoDetectedDashModify", None),
		"DashMaxLength": (1505, 2, (5, 0), (), "DashMaxLength", None),
		"DashMaxLengthModify": (1510, 2, (11, 0), (), "DashMaxLengthModify", None),
		"DottedLength": (1502, 2, (5, 0), (), "DottedLength", None),
		"DottedLengthModify": (1507, 2, (11, 0), (), "DottedLengthModify", None),
		"Interval": (1503, 2, (5, 0), (), "Interval", None),
		"IntervalModify": (1508, 2, (11, 0), (), "IntervalModify", None),
		"JutLength": (1501, 2, (5, 0), (), "JutLength", None),
		"JutLength1": (1511, 2, (5, 0), (), "JutLength1", None),
		"JutLength2": (1512, 2, (5, 0), (), "JutLength2", None),
		"JutLengthModify": (1506, 2, (11, 0), (), "JutLengthModify", None),
	}
	_prop_map_put_ = {
		"AutoDetectedDash": ((1504, LCID, 4, 0),()),
		"AutoDetectedDashModify": ((1509, LCID, 4, 0),()),
		"DashMaxLength": ((1505, LCID, 4, 0),()),
		"DashMaxLengthModify": ((1510, LCID, 4, 0),()),
		"DottedLength": ((1502, LCID, 4, 0),()),
		"DottedLengthModify": ((1507, LCID, 4, 0),()),
		"Interval": ((1503, LCID, 4, 0),()),
		"IntervalModify": ((1508, LCID, 4, 0),()),
		"JutLength": ((1501, LCID, 4, 0),()),
		"JutLength1": ((1511, LCID, 4, 0),()),
		"JutLength2": ((1512, LCID, 4, 0),()),
		"JutLengthModify": ((1506, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IAxisLines(DispatchBaseClass):
	' оллекци€ осевых линий.'
	CLSID = IID('{C567E700-E163-4C8F-B329-931BB93D0223}')
	coclass_clsid = IID('{78F95449-3A99-4B3E-86B5-C7BC9DDDF074}')

	# Result is of type IAxisLine
	def Add(self):
		'—оздать осевую линию (добавить осевую линию в коллекцию).'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{5C5CAEBD-70A9-41DB-9F74-F9760D822D95}')
		return ret

	# Result is of type IAxisLine
	# The method AxisLine is actually a property, but must be used as a method to correctly pass the arguments
	def AxisLine(self, Index=defaultNamedNotOptArg):
		'¬озвращает осевую линию, заданную по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'AxisLine', '{5C5CAEBD-70A9-41DB-9F74-F9760D822D95}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IBase(DispatchBaseClass):
	'ќбозначение базы.'
	CLSID = IID('{01CDFD67-69EA-4289-8F42-5B01BB9BF70B}')
	coclass_clsid = IID('{700819A4-82B8-4E32-B516-DB0ED48D1D05}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AutoSorted": (7, 2, (11, 0), (), "AutoSorted", None),
		# Method 'BaseObject' returns object of type 'IDrawingObject'
		"BaseObject": (1, 2, (9, 0), (), "BaseObject", '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}'),
		"BranchX": (4, 2, (5, 0), (), "BranchX", None),
		"BranchY": (5, 2, (5, 0), (), "BranchY", None),
		"DrawType": (6, 2, (11, 0), (), "DrawType", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		# Method 'Text' returns object of type 'IText'
		"Text": (8, 2, (9, 0), (), "Text", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"X0": (2, 2, (5, 0), (), "X0", None),
		"Y0": (3, 2, (5, 0), (), "Y0", None),
	}
	_prop_map_put_ = {
		"AutoSorted": ((7, LCID, 4, 0),()),
		"BaseObject": ((1, LCID, 4, 0),()),
		"BranchX": ((4, LCID, 4, 0),()),
		"BranchY": ((5, LCID, 4, 0),()),
		"DrawType": ((6, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"X0": ((2, LCID, 4, 0),()),
		"Y0": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBase3D(DispatchBaseClass):
	'ќбозначение базы 3D.'
	CLSID = IID('{D5B737F6-FD3D-49F8-B3D8-C8475E5E3D3A}')
	coclass_clsid = IID('{DAAE59DF-E97C-4434-9166-8A52BEA0FF31}')

	def GetBranchBeginPoint(self, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'“очка прив€зки обозначени€ базы на поверхности.'
		return self._ApplyTypes_(9, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2)), 'GetBranchBeginPoint', None,X
			, Y, Z)

	def GetBranchEndPoint(self, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'“очка положени€ надписи обозначени€ базы.'
		return self._ApplyTypes_(11, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2)), 'GetBranchEndPoint', None,X
			, Y, Z)

	def GetPosition(self, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'“очка задающа€ положение объекта.'
		return self._ApplyTypes_(3, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2)), 'GetPosition', None,X
			, Y, Z)

	def SetBranchBeginPoint(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg, Object=defaultNamedNotOptArg):
		'“очка прив€зки обозначени€ базы на поверхности.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1), (9, 1)),X
			, Y, Z, Object)

	def SetBranchEndPoint(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg):
		'“очка положени€ надписи обозначени€ базы.'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1)),X
			, Y, Z)

	def SetPosition(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg):
		'“очка задающа€ положение объекта.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1)),X
			, Y, Z)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AutoSorted": (7, 2, (11, 0), (), "AutoSorted", None),
		# Method 'BaseObject' returns object of type 'IModelObject'
		"BaseObject": (5, 2, (9, 0), (), "BaseObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"BasePlane": (1, 2, (3, 0), (), "BasePlane", None),
		"DrawType": (6, 2, (11, 0), (), "DrawType", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		# Method 'PositionObject' returns object of type 'IModelObject'
		"PositionObject": (2, 2, (9, 0), (), "PositionObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'Text' returns object of type 'IText'
		"Text": (8, 2, (9, 0), (), "Text", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"AutoSorted": ((7, LCID, 4, 0),()),
		"BasePlane": ((1, LCID, 4, 0),()),
		"DrawType": ((6, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"PositionObject": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBaseLeader(DispatchBaseClass):
	'Ћини€ выноски. Ѕазовый интерфейс.'
	CLSID = IID('{1AF590A9-C339-477A-9F22-799C04D20BB4}')
	coclass_clsid = IID('{7A899963-5137-459A-AB0A-48653074BCD0}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ArrowType": (4001, 2, (3, 0), (), "ArrowType", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"ArrowType": ((4001, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBaseLeader3D(DispatchBaseClass):
	'Ћини€ выноски. Ѕазовый интерфейс.'
	CLSID = IID('{7170F38E-8230-4C9C-B36B-0BACBB27B123}')
	coclass_clsid = IID('{31DC80A4-BCC8-45C1-8CE1-6C43E24FD96C}')

	def GetPosition(self, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'“очка задающа€ положение объекта.'
		return self._ApplyTypes_(3, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2)), 'GetPosition', None,X
			, Y, Z)

	def SetPosition(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg):
		'“очка задающа€ положение объекта.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1)),X
			, Y, Z)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ArrowType": (5, 2, (3, 0), (), "ArrowType", None),
		"BasePlane": (1, 2, (3, 0), (), "BasePlane", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		# Method 'PositionObject' returns object of type 'IModelObject'
		"PositionObject": (2, 2, (9, 0), (), "PositionObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"ArrowType": ((5, LCID, 4, 0),()),
		"BasePlane": ((1, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"PositionObject": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBaseLineDimension3D(DispatchBaseClass):
	'Ћинейный размер в 3D (от отрезка до точки).'
	CLSID = IID('{3514887E-321B-4CE3-A966-3EB1A02CEEF2}')
	coclass_clsid = IID('{0FD2290E-6FF6-48C4-9B10-E1C6D0608C74}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"Length": (1, 2, (5, 0), (), "Length", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Object1' returns object of type 'IModelObject'
		"Object1": (2, 2, (9, 0), (), "Object1", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'Object2' returns object of type 'IModelObject'
		"Object2": (3, 2, (9, 0), (), "Object2", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Hidden": ((502, LCID, 4, 0),()),
		"Length": ((1, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Object1": ((2, LCID, 4, 0),()),
		"Object2": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBaseManipulator(DispatchBaseClass):
	'Ѕазовый интерфейс манипул€тора.'
	CLSID = IID('{606FD023-3944-4215-A426-1E4EB82A8E32}')
	coclass_clsid = IID('{F942D621-874A-4A51-A651-A435CE0C6304}')

	def Create(self):
		'—оздать манипул€тор.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), (),)

	def Delete(self):
		'”далить манипул€тор.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), (),)

	def UpdatePlacement(self, Redraw=defaultNamedNotOptArg):
		'”становить локальную систему координат.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((11, 1),),Redraw
			)

	_prop_map_get_ = {
		"Active": (6, 2, (11, 0), (), "Active", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Id": (2, 2, (3, 0), (), "Id", None),
		"ManipulatorType": (1, 2, (3, 0), (), "ManipulatorType", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Placement' returns object of type 'IPlacement3D'
		"Placement": (3, 2, (9, 0), (), "Placement", '{9C66DE49-529C-4678-9AF1-12710CB77804}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Visible": (5, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Active": ((6, LCID, 4, 0),()),
		"Id": ((2, LCID, 4, 0),()),
		"Visible": ((5, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBases(DispatchBaseClass):
	' оллекци€ обозначений базы.'
	CLSID = IID('{C607727C-6B0A-4FB6-AFCA-ED9D83F5C6B7}')
	coclass_clsid = IID('{2D2BC5F4-2D44-4C4E-A20E-1F8D8095DF73}')

	# Result is of type IBase
	def Add(self):
		'ƒобавить обозначение базы в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{01CDFD67-69EA-4289-8F42-5B01BB9BF70B}')
		return ret

	# Result is of type IBase
	# The method Base is actually a property, but must be used as a method to correctly pass the arguments
	def Base(self, Index=defaultNamedNotOptArg):
		'ѕолучить обозначение базы по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Base', '{01CDFD67-69EA-4289-8F42-5B01BB9BF70B}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IBases3D(DispatchBaseClass):
	' оллекци€ 3D обозначений базы.'
	CLSID = IID('{8BC582B3-1F82-4D19-AF95-24CBAD412E52}')
	coclass_clsid = IID('{DBF9FA07-8FE1-46DE-B236-9931388FF543}')

	# Result is of type IBase3D
	def Add(self):
		'ƒобавить 3D обозначение базы в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{D5B737F6-FD3D-49F8-B3D8-C8475E5E3D3A}')
		return ret

	# Result is of type IBase3D
	# The method Base3D is actually a property, but must be used as a method to correctly pass the arguments
	def Base3D(self, Index=defaultNamedNotOptArg):
		'ѕолучить 3D обозначение базы по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Base3D', '{D5B737F6-FD3D-49F8-B3D8-C8475E5E3D3A}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IBezier(DispatchBaseClass):
	' рива€ Ѕезье.'
	CLSID = IID('{6D51EC19-200C-47A2-AE55-0593AD746851}')
	coclass_clsid = IID('{BC4A8E55-C5C4-405C-9B78-AA36CA5B1156}')

	def AddPoint(self, Index=defaultNamedNotOptArg, XBase=defaultNamedNotOptArg, YBase=defaultNamedNotOptArg, XLeft=defaultNamedNotOptArg
			, YLeft=defaultNamedNotOptArg, XRight=defaultNamedNotOptArg, YRight=defaultNamedNotOptArg):
		'ƒобавить узел.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((3, 1), (5, 1), (5, 1), (16389, 1), (16389, 1), (16389, 1), (16389, 1)),Index
			, XBase, YBase, XLeft, YLeft, XRight
			, YRight)

	def Clear(self):
		'”далить все узлы.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), (),)

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def DeletePoint(self, Index=defaultNamedNotOptArg):
		'”далить узел.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), ((3, 1),),Index
			)

	def GetPoint(self, Index=defaultNamedNotOptArg, XBase=pythoncom.Missing, YBase=pythoncom.Missing, XLeft=pythoncom.Missing
			, YLeft=pythoncom.Missing, XRight=pythoncom.Missing, YRight=pythoncom.Missing):
		'ѕолучить параметры узла.'
		return self._ApplyTypes_(5, 1, (11, 0), ((3, 1), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2)), 'GetPoint', None,Index
			, XBase, YBase, XLeft, YLeft, XRight
			, YRight)

	# The method Points is actually a property, but must be used as a method to correctly pass the arguments
	def Points(self, AllPoints=defaultNamedNotOptArg):
		'ѕараметры узлов в виде SAFEARRAY | VT_R8.'
		return self._ApplyTypes_(3, 2, (12, 0), ((11, 1),), 'Points', None,AllPoints
			)

	def ReadFromFile(self, FileName=defaultNamedNotOptArg):
		'ѕрочитать файл с данными.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), ((8, 1),),FileName
			)

	# The method SetPoints is actually a property, but must be used as a method to correctly pass the arguments
	def SetPoints(self, AllPoints=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ѕараметры узлов в виде SAFEARRAY | VT_R8.'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((11, 1), (12, 1)),AllPoints
			, arg1)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	def WriteToFile(self, FileName=defaultNamedNotOptArg):
		'«аписать файл с данными.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), ((8, 1),),FileName
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Closed": (1, 2, (11, 0), (), "Closed", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"PointsCount": (2, 2, (3, 0), (), "PointsCount", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Style": (8, 2, (3, 0), (), "Style", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Closed": ((1, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"Style": ((8, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBeziers(DispatchBaseClass):
	' оллекци€ кривых Ѕезье.'
	CLSID = IID('{57944ECC-5491-4551-9DB9-FABC45125A63}')
	coclass_clsid = IID('{D744D5EE-E926-45B3-B622-F7B543A2D066}')

	# Result is of type IBezier
	def Add(self):
		'—оздать кривую Ѕезье (добавить кривую Ѕезье в коллекцию).'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{6D51EC19-200C-47A2-AE55-0593AD746851}')
		return ret

	# Result is of type IBezier
	# The method Bezier is actually a property, but must be used as a method to correctly pass the arguments
	def Bezier(self, Index=defaultNamedNotOptArg):
		'¬озвращает кривую Ѕезье, заданную по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Bezier', '{6D51EC19-200C-47A2-AE55-0593AD746851}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IBilletObsolete(DispatchBaseClass):
	'ƒеталь заготовка и «еркальна€ деталь.'
	CLSID = IID('{5F754BA9-1FB7-4AAE-A3F2-F36D7CF938BF}')
	coclass_clsid = IID('{62AFE65C-2F2E-47FA-965A-37CCA9B25352}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"FileName": (1, 2, (8, 0), (), "FileName", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"FileName": ((1, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBilletsObsoletes(DispatchBaseClass):
	' оллекци€ деталей заготовок и зеркальных деталей.'
	CLSID = IID('{140DE7B8-8291-4220-B7FB-9F3C4FDFB649}')
	coclass_clsid = IID('{42C8D1F3-0DAA-477B-8994-184E59DBDD7C}')

	# Result is of type IBilletObsolete
	def Add(self, FileName=defaultNamedNotOptArg, Mirror=defaultNamedNotOptArg):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1), (11, 1)),FileName
			, Mirror)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{5F754BA9-1FB7-4AAE-A3F2-F36D7CF938BF}')
		return ret

	# Result is of type IBilletObsolete
	# The method BilletObsolete is actually a property, but must be used as a method to correctly pass the arguments
	def BilletObsolete(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по ссылке или индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'BilletObsolete', '{5F754BA9-1FB7-4AAE-A3F2-F36D7CF938BF}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IBody7(DispatchBaseClass):
	'»нтерфейс твердого тела.'
	CLSID = IID('{4F122E22-0AA6-46E1-841F-A2504B145995}')
	coclass_clsid = IID('{29E7E8D5-7988-408F-A02B-7C0871221C9C}')

	def GetGabarit(self, X1=pythoncom.Missing, Y1=pythoncom.Missing, Z1=pythoncom.Missing, X2=pythoncom.Missing
			, Y2=pythoncom.Missing, Z2=pythoncom.Missing):
		'¬ыдать габарит .'
		return self._ApplyTypes_(1, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2)), 'GetGabarit', None,X1
			, Y1, Z1, X2, Y2, Z2
			)

	def Update(self):
		'»зменить свойства тела.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), (),)

	# The method UserParameters is actually a property, but must be used as a method to correctly pass the arguments
	def UserParameters(self, Val=defaultNamedNotOptArg):
		'ѕолучить интерфейс параметров.'
		ret = self._oleobj_.InvokeTypes(11, LCID, 2, (13, 0), ((8, 1),),Val
			)
		if ret is not None:
			# See if this IUnknown is really an IDispatch
			try:
				ret = ret.QueryInterface(pythoncom.IID_IDispatch)
			except pythoncom.error:
				return ret
			ret = Dispatch(ret, 'UserParameters', None)
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"BeginBodyId": (14, 2, (3, 0), (), "BeginBodyId", None),
		"BodyId": (12, 2, (3, 0), (), "BodyId", None),
		"CreateSpcObjects": (13, 2, (11, 0), (), "CreateSpcObjects", None),
		"Editable": (10, 2, (3, 0), (), "Editable", None),
		"FinalBodyId": (15, 2, (3, 0), (), "FinalBodyId", None),
		# Method 'HatchParam' returns object of type 'IHatchParam'
		"HatchParam": (6, 2, (9, 0), (), "HatchParam", '{437D6587-7649-4A0C-80BB-7A6E89661839}'),
		"Hidden": (5, 2, (11, 0), (), "Hidden", None),
		"HiddenEx": (9, 2, (3, 0), (), "HiddenEx", None),
		"LayerNumber": (7, 2, (3, 0), (), "LayerNumber", None),
		"Marking": (2, 2, (8, 0), (), "Marking", None),
		"Name": (3, 2, (8, 0), (), "Name", None),
		"OwnerBodyId": (16, 2, (3, 0), (), "OwnerBodyId", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Projected": (8, 2, (3, 0), (), "Projected", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"CreateSpcObjects": ((13, LCID, 4, 0),()),
		"Editable": ((10, LCID, 4, 0),()),
		"Hidden": ((5, LCID, 4, 0),()),
		"HiddenEx": ((9, LCID, 4, 0),()),
		"LayerNumber": ((7, LCID, 4, 0),()),
		"Marking": ((2, LCID, 4, 0),()),
		"Name": ((3, LCID, 4, 0),()),
		"Projected": ((8, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBodyReposition(DispatchBaseClass):
	'ѕерепози\xadционирова\xadние тела, поверхно\xadсти.'
	CLSID = IID('{621E42C8-0BF8-4CB8-8813-E45E2221694E}')
	coclass_clsid = IID('{5924E1DF-1DBA-4076-88EE-55BFA2D4088D}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"CopyBoby": (803, 2, (11, 0), (), "CopyBoby", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		# Method 'Position' returns object of type 'ILocalCoordinateSystem'
		"Position": (804, 2, (9, 0), (), "Position", '{BA6395F5-3506-4483-8864-4EEC220AF316}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'RepositionBody' returns object of type 'IKompasAPIObject'
		"RepositionBody": (801, 2, (9, 0), (), "RepositionBody", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'RepositionCentre' returns object of type 'IModelObject'
		"RepositionCentre": (802, 2, (9, 0), (), "RepositionCentre", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"CopyBoby": ((803, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"RepositionBody": ((801, LCID, 4, 0),()),
		"RepositionCentre": ((802, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBodyRepositions(DispatchBaseClass):
	' оллекци€ операций перепози\xadционирова\xadни€ тела, поверхно\xadсти.'
	CLSID = IID('{C42BE43C-5DE5-4293-9254-5AA7F3B2EC2B}')
	coclass_clsid = IID('{B0280081-56AA-48B8-A675-30F6A4AE6445}')

	# Result is of type IBodyReposition
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{621E42C8-0BF8-4CB8-8813-E45E2221694E}')
		return ret

	# Result is of type IBodyReposition
	# The method BodyReposition is actually a property, but must be used as a method to correctly pass the arguments
	def BodyReposition(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'BodyReposition', '{621E42C8-0BF8-4CB8-8813-E45E2221694E}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IBoolean(DispatchBaseClass):
	'Ѕулева операци€ .'
	CLSID = IID('{1FE29BDF-0B8E-4E34-A7E5-418092C6C9C3}')
	coclass_clsid = IID('{340A4B80-C3EA-4C3D-9DA2-50BB2B4ADFEE}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Bodies": (2, 2, (12, 0), (), "Bodies", None),
		"BooleanType": (1, 2, (3, 0), (), "BooleanType", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Bodies": ((2, LCID, 4, 0),()),
		"BooleanType": ((1, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBooleans(DispatchBaseClass):
	' оллекци€ булевых операций.'
	CLSID = IID('{1739583B-BFDA-4AD2-BFE3-14302133BB21}')
	coclass_clsid = IID('{86BA33C6-0381-4CEB-A6FD-84C39645D7D2}')

	# Result is of type IBoolean
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{1FE29BDF-0B8E-4E34-A7E5-418092C6C9C3}')
		return ret

	# Result is of type IBoolean
	# The method Boolean is actually a property, but must be used as a method to correctly pass the arguments
	def Boolean(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу или по имени.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Boolean', '{1FE29BDF-0B8E-4E34-A7E5-418092C6C9C3}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IBoundariesObject(DispatchBaseClass):
	'ќбъект с границами.'
	CLSID = IID('{7198C93A-7655-4347-9954-BA9AA28D0608}')
	coclass_clsid = None

	def AddBoundaries(self, Objects=defaultNamedNotOptArg, DeleteSource=defaultNamedNotOptArg):
		'ƒобавить объекты в границу.'
		return self._oleobj_.InvokeTypes(2002, LCID, 1, (11, 0), ((12, 1), (11, 1)),Objects
			, DeleteSource)

	def Clear(self):
		'”далить все границы'
		return self._oleobj_.InvokeTypes(2003, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Boundaries": (2001, 2, (12, 0), (), "Boundaries", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBrace(DispatchBaseClass):
	'‘игурна€ скобка.'
	CLSID = IID('{7F328D28-76E9-4E04-A35C-AD60339998E4}')
	coclass_clsid = IID('{2DF7A8F9-CB3B-499E-867F-81BA5B41ED57}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Alignment": (12, 2, (3, 0), (), "Alignment", None),
		"Angle": (6, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Direction": (11, 2, (11, 0), (), "Direction", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		"Length": (5, 2, (5, 0), (), "Length", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Radius": (7, 2, (5, 0), (), "Radius", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"ShelfDirection": (8, 2, (3, 0), (), "ShelfDirection", None),
		"ShelfPoints": (15, 2, (12, 0), (), "ShelfPoints", None),
		"ShelfX": (9, 2, (5, 0), (), "ShelfX", None),
		"ShelfY": (10, 2, (5, 0), (), "ShelfY", None),
		"Style": (13, 2, (3, 0), (), "Style", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		# Method 'Text' returns object of type 'IText'
		"Text": (14, 2, (9, 0), (), "Text", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"X1": (1, 2, (5, 0), (), "X1", None),
		"X2": (3, 2, (5, 0), (), "X2", None),
		"Y1": (2, 2, (5, 0), (), "Y1", None),
		"Y2": (4, 2, (5, 0), (), "Y2", None),
	}
	_prop_map_put_ = {
		"Alignment": ((12, LCID, 4, 0),()),
		"Angle": ((6, LCID, 4, 0),()),
		"Direction": ((11, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"Length": ((5, LCID, 4, 0),()),
		"Radius": ((7, LCID, 4, 0),()),
		"ShelfDirection": ((8, LCID, 4, 0),()),
		"ShelfPoints": ((15, LCID, 4, 0),()),
		"ShelfX": ((9, LCID, 4, 0),()),
		"ShelfY": ((10, LCID, 4, 0),()),
		"Style": ((13, LCID, 4, 0),()),
		"X1": ((1, LCID, 4, 0),()),
		"X2": ((3, LCID, 4, 0),()),
		"Y1": ((2, LCID, 4, 0),()),
		"Y2": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBraces(DispatchBaseClass):
	' оллекци€ фигурных скобок.'
	CLSID = IID('{99F27BD6-6294-45D9-AF78-A9D52E9DD799}')
	coclass_clsid = IID('{82CD752F-BC4F-45A2-9FE9-8AB01FDAF6C9}')

	# Result is of type IBrace
	def Add(self):
		'ƒобавить фигурную скобу в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{7F328D28-76E9-4E04-A35C-AD60339998E4}')
		return ret

	# Result is of type IBrace
	# The method Brace is actually a property, but must be used as a method to correctly pass the arguments
	def Brace(self, Index=defaultNamedNotOptArg):
		'ѕолучить фигурную скобу по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Brace', '{7F328D28-76E9-4E04-A35C-AD60339998E4}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IBranchs(DispatchBaseClass):
	'»нтерфейс дл€ работы с ответвлени€ми.'
	CLSID = IID('{C8A55AB3-D6DD-49B8-95F0-716475855C10}')
	coclass_clsid = None

	def AddBranch(self, Index=defaultNamedNotOptArg, Points=defaultNamedNotOptArg):
		'ƒобавить ответвление.'
		return self._oleobj_.InvokeTypes(5008, LCID, 1, (11, 0), ((3, 1), (12, 1)),Index
			, Points)

	def AddBranchByPoint(self, Index=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg):
		'ƒобавить пр€молинейное ответвление.'
		return self._oleobj_.InvokeTypes(5009, LCID, 1, (11, 0), ((3, 1), (5, 1), (5, 1)),Index
			, X, Y)

	# The method BranchPoints is actually a property, but must be used as a method to correctly pass the arguments
	def BranchPoints(self, Index=defaultNamedNotOptArg):
		'ћассив SAFEARRAY координат точек ответвлени€.'
		return self._ApplyTypes_(5004, 2, (12, 0), ((3, 1),), 'BranchPoints', None,Index
			)

	# The method BranchPointsCount is actually a property, but must be used as a method to correctly pass the arguments
	def BranchPointsCount(self, Index=defaultNamedNotOptArg):
		'„исло точек в ответвлении.'
		return self._oleobj_.InvokeTypes(5005, LCID, 2, (3, 0), ((3, 1),),Index
			)

	# The method BranchX is actually a property, but must be used as a method to correctly pass the arguments
	def BranchX(self, Index=defaultNamedNotOptArg):
		' оордината конечной точки ответвлени€ по X.'
		return self._oleobj_.InvokeTypes(5006, LCID, 2, (5, 0), ((3, 1),),Index
			)

	# The method BranchY is actually a property, but must be used as a method to correctly pass the arguments
	def BranchY(self, Index=defaultNamedNotOptArg):
		' оордината конечной точки ответвлени€ по Y.'
		return self._oleobj_.InvokeTypes(5007, LCID, 2, (5, 0), ((3, 1),),Index
			)

	def DeleteBranch(self, Index=defaultNamedNotOptArg):
		'”далить ответвление.'
		return self._oleobj_.InvokeTypes(5010, LCID, 1, (11, 0), ((3, 1),),Index
			)

	# The method SetBranchPoints is actually a property, but must be used as a method to correctly pass the arguments
	def SetBranchPoints(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ћассив SAFEARRAY координат точек ответвлени€.'
		return self._oleobj_.InvokeTypes(5004, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
			, arg1)

	# The method SetBranchX is actually a property, but must be used as a method to correctly pass the arguments
	def SetBranchX(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		' оордината конечной точки ответвлени€ по X.'
		return self._oleobj_.InvokeTypes(5006, LCID, 4, (24, 0), ((3, 1), (5, 1)),Index
			, arg1)

	# The method SetBranchY is actually a property, but must be used as a method to correctly pass the arguments
	def SetBranchY(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		' оордината конечной точки ответвлени€ по Y.'
		return self._oleobj_.InvokeTypes(5007, LCID, 4, (24, 0), ((3, 1), (5, 1)),Index
			, arg1)

	_prop_map_get_ = {
		"BranchCount": (5003, 2, (3, 0), (), "BranchCount", None),
		"X0": (5001, 2, (5, 0), (), "X0", None),
		"Y0": (5002, 2, (5, 0), (), "Y0", None),
	}
	_prop_map_put_ = {
		"X0": ((5001, LCID, 4, 0),()),
		"Y0": ((5002, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBranchs3D(DispatchBaseClass):
	'»нтерфейс дл€ работы с ответвлени€ми.'
	CLSID = IID('{AFE08AEC-F751-42D9-A6F5-3C004E4D41A6}')
	coclass_clsid = None

	def AddBranch(self, Points=defaultNamedNotOptArg, Object=defaultNamedNotOptArg):
		'ƒобавить ответвление.'
		return self._oleobj_.InvokeTypes(5008, LCID, 1, (11, 0), ((12, 1), (9, 1)),Points
			, Object)

	def AddBranchByPoint(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg, Object=defaultNamedNotOptArg):
		'ƒобавить пр€молинейное ответвление.'
		return self._oleobj_.InvokeTypes(5009, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1), (9, 1)),X
			, Y, Z, Object)

	# Result is of type IModelObject
	# The method BranchObject is actually a property, but must be used as a method to correctly pass the arguments
	def BranchObject(self, Index=defaultNamedNotOptArg):
		'ќбъект на который указывает ножка.'
		ret = self._oleobj_.InvokeTypes(5011, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'BranchObject', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# The method BranchPoints is actually a property, but must be used as a method to correctly pass the arguments
	def BranchPoints(self, Index=defaultNamedNotOptArg):
		'ћассив SAFEARRAY координат точек ответвлени€.'
		return self._ApplyTypes_(5006, 2, (12, 0), ((3, 1),), 'BranchPoints', None,Index
			)

	# The method BranchPointsCount is actually a property, but must be used as a method to correctly pass the arguments
	def BranchPointsCount(self, Index=defaultNamedNotOptArg):
		'„исло точек в ответвлении.'
		return self._oleobj_.InvokeTypes(5007, LCID, 2, (3, 0), ((3, 1),),Index
			)

	def DeleteBranch(self, Index=defaultNamedNotOptArg):
		'”далить ответвление.'
		return self._oleobj_.InvokeTypes(5010, LCID, 1, (11, 0), ((3, 1),),Index
			)

	def GetBranchBeginPoint(self, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		' оординаты начала полки или точка прив€зки.'
		return self._ApplyTypes_(5002, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2)), 'GetBranchBeginPoint', None,X
			, Y, Z)

	def GetBranchEndPoint(self, Index=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		' оординаты конечной точки ответвлени€.'
		return self._ApplyTypes_(5004, 1, (11, 0), ((3, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetBranchEndPoint', None,Index
			, X, Y, Z)

	def SetBranchBeginPoint(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg):
		' оординаты начала полки или точка прив€зки.'
		return self._oleobj_.InvokeTypes(5003, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1)),X
			, Y, Z)

	def SetBranchEndPoint(self, Index=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg):
		' оординаты конечной точки ответвлени€.'
		return self._oleobj_.InvokeTypes(5005, LCID, 1, (11, 0), ((3, 1), (5, 1), (5, 1), (5, 1)),Index
			, X, Y, Z)

	# The method SetBranchPoints is actually a property, but must be used as a method to correctly pass the arguments
	def SetBranchPoints(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ћассив SAFEARRAY координат точек ответвлени€.'
		return self._oleobj_.InvokeTypes(5006, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
			, arg1)

	_prop_map_get_ = {
		"BranchCount": (5001, 2, (3, 0), (), "BranchCount", None),
		"BranchEndPoints": (5013, 2, (12, 0), (), "BranchEndPoints", None),
		"BranchObjects": (5012, 2, (12, 0), (), "BranchObjects", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBrandLeader(DispatchBaseClass):
	'«нак клеймени€.'
	CLSID = IID('{EEF8366B-7C8D-448B-9944-BE63E82C1543}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Designation' returns object of type 'IText'
		"Designation": (1503, 2, (9, 0), (), "Designation", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		"Direction": (1504, 2, (11, 0), (), "Direction", None),
		# Method 'TextOnBranch' returns object of type 'IText'
		"TextOnBranch": (1501, 2, (9, 0), (), "TextOnBranch", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		# Method 'TextUnderBranch' returns object of type 'IText'
		"TextUnderBranch": (1502, 2, (9, 0), (), "TextUnderBranch", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
	}
	_prop_map_put_ = {
		"Direction": ((1504, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBreakAngleDimension(DispatchBaseClass):
	'”гловой размер с обрывом.'
	CLSID = IID('{F6ED408A-C2A8-47DD-8EC3-011A7AD60335}')
	coclass_clsid = IID('{D33D3BFC-BEDC-4E91-A78C-D03461379E15}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle1": (4, 2, (5, 0), (), "Angle1", None),
		"Angle2": (5, 2, (5, 0), (), "Angle2", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BaseObject1' returns object of type 'IDrawingObject'
		"BaseObject1": (10, 2, (9, 0), (), "BaseObject1", '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}'),
		# Method 'BaseObject2' returns object of type 'IDrawingObject'
		"BaseObject2": (11, 2, (9, 0), (), "BaseObject2", '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}'),
		"DimensionType": (12, 2, (3, 0), (), "DimensionType", None),
		"Direction": (15, 2, (11, 0), (), "Direction", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Radius": (3, 2, (5, 0), (), "Radius", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"ShelfX": (13, 2, (5, 0), (), "ShelfX", None),
		"ShelfY": (14, 2, (5, 0), (), "ShelfY", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"X1": (6, 2, (5, 0), (), "X1", None),
		"X2": (8, 2, (5, 0), (), "X2", None),
		"X3": (16, 2, (5, 0), (), "X3", None),
		"Xc": (1, 2, (5, 0), (), "Xc", None),
		"Y1": (7, 2, (5, 0), (), "Y1", None),
		"Y2": (9, 2, (5, 0), (), "Y2", None),
		"Y3": (17, 2, (5, 0), (), "Y3", None),
		"Yc": (2, 2, (5, 0), (), "Yc", None),
	}
	_prop_map_put_ = {
		"Angle1": ((4, LCID, 4, 0),()),
		"Angle2": ((5, LCID, 4, 0),()),
		"BaseObject1": ((10, LCID, 4, 0),()),
		"BaseObject2": ((11, LCID, 4, 0),()),
		"DimensionType": ((12, LCID, 4, 0),()),
		"Direction": ((15, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"Radius": ((3, LCID, 4, 0),()),
		"ShelfX": ((13, LCID, 4, 0),()),
		"ShelfY": ((14, LCID, 4, 0),()),
		"X1": ((6, LCID, 4, 0),()),
		"X2": ((8, LCID, 4, 0),()),
		"X3": ((16, LCID, 4, 0),()),
		"Xc": ((1, LCID, 4, 0),()),
		"Y1": ((7, LCID, 4, 0),()),
		"Y2": ((9, LCID, 4, 0),()),
		"Y3": ((17, LCID, 4, 0),()),
		"Yc": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBreakLineDimension(DispatchBaseClass):
	'Ћинейный размер с обрывом.'
	CLSID = IID('{61164A26-855C-4220-88ED-C2BDAF49B2DB}')
	coclass_clsid = IID('{9F6632A5-AAA8-4BF3-94AA-ADF2838BEC74}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BaseObject' returns object of type 'IDrawingObject'
		"BaseObject": (9, 2, (9, 0), (), "BaseObject", '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}'),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"ShelfX": (7, 2, (5, 0), (), "ShelfX", None),
		"ShelfY": (8, 2, (5, 0), (), "ShelfY", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"X1": (1, 2, (5, 0), (), "X1", None),
		"X2": (3, 2, (5, 0), (), "X2", None),
		"X3": (5, 2, (5, 0), (), "X3", None),
		"Y1": (2, 2, (5, 0), (), "Y1", None),
		"Y2": (4, 2, (5, 0), (), "Y2", None),
		"Y3": (6, 2, (5, 0), (), "Y3", None),
	}
	_prop_map_put_ = {
		"BaseObject": ((9, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"ShelfX": ((7, LCID, 4, 0),()),
		"ShelfY": ((8, LCID, 4, 0),()),
		"X1": ((1, LCID, 4, 0),()),
		"X2": ((3, LCID, 4, 0),()),
		"X3": ((5, LCID, 4, 0),()),
		"Y1": ((2, LCID, 4, 0),()),
		"Y2": ((4, LCID, 4, 0),()),
		"Y3": ((6, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBreakLineDimensions(DispatchBaseClass):
	' оллекци€ линейных размеров с обрывом.'
	CLSID = IID('{4125169F-3EA8-4AC0-9E1B-5582D62600C4}')
	coclass_clsid = IID('{865EDBB6-F511-45EF-AA82-C19AD126F9B9}')

	# Result is of type IBreakLineDimension
	def Add(self):
		'ƒобавить размер в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{61164A26-855C-4220-88ED-C2BDAF49B2DB}')
		return ret

	# Result is of type IBreakLineDimension
	# The method BreakLineDimension is actually a property, but must be used as a method to correctly pass the arguments
	def BreakLineDimension(self, Index=defaultNamedNotOptArg):
		'ѕолучить размер, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'BreakLineDimension', '{61164A26-855C-4220-88ED-C2BDAF49B2DB}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IBreakRadialDimension(DispatchBaseClass):
	'–адиальный размер с изломом.'
	CLSID = IID('{88491537-9E93-42F3-861C-761A75BB89D6}')
	coclass_clsid = IID('{60ADBA37-9540-40E9-8F52-03E80E3F423E}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (5, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BaseObject' returns object of type 'IDrawingObject'
		"BaseObject": (4, 2, (9, 0), (), "BaseObject", '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}'),
		"BreakAngle": (8, 2, (5, 0), (), "BreakAngle", None),
		"BreakLength": (6, 2, (5, 0), (), "BreakLength", None),
		"BreakX1": (9, 2, (5, 0), (), "BreakX1", None),
		"BreakX2": (11, 2, (5, 0), (), "BreakX2", None),
		"BreakY1": (10, 2, (5, 0), (), "BreakY1", None),
		"BreakY2": (12, 2, (5, 0), (), "BreakY2", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Radius": (3, 2, (5, 0), (), "Radius", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"TextOnLine": (7, 2, (3, 0), (), "TextOnLine", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"Xc": (1, 2, (5, 0), (), "Xc", None),
		"Yc": (2, 2, (5, 0), (), "Yc", None),
	}
	_prop_map_put_ = {
		"Angle": ((5, LCID, 4, 0),()),
		"BaseObject": ((4, LCID, 4, 0),()),
		"BreakAngle": ((8, LCID, 4, 0),()),
		"BreakLength": ((6, LCID, 4, 0),()),
		"BreakX1": ((9, LCID, 4, 0),()),
		"BreakX2": ((11, LCID, 4, 0),()),
		"BreakY1": ((10, LCID, 4, 0),()),
		"BreakY2": ((12, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"Radius": ((3, LCID, 4, 0),()),
		"TextOnLine": ((7, LCID, 4, 0),()),
		"Xc": ((1, LCID, 4, 0),()),
		"Yc": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBreakRadialDimensions(DispatchBaseClass):
	' оллекци€ радиальных размеров с изломом.'
	CLSID = IID('{E2181A3E-5417-4D73-AB65-983DED3438E0}')
	coclass_clsid = IID('{2782662C-D266-46D6-9BF5-6E4612D32D9F}')

	# Result is of type IBreakRadialDimension
	def Add(self):
		'ƒобавить радиальный размер с изломом в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{88491537-9E93-42F3-861C-761A75BB89D6}')
		return ret

	# Result is of type IBreakRadialDimension
	# The method BreakRadialDimension is actually a property, but must be used as a method to correctly pass the arguments
	def BreakRadialDimension(self, Index=defaultNamedNotOptArg):
		'ѕолучить радиальный размер с изломом, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'BreakRadialDimension', '{88491537-9E93-42F3-861C-761A75BB89D6}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IBreakViewParam(DispatchBaseClass):
	'ѕараметры разрыва вида.'
	CLSID = IID('{1B94C65D-3473-4FF2-B185-0B1C2C98FCAE}')
	coclass_clsid = None

	def AddBreakLine(self, X1=defaultNamedNotOptArg, Y1=defaultNamedNotOptArg, X2=defaultNamedNotOptArg, Y2=defaultNamedNotOptArg
			, Angle=defaultNamedNotOptArg):
		'ƒобавить линию разрыва.'
		return self._oleobj_.InvokeTypes(4500, LCID, 1, (3, 0), ((5, 1), (5, 1), (5, 1), (5, 1), (5, 1)),X1
			, Y1, X2, Y2, Angle)

	def DeleteAllBreakLines(self):
		'”далить все линии разрыва.'
		return self._oleobj_.InvokeTypes(4502, LCID, 1, (11, 0), (),)

	def DeleteBreakLine(self, Index=defaultNamedNotOptArg):
		'”далить линию разрыва.'
		return self._oleobj_.InvokeTypes(4501, LCID, 1, (11, 0), ((3, 1),),Index
			)

	def GetBreakLineParams(self, Index=defaultNamedNotOptArg, Angle=pythoncom.Missing, Clearance=pythoncom.Missing, BreakLineType=pythoncom.Missing
			, Amplitude=pythoncom.Missing, MaxAmplitude=pythoncom.Missing):
		'ѕолучить параметры линии разрыва.'
		return self._ApplyTypes_(4506, 1, (11, 0), ((3, 1), (16389, 2), (16389, 2), (16387, 2), (16389, 2), (16389, 2)), 'GetBreakLineParams', None,Index
			, Angle, Clearance, BreakLineType, Amplitude, MaxAmplitude
			)

	def GetBreakLinePosition(self, Index=defaultNamedNotOptArg, X1=pythoncom.Missing, Y1=pythoncom.Missing, X2=pythoncom.Missing
			, Y2=pythoncom.Missing):
		'ѕолучить координаты границ разрыва.'
		return self._ApplyTypes_(4504, 1, (11, 0), ((3, 1), (16389, 2), (16389, 2), (16389, 2), (16389, 2)), 'GetBreakLinePosition', None,Index
			, X1, Y1, X2, Y2)

	def SetBreakLineParams(self, Index=defaultNamedNotOptArg, Angle=defaultNamedNotOptArg, Clearance=defaultNamedNotOptArg, BreakLineType=defaultNamedNotOptArg
			, Amplitude=defaultNamedNotOptArg, MaxAmplitude=defaultNamedNotOptArg):
		'”становить параметры линии разрыва.'
		return self._oleobj_.InvokeTypes(4505, LCID, 1, (11, 0), ((3, 1), (5, 1), (5, 1), (3, 1), (5, 1), (5, 1)),Index
			, Angle, Clearance, BreakLineType, Amplitude, MaxAmplitude
			)

	def SetBreakLinePosition(self, Index=defaultNamedNotOptArg, X1=defaultNamedNotOptArg, Y1=defaultNamedNotOptArg, X2=defaultNamedNotOptArg
			, Y2=defaultNamedNotOptArg):
		'”становить координаты границ разрыва.'
		return self._oleobj_.InvokeTypes(4503, LCID, 1, (11, 0), ((3, 1), (5, 1), (5, 1), (5, 1), (5, 1)),Index
			, X1, Y1, X2, Y2)

	_prop_map_get_ = {
		"BreaksCount": (4507, 2, (3, 0), (), "BreaksCount", None),
		"BreaksVisible": (4508, 2, (11, 0), (), "BreaksVisible", None),
	}
	_prop_map_put_ = {
		"BreaksVisible": ((4508, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBrokenLine(DispatchBaseClass):
	'Ћини€ обрыва с изломами.'
	CLSID = IID('{2482EB44-5625-4FB9-A46B-781426B02510}')
	coclass_clsid = IID('{1C337EDB-F786-4D56-8BD2-06D927176C32}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (6, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AutoBreakAmplitude": (12, 2, (11, 0), (), "AutoBreakAmplitude", None),
		"AutoJutValue": (9, 2, (11, 0), (), "AutoJutValue", None),
		"BreakAmplitude": (11, 2, (5, 0), (), "BreakAmplitude", None),
		"BreakDisplacement": (13, 2, (5, 0), (), "BreakDisplacement", None),
		"BreaksCount": (10, 2, (3, 0), (), "BreaksCount", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"JutValue": (8, 2, (5, 0), (), "JutValue", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		"Length": (5, 2, (5, 0), (), "Length", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Style": (7, 2, (3, 0), (), "Style", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Type1": (14, 2, (11, 0), (), "Type1", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"X1": (1, 2, (5, 0), (), "X1", None),
		"X2": (3, 2, (5, 0), (), "X2", None),
		"Y1": (2, 2, (5, 0), (), "Y1", None),
		"Y2": (4, 2, (5, 0), (), "Y2", None),
	}
	_prop_map_put_ = {
		"Angle": ((6, LCID, 4, 0),()),
		"AutoBreakAmplitude": ((12, LCID, 4, 0),()),
		"AutoJutValue": ((9, LCID, 4, 0),()),
		"BreakAmplitude": ((11, LCID, 4, 0),()),
		"BreakDisplacement": ((13, LCID, 4, 0),()),
		"BreaksCount": ((10, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"JutValue": ((8, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"Length": ((5, LCID, 4, 0),()),
		"Style": ((7, LCID, 4, 0),()),
		"Type1": ((14, LCID, 4, 0),()),
		"X1": ((1, LCID, 4, 0),()),
		"X2": ((3, LCID, 4, 0),()),
		"Y1": ((2, LCID, 4, 0),()),
		"Y2": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBrokenLines(DispatchBaseClass):
	' оллекци€ линий обрыва с изломами.'
	CLSID = IID('{2A7EADC0-5E79-4DDB-85D5-E3EDB743480D}')
	coclass_clsid = IID('{31314843-3608-4B45-8F0A-DDBC308226C6}')

	# Result is of type IBrokenLine
	def Add(self):
		'—оздать линию (добавить линию обрыва с изломами в коллекцию).'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{2482EB44-5625-4FB9-A46B-781426B02510}')
		return ret

	# Result is of type IBrokenLine
	# The method BrokenLine is actually a property, but must be used as a method to correctly pass the arguments
	def BrokenLine(self, Index=defaultNamedNotOptArg):
		'¬озвращает линию обрыва с изломами, заданную по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'BrokenLine', '{2482EB44-5625-4FB9-A46B-781426B02510}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IBuildingAxes(DispatchBaseClass):
	' оллекци€ строительных осей.'
	CLSID = IID('{18072E1D-1802-41F5-A434-04BB9D3F157F}')
	coclass_clsid = IID('{B879C6F6-5AB0-4BEE-8872-FE87C621F15B}')

	# Result is of type IBuildingAxis
	def Add(self, AxisType=defaultNamedNotOptArg):
		'—оздать ось (ƒобавл€ет ось в коллекцию).'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((3, 1),),AxisType
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{123C45BF-14DE-433E-B3B0-2FB642A9A418}')
		return ret

	# Result is of type IBuildingAxis
	# The method BuildingAxis is actually a property, but must be used as a method to correctly pass the arguments
	def BuildingAxis(self, Index=defaultNamedNotOptArg):
		'¬озвращает ось, заданную по индексу, имени или ссылке.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'BuildingAxis', '{123C45BF-14DE-433E-B3B0-2FB642A9A418}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IBuildingAxis(DispatchBaseClass):
	'Cтроительна€ ось (базовый класс строительных осей).'
	CLSID = IID('{123C45BF-14DE-433E-B3B0-2FB642A9A418}')
	coclass_clsid = IID('{8A706E75-73FF-4FBF-8D3F-61A13513C7EB}')

	# Result is of type IMarkNode
	def AddNodeByPoint(self, Type=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg):
		'ƒобавить узел марки по координатам.'
		ret = self._oleobj_.InvokeTypes(2012, LCID, 1, (9, 0), ((3, 1), (5, 1), (5, 1)),Type
			, X, Y)
		if ret is not None:
			ret = Dispatch(ret, 'AddNodeByPoint', '{5AC48E97-80B1-459F-9709-1F3F374559BE}')
		return ret

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def GetInsertionPoints(self, First=defaultNamedNotOptArg, Points=pythoncom.Missing, Directions=pythoncom.Missing, Nodes=pythoncom.Missing):
		'ѕолучить координаты точек дл€ вставки дополнительных элементов.'
		return self._ApplyTypes_(2010, 1, (11, 0), ((11, 1), (16396, 2), (16396, 2), (16396, 2)), 'GetInsertionPoints', None,First
			, Points, Directions, Nodes)

	# Result is of type IMarkNode
	def GetNodeByPoint(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Limit=defaultNamedNotOptArg):
		'ѕолучить узел марки по координатам.'
		ret = self._oleobj_.InvokeTypes(2011, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1)),X
			, Y, Limit)
		if ret is not None:
			ret = Dispatch(ret, 'GetNodeByPoint', '{5AC48E97-80B1-459F-9709-1F3F374559BE}')
		return ret

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AutoStroke": (2009, 2, (11, 0), (), "AutoStroke", None),
		"DottedLength": (2003, 2, (5, 0), (), "DottedLength", None),
		"DoubleMark": (2001, 2, (11, 0), (), "DoubleMark", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"Interval": (2004, 2, (5, 0), (), "Interval", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		"MarkSize": (2002, 2, (5, 0), (), "MarkSize", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Stroke": (2005, 2, (5, 0), (), "Stroke", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		# Method 'Text' returns object of type 'IText'
		"Text": (2006, 2, (9, 0), (), "Text", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		# Method 'TextAfter' returns object of type 'IText'
		"TextAfter": (2008, 2, (9, 0), (), "TextAfter", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		# Method 'TextBefore' returns object of type 'IText'
		"TextBefore": (2007, 2, (9, 0), (), "TextBefore", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"AutoStroke": ((2009, LCID, 4, 0),()),
		"DottedLength": ((2003, LCID, 4, 0),()),
		"DoubleMark": ((2001, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"Interval": ((2004, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"MarkSize": ((2002, LCID, 4, 0),()),
		"Stroke": ((2005, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IBuildingContainer(DispatchBaseClass):
	' онтейнер объектов —ѕƒ—.'
	CLSID = IID('{FD1FD236-F5BA-4FB0-A872-21FC13E6895F}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Braces' returns object of type 'IBraces'
		"Braces": (5507, 2, (9, 0), (), "Braces", '{99F27BD6-6294-45D9-AF78-A9D52E9DD799}'),
		# Method 'BuildingAxes' returns object of type 'IBuildingAxes'
		"BuildingAxes": (5501, 2, (9, 0), (), "BuildingAxes", '{18072E1D-1802-41F5-A434-04BB9D3F157F}'),
		# Method 'BuildingCutLines' returns object of type 'ICutLines'
		"BuildingCutLines": (5508, 2, (9, 0), (), "BuildingCutLines", '{666DA5B4-324C-493C-9A91-37D9E078EB4E}'),
		# Method 'CutUnitMarkings' returns object of type 'ICutUnitMarkings'
		"CutUnitMarkings": (5503, 2, (9, 0), (), "CutUnitMarkings", '{23B00F94-98D3-4AD7-8827-F4088F4A9E5C}'),
		# Method 'Marks' returns object of type 'IMarks'
		"Marks": (5502, 2, (9, 0), (), "Marks", '{47585370-56BD-4419-82D9-DB7CBFB1A252}'),
		# Method 'MultiTextLeaders' returns object of type 'IMultiTextLeaders'
		"MultiTextLeaders": (5505, 2, (9, 0), (), "MultiTextLeaders", '{233B2298-7A45-4CE1-AEF2-30B063FDB63C}'),
		# Method 'UnitMarkings' returns object of type 'IUnitMarkings'
		"UnitMarkings": (5504, 2, (9, 0), (), "UnitMarkings", '{969AD901-FC09-47F5-94F5-1ABEB1A9C85C}'),
		# Method 'UnitNumbers' returns object of type 'IUnitNumbers'
		"UnitNumbers": (5506, 2, (9, 0), (), "UnitNumbers", '{598E649B-970C-454B-9162-1BB6C9FBFCBF}'),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICellBoundaries(DispatchBaseClass):
	'√раницы €чейки.'
	CLSID = IID('{1E29E849-1D1E-4791-BD31-8EF00ED5D118}')
	coclass_clsid = None

	# The method LineStyle is actually a property, but must be used as a method to correctly pass the arguments
	def LineStyle(self, Index=defaultNamedNotOptArg):
		'—тиль линии границы.'
		return self._oleobj_.InvokeTypes(5501, LCID, 2, (3, 0), ((3, 1),),Index
			)

	# The method LineVisible is actually a property, but must be used as a method to correctly pass the arguments
	def LineVisible(self, Index=defaultNamedNotOptArg):
		'¬идимость границы.'
		return self._oleobj_.InvokeTypes(5502, LCID, 2, (11, 0), ((3, 1),),Index
			)

	# The method SetLineStyle is actually a property, but must be used as a method to correctly pass the arguments
	def SetLineStyle(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'—тиль линии границы.'
		return self._oleobj_.InvokeTypes(5501, LCID, 4, (24, 0), ((3, 1), (3, 1)),Index
			, arg1)

	# The method SetLineVisible is actually a property, but must be used as a method to correctly pass the arguments
	def SetLineVisible(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'¬идимость границы.'
		return self._oleobj_.InvokeTypes(5502, LCID, 4, (24, 0), ((3, 1), (11, 1)),Index
			, arg1)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICellFormat(DispatchBaseClass):
	'‘ормат €чейки.'
	CLSID = IID('{9F2F27E7-8FB2-4C6C-A54D-35DB240060D8}')
	coclass_clsid = None

	_prop_map_get_ = {
		"HFormat": (4510, 2, (3, 0), (), "HFormat", None),
		"Height": (4509, 2, (5, 0), (), "Height", None),
		"LeftEdge": (4504, 2, (5, 0), (), "LeftEdge", None),
		"OneLine": (4503, 2, (11, 0), (), "OneLine", None),
		"ReadOnly": (4502, 2, (11, 0), (), "ReadOnly", None),
		"RightEdge": (4505, 2, (5, 0), (), "RightEdge", None),
		"SpaceAfter": (4507, 2, (5, 0), (), "SpaceAfter", None),
		"SpaceBefore": (4506, 2, (5, 0), (), "SpaceBefore", None),
		"TextStyle": (4501, 2, (3, 0), (), "TextStyle", None),
		"VFormat": (4511, 2, (11, 0), (), "VFormat", None),
		"Width": (4508, 2, (5, 0), (), "Width", None),
	}
	_prop_map_put_ = {
		"HFormat": ((4510, LCID, 4, 0),()),
		"Height": ((4509, LCID, 4, 0),()),
		"LeftEdge": ((4504, LCID, 4, 0),()),
		"OneLine": ((4503, LCID, 4, 0),()),
		"ReadOnly": ((4502, LCID, 4, 0),()),
		"RightEdge": ((4505, LCID, 4, 0),()),
		"SpaceAfter": ((4507, LCID, 4, 0),()),
		"SpaceBefore": ((4506, LCID, 4, 0),()),
		"TextStyle": ((4501, LCID, 4, 0),()),
		"VFormat": ((4511, LCID, 4, 0),()),
		"Width": ((4508, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICentreMarker(DispatchBaseClass):
	'ќбозначение центра.'
	CLSID = IID('{8FE1CADA-DE72-4A55-B303-EAF1F4748CF6}')
	coclass_clsid = IID('{F6E745A9-DB3A-40F8-9318-D8A53D04DF16}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	# The method SemiAxisAutoLength is actually a property, but must be used as a method to correctly pass the arguments
	def SemiAxisAutoLength(self, AxisType=defaultNamedNotOptArg):
		'TRUE - ассоциативное  задание длины полуоси.'
		return self._oleobj_.InvokeTypes(6, LCID, 2, (11, 0), ((3, 1),),AxisType
			)

	# The method SemiAxisLength is actually a property, but must be used as a method to correctly pass the arguments
	def SemiAxisLength(self, AxisType=defaultNamedNotOptArg):
		'ƒлина полуоси.'
		return self._oleobj_.InvokeTypes(7, LCID, 2, (5, 0), ((3, 1),),AxisType
			)

	# The method SetSemiAxisAutoLength is actually a property, but must be used as a method to correctly pass the arguments
	def SetSemiAxisAutoLength(self, AxisType=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'TRUE - ассоциативное  задание длины полуоси.'
		return self._oleobj_.InvokeTypes(6, LCID, 4, (24, 0), ((3, 1), (11, 1)),AxisType
			, arg1)

	# The method SetSemiAxisLength is actually a property, but must be used as a method to correctly pass the arguments
	def SetSemiAxisLength(self, AxisType=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ƒлина полуоси.'
		return self._oleobj_.InvokeTypes(7, LCID, 4, (24, 0), ((3, 1), (5, 1)),AxisType
			, arg1)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (4, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BaseObject' returns object of type 'IDrawingObject'
		"BaseObject": (1, 2, (9, 0), (), "BaseObject", '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}'),
		"CrosshairSize": (8, 2, (5, 0), (), "CrosshairSize", None),
		"CrosshairSizeModify": (9, 2, (11, 0), (), "CrosshairSizeModify", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"SignType": (5, 2, (3, 0), (), "SignType", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"X": (2, 2, (5, 0), (), "X", None),
		"Y": (3, 2, (5, 0), (), "Y", None),
	}
	_prop_map_put_ = {
		"Angle": ((4, LCID, 4, 0),()),
		"BaseObject": ((1, LCID, 4, 0),()),
		"CrosshairSize": ((8, LCID, 4, 0),()),
		"CrosshairSizeModify": ((9, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"SignType": ((5, LCID, 4, 0),()),
		"X": ((2, LCID, 4, 0),()),
		"Y": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICentreMarkers(DispatchBaseClass):
	' оллекци€ обозначени€ центров.'
	CLSID = IID('{A0533211-CF52-4AB5-A172-3DC7D94276D1}')
	coclass_clsid = IID('{80178C38-D3BE-4E6B-9D22-AA43D8DA2C46}')

	# Result is of type ICentreMarker
	def Add(self):
		'—оздать обозначение центра (добавить обозначение центра в коллекцию).'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{8FE1CADA-DE72-4A55-B303-EAF1F4748CF6}')
		return ret

	# Result is of type ICentreMarker
	# The method CentreMarker is actually a property, but must be used as a method to correctly pass the arguments
	def CentreMarker(self, Index=defaultNamedNotOptArg):
		'¬озвращает обозначение центра, заданное по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'CentreMarker', '{8FE1CADA-DE72-4A55-B303-EAF1F4748CF6}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IChamfer(DispatchBaseClass):
	'‘аска.'
	CLSID = IID('{59C6927B-FC6D-4494-9CDE-648276020929}')
	coclass_clsid = IID('{5E6970D9-B721-4B7C-B29D-7AA4B25CBCC8}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (5, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"BaseObjects": (2, 2, (12, 0), (), "BaseObjects", None),
		"BuildingType": (1, 2, (3, 0), (), "BuildingType", None),
		"Direction": (6, 2, (11, 0), (), "Direction", None),
		"Distance1": (3, 2, (5, 0), (), "Distance1", None),
		"Distance2": (4, 2, (5, 0), (), "Distance2", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Tangent": (7, 2, (11, 0), (), "Tangent", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Angle": ((5, LCID, 4, 0),()),
		"BaseObjects": ((2, LCID, 4, 0),()),
		"BuildingType": ((1, LCID, 4, 0),()),
		"Direction": ((6, LCID, 4, 0),()),
		"Distance1": ((3, LCID, 4, 0),()),
		"Distance2": ((4, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Tangent": ((7, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IChamfers(DispatchBaseClass):
	' оллекци€ фасок.'
	CLSID = IID('{5E232224-2445-430F-9324-2C75BACE1D0C}')
	coclass_clsid = IID('{2AC5E1B7-C86E-476B-9015-F102A303B0CE}')

	# Result is of type IChamfer
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{59C6927B-FC6D-4494-9CDE-648276020929}')
		return ret

	# Result is of type IChamfer
	# The method Chamfer is actually a property, but must be used as a method to correctly pass the arguments
	def Chamfer(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу или по имени.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Chamfer', '{59C6927B-FC6D-4494-9CDE-648276020929}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IChangeLeader(DispatchBaseClass):
	'ѕараметры знака изменени€.'
	CLSID = IID('{CCFBE87D-1A3C-4C8B-ABE3-1C2319694314}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Designation' returns object of type 'IText'
		"Designation": (1505, 2, (9, 0), (), "Designation", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		"FullLeaderLength": (1504, 2, (11, 0), (), "FullLeaderLength", None),
		"LeaderLength": (1503, 2, (5, 0), (), "LeaderLength", None),
		"SignHeight": (1502, 2, (5, 0), (), "SignHeight", None),
		"SignType": (1501, 2, (3, 0), (), "SignType", None),
	}
	_prop_map_put_ = {
		"FullLeaderLength": ((1504, LCID, 4, 0),()),
		"LeaderLength": ((1503, LCID, 4, 0),()),
		"SignHeight": ((1502, LCID, 4, 0),()),
		"SignType": ((1501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICheckSum(DispatchBaseClass):
	'»нтерфейс контрольной суммы.'
	CLSID = IID('{2AA9F713-2328-4E8F-B996-9DFDABC67DC9}')
	coclass_clsid = IID('{D3154740-6BF5-47F6-9A02-486F78190791}')

	def Add(self, Value=defaultNamedNotOptArg, Com=defaultNamedNotOptArg):
		'ƒобавить параметр value к сумме. com = TRUE с учЄтом пор€дка'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (24, 0), ((12, 1), (11, 1)),Value
			, Com)

	def AddInterface(self, Object=defaultNamedNotOptArg, Com=defaultNamedNotOptArg):
		'ƒобавить параметр полученный из объекта по его интерфейсу к сумме. com = TRUE с учЄтом пор€дка'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((13, 1), (11, 1)),Object
			, Com)

	def AddReference(self, Object=defaultNamedNotOptArg, Doc=defaultNamedNotOptArg, Com=defaultNamedNotOptArg):
		"ƒобавить параметр полученный из объекта по его Reference'у к сумме. com = TRUE с учЄтом пор€дка"
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), ((3, 1), (3, 1), (11, 1)),Object
			, Doc, Com)

	def Clear(self):
		'ќчистить контрольную сумму'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Result": (2, 2, (12, 0), (), "Result", None),
		"StrResult": (3, 2, (8, 0), (), "StrResult", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Version": (7, 2, (3, 0), (), "Version", None),
	}
	_prop_map_put_ = {
		"Version": ((7, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IChooseBodies7(DispatchBaseClass):
	'»нтерфейс области применени€  дл€ тел документа в операции.'
	CLSID = IID('{7BF80DAA-25F8-4AFF-AFEA-CAD390D4275D}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Bodies": (3002, 2, (12, 0), (), "Bodies", None),
		"ChooseBodiesType": (3001, 2, (3, 0), (), "ChooseBodiesType", None),
	}
	_prop_map_put_ = {
		"Bodies": ((3002, LCID, 4, 0),()),
		"ChooseBodiesType": ((3001, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IChooseManager(DispatchBaseClass):
	'»нтерфейс менеджера выбора (подсветки) объектов.'
	CLSID = IID('{E2D9EAA6-F88C-4ADB-AC32-854E32E9FEE1}')
	coclass_clsid = IID('{495C89BD-48C4-40B3-9829-4E982F191BA2}')

	def Choose(self, Objects=defaultNamedNotOptArg):
		'¬ыделить объект.'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (11, 0), ((12, 1),),Objects
			)

	def GetManagerIndex(self, Object=defaultNamedNotOptArg):
		'ѕолучить индекс менеджера по указателю на выбранный объект.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (3, 0), ((9, 1),),Object
			)

	def IsChoosen(self, Object=defaultNamedNotOptArg):
		'¬ыделен ли обьект.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((9, 1),),Object
			)

	def Unchoose(self, Objects=defaultNamedNotOptArg):
		'—н€ть выделение с объекта.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), ((12, 1),),Objects
			)

	def UnchooseAll(self):
		'—н€ть выделение.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ChoosenObjects": (5, 2, (12, 0), (), "ChoosenObjects", None),
		"CurrentManagerType": (6, 2, (3, 0), (), "CurrentManagerType", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"CurrentManagerType": ((6, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IChooseObjects(DispatchBaseClass):
	'»нтерфейс области применени€  дл€ тел и компонентов документа в операции.'
	CLSID = IID('{6D2EE9A7-4C9F-4606-91A5-9941C20701E5}')
	coclass_clsid = None

	_prop_map_get_ = {
		"ChooseBodies": (3103, 2, (12, 0), (), "ChooseBodies", None),
		"ChooseParts": (3104, 2, (12, 0), (), "ChooseParts", None),
		"ChoosePartsType": (3102, 2, (3, 0), (), "ChoosePartsType", None),
		"ChooseType": (3101, 2, (3, 0), (), "ChooseType", None),
	}
	_prop_map_put_ = {
		"ChooseBodies": ((3103, LCID, 4, 0),()),
		"ChooseParts": ((3104, LCID, 4, 0),()),
		"ChoosePartsType": ((3102, LCID, 4, 0),()),
		"ChooseType": ((3101, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICircle(DispatchBaseClass):
	'ќкружность.'
	CLSID = IID('{5C952F95-DFED-4EEE-B39A-6699EDE08676}')
	coclass_clsid = IID('{9F1D8D78-C0CD-446D-877F-79330B01B8FA}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Radius": (5, 2, (5, 0), (), "Radius", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Style": (6, 2, (3, 0), (), "Style", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"X": (3, 2, (5, 0), (), "X", None),
		"Xc": (1, 2, (5, 0), (), "Xc", None),
		"Y": (4, 2, (5, 0), (), "Y", None),
		"Yc": (2, 2, (5, 0), (), "Yc", None),
	}
	_prop_map_put_ = {
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"Radius": ((5, LCID, 4, 0),()),
		"Style": ((6, LCID, 4, 0),()),
		"X": ((3, LCID, 4, 0),()),
		"Xc": ((1, LCID, 4, 0),()),
		"Y": ((4, LCID, 4, 0),()),
		"Yc": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICircleAxis(DispatchBaseClass):
	' ругова€ ось.'
	CLSID = IID('{D84358FB-674C-4A5D-93BA-EE5D3342097B}')
	coclass_clsid = IID('{8A706E75-73FF-4FBF-8D3F-61A13513C7EB}')

	# Result is of type IMarkNode
	def AddNodeByPoint(self, Type=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg):
		'ƒобавить узел марки по координатам.'
		ret = self._oleobj_.InvokeTypes(2012, LCID, 1, (9, 0), ((3, 1), (5, 1), (5, 1)),Type
			, X, Y)
		if ret is not None:
			ret = Dispatch(ret, 'AddNodeByPoint', '{5AC48E97-80B1-459F-9709-1F3F374559BE}')
		return ret

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def GetInsertionPoints(self, First=defaultNamedNotOptArg, Points=pythoncom.Missing, Directions=pythoncom.Missing, Nodes=pythoncom.Missing):
		'ѕолучить координаты точек дл€ вставки дополнительных элементов.'
		return self._ApplyTypes_(2010, 1, (11, 0), ((11, 1), (16396, 2), (16396, 2), (16396, 2)), 'GetInsertionPoints', None,First
			, Points, Directions, Nodes)

	# Result is of type IMarkNode
	def GetNodeByPoint(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Limit=defaultNamedNotOptArg):
		'ѕолучить узел марки по координатам.'
		ret = self._oleobj_.InvokeTypes(2011, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1)),X
			, Y, Limit)
		if ret is not None:
			ret = Dispatch(ret, 'GetNodeByPoint', '{5AC48E97-80B1-459F-9709-1F3F374559BE}')
		return ret

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AutoStroke": (2009, 2, (11, 0), (), "AutoStroke", None),
		# Method 'BaseMarkNode' returns object of type 'IMarkNode'
		"BaseMarkNode": (6, 2, (9, 0), (), "BaseMarkNode", '{5AC48E97-80B1-459F-9709-1F3F374559BE}'),
		"DottedLength": (2003, 2, (5, 0), (), "DottedLength", None),
		"DoubleMark": (2001, 2, (11, 0), (), "DoubleMark", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"Interval": (2004, 2, (5, 0), (), "Interval", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		"MarkAngle": (3, 2, (5, 0), (), "MarkAngle", None),
		"MarkOn": (5, 2, (11, 0), (), "MarkOn", None),
		"MarkSize": (2002, 2, (5, 0), (), "MarkSize", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Radius": (4, 2, (5, 0), (), "Radius", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Stroke": (2005, 2, (5, 0), (), "Stroke", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		# Method 'Text' returns object of type 'IText'
		"Text": (2006, 2, (9, 0), (), "Text", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		# Method 'TextAfter' returns object of type 'IText'
		"TextAfter": (2008, 2, (9, 0), (), "TextAfter", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		# Method 'TextBefore' returns object of type 'IText'
		"TextBefore": (2007, 2, (9, 0), (), "TextBefore", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"Xc": (1, 2, (5, 0), (), "Xc", None),
		"Yc": (2, 2, (5, 0), (), "Yc", None),
	}
	_prop_map_put_ = {
		"AutoStroke": ((2009, LCID, 4, 0),()),
		"DottedLength": ((2003, LCID, 4, 0),()),
		"DoubleMark": ((2001, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"Interval": ((2004, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"MarkAngle": ((3, LCID, 4, 0),()),
		"MarkOn": ((5, LCID, 4, 0),()),
		"MarkSize": ((2002, LCID, 4, 0),()),
		"Radius": ((4, LCID, 4, 0),()),
		"Stroke": ((2005, LCID, 4, 0),()),
		"Xc": ((1, LCID, 4, 0),()),
		"Yc": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICircleCopyObjectParam(DispatchBaseClass):
	'ѕараметры копировани€ объектов по окружности.'
	CLSID = IID('{138D1202-CA46-4DB3-BF2B-85D260E44355}')
	coclass_clsid = IID('{6F7F48FC-1DA4-4689-9AE3-69804B842D1B}')

	_prop_map_get_ = {
		"Angle": (6, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AttributeCopy": (7, 2, (11, 0), (), "AttributeCopy", None),
		"ByStep": (2005, 2, (11, 0), (), "ByStep", None),
		"Count": (2004, 2, (3, 0), (), "Count", None),
		"DimensionLineScale": (8, 2, (11, 0), (), "DimensionLineScale", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"PositiveDirection": (2006, 2, (11, 0), (), "PositiveDirection", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Scale": (5, 2, (5, 0), (), "Scale", None),
		"SpecificationObjectCopy": (9, 2, (11, 0), (), "SpecificationObjectCopy", None),
		"Step": (2003, 2, (5, 0), (), "Step", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"XNew": (3, 2, (5, 0), (), "XNew", None),
		"XOld": (1, 2, (5, 0), (), "XOld", None),
		"Xc": (2001, 2, (5, 0), (), "Xc", None),
		"YNew": (4, 2, (5, 0), (), "YNew", None),
		"YOld": (2, 2, (5, 0), (), "YOld", None),
		"Yc": (2002, 2, (5, 0), (), "Yc", None),
	}
	_prop_map_put_ = {
		"Angle": ((6, LCID, 4, 0),()),
		"AttributeCopy": ((7, LCID, 4, 0),()),
		"ByStep": ((2005, LCID, 4, 0),()),
		"Count": ((2004, LCID, 4, 0),()),
		"DimensionLineScale": ((8, LCID, 4, 0),()),
		"PositiveDirection": ((2006, LCID, 4, 0),()),
		"Scale": ((5, LCID, 4, 0),()),
		"SpecificationObjectCopy": ((9, LCID, 4, 0),()),
		"Step": ((2003, LCID, 4, 0),()),
		"XNew": ((3, LCID, 4, 0),()),
		"XOld": ((1, LCID, 4, 0),()),
		"Xc": ((2001, LCID, 4, 0),()),
		"YNew": ((4, LCID, 4, 0),()),
		"YOld": ((2, LCID, 4, 0),()),
		"Yc": ((2002, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2004, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ICircles(DispatchBaseClass):
	' оллекци€ окружностей.'
	CLSID = IID('{C8CA9255-E5FE-4396-9C3F-75EE7377C508}')
	coclass_clsid = IID('{E91C61E1-5C35-4EB3-972E-213CC012426F}')

	# Result is of type ICircle
	def Add(self):
		'—оздать окружность (добавить окружность в коллекцию).'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{5C952F95-DFED-4EEE-B39A-6699EDE08676}')
		return ret

	# Result is of type ICircle
	# The method Circle is actually a property, but must be used as a method to correctly pass the arguments
	def Circle(self, Index=defaultNamedNotOptArg):
		'¬озвращает окружность, заданную по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Circle', '{5C952F95-DFED-4EEE-B39A-6699EDE08676}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ICircularCentres(DispatchBaseClass):
	' ругова€ сетка центров.'
	CLSID = IID('{43812A86-37CD-4C6C-AE86-78576EC7E834}')
	coclass_clsid = IID('{46BF1402-7436-42CD-9084-DA35C498326A}')

	def AddCentre(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg):
		'ƒобавить обозначение центра в сетку.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1)),X
			, Y, Radius)

	def AddCentreByObject(self, Object=defaultNamedNotOptArg):
		'ƒобавить обозначение центра в сетку.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), ((9, 1),),Object
			)

	# The method AxisesCount is actually a property, but must be used as a method to correctly pass the arguments
	def AxisesCount(self, WithCenter=defaultNamedNotOptArg):
		' оличество осевых линий в обозначении.'
		return self._oleobj_.InvokeTypes(13, LCID, 2, (3, 0), ((11, 1),),WithCenter
			)

	def Clear(self):
		'ќчистить список центров.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), (),)

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def DeleteCentre(self, Index=defaultNamedNotOptArg):
		'”далить обозначение центра из сетки.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), ((3, 1),),Index
			)

	def DeleteCentreByPoint(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg):
		'”далить обозначение центра из сетки по координатам.'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (11, 0), ((5, 1), (5, 1)),X
			, Y)

	# The method SemiAxisAutoLength is actually a property, but must be used as a method to correctly pass the arguments
	def SemiAxisAutoLength(self, WithCenter=defaultNamedNotOptArg, Index=defaultNamedNotOptArg, AxisType=defaultNamedNotOptArg):
		'TRUE - ассоциативное  задание длины полуоси.'
		return self._oleobj_.InvokeTypes(14, LCID, 2, (11, 0), ((11, 1), (3, 1), (3, 1)),WithCenter
			, Index, AxisType)

	# The method SemiAxisLength is actually a property, but must be used as a method to correctly pass the arguments
	def SemiAxisLength(self, WithCenter=defaultNamedNotOptArg, Index=defaultNamedNotOptArg, AxisType=defaultNamedNotOptArg):
		'ƒлина полуоси.'
		return self._oleobj_.InvokeTypes(15, LCID, 2, (5, 0), ((11, 1), (3, 1), (3, 1)),WithCenter
			, Index, AxisType)

	# The method SetSemiAxisAutoLength is actually a property, but must be used as a method to correctly pass the arguments
	def SetSemiAxisAutoLength(self, WithCenter=defaultNamedNotOptArg, Index=defaultNamedNotOptArg, AxisType=defaultNamedNotOptArg, arg3=defaultUnnamedArg):
		'TRUE - ассоциативное  задание длины полуоси.'
		return self._oleobj_.InvokeTypes(14, LCID, 4, (24, 0), ((11, 1), (3, 1), (3, 1), (11, 1)),WithCenter
			, Index, AxisType, arg3)

	# The method SetSemiAxisLength is actually a property, but must be used as a method to correctly pass the arguments
	def SetSemiAxisLength(self, WithCenter=defaultNamedNotOptArg, Index=defaultNamedNotOptArg, AxisType=defaultNamedNotOptArg, arg3=defaultUnnamedArg):
		'ƒлина полуоси.'
		return self._oleobj_.InvokeTypes(15, LCID, 4, (24, 0), ((11, 1), (3, 1), (3, 1), (5, 1)),WithCenter
			, Index, AxisType, arg3)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"BaseObjects": (1, 2, (12, 0), (), "BaseObjects", None),
		"Centres": (6, 2, (12, 0), (), "Centres", None),
		"Closed": (5, 2, (11, 0), (), "Closed", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Radiuses": (7, 2, (12, 0), (), "Radiuses", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"WithCenter": (4, 2, (11, 0), (), "WithCenter", None),
		"X0": (2, 2, (5, 0), (), "X0", None),
		"Y0": (3, 2, (5, 0), (), "Y0", None),
	}
	_prop_map_put_ = {
		"BaseObjects": ((1, LCID, 4, 0),()),
		"Closed": ((5, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"WithCenter": ((4, LCID, 4, 0),()),
		"X0": ((2, LCID, 4, 0),()),
		"Y0": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICircularCopyObjectParam(DispatchBaseClass):
	'ѕараметры копировани€ объектов по концентрической сетке.'
	CLSID = IID('{A5B8E337-EE84-4EEC-8235-A812FDD6C2DE}')
	coclass_clsid = IID('{FECBF8C1-D8B4-437F-8AA3-DC6362C2E51E}')

	_prop_map_get_ = {
		"Angle": (6, 2, (5, 0), (), "Angle", None),
		"Angle2": (2005, 2, (5, 0), (), "Angle2", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AttributeCopy": (7, 2, (11, 0), (), "AttributeCopy", None),
		"Count1": (2004, 2, (3, 0), (), "Count1", None),
		"Count2": (2008, 2, (3, 0), (), "Count2", None),
		"DimensionLineScale": (8, 2, (11, 0), (), "DimensionLineScale", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Radius": (2001, 2, (5, 0), (), "Radius", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"SaveCentreCopy": (2009, 2, (11, 0), (), "SaveCentreCopy", None),
		"Scale": (5, 2, (5, 0), (), "Scale", None),
		"SpecificationObjectCopy": (9, 2, (11, 0), (), "SpecificationObjectCopy", None),
		"Step1": (2002, 2, (5, 0), (), "Step1", None),
		"Step2": (2006, 2, (5, 0), (), "Step2", None),
		"StepFactor1": (2003, 2, (11, 0), (), "StepFactor1", None),
		"StepFactor2": (2007, 2, (11, 0), (), "StepFactor2", None),
		"TurnObject": (2010, 2, (11, 0), (), "TurnObject", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"XNew": (3, 2, (5, 0), (), "XNew", None),
		"XOld": (1, 2, (5, 0), (), "XOld", None),
		"YNew": (4, 2, (5, 0), (), "YNew", None),
		"YOld": (2, 2, (5, 0), (), "YOld", None),
	}
	_prop_map_put_ = {
		"Angle": ((6, LCID, 4, 0),()),
		"Angle2": ((2005, LCID, 4, 0),()),
		"AttributeCopy": ((7, LCID, 4, 0),()),
		"Count1": ((2004, LCID, 4, 0),()),
		"Count2": ((2008, LCID, 4, 0),()),
		"DimensionLineScale": ((8, LCID, 4, 0),()),
		"Radius": ((2001, LCID, 4, 0),()),
		"SaveCentreCopy": ((2009, LCID, 4, 0),()),
		"Scale": ((5, LCID, 4, 0),()),
		"SpecificationObjectCopy": ((9, LCID, 4, 0),()),
		"Step1": ((2002, LCID, 4, 0),()),
		"Step2": ((2006, LCID, 4, 0),()),
		"StepFactor1": ((2003, LCID, 4, 0),()),
		"StepFactor2": ((2007, LCID, 4, 0),()),
		"TurnObject": ((2010, LCID, 4, 0),()),
		"XNew": ((3, LCID, 4, 0),()),
		"XOld": ((1, LCID, 4, 0),()),
		"YNew": ((4, LCID, 4, 0),()),
		"YOld": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICircularPattern(DispatchBaseClass):
	'ќпераци€ копировани€ по концентрической сетке.'
	CLSID = IID('{B1ED4CA8-0835-4465-925D-C137559A32E0}')
	coclass_clsid = IID('{FFC0A8BB-FB7C-4981-8E07-F5D3FEB4DC5B}')

	def AddInitialObjects(self, Objects=defaultNamedNotOptArg):
		'ƒобавить объекты в массив копируемых объектов.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), ((12, 1),),Objects
			)

	def Clear(self):
		'ќчистить список исходных объектов массива.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), (),)

	def Destroy(self):
		'–азрушить массив.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), (),)

	# Result is of type IModelObject
	# The method Exemplar is actually a property, but must be used as a method to correctly pass the arguments
	def Exemplar(self, Index1=defaultNamedNotOptArg, Index2=defaultNamedNotOptArg):
		'ѕолучить экземпл€р по индексу (или индексам).'
		ret = self._oleobj_.InvokeTypes(11, LCID, 2, (9, 0), ((3, 1), (3, 1)),Index1
			, Index2)
		if ret is not None:
			ret = Dispatch(ret, 'Exemplar', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def GetBaseExemplarPlacement(self, Index1=pythoncom.Missing, Index2=pythoncom.Missing):
		'ѕолучить положение базового экземпл€ра в массиве.'
		return self._ApplyTypes_(111, 1, (11, 0), ((16387, 2), (16387, 2)), 'GetBaseExemplarPlacement', None,Index1
			, Index2)

	def GetExemplarsCounts(self, Count1=pythoncom.Missing, Count2=pythoncom.Missing):
		'ѕолучить количество экземпл€ров.'
		return self._ApplyTypes_(12, 1, (11, 0), ((16387, 2), (16387, 2)), 'GetExemplarsCounts', None,Count1
			, Count2)

	def IsInitialObject(self, Object=defaultNamedNotOptArg):
		'ѕроверка - €вл€етс€ ли объект исходным дл€ массива.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((9, 1),),Object
			)

	def IsSuitableObject(self, Object=defaultNamedNotOptArg):
		'ѕроверка пригодности объекта дл€ операции.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), ((9, 1),),Object
			)

	def SetBaseExemplarPlacement(self, Index1=defaultNamedNotOptArg, Index2=defaultNamedNotOptArg):
		'«адать положение базового экземпл€ра в массиве.'
		return self._oleobj_.InvokeTypes(110, LCID, 1, (11, 0), ((3, 1), (3, 1)),Index1
			, Index2)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Axis' returns object of type 'IModelObject'
		"Axis": (101, 2, (9, 0), (), "Axis", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'BasePoint' returns object of type 'IModelObject'
		"BasePoint": (10, 2, (9, 0), (), "BasePoint", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"BasePointType": (9, 2, (3, 0), (), "BasePointType", None),
		"BoundaryInstancesStepFactor1": (103, 2, (11, 0), (), "BoundaryInstancesStepFactor1", None),
		"BoundaryInstancesStepFactor2": (106, 2, (11, 0), (), "BoundaryInstancesStepFactor2", None),
		"BuildingType": (112, 2, (3, 0), (), "BuildingType", None),
		"Count1": (104, 2, (3, 0), (), "Count1", None),
		"Count2": (107, 2, (3, 0), (), "Count2", None),
		"GeometryPattern": (8, 2, (11, 0), (), "GeometryPattern", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"InitialObjects": (1, 2, (12, 0), (), "InitialObjects", None),
		"InstanceDeletedIndexes": (2, 2, (12, 0), (), "InstanceDeletedIndexes", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"ReverseDirection": (109, 2, (11, 0), (), "ReverseDirection", None),
		"SaveInitialOrientation": (108, 2, (11, 0), (), "SaveInitialOrientation", None),
		"Step1": (102, 2, (5, 0), (), "Step1", None),
		"Step2": (105, 2, (5, 0), (), "Step2", None),
		"StepByAxis": (113, 2, (5, 0), (), "StepByAxis", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Axis": ((101, LCID, 4, 0),()),
		"BasePoint": ((10, LCID, 4, 0),()),
		"BasePointType": ((9, LCID, 4, 0),()),
		"BoundaryInstancesStepFactor1": ((103, LCID, 4, 0),()),
		"BoundaryInstancesStepFactor2": ((106, LCID, 4, 0),()),
		"BuildingType": ((112, LCID, 4, 0),()),
		"Count1": ((104, LCID, 4, 0),()),
		"Count2": ((107, LCID, 4, 0),()),
		"GeometryPattern": ((8, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"InitialObjects": ((1, LCID, 4, 0),()),
		"InstanceDeletedIndexes": ((2, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"ReverseDirection": ((109, LCID, 4, 0),()),
		"SaveInitialOrientation": ((108, LCID, 4, 0),()),
		"Step1": ((102, LCID, 4, 0),()),
		"Step2": ((105, LCID, 4, 0),()),
		"StepByAxis": ((113, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICircularsCentries(DispatchBaseClass):
	' оллекци€ круговых сеток центров.'
	CLSID = IID('{1F7ED8F6-85DA-4B32-9306-31E3DABA3F84}')
	coclass_clsid = IID('{412F4305-E302-4870-863D-99015F6F0896}')

	# Result is of type ICircularCentres
	def Add(self, BaseObjects=defaultNamedNotOptArg, AutoFindOtherObjects=defaultNamedNotOptArg, Closed=defaultNamedNotOptArg, WithCenter=defaultNamedNotOptArg):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((12, 1), (11, 1), (11, 1), (11, 1)),BaseObjects
			, AutoFindOtherObjects, Closed, WithCenter)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{43812A86-37CD-4C6C-AE86-78576EC7E834}')
		return ret

	# Result is of type ICircularCentres
	def AddByPoint(self, X0=defaultNamedNotOptArg, Y0=defaultNamedNotOptArg, BaseObjects=defaultNamedNotOptArg, AutoFindOtherObjects=defaultNamedNotOptArg
			, Closed=defaultNamedNotOptArg, WithCenter=defaultNamedNotOptArg):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(3, LCID, 1, (9, 0), ((5, 1), (5, 1), (12, 1), (11, 1), (11, 1), (11, 1)),X0
			, Y0, BaseObjects, AutoFindOtherObjects, Closed, WithCenter
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddByPoint', '{43812A86-37CD-4C6C-AE86-78576EC7E834}')
		return ret

	# Result is of type ICircularCentres
	# The method CircularCentres is actually a property, but must be used as a method to correctly pass the arguments
	def CircularCentres(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу или по имени.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'CircularCentres', '{43812A86-37CD-4C6C-AE86-78576EC7E834}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ICloudPointsSurface(DispatchBaseClass):
	'ѕоверхность по пласту (облаку) точек.'
	CLSID = IID('{F820F8C4-9C93-4513-8BBD-CC028DAAE41D}')
	coclass_clsid = IID('{43F3CA73-2015-4FB4-82C1-B25A9FA92310}')

	# Result is of type IKompasAPIObject
	def AddPoint(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg, PVal=defaultNamedNotOptArg
			, AssociationObject=defaultNamedNotOptArg):
		'ƒобавить точку.'
		ret = self._oleobj_.InvokeTypes(7, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1), (3, 1), (9, 1)),X
			, Y, Z, PVal, AssociationObject)
		if ret is not None:
			ret = Dispatch(ret, 'AddPoint', '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')
		return ret

	def AddPoints(self, Points=defaultNamedNotOptArg):
		'ƒобавить точки.'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (11, 0), ((12, 1),),Points
			)

	# Result is of type IModelObject
	# The method AssociationObject is actually a property, but must be used as a method to correctly pass the arguments
	def AssociationObject(self, Index=defaultNamedNotOptArg):
		'”становить опорный объект дл€ вершины.'
		ret = self._oleobj_.InvokeTypes(11, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'AssociationObject', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def ClearPoints(self):
		'ќчистить список р€дов точек.'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (11, 0), (),)

	def DeletePoint(self, Index=defaultNamedNotOptArg):
		'”далить точку.'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (11, 0), ((3, 1),),Index
			)

	def GetPoint(self, Index=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'ѕараметры точки.'
		return self._ApplyTypes_(15, 1, (11, 0), ((3, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetPoint', None,Index
			, X, Y, Z)

	# Result is of type IKompasAPIObject
	# The method PointParameters is actually a property, but must be used as a method to correctly pass the arguments
	def PointParameters(self, Index=defaultNamedNotOptArg):
		'»нтерфейс параметров точки поверхности.'
		ret = self._oleobj_.InvokeTypes(10, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'PointParameters', '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')
		return ret

	# The method PointType is actually a property, but must be used as a method to correctly pass the arguments
	def PointType(self, Index=defaultNamedNotOptArg):
		'“ип параметров построени€ точки поверхности.'
		return self._oleobj_.InvokeTypes(9, LCID, 2, (3, 0), ((3, 1),),Index
			)

	# The method SetAssociationObject is actually a property, but must be used as a method to correctly pass the arguments
	def SetAssociationObject(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'”становить опорный объект дл€ вершины.'
		return self._oleobj_.InvokeTypes(11, LCID, 4, (24, 0), ((3, 1), (9, 1)),Index
			, arg1)

	def SetPoint(self, Index=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg):
		'ѕараметры точки.'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (11, 0), ((3, 1), (5, 1), (5, 1), (5, 1)),Index
			, X, Y, Z)

	# The method SetPointType is actually a property, but must be used as a method to correctly pass the arguments
	def SetPointType(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'“ип параметров построени€ точки поверхности.'
		return self._oleobj_.InvokeTypes(9, LCID, 4, (24, 0), ((3, 1), (3, 1)),Index
			, arg1)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"BuildingType": (1, 2, (3, 0), (), "BuildingType", None),
		"CheckSelfIntersection": (12, 2, (11, 0), (), "CheckSelfIntersection", None),
		# Method 'CloudLCS' returns object of type 'ILocalCoordinateSystem'
		"CloudLCS": (5, 2, (9, 0), (), "CloudLCS", '{BA6395F5-3506-4483-8864-4EEC220AF316}'),
		"CloudType": (4, 2, (3, 0), (), "CloudType", None),
		"Degree": (3, 2, (3, 0), (), "Degree", None),
		"FixedPosition": (6, 2, (11, 0), (), "FixedPosition", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Points": (2, 2, (12, 0), (), "Points", None),
		"PointsCount": (8, 2, (3, 0), (), "PointsCount", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"BuildingType": ((1, LCID, 4, 0),()),
		"CheckSelfIntersection": ((12, LCID, 4, 0),()),
		"CloudLCS": ((5, LCID, 4, 0),()),
		"CloudType": ((4, LCID, 4, 0),()),
		"Degree": ((3, LCID, 4, 0),()),
		"FixedPosition": ((6, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Points": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICloudPointsSurfaces(DispatchBaseClass):
	' оллекци€ поверхностей по пласту(облаку) точек.'
	CLSID = IID('{6CA7CE7A-12C8-4103-ACC1-11001DD1B01D}')
	coclass_clsid = IID('{9860A4F8-58DC-4285-B1B0-5EB539D2A6CA}')

	# Result is of type ICloudPointsSurface
	def Add(self):
		'ƒобавить новый элемент.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{F820F8C4-9C93-4513-8BBD-CC028DAAE41D}')
		return ret

	# Result is of type ICloudPointsSurface
	# The method CloudPointsSurface is actually a property, but must be used as a method to correctly pass the arguments
	def CloudPointsSurface(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'CloudPointsSurface', '{F820F8C4-9C93-4513-8BBD-CC028DAAE41D}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type ICloudPointsSurface
	def Load(self, FileName=defaultNamedNotOptArg):
		'ѕрочитать из файла.'
		ret = self._oleobj_.InvokeTypes(3, LCID, 1, (9, 0), ((8, 1),),FileName
			)
		if ret is not None:
			ret = Dispatch(ret, 'Load', '{F820F8C4-9C93-4513-8BBD-CC028DAAE41D}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ICollectionGeometry(DispatchBaseClass):
	' оллекци€ геометрии.'
	CLSID = IID('{CC78F834-4A97-4F69-9207-215308F0ABB0}')
	coclass_clsid = IID('{01D8A252-C3A1-45EA-BC92-0E2B6258EDF5}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Geometry": (1, 2, (12, 0), (), "Geometry", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Geometry": ((1, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICollectionsGeometry(DispatchBaseClass):
	' оллекции геометрии.'
	CLSID = IID('{F1B04DDA-FAAC-4D51-9567-304CFE3EC094}')
	coclass_clsid = IID('{55556EA2-4975-4C27-97BB-A78C08D98E2C}')

	# Result is of type ICollectionGeometry
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{CC78F834-4A97-4F69-9207-215308F0ABB0}')
		return ret

	# Result is of type ICollectionGeometry
	# The method CollectionGeometry is actually a property, but must be used as a method to correctly pass the arguments
	def CollectionGeometry(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу или по имени.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'CollectionGeometry', '{CC78F834-4A97-4F69-9207-215308F0ABB0}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IColorParam7(DispatchBaseClass):
	'—войства цвета объекта.'
	CLSID = IID('{BE6A80EE-38FE-4432-8331-BF864830761C}')
	coclass_clsid = None

	def GetAdvancedColor(self, Color=pythoncom.Missing, Ambient=pythoncom.Missing, Diffuse=pythoncom.Missing, Specularity=pythoncom.Missing
			, Shininess=pythoncom.Missing, Transparency=pythoncom.Missing, Emission=pythoncom.Missing):
		'ѕолучить параметры цвета объекта.'
		return self._ApplyTypes_(6009, 1, (11, 0), ((16387, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2)), 'GetAdvancedColor', None,Color
			, Ambient, Diffuse, Specularity, Shininess, Transparency
			, Emission)

	def SetAdvancedColor(self, Color=defaultNamedNotOptArg, Ambient=defaultNamedNotOptArg, Diffuse=defaultNamedNotOptArg, Specularity=defaultNamedNotOptArg
			, Shininess=defaultNamedNotOptArg, Transparency=defaultNamedNotOptArg, Emission=defaultNamedNotOptArg):
		'”становить параметры цвета объекта.'
		return self._oleobj_.InvokeTypes(6010, LCID, 1, (11, 0), ((3, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1)),Color
			, Ambient, Diffuse, Specularity, Shininess, Transparency
			, Emission)

	_prop_map_get_ = {
		"Ambient": (6003, 2, (5, 0), (), "Ambient", None),
		"Color": (6002, 2, (3, 0), (), "Color", None),
		"Diffuse": (6004, 2, (5, 0), (), "Diffuse", None),
		"Emission": (6008, 2, (5, 0), (), "Emission", None),
		"Shininess": (6006, 2, (5, 0), (), "Shininess", None),
		"Specularity": (6005, 2, (5, 0), (), "Specularity", None),
		"Transparency": (6007, 2, (5, 0), (), "Transparency", None),
		"UseColor": (6001, 2, (3, 0), (), "UseColor", None),
	}
	_prop_map_put_ = {
		"Ambient": ((6003, LCID, 4, 0),()),
		"Color": ((6002, LCID, 4, 0),()),
		"Diffuse": ((6004, LCID, 4, 0),()),
		"Emission": ((6008, LCID, 4, 0),()),
		"Shininess": ((6006, LCID, 4, 0),()),
		"Specularity": ((6005, LCID, 4, 0),()),
		"Transparency": ((6007, LCID, 4, 0),()),
		"UseColor": ((6001, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IColouring(DispatchBaseClass):
	'«аливка.'
	CLSID = IID('{1E0EF1B5-08D3-40B6-893E-3EE7E4FAEC98}')
	coclass_clsid = IID('{E51E0641-4F58-48A1-83D8-F77355DB4E5E}')

	def AddGradation(self, Position=defaultNamedNotOptArg, Color=defaultNamedNotOptArg, Transparency=defaultNamedNotOptArg, Interpolation=defaultNamedNotOptArg):
		'ƒобавить переход цвета.'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (11, 1)),Position
			, Color, Transparency, Interpolation)

	def ClearGradations(self):
		'”далить промежуточные переходы цвета.'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (11, 0), (),)

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def DeleteGradation(self, Index=defaultNamedNotOptArg):
		'”далить переход цвета по индексу.'
		return self._oleobj_.InvokeTypes(18, LCID, 1, (11, 0), ((3, 1),),Index
			)

	def FindPosition(self, Position=defaultNamedNotOptArg):
		'ѕолучить индекс позиции.'
		return self._oleobj_.InvokeTypes(19, LCID, 1, (3, 0), ((3, 1),),Position
			)

	def GetGradation(self, Index=defaultNamedNotOptArg, Position=pythoncom.Missing, Color=pythoncom.Missing, Transparency=pythoncom.Missing
			, Interpolation=pythoncom.Missing):
		'ѕолучить параметры перехода цвета по индексу.'
		return self._ApplyTypes_(16, 1, (11, 0), ((3, 1), (16387, 2), (16387, 2), (16387, 2), (16395, 2)), 'GetGradation', None,Index
			, Position, Color, Transparency, Interpolation)

	def GetGradations(self, Positions=pythoncom.Missing, Colors=pythoncom.Missing, Transparences=pythoncom.Missing, Interpolations=pythoncom.Missing):
		'ѕолучить параметры переходов цвета.'
		return self._ApplyTypes_(11, 1, (11, 0), ((16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetGradations', None,Positions
			, Colors, Transparences, Interpolations)

	def SetGradation(self, Index=defaultNamedNotOptArg, Position=defaultNamedNotOptArg, Color=defaultNamedNotOptArg, Transparency=defaultNamedNotOptArg
			, Interpolation=defaultNamedNotOptArg):
		'”становить параметры перехода цвета по индексу.'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (3, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (11, 1)),Index
			, Position, Color, Transparency, Interpolation)

	def SetGradations(self, Positions=defaultNamedNotOptArg, Colors=defaultNamedNotOptArg, Transparences=defaultNamedNotOptArg, Interpolations=defaultNamedNotOptArg):
		'”становить параметры переходов цвета.'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (11, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),Positions
			, Colors, Transparences, Interpolations)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Color1": (2, 2, (3, 0), (), "Color1", None),
		"Color2": (3, 2, (3, 0), (), "Color2", None),
		"ColouringType": (1, 2, (3, 0), (), "ColouringType", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"GradationsCount": (15, 2, (3, 0), (), "GradationsCount", None),
		"GradientAngle": (8, 2, (5, 0), (), "GradientAngle", None),
		"GradientCount": (7, 2, (3, 0), (), "GradientCount", None),
		"GradientType": (6, 2, (11, 0), (), "GradientType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Transparency1": (4, 2, (3, 0), (), "Transparency1", None),
		"Transparency2": (5, 2, (3, 0), (), "Transparency2", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"Xc": (9, 2, (5, 0), (), "Xc", None),
		"Yc": (10, 2, (5, 0), (), "Yc", None),
	}
	_prop_map_put_ = {
		"Color1": ((2, LCID, 4, 0),()),
		"Color2": ((3, LCID, 4, 0),()),
		"ColouringType": ((1, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"GradientAngle": ((8, LCID, 4, 0),()),
		"GradientCount": ((7, LCID, 4, 0),()),
		"GradientType": ((6, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"Transparency1": ((4, LCID, 4, 0),()),
		"Transparency2": ((5, LCID, 4, 0),()),
		"Xc": ((9, LCID, 4, 0),()),
		"Yc": ((10, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IColourings(DispatchBaseClass):
	' оллекци€ заливок.'
	CLSID = IID('{60437DAD-2688-4146-B765-3FCC55C39D0F}')
	coclass_clsid = IID('{CAA76116-56AD-4466-9951-C16C10D43CE0}')

	# Result is of type IColouring
	def Add(self):
		'—оздать заливку (добавить осевую линию в коллекцию).'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{1E0EF1B5-08D3-40B6-893E-3EE7E4FAEC98}')
		return ret

	# Result is of type IColouring
	# The method Colouring is actually a property, but must be used as a method to correctly pass the arguments
	def Colouring(self, Index=defaultNamedNotOptArg):
		'¬озвращает заливку, заданную по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Colouring', '{1E0EF1B5-08D3-40B6-893E-3EE7E4FAEC98}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IColumnInfo(DispatchBaseClass):
	'ѕараметры столбца табличного атрибута.'
	CLSID = IID('{3FDE0F44-4459-49F3-A012-E64F9BFA454D}')
	coclass_clsid = IID('{A92D056B-1D1F-4C2B-97E9-77A5F837A68A}')

	# Result is of type IColumnInfo
	def AddRecordColumn(self, Index=defaultNamedNotOptArg, Type=defaultNamedNotOptArg, Name=defaultNamedNotOptArg):
		'ƒобавить колонку.'
		ret = self._oleobj_.InvokeTypes(9, LCID, 1, (9, 0), ((3, 1), (3, 1), (8, 1)),Index
			, Type, Name)
		if ret is not None:
			ret = Dispatch(ret, 'AddRecordColumn', '{3FDE0F44-4459-49F3-A012-E64F9BFA454D}')
		return ret

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), (),)

	# Result is of type IColumnInfo
	# The method RecordColumnInfo is actually a property, but must be used as a method to correctly pass the arguments
	def RecordColumnInfo(self, Index=defaultNamedNotOptArg):
		'ѕолучить информацию о столбце атрибута.'
		ret = self._oleobj_.InvokeTypes(8, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'RecordColumnInfo', '{3FDE0F44-4459-49F3-A012-E64F9BFA454D}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Caption": (1, 2, (8, 0), (), "Caption", None),
		"ColType": (2, 2, (3, 0), (), "ColType", None),
		"DefValue": (4, 2, (12, 0), (), "DefValue", None),
		"Key": (3, 2, (3, 0), (), "Key", None),
		"ListValue": (5, 2, (11, 0), (), "ListValue", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Range": (7, 2, (12, 0), (), "Range", None),
		"RecordColumnsCount": (11, 2, (3, 0), (), "RecordColumnsCount", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"SortListValue": (6, 2, (11, 0), (), "SortListValue", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"Caption": ((1, LCID, 4, 0),()),
		"ColType": ((2, LCID, 4, 0),()),
		"DefValue": ((4, LCID, 4, 0),()),
		"Key": ((3, LCID, 4, 0),()),
		"ListValue": ((5, LCID, 4, 0),()),
		"Range": ((7, LCID, 4, 0),()),
		"SortListValue": ((6, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IConditionIntersect(DispatchBaseClass):
	'”словное пересечение.'
	CLSID = IID('{8E844A00-FC0A-47FA-9167-37BE6C77D032}')
	coclass_clsid = IID('{F7458066-14B5-4945-ACCC-1199F98AAFDA}')

	# Result is of type IDrawingObject
	# The method AssociationObject is actually a property, but must be used as a method to correctly pass the arguments
	def AssociationObject(self, First=defaultNamedNotOptArg):
		'ѕолучить кривую.'
		ret = self._oleobj_.InvokeTypes(10, LCID, 2, (9, 0), ((11, 1),),First
			)
		if ret is not None:
			ret = Dispatch(ret, 'AssociationObject', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def GetCurvePoint(self, FirstCurve=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing):
		'ѕолучить точку на кривой.'
		return self._ApplyTypes_(2, 1, (11, 0), ((11, 1), (16389, 2), (16389, 2)), 'GetCurvePoint', None,FirstCurve
			, X, Y)

	def GetIntersectPoint(self, X=pythoncom.Missing, Y=pythoncom.Missing):
		'ѕолучить точку пересечени€.'
		return self._ApplyTypes_(1, 1, (11, 0), ((16389, 2), (16389, 2)), 'GetIntersectPoint', None,X
			, Y)

	def InitByObjects(self, Curve1=defaultNamedNotOptArg, Curve2=defaultNamedNotOptArg, X1=defaultNamedNotOptArg, Y1=defaultNamedNotOptArg
			, X2=defaultNamedNotOptArg, Y2=defaultNamedNotOptArg, RemoteLine1Visible=defaultNamedNotOptArg, RemoteLine2Visible=defaultNamedNotOptArg):
		'»нициализаци€ по объектам.'
		return self._ApplyTypes_(9, 1, (11, 0), ((9, 1), (9, 1), (16389, 3), (16389, 3), (16389, 3), (16389, 3), (11, 1), (11, 1)), 'InitByObjects', None,Curve1
			, Curve2, X1, Y1, X2, Y2
			, RemoteLine1Visible, RemoteLine2Visible)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"Gap": (5, 2, (11, 0), (), "Gap", None),
		"GapValue": (6, 2, (5, 0), (), "GapValue", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"PointStyle": (8, 2, (3, 0), (), "PointStyle", None),
		"PointVisible": (7, 2, (11, 0), (), "PointVisible", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"RemoteLine1Visible": (3, 2, (11, 0), (), "RemoteLine1Visible", None),
		"RemoteLine2Visible": (4, 2, (11, 0), (), "RemoteLine2Visible", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"Gap": ((5, LCID, 4, 0),()),
		"GapValue": ((6, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"PointStyle": ((8, LCID, 4, 0),()),
		"PointVisible": ((7, LCID, 4, 0),()),
		"RemoteLine1Visible": ((3, LCID, 4, 0),()),
		"RemoteLine2Visible": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IConditionIntersects(DispatchBaseClass):
	' оллекци€ условных пересечений.'
	CLSID = IID('{EDB023F6-0862-4CB3-AF81-62D784F455B1}')
	coclass_clsid = IID('{0031BFFF-6A43-44B4-8E0B-0DA3984CB9ED}')

	# Result is of type IConditionIntersect
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{8E844A00-FC0A-47FA-9167-37BE6C77D032}')
		return ret

	# Result is of type IConditionIntersect
	# The method ConditionIntersect is actually a property, but must be used as a method to correctly pass the arguments
	def ConditionIntersect(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу или по имени.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'ConditionIntersect', '{8E844A00-FC0A-47FA-9167-37BE6C77D032}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IConicCurve(DispatchBaseClass):
	' оническа€ крива€.'
	CLSID = IID('{83312BFE-F373-4994-B4B8-EA989FAD0E3C}')
	coclass_clsid = IID('{98CF3E5E-0548-4616-8BB9-28C1A1092955}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def GetPoint(self, PointIndex=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing):
		'ѕолучить точку пересечени€.'
		return self._ApplyTypes_(1, 1, (11, 0), ((3, 1), (16389, 2), (16389, 2)), 'GetPoint', None,PointIndex
			, X, Y)

	def SetPoint(self, PointIndex=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg):
		'”становить точку пересечени€.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), ((3, 1), (5, 1), (5, 1)),PointIndex
			, X, Y)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle1": (5, 2, (5, 0), (), "Angle1", None),
		"Angle2": (6, 2, (5, 0), (), "Angle2", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Coefficient": (4, 2, (5, 0), (), "Coefficient", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"Height": (3, 2, (5, 0), (), "Height", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Style": (7, 2, (3, 0), (), "Style", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Angle1": ((5, LCID, 4, 0),()),
		"Angle2": ((6, LCID, 4, 0),()),
		"Coefficient": ((4, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"Height": ((3, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"Style": ((7, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IConicCurves(DispatchBaseClass):
	' оллекци€ конических кривых.'
	CLSID = IID('{D496F149-AB99-402B-B3D2-942B26069753}')
	coclass_clsid = IID('{4C5033FF-6870-45B1-A995-733578C23553}')

	# Result is of type IConicCurve
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{83312BFE-F373-4994-B4B8-EA989FAD0E3C}')
		return ret

	# Result is of type IConicCurve
	# The method ConicCurve is actually a property, but must be used as a method to correctly pass the arguments
	def ConicCurve(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу или по имени.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'ConicCurve', '{83312BFE-F373-4994-B4B8-EA989FAD0E3C}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IConicHoleParameters(DispatchBaseClass):
	' оническое отверстие.'
	CLSID = IID('{9110F9B1-83F0-4412-B2FE-2B1F416A0932}')
	coclass_clsid = IID('{D3CA313F-8817-48B7-892D-6D7DFE1E407B}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ConicAngle": (3, 2, (5, 0), (), "ConicAngle", None),
		"ConicDiameter": (2, 2, (5, 0), (), "ConicDiameter", None),
		"ConicType": (1, 2, (3, 0), (), "ConicType", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"ConicAngle": ((3, LCID, 4, 0),()),
		"ConicDiameter": ((2, LCID, 4, 0),()),
		"ConicType": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IConicSpiral3D(DispatchBaseClass):
	' оническа€ спираль.'
	CLSID = IID('{086DF000-A37D-4296-93FB-2129D0B1DF13}')
	coclass_clsid = IID('{BD740853-3960-46D9-8DAB-1C490E699B6A}')

	def GetBasePoint(self, X=pythoncom.Missing, Y=pythoncom.Missing):
		'ѕолучить координаты точки прив€зки спирали на базовой плоскости (точку пересечени€ оси спирали с базовой плоскостью).'
		return self._ApplyTypes_(5, 1, (11, 0), ((16389, 2), (16389, 2)), 'GetBasePoint', None,X
			, Y)

	def SetBasePoint(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg):
		'”становить координаты точки прив€зки спирали на базовой плоскости (точку пересечени€ оси спирали с базовой плоскостью).'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), ((5, 1), (5, 1)),X
			, Y)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BasePlane' returns object of type 'IModelObject'
		"BasePlane": (4, 2, (9, 0), (), "BasePlane", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"BuildingDirection": (8, 2, (11, 0), (), "BuildingDirection", None),
		"BuildingType": (7, 2, (3, 0), (), "BuildingType", None),
		"Diameter1": (101, 2, (5, 0), (), "Diameter1", None),
		"Diameter2": (104, 2, (5, 0), (), "Diameter2", None),
		# Method 'DiameterBaseObject1' returns object of type 'IModelObject'
		"DiameterBaseObject1": (103, 2, (9, 0), (), "DiameterBaseObject1", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'DiameterBaseObject2' returns object of type 'IModelObject'
		"DiameterBaseObject2": (106, 2, (9, 0), (), "DiameterBaseObject2", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"DiameterType1": (102, 2, (3, 0), (), "DiameterType1", None),
		"DiameterType2": (105, 2, (3, 0), (), "DiameterType2", None),
		"GeneratrixTiltAngle": (107, 2, (5, 0), (), "GeneratrixTiltAngle", None),
		"GeneratrixTiltAngleHow": (108, 2, (11, 0), (), "GeneratrixTiltAngleHow", None),
		"Height": (10, 2, (5, 0), (), "Height", None),
		# Method 'HeightBaseObject' returns object of type 'IModelObject'
		"HeightBaseObject": (11, 2, (9, 0), (), "HeightBaseObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"HeightCorrection": (12, 2, (5, 0), (), "HeightCorrection", None),
		"HeightCorrectionType": (15, 2, (11, 0), (), "HeightCorrectionType", None),
		"HeightType": (9, 2, (3, 0), (), "HeightType", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'Sketch' returns object of type 'ISketch'
		"Sketch": (14, 2, (9, 0), (), "Sketch", '{E6BBF50D-8401-4FB3-A6B6-153D3F447255}'),
		"Step": (2, 2, (5, 0), (), "Step", None),
		"TurnDirection": (3, 2, (11, 0), (), "TurnDirection", None),
		"TurningAngle": (13, 2, (5, 0), (), "TurningAngle", None),
		"TurnsCount": (1, 2, (5, 0), (), "TurnsCount", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"BasePlane": ((4, LCID, 4, 0),()),
		"BuildingDirection": ((8, LCID, 4, 0),()),
		"BuildingType": ((7, LCID, 4, 0),()),
		"Diameter1": ((101, LCID, 4, 0),()),
		"Diameter2": ((104, LCID, 4, 0),()),
		"DiameterBaseObject1": ((103, LCID, 4, 0),()),
		"DiameterBaseObject2": ((106, LCID, 4, 0),()),
		"DiameterType1": ((102, LCID, 4, 0),()),
		"DiameterType2": ((105, LCID, 4, 0),()),
		"GeneratrixTiltAngle": ((107, LCID, 4, 0),()),
		"GeneratrixTiltAngleHow": ((108, LCID, 4, 0),()),
		"Height": ((10, LCID, 4, 0),()),
		"HeightBaseObject": ((11, LCID, 4, 0),()),
		"HeightCorrection": ((12, LCID, 4, 0),()),
		"HeightCorrectionType": ((15, LCID, 4, 0),()),
		"HeightType": ((9, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Step": ((2, LCID, 4, 0),()),
		"TurnDirection": ((3, LCID, 4, 0),()),
		"TurningAngle": ((13, LCID, 4, 0),()),
		"TurnsCount": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IConjunctivePoint(DispatchBaseClass):
	'ѕрисоединительна€ точка.'
	CLSID = IID('{BC7AD518-9599-490B-9E2B-9711FD9B8D4C}')
	coclass_clsid = IID('{4A7A9FC8-85D7-4B62-99BB-7A303F1D6E98}')

	# Result is of type IModelObject
	# The method Axis is actually a property, but must be used as a method to correctly pass the arguments
	def Axis(self, Val=defaultNamedNotOptArg):
		'ѕолучить ребро присоединительной точки.'
		ret = self._oleobj_.InvokeTypes(107, LCID, 2, (9, 0), ((3, 1),),Val
			)
		if ret is not None:
			ret = Dispatch(ret, 'Axis', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def GetVector(self, Axis=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'ѕолучить вектора направлений главных осей.'
		return self._ApplyTypes_(111, 1, (11, 0), ((3, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetVector', None,Axis
			, X, Y, Z)

	def InitByMatrix3D(self, mtr=defaultNamedNotOptArg):
		'”становить систему координат по матрице SAFEARRAY double (VT_ARRAY | VT_R8).'
		return self._oleobj_.InvokeTypes(110, LCID, 1, (11, 0), ((12, 1),),mtr
			)

	def SetAssociationObject(self, NewVal=defaultNamedNotOptArg):
		'”становить опорный объект.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((9, 1),),NewVal
			)

	def SetDirectionObject1(self, NewVal=defaultNamedNotOptArg):
		'”становить направл€ющий объект 1.'
		return self._oleobj_.InvokeTypes(101, LCID, 1, (11, 0), ((9, 1),),NewVal
			)

	def SetDirectionObject2(self, NewVal=defaultNamedNotOptArg):
		'”становить направл€ющий объект 2.'
		return self._oleobj_.InvokeTypes(103, LCID, 1, (11, 0), ((9, 1),),NewVal
			)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	# Result is of type IVector3D
	# The method Vector3D is actually a property, but must be used as a method to correctly pass the arguments
	def Vector3D(self, First=defaultNamedNotOptArg):
		'ѕолучить параметры вектора.'
		ret = self._oleobj_.InvokeTypes(108, LCID, 2, (9, 0), ((11, 1),),First
			)
		if ret is not None:
			ret = Dispatch(ret, 'Vector3D', '{D51A4DCF-627D-44F5-89BA-46EF2449A212}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'AssociationObject' returns object of type 'IModelObject'
		"AssociationObject": (5, 2, (9, 0), (), "AssociationObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"BuildingType": (109, 2, (3, 0), (), "BuildingType", None),
		"Direction1": (105, 2, (11, 0), (), "Direction1", None),
		"Direction2": (106, 2, (11, 0), (), "Direction2", None),
		# Method 'DirectionObject1' returns object of type 'IModelObject'
		"DirectionObject1": (102, 2, (9, 0), (), "DirectionObject1", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'DirectionObject2' returns object of type 'IModelObject'
		"DirectionObject2": (104, 2, (9, 0), (), "DirectionObject2", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		"ParameterType": (7, 2, (3, 0), (), "ParameterType", None),
		# Method 'Parameters' returns object of type 'IKompasAPIObject'
		"Parameters": (8, 2, (9, 0), (), "Parameters", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Symbol": (6, 2, (3, 0), (), "Symbol", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"UseDirection2": (112, 2, (11, 0), (), "UseDirection2", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
		"X": (1, 2, (5, 0), (), "X", None),
		"Y": (2, 2, (5, 0), (), "Y", None),
		"Z": (3, 2, (5, 0), (), "Z", None),
	}
	_prop_map_put_ = {
		"BuildingType": ((109, LCID, 4, 0),()),
		"Direction1": ((105, LCID, 4, 0),()),
		"Direction2": ((106, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"ParameterType": ((7, LCID, 4, 0),()),
		"Symbol": ((6, LCID, 4, 0),()),
		"UseDirection2": ((112, LCID, 4, 0),()),
		"X": ((1, LCID, 4, 0),()),
		"Y": ((2, LCID, 4, 0),()),
		"Z": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IConjunctivePoints(DispatchBaseClass):
	" оллекци€ элементов 'ѕрисоединительна€ точка'."
	CLSID = IID('{4DF343A0-8744-429D-A605-0EEABB7B5F23}')
	coclass_clsid = IID('{C5DDAF9B-32B7-4552-ADAD-F31D8706ED6B}')

	# Result is of type IConjunctivePoint
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{BC7AD518-9599-490B-9E2B-9711FD9B8D4C}')
		return ret

	# Result is of type IConjunctivePoint
	# The method ConjunctivePoint is actually a property, but must be used as a method to correctly pass the arguments
	def ConjunctivePoint(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'ConjunctivePoint', '{BC7AD518-9599-490B-9E2B-9711FD9B8D4C}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IConnectCurve(DispatchBaseClass):
	'ќпераци€ соединени€ кривых.'
	CLSID = IID('{C3BBE1B9-976C-45EF-805F-DDA2BA801567}')
	coclass_clsid = IID('{DC434F74-5BC2-4AE7-93E1-E9FC5670E028}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Curve1' returns object of type 'IModelObject'
		"Curve1": (1, 2, (9, 0), (), "Curve1", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Curve1ConnectType": (3, 2, (3, 0), (), "Curve1ConnectType", None),
		"Curve1ConnectVertex": (5, 2, (11, 0), (), "Curve1ConnectVertex", None),
		# Method 'Curve2' returns object of type 'IModelObject'
		"Curve2": (2, 2, (9, 0), (), "Curve2", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Curve2ConnectType": (4, 2, (3, 0), (), "Curve2ConnectType", None),
		"Curve2ConnectVertex": (6, 2, (11, 0), (), "Curve2ConnectVertex", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Tension": (7, 2, (5, 0), (), "Tension", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Curve1": ((1, LCID, 4, 0),()),
		"Curve1ConnectType": ((3, LCID, 4, 0),()),
		"Curve1ConnectVertex": ((5, LCID, 4, 0),()),
		"Curve2": ((2, LCID, 4, 0),()),
		"Curve2ConnectType": ((4, LCID, 4, 0),()),
		"Curve2ConnectVertex": ((6, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Tension": ((7, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IConnectCurves(DispatchBaseClass):
	' оллекци€ ќпераций соединени€ кривых.'
	CLSID = IID('{2E869CEE-5432-48C8-B750-5DAC8B6094D6}')
	coclass_clsid = IID('{CDC3416D-E4FD-4C16-9ABC-3DB233FEEE76}')

	# Result is of type IConnectCurve
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{C3BBE1B9-976C-45EF-805F-DDA2BA801567}')
		return ret

	# Result is of type IConnectCurve
	# The method ConnectCurve is actually a property, but must be used as a method to correctly pass the arguments
	def ConnectCurve(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'ConnectCurve', '{C3BBE1B9-976C-45EF-805F-DDA2BA801567}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IContentDialogParam(DispatchBaseClass):
	'ѕараметры диалога с произвольным контентом.'
	CLSID = IID('{B9362883-C8EC-4603-A6AA-7F4703AAA9D9}')
	coclass_clsid = IID('{6AB4AFCD-EFD7-49FB-9FA2-0CBBAC094DE9}')

	def AddLeftSeparator(self):
		'ƒобавить разделитель в левую панель.'
		return self._oleobj_.InvokeTypes(20, LCID, 1, (11, 0), (),)

	def AddLeftToolButton(self, Header=defaultNamedNotOptArg, HeaderVisible=defaultNamedNotOptArg, CommandID=defaultNamedNotOptArg, IconId=defaultNamedNotOptArg
			, IconFont=defaultNamedNotOptArg, ButtonType=defaultNamedNotOptArg):
		'ƒобавить кнопку в левую панель.'
		return self._oleobj_.InvokeTypes(18, LCID, 1, (11, 0), ((8, 1), (11, 1), (3, 1), (3, 1), (8, 1), (3, 1)),Header
			, HeaderVisible, CommandID, IconId, IconFont, ButtonType
			)

	def AddRightSeparator(self):
		'ƒобавить разделитель в правую панель.'
		return self._oleobj_.InvokeTypes(21, LCID, 1, (11, 0), (),)

	def AddRightToolButton(self, Header=defaultNamedNotOptArg, HeaderVisible=defaultNamedNotOptArg, CommandID=defaultNamedNotOptArg, IconId=defaultNamedNotOptArg
			, IconFont=defaultNamedNotOptArg, ButtonType=defaultNamedNotOptArg):
		'ƒобавить кнопку в парвую панель.'
		return self._oleobj_.InvokeTypes(19, LCID, 1, (11, 0), ((8, 1), (11, 1), (3, 1), (3, 1), (8, 1), (3, 1)),Header
			, HeaderVisible, CommandID, IconId, IconFont, ButtonType
			)

	_prop_map_get_ = {
		"AdditionalButton": (7, 2, (8, 0), (), "AdditionalButton", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"CancelButton": (6, 2, (8, 0), (), "CancelButton", None),
		"CheckBoxChecked": (11, 2, (11, 0), (), "CheckBoxChecked", None),
		"CheckBoxTitle": (10, 2, (8, 0), (), "CheckBoxTitle", None),
		"Height": (13, 2, (5, 0), (), "Height", None),
		"HelpFileName": (9, 2, (8, 0), (), "HelpFileName", None),
		"HelpId": (8, 2, (3, 0), (), "HelpId", None),
		"MaxHeight": (17, 2, (5, 0), (), "MaxHeight", None),
		"MaxWidth": (16, 2, (5, 0), (), "MaxWidth", None),
		"MinHeight": (15, 2, (5, 0), (), "MinHeight", None),
		"MinWidth": (14, 2, (5, 0), (), "MinWidth", None),
		"NegativeButton": (5, 2, (8, 0), (), "NegativeButton", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"PositiveButton": (4, 2, (8, 0), (), "PositiveButton", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Resizable": (3, 2, (11, 0), (), "Resizable", None),
		"Title": (1, 2, (8, 0), (), "Title", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"UpperCaseTitle": (2, 2, (11, 0), (), "UpperCaseTitle", None),
		"Width": (12, 2, (5, 0), (), "Width", None),
	}
	_prop_map_put_ = {
		"AdditionalButton": ((7, LCID, 4, 0),()),
		"CancelButton": ((6, LCID, 4, 0),()),
		"CheckBoxChecked": ((11, LCID, 4, 0),()),
		"CheckBoxTitle": ((10, LCID, 4, 0),()),
		"Height": ((13, LCID, 4, 0),()),
		"HelpFileName": ((9, LCID, 4, 0),()),
		"HelpId": ((8, LCID, 4, 0),()),
		"MaxHeight": ((17, LCID, 4, 0),()),
		"MaxWidth": ((16, LCID, 4, 0),()),
		"MinHeight": ((15, LCID, 4, 0),()),
		"MinWidth": ((14, LCID, 4, 0),()),
		"NegativeButton": ((5, LCID, 4, 0),()),
		"PositiveButton": ((4, LCID, 4, 0),()),
		"Resizable": ((3, LCID, 4, 0),()),
		"Title": ((1, LCID, 4, 0),()),
		"UpperCaseTitle": ((2, LCID, 4, 0),()),
		"Width": ((12, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IContour(DispatchBaseClass):
	' онтур'
	CLSID = IID('{E79F5A53-F456-4996-B620-16B725F134FB}')
	coclass_clsid = IID('{12FABDF2-CAA4-4C8F-A3E6-A56DD90552B5}')

	# Result is of type IKompasAPIObject
	def AddSegment(self, Type=defaultNamedNotOptArg):
		'ƒобавить сегмент.'
		ret = self._oleobj_.InvokeTypes(2002, LCID, 1, (9, 0), ((3, 1),),Type
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddSegment', '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')
		return ret

	def Clear(self):
		'ќчистить контур'
		return self._oleobj_.InvokeTypes(2008, LCID, 1, (11, 0), (),)

	def CopyCurve(self, Curve=defaultNamedNotOptArg, DeleteSource=defaultNamedNotOptArg):
		'ƒобавить сегмент.'
		return self._oleobj_.InvokeTypes(2004, LCID, 1, (11, 0), ((9, 1), (11, 1)),Curve
			, DeleteSource)

	def CopySegments(self, Val=defaultNamedNotOptArg, DeleteSource=defaultNamedNotOptArg):
		"ќбъекты вида дл€ добавлени€ в контур в виде SAFEARRAY'€ DISPATCH - VT_ARRAY | VT_DISPATCH."
		return self._oleobj_.InvokeTypes(2007, LCID, 1, (11, 0), ((12, 1), (11, 1)),Val
			, DeleteSource)

	def RemoveContourGaps(self, Accuracy=defaultNamedNotOptArg, CanInsert=defaultNamedNotOptArg, CanReplace=defaultNamedNotOptArg):
		'”странить разрывы в контуре.'
		return self._oleobj_.InvokeTypes(2009, LCID, 1, (11, 0), ((5, 1), (11, 1), (11, 1)),Accuracy
			, CanInsert, CanReplace)

	# Result is of type IKompasAPIObject
	# The method Segment is actually a property, but must be used as a method to correctly pass the arguments
	def Segment(self, Index=defaultNamedNotOptArg):
		'ѕолучить сегмент.'
		ret = self._oleobj_.InvokeTypes(2003, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Segment', '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Closed": (2001, 2, (11, 0), (), "Closed", None),
		"Count": (2005, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"TmpObjects": (2006, 2, (12, 0), (), "TmpObjects", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"Closed": ((2001, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2005, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IContour3D(DispatchBaseClass):
	' онтур 3D.'
	CLSID = IID('{05FD7844-EA39-497D-B00B-7A1154830524}')
	coclass_clsid = IID('{375FD000-6094-4351-8E03-E2A2631DFBE0}')

	def AddEdge(self, Object=defaultNamedNotOptArg):
		'ƒобавить объект в контур.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), ((9, 1),),Object
			)

	def DelVarRadius(self, PointNum=defaultNamedNotOptArg):
		'”далить переменный радиус скруглени€.'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (11, 0), ((3, 1),),PointNum
			)

	def GetIntersectionPoint(self, PointNum=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'ѕолучить точку пересечени€ кривых.'
		return self._ApplyTypes_(14, 1, (11, 0), ((3, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetIntersectionPoint', None,PointNum
			, X, Y, Z)

	def RemoveEdge(self, Index=defaultNamedNotOptArg):
		'”далить объект из списка объектов контура.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), ((3, 1),),Index
			)

	# The method SetVarRadius is actually a property, but must be used as a method to correctly pass the arguments
	def SetVarRadius(self, PointNum=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ѕеременный радиус скруглени€.'
		return self._oleobj_.InvokeTypes(12, LCID, 4, (24, 0), ((3, 1), (5, 1)),PointNum
			, arg1)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	# The method VarRadius is actually a property, but must be used as a method to correctly pass the arguments
	def VarRadius(self, PointNum=defaultNamedNotOptArg):
		'ѕеременный радиус скруглени€.'
		return self._oleobj_.InvokeTypes(12, LCID, 2, (5, 0), ((3, 1),),PointNum
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"BuildingType": (9, 2, (3, 0), (), "BuildingType", None),
		"Contour3DType": (1, 2, (3, 0), (), "Contour3DType", None),
		"CutMode": (3, 2, (3, 0), (), "CutMode", None),
		"Edges": (2, 2, (12, 0), (), "Edges", None),
		"EdgesCount": (8, 2, (3, 0), (), "EdgesCount", None),
		"EdgesVisibility": (5, 2, (11, 0), (), "EdgesVisibility", None),
		# Method 'Equidistant' returns object of type 'IEquidistant3D'
		"Equidistant": (10, 2, (9, 0), (), "Equidistant", '{C25DDBF4-3CC1-467D-B996-E30ED4D529B6}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"PointsCount": (11, 2, (3, 0), (), "PointsCount", None),
		"Radius": (4, 2, (5, 0), (), "Radius", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"BuildingType": ((9, LCID, 4, 0),()),
		"Contour3DType": ((1, LCID, 4, 0),()),
		"CutMode": ((3, LCID, 4, 0),()),
		"Edges": ((2, LCID, 4, 0),()),
		"EdgesVisibility": ((5, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Radius": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IContourArc(DispatchBaseClass):
	'—егмент контура - дуга.'
	CLSID = IID('{ED4A6D97-4543-4842-B2C3-973FB0E90E87}')
	coclass_clsid = IID('{31450942-A67C-4459-B7EB-F1B900B100FD}')

	_prop_map_get_ = {
		"Angle1": (11, 2, (5, 0), (), "Angle1", None),
		"Angle2": (12, 2, (5, 0), (), "Angle2", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Curve2D' returns object of type 'ICurve2D'
		"Curve2D": (2002, 2, (9, 0), (), "Curve2D", '{65C82884-C41B-47A1-8C07-E8820D6718EA}'),
		"Direction": (2, 2, (11, 0), (), "Direction", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Radius": (1, 2, (5, 0), (), "Radius", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"SegmentType": (2001, 2, (3, 0), (), "SegmentType", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"X1": (5, 2, (5, 0), (), "X1", None),
		"X2": (7, 2, (5, 0), (), "X2", None),
		"X3": (9, 2, (5, 0), (), "X3", None),
		"Xc": (3, 2, (5, 0), (), "Xc", None),
		"Y1": (6, 2, (5, 0), (), "Y1", None),
		"Y2": (8, 2, (5, 0), (), "Y2", None),
		"Y3": (10, 2, (5, 0), (), "Y3", None),
		"Yc": (4, 2, (5, 0), (), "Yc", None),
	}
	_prop_map_put_ = {
		"Angle1": ((11, LCID, 4, 0),()),
		"Angle2": ((12, LCID, 4, 0),()),
		"Direction": ((2, LCID, 4, 0),()),
		"Radius": ((1, LCID, 4, 0),()),
		"X1": ((5, LCID, 4, 0),()),
		"X2": ((7, LCID, 4, 0),()),
		"X3": ((9, LCID, 4, 0),()),
		"Xc": ((3, LCID, 4, 0),()),
		"Y1": ((6, LCID, 4, 0),()),
		"Y2": ((8, LCID, 4, 0),()),
		"Y3": ((10, LCID, 4, 0),()),
		"Yc": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IContourLineSegment(DispatchBaseClass):
	'—егмент контура - отрезок.'
	CLSID = IID('{FB2432F1-8AE7-4D43-AFF2-A3A3BE226CFA}')
	coclass_clsid = IID('{1D09CC46-FBCC-4B09-8D0A-E20B22FAE3EF}')

	_prop_map_get_ = {
		"Angle": (6, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Curve2D' returns object of type 'ICurve2D'
		"Curve2D": (2002, 2, (9, 0), (), "Curve2D", '{65C82884-C41B-47A1-8C07-E8820D6718EA}'),
		"Length": (5, 2, (5, 0), (), "Length", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"SegmentType": (2001, 2, (3, 0), (), "SegmentType", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"X1": (1, 2, (5, 0), (), "X1", None),
		"X2": (3, 2, (5, 0), (), "X2", None),
		"Y1": (2, 2, (5, 0), (), "Y1", None),
		"Y2": (4, 2, (5, 0), (), "Y2", None),
	}
	_prop_map_put_ = {
		"Angle": ((6, LCID, 4, 0),()),
		"Length": ((5, LCID, 4, 0),()),
		"X1": ((1, LCID, 4, 0),()),
		"X2": ((3, LCID, 4, 0),()),
		"Y1": ((2, LCID, 4, 0),()),
		"Y2": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IContourSegment(DispatchBaseClass):
	'—егмент контура - отрезок.'
	CLSID = IID('{AA485B32-FF45-4035-BFC4-AEE54E638344}')
	coclass_clsid = IID('{33DEDD79-0855-4C92-A1B9-0D45BD3B8DAB}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Curve2D' returns object of type 'ICurve2D'
		"Curve2D": (2002, 2, (9, 0), (), "Curve2D", '{65C82884-C41B-47A1-8C07-E8820D6718EA}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"SegmentType": (2001, 2, (3, 0), (), "SegmentType", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IContours3D(DispatchBaseClass):
	' оллекци€ контуров 3D.'
	CLSID = IID('{9C1419EE-E99E-47DD-8BA3-9132E03F1307}')
	coclass_clsid = IID('{0ED8DFDC-5EF8-4A9F-940F-9104775417D7}')

	# Result is of type IContour3D
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{05FD7844-EA39-497D-B00B-7A1154830524}')
		return ret

	# Result is of type IContour3D
	# The method Contour3D is actually a property, but must be used as a method to correctly pass the arguments
	def Contour3D(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по ссылке или индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Contour3D', '{05FD7844-EA39-497D-B00B-7A1154830524}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IControlPoint(DispatchBaseClass):
	' онтрольна€ точка.'
	CLSID = IID('{39F4FC2C-99E7-411B-9036-9C756A71E211}')
	coclass_clsid = IID('{816922D4-1FBA-4672-95AE-E27BEC782E47}')

	def SetAssociationObject(self, NewVal=defaultNamedNotOptArg):
		'”становить опорный объект.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((9, 1),),NewVal
			)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'AssociationObject' returns object of type 'IModelObject'
		"AssociationObject": (5, 2, (9, 0), (), "AssociationObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		"ParameterType": (7, 2, (3, 0), (), "ParameterType", None),
		# Method 'Parameters' returns object of type 'IKompasAPIObject'
		"Parameters": (8, 2, (9, 0), (), "Parameters", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Symbol": (6, 2, (3, 0), (), "Symbol", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
		"X": (1, 2, (5, 0), (), "X", None),
		"Y": (2, 2, (5, 0), (), "Y", None),
		"Z": (3, 2, (5, 0), (), "Z", None),
	}
	_prop_map_put_ = {
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"ParameterType": ((7, LCID, 4, 0),()),
		"Symbol": ((6, LCID, 4, 0),()),
		"X": ((1, LCID, 4, 0),()),
		"Y": ((2, LCID, 4, 0),()),
		"Z": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IControlPoints(DispatchBaseClass):
	" оллекци€ элементов ' онтрольна€ точка'."
	CLSID = IID('{E22E30F6-05EE-4FB5-9EEB-E288234F256A}')
	coclass_clsid = IID('{F8B4A9EA-09FE-41C4-8E66-B2A015CA51C8}')

	# Result is of type IControlPoint
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{39F4FC2C-99E7-411B-9036-9C756A71E211}')
		return ret

	# Result is of type IControlPoint
	# The method ControlPoint is actually a property, but must be used as a method to correctly pass the arguments
	def ControlPoint(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'ControlPoint', '{39F4FC2C-99E7-411B-9036-9C756A71E211}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IConverter(DispatchBaseClass):
	'»нтерфейс конвертера файлов  ќћѕј—.'
	CLSID = IID('{642D03AB-4798-48A5-B075-3CD9AFA18554}')
	coclass_clsid = IID('{A496A838-57F7-4BEC-99FF-51D4782C60AE}')

	def Convert(self, InputFile=defaultNamedNotOptArg, Outfile=defaultNamedNotOptArg, Command=defaultNamedNotOptArg, ShowParam=defaultNamedNotOptArg):
		'«апустить процесс конвертации'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (3, 0), ((8, 1), (8, 1), (3, 1), (11, 1)),InputFile
			, Outfile, Command, ShowParam)

	def ConverterParameters(self, Command=defaultNamedNotOptArg):
		'ѕараметры конвертировани€.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 1, (13, 0), ((3, 1),),Command
			)
		if ret is not None:
			# See if this IUnknown is really an IDispatch
			try:
				ret = ret.QueryInterface(pythoncom.IID_IDispatch)
			except pythoncom.error:
				return ret
			ret = Dispatch(ret, 'ConverterParameters', None)
		return ret

	def GetFilter(self, DocType=defaultNamedNotOptArg, SaveAs=defaultNamedNotOptArg, Command=pythoncom.Missing):
		"ѕолучить фильтр и номер команды по типу документа ' ќћѕј—-‘рагменты (*.frw)|*.frw|'"
		return self._ApplyTypes_(2, 1, (8, 0), ((3, 1), (11, 1), (16387, 2)), 'GetFilter', None,DocType
			, SaveAs, Command)

	def VisualEditConvertParam(self, ParentHwnd=defaultNamedNotOptArg, Command=defaultNamedNotOptArg):
		'«апустить визуальное редактирование параметров конвертации'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((3, 1), (3, 1)),ParentHwnd
			, Command)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICopiesGeometry(DispatchBaseClass):
	' оллекци€ копий геометрии.'
	CLSID = IID('{6CC5E3B7-B509-4B8E-87D1-0B936010120C}')
	coclass_clsid = IID('{BB8BA111-24FF-47F6-AE7B-97023F467A1D}')

	# Result is of type ICopyGeometry
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{63E5636B-0661-4635-A902-6E8727E75D93}')
		return ret

	# Result is of type ICopyGeometry
	# The method CopyGeometry is actually a property, but must be used as a method to correctly pass the arguments
	def CopyGeometry(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу или по имени.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'CopyGeometry', '{63E5636B-0661-4635-A902-6E8727E75D93}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ICopyGeometry(DispatchBaseClass):
	' опи€ геометрии.'
	CLSID = IID('{63E5636B-0661-4635-A902-6E8727E75D93}')
	coclass_clsid = IID('{277E8B80-BA49-4779-94D2-CFB7EEF20F06}')

	def AddInitialObjects(self, Objects=defaultNamedNotOptArg):
		'ƒобавить объекты в массив копируемых объектов.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((12, 1),),Objects
			)

	def AddInitialObjectsFromExternalDocument(self, ExternalDocument=defaultNamedNotOptArg, ExternalLocalCS=defaultNamedNotOptArg, Objects=defaultNamedNotOptArg):
		'ƒобавить объекты из файла в массив копируемых объектов.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), ((9, 1), (9, 1), (12, 1)),ExternalDocument
			, ExternalLocalCS, Objects)

	def Clear(self):
		'ќчистить список исходных объектов массива.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), (),)

	def Destroy(self):
		'–азрушить массив.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), (),)

	def IsInitialObject(self, Object=defaultNamedNotOptArg):
		'ѕроверка - €вл€етс€ ли объект исходным дл€ массива.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), ((9, 1),),Object
			)

	def IsSuitableObject(self, Object=defaultNamedNotOptArg):
		'ѕроверка пригодности объекта дл€ операции.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), ((9, 1),),Object
			)

	# Result is of type IKompasDocument3D
	def OpenDocument(self, Visible=True, ReadOnly=False):
		'ќткрывает документ-источник на редактирование'
		ret = self._oleobj_.InvokeTypes(10, LCID, 1, (9, 0), ((11, 49), (11, 49)),Visible
			, ReadOnly)
		if ret is not None:
			ret = Dispatch(ret, 'OpenDocument', '{7B60E769-06C3-4FDC-9677-7B5EF5180308}')
		return ret

	def Synhronise(self):
		'ќбновить по источнику.'
		return self._oleobj_.InvokeTypes(19, LCID, 1, (11, 0), (),)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AutoUpdate": (17, 2, (11, 0), (), "AutoUpdate", None),
		"BuildingType": (16, 2, (3, 0), (), "BuildingType", None),
		"ByCollectionGeometry": (13, 2, (11, 0), (), "ByCollectionGeometry", None),
		# Method 'CollectionGeometry' returns object of type 'ICollectionGeometry'
		"CollectionGeometry": (14, 2, (9, 0), (), "CollectionGeometry", '{CC78F834-4A97-4F69-9207-215308F0ABB0}'),
		"ContextObjects": (8, 2, (11, 0), (), "ContextObjects", None),
		"DocumentFileName": (9, 2, (8, 0), (), "DocumentFileName", None),
		# Method 'ExternalLocalCS' returns object of type 'ILocalCoordinateSystem'
		"ExternalLocalCS": (12, 2, (9, 0), (), "ExternalLocalCS", '{BA6395F5-3506-4483-8864-4EEC220AF316}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"InitialObjects": (1, 2, (12, 0), (), "InitialObjects", None),
		# Method 'LocalCS' returns object of type 'ILocalCoordinateSystem'
		"LocalCS": (11, 2, (9, 0), (), "LocalCS", '{BA6395F5-3506-4483-8864-4EEC220AF316}'),
		"MirrorCopy": (15, 2, (11, 0), (), "MirrorCopy", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
		"WatchForSourceChange": (18, 2, (11, 0), (), "WatchForSourceChange", None),
	}
	_prop_map_put_ = {
		"AutoUpdate": ((17, LCID, 4, 0),()),
		"BuildingType": ((16, LCID, 4, 0),()),
		"ByCollectionGeometry": ((13, LCID, 4, 0),()),
		"CollectionGeometry": ((14, LCID, 4, 0),()),
		"ContextObjects": ((8, LCID, 4, 0),()),
		"ExternalLocalCS": ((12, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"InitialObjects": ((1, LCID, 4, 0),()),
		"LocalCS": ((11, LCID, 4, 0),()),
		"MirrorCopy": ((15, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"WatchForSourceChange": ((18, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICopyObjectParam(DispatchBaseClass):
	'ѕараметры копировани€ объектов.'
	CLSID = IID('{58E1BACA-32D5-4EAB-87E9-D14816DAC29F}')
	coclass_clsid = IID('{FF54BE1B-3B35-4B01-985D-8D696086F7E7}')

	_prop_map_get_ = {
		"Angle": (6, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AttributeCopy": (7, 2, (11, 0), (), "AttributeCopy", None),
		"DimensionLineScale": (8, 2, (11, 0), (), "DimensionLineScale", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Scale": (5, 2, (5, 0), (), "Scale", None),
		"SpecificationObjectCopy": (9, 2, (11, 0), (), "SpecificationObjectCopy", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"XNew": (3, 2, (5, 0), (), "XNew", None),
		"XOld": (1, 2, (5, 0), (), "XOld", None),
		"YNew": (4, 2, (5, 0), (), "YNew", None),
		"YOld": (2, 2, (5, 0), (), "YOld", None),
	}
	_prop_map_put_ = {
		"Angle": ((6, LCID, 4, 0),()),
		"AttributeCopy": ((7, LCID, 4, 0),()),
		"DimensionLineScale": ((8, LCID, 4, 0),()),
		"Scale": ((5, LCID, 4, 0),()),
		"SpecificationObjectCopy": ((9, LCID, 4, 0),()),
		"XNew": ((3, LCID, 4, 0),()),
		"XOld": ((1, LCID, 4, 0),()),
		"YNew": ((4, LCID, 4, 0),()),
		"YOld": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICopyObjectParam1(DispatchBaseClass):
	'ƒополнительные параметры копировани€ объектов.'
	CLSID = IID('{65989BDB-AB09-4CC5-A1DC-6DFB5E5C6496}')
	coclass_clsid = None

	_prop_map_get_ = {
		"HyperLinksCopy": (11, 2, (11, 0), (), "HyperLinksCopy", None),
		"StoragesCopy": (10, 2, (11, 0), (), "StoragesCopy", None),
	}
	_prop_map_put_ = {
		"HyperLinksCopy": ((11, LCID, 4, 0),()),
		"StoragesCopy": ((10, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICountersinkHoleParameters(DispatchBaseClass):
	'ќтверстие с зенковкой.'
	CLSID = IID('{02B548BF-05EC-4FC6-944F-F4E50AB354CD}')
	coclass_clsid = IID('{22D3BACB-1077-417D-A138-BBF0754A73B6}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"CountersinkAngle": (3, 2, (5, 0), (), "CountersinkAngle", None),
		"CountersinkDepth": (4, 2, (5, 0), (), "CountersinkDepth", None),
		"CountersinkDiameter": (2, 2, (5, 0), (), "CountersinkDiameter", None),
		"CountersinkType": (1, 2, (3, 0), (), "CountersinkType", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"CountersinkAngle": ((3, LCID, 4, 0),()),
		"CountersinkDepth": ((4, LCID, 4, 0),()),
		"CountersinkDiameter": ((2, LCID, 4, 0),()),
		"CountersinkType": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICountersinkSpotfacingHoleParameters(DispatchBaseClass):
	'ќтверстие с зенковкой и цековкой.'
	CLSID = IID('{C92C6CDF-5CDE-456C-A235-67C3E43BB141}')
	coclass_clsid = IID('{2D9B843D-99BB-4322-AAE7-B1D0C3E82F83}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"CountersinkAngle": (3, 2, (5, 0), (), "CountersinkAngle", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"SpotfacingCountersinkDiameter": (1, 2, (5, 0), (), "SpotfacingCountersinkDiameter", None),
		"SpotfacingDepth": (2, 2, (5, 0), (), "SpotfacingDepth", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"CountersinkAngle": ((3, LCID, 4, 0),()),
		"SpotfacingCountersinkDiameter": ((1, LCID, 4, 0),()),
		"SpotfacingDepth": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICoupling(DispatchBaseClass):
	"÷епочка операции 'сечение'."
	CLSID = IID('{FB39791B-2100-4F36-B352-AA4EB5FD9373}')
	coclass_clsid = IID('{C2B10EDA-FAFA-4485-A7EF-0A61FD26536C}')

	def Delete(self):
		'”далить цепочку.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), (),)

	def GetPoint(self, Index=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'ѕолучить координаты точки.'
		return self._ApplyTypes_(6, 1, (11, 0), ((3, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetPoint', None,Index
			, X, Y, Z)

	# The method Position is actually a property, but must be used as a method to correctly pass the arguments
	def Position(self, Index=defaultNamedNotOptArg):
		'¬еличина смещени€ точки вдоль контура сечени€ в %.'
		return self._oleobj_.InvokeTypes(4, LCID, 2, (5, 0), ((3, 1),),Index
			)

	# Result is of type IModelObject
	# The method PositionObject is actually a property, but must be used as a method to correctly pass the arguments
	def PositionObject(self, Index=defaultNamedNotOptArg):
		'“очечный фиклирующий объект.'
		ret = self._oleobj_.InvokeTypes(3, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'PositionObject', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# The method PositionOffset is actually a property, but must be used as a method to correctly pass the arguments
	def PositionOffset(self, Index=defaultNamedNotOptArg):
		'¬еличина смещени€ точки вдоль контура сечени€ в мм.'
		return self._oleobj_.InvokeTypes(5, LCID, 2, (5, 0), ((3, 1),),Index
			)

	def SetPoint(self, Index=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg):
		'ѕолучить параметры точки.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), ((3, 1), (5, 1), (5, 1), (5, 1)),Index
			, X, Y, Z)

	# The method SetPosition is actually a property, but must be used as a method to correctly pass the arguments
	def SetPosition(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'¬еличина смещени€ точки вдоль контура сечени€ в %.'
		return self._oleobj_.InvokeTypes(4, LCID, 4, (24, 0), ((3, 1), (5, 1)),Index
			, arg1)

	# The method SetPositionObject is actually a property, but must be used as a method to correctly pass the arguments
	def SetPositionObject(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'“очечный фиклирующий объект.'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((3, 1), (9, 1)),Index
			, arg1)

	# The method SetPositionOffset is actually a property, but must be used as a method to correctly pass the arguments
	def SetPositionOffset(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'¬еличина смещени€ точки вдоль контура сечени€ в мм.'
		return self._oleobj_.InvokeTypes(5, LCID, 4, (24, 0), ((3, 1), (5, 1)),Index
			, arg1)

	# Result is of type IModelObject
	# The method Sketch is actually a property, but must be used as a method to correctly pass the arguments
	def Sketch(self, Index=defaultNamedNotOptArg):
		'—ечение. Ёскиз, контур, простран\xadственна€ крива€, грань.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Sketch', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (1, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ICurve2D(DispatchBaseClass):
	'ћатематическа€ крива€ 2D.'
	CLSID = IID('{65C82884-C41B-47A1-8C07-E8820D6718EA}')
	coclass_clsid = IID('{93F02582-585F-4319-90B5-3974A70999D8}')

	def CalculatePolygonByStep(self, Step=defaultNamedNotOptArg):
		'ѕолучить массив равномерно расположенных на кривой точек.'
		return self._ApplyTypes_(7, 1, (12, 0), ((5, 1),), 'CalculatePolygonByStep', None,Step
			)

	def CouplingCurvCurv(self, Curve2=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg):
		'–асчет скруглений дл€ двух кривых.'
		return self._ApplyTypes_(4, 1, (12, 0), ((9, 1), (5, 1)), 'CouplingCurvCurv', None,Curve2
			, Radius)

	def GetDistancePointPoint(self, X1=defaultNamedNotOptArg, Y1=defaultNamedNotOptArg, X2=defaultNamedNotOptArg, Y2=defaultNamedNotOptArg):
		'‘ункци€ возвращает рассто€ние между двум€ точками на кривой.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (5, 0), ((5, 1), (5, 1), (5, 1), (5, 1)),X1
			, Y1, X2, Y2)

	def GetDistanceToPoint(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg):
		'‘ункци€ возвращает рассто€ние между точкой и проекцией точки на кривую.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (5, 0), ((5, 1), (5, 1)),X
			, Y)

	def GetMetricLength(self, T1=defaultNamedNotOptArg, T2=defaultNamedNotOptArg):
		'ћетрическа€ длина кривой.'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (5, 0), ((5, 1), (5, 1)),T1
			, T2)

	def GetNurbsParams(self, Closed=defaultNamedNotOptArg, Points=pythoncom.Missing, Weights=pythoncom.Missing, Knots=pythoncom.Missing
			, TMin=pythoncom.Missing, TMax=pythoncom.Missing):
		'ѕолучить параметры в NURBS-представлении.'
		return self._ApplyTypes_(18, 1, (11, 0), ((11, 1), (16396, 2), (16396, 2), (16396, 2), (16389, 2), (16389, 2)), 'GetNurbsParams', None,Closed
			, Points, Weights, Knots, TMin, TMax
			)

	def GetPointLocation(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg):
		'ѕоложение точки относительно кривой.'
		return self._oleobj_.InvokeTypes(20, LCID, 1, (3, 0), ((5, 1), (5, 1)),X
			, Y)

	def Intersect(self, Curve2=defaultNamedNotOptArg):
		'ѕересечение двух кривых.'
		return self._ApplyTypes_(1, 1, (12, 0), ((9, 1),), 'Intersect', None,Curve2
			)

	def MovePoint(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Lenght=defaultNamedNotOptArg, Direction=defaultNamedNotOptArg):
		'‘ункци€ продвигает точку на рассто€ние Lenght по кривой.'
		return self._ApplyTypes_(8, 1, (11, 0), ((16389, 3), (16389, 3), (5, 1), (11, 1)), 'MovePoint', None,X
			, Y, Lenght, Direction)

	def PointOn(self, T=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing):
		'ѕолучить координаты точки по параметру t.'
		return self._ApplyTypes_(12, 1, (11, 0), ((5, 1), (16389, 2), (16389, 2)), 'PointOn', None,T
			, X, Y)

	def PointProjection(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Kx=pythoncom.Missing, Ky=pythoncom.Missing
			, T=pythoncom.Missing, Angle=pythoncom.Missing):
		'ѕроекци€ точки на кривую.'
		return self._ApplyTypes_(5, 1, (11, 0), ((5, 1), (5, 1), (16389, 2), (16389, 2), (16389, 2), (16389, 2)), 'PointProjection', None,X
			, Y, Kx, Ky, T, Angle
			)

	def Tangent(self, Curve2=defaultNamedNotOptArg, Curve1Points=pythoncom.Missing, Curve2Points=pythoncom.Missing):
		' асательные дл€ двух кривых.'
		return self._ApplyTypes_(2, 1, (11, 0), ((9, 1), (16396, 2), (16396, 2)), 'Tangent', None,Curve2
			, Curve1Points, Curve2Points)

	def TangentLinePoint(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg):
		'“очки касани€ кривой и пр€мой из заданной точки.'
		return self._ApplyTypes_(3, 1, (12, 0), ((5, 1), (5, 1)), 'TangentLinePoint', None,X
			, Y)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"IsClosed": (17, 2, (11, 0), (), "IsClosed", None),
		"IsSelfIntersect": (19, 2, (11, 0), (), "IsSelfIntersect", None),
		"Length": (9, 2, (5, 0), (), "Length", None),
		"ParamMax": (16, 2, (5, 0), (), "ParamMax", None),
		"ParamMin": (15, 2, (5, 0), (), "ParamMin", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICurveBy2Projections(DispatchBaseClass):
	' рива€ по двум проекци€м.'
	CLSID = IID('{75250D2E-1A02-4593-9002-09872F65F1CB}')
	coclass_clsid = IID('{97F94C42-4891-4C13-848A-529D3B1F8458}')

	# The method Edges is actually a property, but must be used as a method to correctly pass the arguments
	def Edges(self, Index=defaultNamedNotOptArg):
		'ѕолучить ребра созданных контуров по индексу. ¬озвращаетс€ массив ребер в виде массива VT_ARRAY | VT_DISPATCH.'
		return self._ApplyTypes_(6, 2, (12, 0), ((3, 1),), 'Edges', None,Index
			)

	# The method EdgesCheck is actually a property, but must be used as a method to correctly pass the arguments
	def EdgesCheck(self, ContourIndex=defaultNamedNotOptArg):
		'ѕризнак выбора контура по индексу.'
		return self._oleobj_.InvokeTypes(7, LCID, 2, (11, 0), ((3, 1),),ContourIndex
			)

	# The method SetEdgesCheck is actually a property, but must be used as a method to correctly pass the arguments
	def SetEdgesCheck(self, ContourIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ѕризнак выбора контура по индексу.'
		return self._oleobj_.InvokeTypes(7, LCID, 4, (24, 0), ((3, 1), (11, 1)),ContourIndex
			, arg1)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AutoCheck": (3, 2, (11, 0), (), "AutoCheck", None),
		"EdgesArraysCount": (5, 2, (3, 0), (), "EdgesArraysCount", None),
		"EdgesChecks": (4, 2, (12, 0), (), "EdgesChecks", None),
		"EdgesChecksCount": (8, 2, (3, 0), (), "EdgesChecksCount", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Projection1": (1, 2, (12, 0), (), "Projection1", None),
		"Projection2": (2, 2, (12, 0), (), "Projection2", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"AutoCheck": ((3, LCID, 4, 0),()),
		"EdgesChecks": ((4, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Projection1": ((1, LCID, 4, 0),()),
		"Projection2": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICurveByLaw(DispatchBaseClass):
	' рива€ по закону.'
	CLSID = IID('{D875D25C-B52B-47C8-B04C-8CBA73623F17}')
	coclass_clsid = IID('{5F39D09D-2C8F-4732-9635-528FF64D8A1B}')

	# The method Expression is actually a property, but must be used as a method to correctly pass the arguments
	def Expression(self, coord=defaultNamedNotOptArg):
		'¬ыражение.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(5, LCID, 2, (8, 0), ((3, 1),),coord
			)

	# The method IntervalExpression is actually a property, but must be used as a method to correctly pass the arguments
	def IntervalExpression(self, coord=defaultNamedNotOptArg):
		'¬ыражение дл€ интервальной переменной.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(7, LCID, 2, (8, 0), ((3, 1),),coord
			)

	# The method LawType is actually a property, but must be used as a method to correctly pass the arguments
	def LawType(self, coord=defaultNamedNotOptArg):
		'“ип функции.'
		return self._oleobj_.InvokeTypes(2, LCID, 2, (3, 0), ((3, 1),),coord
			)

	# The method SetExpression is actually a property, but must be used as a method to correctly pass the arguments
	def SetExpression(self, coord=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'¬ыражение.'
		return self._oleobj_.InvokeTypes(5, LCID, 4, (24, 0), ((3, 1), (8, 1)),coord
			, arg1)

	# The method SetIntervalExpression is actually a property, but must be used as a method to correctly pass the arguments
	def SetIntervalExpression(self, coord=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'¬ыражение дл€ интервальной переменной.'
		return self._oleobj_.InvokeTypes(7, LCID, 4, (24, 0), ((3, 1), (8, 1)),coord
			, arg1)

	# The method SetLawType is actually a property, but must be used as a method to correctly pass the arguments
	def SetLawType(self, coord=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'“ип функции.'
		return self._oleobj_.InvokeTypes(2, LCID, 4, (24, 0), ((3, 1), (3, 1)),coord
			, arg1)

	# The method SetTMax is actually a property, but must be used as a method to correctly pass the arguments
	def SetTMax(self, coord=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ћаксимальный параметр кривой.'
		return self._oleobj_.InvokeTypes(4, LCID, 4, (24, 0), ((3, 1), (5, 1)),coord
			, arg1)

	# The method SetTMin is actually a property, but must be used as a method to correctly pass the arguments
	def SetTMin(self, coord=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ћинимальный параметр кривой.'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((3, 1), (5, 1)),coord
			, arg1)

	# The method TMax is actually a property, but must be used as a method to correctly pass the arguments
	def TMax(self, coord=defaultNamedNotOptArg):
		'ћаксимальный параметр кривой.'
		return self._oleobj_.InvokeTypes(4, LCID, 2, (5, 0), ((3, 1),),coord
			)

	# The method TMin is actually a property, but must be used as a method to correctly pass the arguments
	def TMin(self, coord=defaultNamedNotOptArg):
		'ћинимальный параметр кривой.'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((3, 1),),coord
			)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"PointsType": (1, 2, (3, 0), (), "PointsType", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"UserVariables": (6, 2, (12, 0), (), "UserVariables", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"PointsType": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICurveByLaws(DispatchBaseClass):
	' оллекци€ кривых по закону.'
	CLSID = IID('{7DD7BF03-5348-4345-A2A2-FC116C100B2E}')
	coclass_clsid = IID('{7FDF9C11-FC8F-401C-9620-3E13C3254DE0}')

	# Result is of type ICurveByLaw
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{D875D25C-B52B-47C8-B04C-8CBA73623F17}')
		return ret

	# Result is of type ICurveByLaw
	# The method CurveByLaw is actually a property, but must be used as a method to correctly pass the arguments
	def CurveByLaw(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по ссылке или индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'CurveByLaw', '{D875D25C-B52B-47C8-B04C-8CBA73623F17}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ICurveCopyObjectParam(DispatchBaseClass):
	'ѕараметры копировани€ объектов вдоль кривой.'
	CLSID = IID('{12B52A99-FF5F-4C08-9E5E-DF7C7AD834A8}')
	coclass_clsid = IID('{07BD4468-D478-447C-8F20-1C6E2ABBD9C2}')

	_prop_map_get_ = {
		"Angle": (6, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AttributeCopy": (7, 2, (11, 0), (), "AttributeCopy", None),
		# Method 'BaseCurve' returns object of type 'IDrawingObject'
		"BaseCurve": (2001, 2, (9, 0), (), "BaseCurve", '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}'),
		"Count": (2003, 2, (3, 0), (), "Count", None),
		"DimensionLineScale": (8, 2, (11, 0), (), "DimensionLineScale", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"PositiveDirection": (2005, 2, (11, 0), (), "PositiveDirection", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Scale": (5, 2, (5, 0), (), "Scale", None),
		"SpecificationObjectCopy": (9, 2, (11, 0), (), "SpecificationObjectCopy", None),
		"Step": (2002, 2, (5, 0), (), "Step", None),
		"StepFactor": (2006, 2, (11, 0), (), "StepFactor", None),
		"TurnToNormal": (2004, 2, (11, 0), (), "TurnToNormal", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"XNew": (3, 2, (5, 0), (), "XNew", None),
		"XOld": (1, 2, (5, 0), (), "XOld", None),
		"YNew": (4, 2, (5, 0), (), "YNew", None),
		"YOld": (2, 2, (5, 0), (), "YOld", None),
	}
	_prop_map_put_ = {
		"Angle": ((6, LCID, 4, 0),()),
		"AttributeCopy": ((7, LCID, 4, 0),()),
		"BaseCurve": ((2001, LCID, 4, 0),()),
		"Count": ((2003, LCID, 4, 0),()),
		"DimensionLineScale": ((8, LCID, 4, 0),()),
		"PositiveDirection": ((2005, LCID, 4, 0),()),
		"Scale": ((5, LCID, 4, 0),()),
		"SpecificationObjectCopy": ((9, LCID, 4, 0),()),
		"Step": ((2002, LCID, 4, 0),()),
		"StepFactor": ((2006, LCID, 4, 0),()),
		"TurnToNormal": ((2004, LCID, 4, 0),()),
		"XNew": ((3, LCID, 4, 0),()),
		"XOld": ((1, LCID, 4, 0),()),
		"YNew": ((4, LCID, 4, 0),()),
		"YOld": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2003, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ICurveOutLine(DispatchBaseClass):
	'Ћини€ очерка.'
	CLSID = IID('{BC64A05C-0078-44EB-9492-ABAD7AD38E86}')
	coclass_clsid = IID('{1B3EB690-1F97-4A36-9A0C-B251CC76A205}')

	# The method Edges is actually a property, but must be used as a method to correctly pass the arguments
	def Edges(self, Index=defaultNamedNotOptArg):
		'ѕолучить ребра созданных контуров по индексу. ¬озвращаетс€ массив ребер в виде массива VT_ARRAY | VT_DISPATCH.'
		return self._ApplyTypes_(6, 2, (12, 0), ((3, 1),), 'Edges', None,Index
			)

	# The method EdgesCheck is actually a property, but must be used as a method to correctly pass the arguments
	def EdgesCheck(self, ContourIndex=defaultNamedNotOptArg):
		'ѕризнак выбора контура по индексу.'
		return self._oleobj_.InvokeTypes(7, LCID, 2, (11, 0), ((3, 1),),ContourIndex
			)

	# The method SetEdgesCheck is actually a property, but must be used as a method to correctly pass the arguments
	def SetEdgesCheck(self, ContourIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ѕризнак выбора контура по индексу.'
		return self._oleobj_.InvokeTypes(7, LCID, 4, (24, 0), ((3, 1), (11, 1)),ContourIndex
			, arg1)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AutoCheck": (3, 2, (11, 0), (), "AutoCheck", None),
		"EdgesArraysCount": (5, 2, (3, 0), (), "EdgesArraysCount", None),
		"EdgesChecks": (4, 2, (12, 0), (), "EdgesChecks", None),
		"EdgesChecksCount": (8, 2, (3, 0), (), "EdgesChecksCount", None),
		"Faces": (1, 2, (12, 0), (), "Faces", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
		# Method 'Vector3D' returns object of type 'IVector3D'
		"Vector3D": (2, 2, (9, 0), (), "Vector3D", '{D51A4DCF-627D-44F5-89BA-46EF2449A212}'),
	}
	_prop_map_put_ = {
		"AutoCheck": ((3, LCID, 4, 0),()),
		"EdgesChecks": ((4, LCID, 4, 0),()),
		"Faces": ((1, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICurveOutLines(DispatchBaseClass):
	' оллекци€ линий очерка.'
	CLSID = IID('{491F65E7-F227-42FD-AB49-82487EAE7775}')
	coclass_clsid = IID('{B1CDDFB5-1B50-4E4F-AECF-51F975A7D6EF}')

	# Result is of type ICurveOutLine
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{BC64A05C-0078-44EB-9492-ABAD7AD38E86}')
		return ret

	# Result is of type ICurveOutLine
	# The method CurveOutLine is actually a property, but must be used as a method to correctly pass the arguments
	def CurveOutLine(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по ссылке или индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'CurveOutLine', '{BC64A05C-0078-44EB-9492-ABAD7AD38E86}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ICurveStyle(DispatchBaseClass):
	'—тиль линий.'
	CLSID = IID('{5046BF60-687A-4E5D-BBEF-3CB5D95F7A41}')
	coclass_clsid = IID('{B357540F-DA46-471C-90F9-2018CB2DC70E}')

	def AddPattern(self, VisibleSegmentLenght=defaultNamedNotOptArg, invisibleSegmentLenght=defaultNamedNotOptArg):
		'ƒобавить параметры пары штрих-промежуток.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), ((5, 1), (5, 1)),VisibleSegmentLenght
			, invisibleSegmentLenght)

	def AddPatternFragmentFilletsPoligon(self, PatternIndex=defaultNamedNotOptArg, Points=defaultNamedNotOptArg):
		'ƒобавить заливку ограниченную ломаной заданной полигоном точек.'
		return self._oleobj_.InvokeTypes(24, LCID, 1, (11, 0), ((3, 1), (12, 1)),PatternIndex
			, Points)

	def AddPatternFragmentPoligon(self, PatternIndex=defaultNamedNotOptArg, Points=defaultNamedNotOptArg):
		'ƒобавить полигон точек.'
		return self._oleobj_.InvokeTypes(19, LCID, 1, (11, 0), ((3, 1), (12, 1)),PatternIndex
			, Points)

	def ClearPatternFragmentFilletsPoligons(self, PatternIndex=defaultNamedNotOptArg):
		'”далить все заливки.'
		return self._oleobj_.InvokeTypes(26, LCID, 1, (11, 0), ((3, 1),),PatternIndex
			)

	def ClearPatternFragmentPoligons(self, PatternIndex=defaultNamedNotOptArg):
		'ќчистить список полигонов.'
		return self._oleobj_.InvokeTypes(21, LCID, 1, (11, 0), ((3, 1),),PatternIndex
			)

	def ClearPatterns(self):
		'ќчистить параметры участков штрих-промежуток.'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (11, 0), (),)

	def Delete(self):
		'”далить стиль.'
		return self._oleobj_.InvokeTypes(3008, LCID, 1, (11, 0), (),)

	def DeletePattern(self, PatternIndex=defaultNamedNotOptArg):
		'”далить параметры пары штрих-промежуток.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), ((3, 1),),PatternIndex
			)

	def DeletePatternFragmentFilletsPoligon(self, PatternIndex=defaultNamedNotOptArg, PoligonIndex=defaultNamedNotOptArg):
		'”далить заливку.'
		return self._oleobj_.InvokeTypes(25, LCID, 1, (11, 0), ((3, 1), (3, 1)),PatternIndex
			, PoligonIndex)

	def DeletePatternFragmentPoligon(self, PatternIndex=defaultNamedNotOptArg, PoligonIndex=defaultNamedNotOptArg):
		'”далить полигон.'
		return self._oleobj_.InvokeTypes(20, LCID, 1, (11, 0), ((3, 1), (3, 1)),PatternIndex
			, PoligonIndex)

	def LoadPatternFragment(self, PatternIndex=defaultNamedNotOptArg, FileName=defaultNamedNotOptArg):
		'«агрузить фрагмент из файла.'
		return self._oleobj_.InvokeTypes(27, LCID, 1, (11, 0), ((3, 1), (8, 1)),PatternIndex
			, FileName)

	# The method PatternFragmentDx is actually a property, but must be used as a method to correctly pass the arguments
	def PatternFragmentDx(self, PatternIndex=defaultNamedNotOptArg):
		'¬еличина смешени€ фрагмента по ’.'
		return self._oleobj_.InvokeTypes(15, LCID, 2, (5, 0), ((3, 1),),PatternIndex
			)

	# The method PatternFragmentDy is actually a property, but must be used as a method to correctly pass the arguments
	def PatternFragmentDy(self, PatternIndex=defaultNamedNotOptArg):
		'¬еличина смешени€ фрагмента по Y.'
		return self._oleobj_.InvokeTypes(16, LCID, 2, (5, 0), ((3, 1),),PatternIndex
			)

	# The method PatternFragmentFilletsPoligon is actually a property, but must be used as a method to correctly pass the arguments
	def PatternFragmentFilletsPoligon(self, PatternIndex=defaultNamedNotOptArg, PoligonIndex=defaultNamedNotOptArg):
		'ћассив точек полигона границ заливок.'
		return self._ApplyTypes_(23, 2, (12, 0), ((3, 1), (3, 1)), 'PatternFragmentFilletsPoligon', None,PatternIndex
			, PoligonIndex)

	# The method PatternFragmentFilletsPoligonsCount is actually a property, but must be used as a method to correctly pass the arguments
	def PatternFragmentFilletsPoligonsCount(self, PatternIndex=defaultNamedNotOptArg):
		' оличество заливок во фрагменте.'
		return self._oleobj_.InvokeTypes(22, LCID, 2, (3, 0), ((3, 1),),PatternIndex
			)

	# The method PatternFragmentPoligon is actually a property, but must be used as a method to correctly pass the arguments
	def PatternFragmentPoligon(self, PatternIndex=defaultNamedNotOptArg, PoligonIndex=defaultNamedNotOptArg):
		'ћассив точек полигона.'
		return self._ApplyTypes_(18, 2, (12, 0), ((3, 1), (3, 1)), 'PatternFragmentPoligon', None,PatternIndex
			, PoligonIndex)

	# The method PatternFragmentPoligonsCount is actually a property, but must be used as a method to correctly pass the arguments
	def PatternFragmentPoligonsCount(self, PatternIndex=defaultNamedNotOptArg):
		' оличество ломанных во фрагменте.'
		return self._oleobj_.InvokeTypes(17, LCID, 2, (3, 0), ((3, 1),),PatternIndex
			)

	# The method PatternInvisibleSegmentLenght is actually a property, but must be used as a method to correctly pass the arguments
	def PatternInvisibleSegmentLenght(self, PatternIndex=defaultNamedNotOptArg):
		'ƒлина невидимого участка.'
		return self._oleobj_.InvokeTypes(14, LCID, 2, (5, 0), ((3, 1),),PatternIndex
			)

	# The method PatternVisibleSegmentLenght is actually a property, but must be used as a method to correctly pass the arguments
	def PatternVisibleSegmentLenght(self, PatternIndex=defaultNamedNotOptArg):
		'ƒлина видимого участка.'
		return self._oleobj_.InvokeTypes(13, LCID, 2, (5, 0), ((3, 1),),PatternIndex
			)

	def SetPatternFragment(self, PatternIndex=defaultNamedNotOptArg, Geom=defaultNamedNotOptArg):
		'”становить фрагмент по геометрии.'
		return self._oleobj_.InvokeTypes(28, LCID, 1, (11, 0), ((3, 1), (12, 1)),PatternIndex
			, Geom)

	# The method SetPatternFragmentDx is actually a property, but must be used as a method to correctly pass the arguments
	def SetPatternFragmentDx(self, PatternIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'¬еличина смешени€ фрагмента по ’.'
		return self._oleobj_.InvokeTypes(15, LCID, 4, (24, 0), ((3, 1), (5, 1)),PatternIndex
			, arg1)

	# The method SetPatternFragmentDy is actually a property, but must be used as a method to correctly pass the arguments
	def SetPatternFragmentDy(self, PatternIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'¬еличина смешени€ фрагмента по Y.'
		return self._oleobj_.InvokeTypes(16, LCID, 4, (24, 0), ((3, 1), (5, 1)),PatternIndex
			, arg1)

	# The method SetPatternFragmentFilletsPoligon is actually a property, but must be used as a method to correctly pass the arguments
	def SetPatternFragmentFilletsPoligon(self, PatternIndex=defaultNamedNotOptArg, PoligonIndex=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		'ћассив точек полигона границ заливок.'
		return self._oleobj_.InvokeTypes(23, LCID, 4, (24, 0), ((3, 1), (3, 1), (12, 1)),PatternIndex
			, PoligonIndex, arg2)

	# The method SetPatternFragmentPoligon is actually a property, but must be used as a method to correctly pass the arguments
	def SetPatternFragmentPoligon(self, PatternIndex=defaultNamedNotOptArg, PoligonIndex=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		'ћассив точек полигона.'
		return self._oleobj_.InvokeTypes(18, LCID, 4, (24, 0), ((3, 1), (3, 1), (12, 1)),PatternIndex
			, PoligonIndex, arg2)

	# The method SetPatternInvisibleSegmentLenght is actually a property, but must be used as a method to correctly pass the arguments
	def SetPatternInvisibleSegmentLenght(self, PatternIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ƒлина невидимого участка.'
		return self._oleobj_.InvokeTypes(14, LCID, 4, (24, 0), ((3, 1), (5, 1)),PatternIndex
			, arg1)

	# The method SetPatternVisibleSegmentLenght is actually a property, but must be used as a method to correctly pass the arguments
	def SetPatternVisibleSegmentLenght(self, PatternIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ƒлина видимого участка.'
		return self._oleobj_.InvokeTypes(13, LCID, 4, (24, 0), ((3, 1), (5, 1)),PatternIndex
			, arg1)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3007, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"ApiStyleId": (3002, 2, (3, 0), (), "ApiStyleId", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Color": (4, 2, (3, 0), (), "Color", None),
		"CurvePenType": (2, 2, (3, 0), (), "CurvePenType", None),
		"CurveStyleType": (1, 2, (3, 0), (), "CurveStyleType", None),
		"DisplayStyleId": (3003, 2, (3, 0), (), "DisplayStyleId", None),
		"ForHatch": (3, 2, (11, 0), (), "ForHatch", None),
		"IgnoreFragmentStyle": (8, 2, (11, 0), (), "IgnoreFragmentStyle", None),
		"IsExternalStyle": (3004, 2, (11, 0), (), "IsExternalStyle", None),
		"LibraryPath": (3005, 2, (8, 0), (), "LibraryPath", None),
		"LibraryStyleId": (3006, 2, (3, 0), (), "LibraryStyleId", None),
		"Name": (3001, 2, (8, 0), (), "Name", None),
		"PaperWidth": (5, 2, (5, 0), (), "PaperWidth", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"PatternsCount": (9, 2, (3, 0), (), "PatternsCount", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"ScreenWidth": (6, 2, (3, 0), (), "ScreenWidth", None),
		"SmartParts": (7, 2, (11, 0), (), "SmartParts", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"Color": ((4, LCID, 4, 0),()),
		"CurvePenType": ((2, LCID, 4, 0),()),
		"CurveStyleType": ((1, LCID, 4, 0),()),
		"DisplayStyleId": ((3003, LCID, 4, 0),()),
		"ForHatch": ((3, LCID, 4, 0),()),
		"IgnoreFragmentStyle": ((8, LCID, 4, 0),()),
		"Name": ((3001, LCID, 4, 0),()),
		"PaperWidth": ((5, LCID, 4, 0),()),
		"ScreenWidth": ((6, LCID, 4, 0),()),
		"SmartParts": ((7, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICurveVertexParam(DispatchBaseClass):
	'»нтерфейс параметров вершины кривой.'
	CLSID = IID('{2AD2E4B4-B870-437A-8D57-5807729FCB05}')
	coclass_clsid = IID('{114075C2-6D73-4198-A29A-F05D772FC75D}')

	def GetParamByDistance(self, Distance=pythoncom.Missing, Value=pythoncom.Missing):
		'ѕолучить рассто€ние и радиус(ломана€) или вес(сплайн).'
		return self._ApplyTypes_(11, 1, (11, 0), ((16389, 2), (16389, 2)), 'GetParamByDistance', None,Distance
			, Value)

	def GetParamVertex(self, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing, Value=pythoncom.Missing):
		'ѕолучить параметры вершины.'
		return self._ApplyTypes_(8, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2), (16389, 2)), 'GetParamVertex', None,X
			, Y, Z, Value)

	def SetParamByDistance(self, Distance=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		'”становить рассто€ние и радиус(ломана€) или вес(сплайн).'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (11, 0), ((5, 1), (5, 1)),Distance
			, Value)

	def SetParamByVertex(self, Obj=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		'”становить параметры вершины по указателю на вершину.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), ((9, 1), (5, 1)),Obj
			, Value)

	def SetParamVertex(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		'”становить параметры вершины.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1), (5, 1)),X
			, Y, Z, Value)

	def Update(self):
		'ќбновить параметры вершин кривой начина€ с этой.'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'AssociationVertex' returns object of type 'IModelObject'
		"AssociationVertex": (3, 2, (9, 0), (), "AssociationVertex", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'BuildingObject' returns object of type 'IModelObject'
		"BuildingObject": (2, 2, (9, 0), (), "BuildingObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"BuildingType": (1, 2, (3, 0), (), "BuildingType", None),
		"Index": (5, 2, (3, 0), (), "Index", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'PointParameters' returns object of type 'IKompasAPIObject'
		"PointParameters": (6, 2, (9, 0), (), "PointParameters", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"PointType": (7, 2, (3, 0), (), "PointType", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		# Method 'Vector3D' returns object of type 'IVector3D'
		"Vector3D": (13, 2, (9, 0), (), "Vector3D", '{D51A4DCF-627D-44F5-89BA-46EF2449A212}'),
		# Method 'Vertex' returns object of type 'IModelObject'
		"Vertex": (4, 2, (9, 0), (), "Vertex", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
	}
	_prop_map_put_ = {
		"AssociationVertex": ((3, LCID, 4, 0),()),
		"BuildingObject": ((2, LCID, 4, 0),()),
		"BuildingType": ((1, LCID, 4, 0),()),
		"PointType": ((7, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICurvesBy2Projectionses(DispatchBaseClass):
	' оллекци€ кривых по двум проеци€м.'
	CLSID = IID('{8062145F-C6AC-4006-A89B-F1FC6A08FCC5}')
	coclass_clsid = IID('{AB57FA3C-10B0-44BD-96EF-EA9F2AF0D4DA}')

	# Result is of type ICurveBy2Projections
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{75250D2E-1A02-4593-9002-09872F65F1CB}')
		return ret

	# Result is of type ICurveBy2Projections
	# The method CurveBy2Projections is actually a property, but must be used as a method to correctly pass the arguments
	def CurveBy2Projections(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по ссылке или индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'CurveBy2Projections', '{75250D2E-1A02-4593-9002-09872F65F1CB}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ICut(DispatchBaseClass):
	"»нтерфейс операции 'сечение'."
	CLSID = IID('{D76BE44A-2AB3-4B5A-B893-3C27E227DF4D}')
	coclass_clsid = IID('{2757F3A6-617F-4B75-8ABC-459E30561316}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"BuildingType": (7, 2, (3, 0), (), "BuildingType", None),
		"ChooseBodies": (5, 2, (12, 0), (), "ChooseBodies", None),
		"ChooseParts": (6, 2, (12, 0), (), "ChooseParts", None),
		"ChoosePartsType": (4, 2, (3, 0), (), "ChoosePartsType", None),
		"ChooseType": (3, 2, (3, 0), (), "ChooseType", None),
		# Method 'CutObject' returns object of type 'IModelObject'
		"CutObject": (1, 2, (9, 0), (), "CutObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Direction": (2, 2, (11, 0), (), "Direction", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"BuildingType": ((7, LCID, 4, 0),()),
		"ChooseBodies": ((5, LCID, 4, 0),()),
		"ChooseParts": ((6, LCID, 4, 0),()),
		"ChoosePartsType": ((4, LCID, 4, 0),()),
		"ChooseType": ((3, LCID, 4, 0),()),
		"CutObject": ((1, LCID, 4, 0),()),
		"Direction": ((2, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICutExtrusion(DispatchBaseClass):
	"Ёлемент '¬ырезать выдавливанием'."
	CLSID = IID('{D2A01420-9159-48C2-8302-C1B10A13D8F8}')
	coclass_clsid = IID('{B60B0F24-9069-4AB4-B0E4-DC558A6BF4A3}')

	# The method Depth is actually a property, but must be used as a method to correctly pass the arguments
	def Depth(self, Normal=defaultNamedNotOptArg):
		'√лубина выдавливани€.'
		return self._oleobj_.InvokeTypes(4, LCID, 2, (5, 0), ((11, 1),),Normal
			)

	# Result is of type IModelObject
	# The method DepthObject is actually a property, but must be used as a method to correctly pass the arguments
	def DepthObject(self, Normal=defaultNamedNotOptArg):
		'ќбъект, задающий глубину выдавливани€'
		ret = self._oleobj_.InvokeTypes(7, LCID, 2, (9, 0), ((11, 1),),Normal
			)
		if ret is not None:
			ret = Dispatch(ret, 'DepthObject', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# The method DraftOutward is actually a property, but must be used as a method to correctly pass the arguments
	def DraftOutward(self, Normal=defaultNamedNotOptArg):
		'ѕризнак уклона наружу.'
		return self._oleobj_.InvokeTypes(6, LCID, 2, (11, 0), ((11, 1),),Normal
			)

	# The method DraftValue is actually a property, but must be used as a method to correctly pass the arguments
	def DraftValue(self, Normal=defaultNamedNotOptArg):
		'”гол уклона.'
		return self._oleobj_.InvokeTypes(5, LCID, 2, (5, 0), ((11, 1),),Normal
			)

	# The method ExtrusionType is actually a property, but must be used as a method to correctly pass the arguments
	def ExtrusionType(self, Normal=defaultNamedNotOptArg):
		'“ип выдавливани€.'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (3, 0), ((11, 1),),Normal
			)

	def GetSideParameters(self, Normal=defaultNamedNotOptArg, ExtrusionType=pythoncom.Missing, Depth=pythoncom.Missing, DraftValue=pythoncom.Missing
			, DraftOutward=pythoncom.Missing, DepthObject=pythoncom.Missing):
		'ѕолучить параметры выдавливани€ в одном направлении.'
		return self._ApplyTypes_(8, 1, (11, 0), ((11, 1), (16387, 2), (16389, 2), (16389, 2), (16395, 2), (16393, 2)), 'GetSideParameters', None,Normal
			, ExtrusionType, Depth, DraftValue, DraftOutward, DepthObject
			)

	# The method SetDepth is actually a property, but must be used as a method to correctly pass the arguments
	def SetDepth(self, Normal=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'√лубина выдавливани€.'
		return self._oleobj_.InvokeTypes(4, LCID, 4, (24, 0), ((11, 1), (5, 1)),Normal
			, arg1)

	# The method SetDepthObject is actually a property, but must be used as a method to correctly pass the arguments
	def SetDepthObject(self, Normal=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ќбъект, задающий глубину выдавливани€'
		return self._oleobj_.InvokeTypes(7, LCID, 4, (24, 0), ((11, 1), (9, 1)),Normal
			, arg1)

	# The method SetDraftOutward is actually a property, but must be used as a method to correctly pass the arguments
	def SetDraftOutward(self, Normal=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ѕризнак уклона наружу.'
		return self._oleobj_.InvokeTypes(6, LCID, 4, (24, 0), ((11, 1), (11, 1)),Normal
			, arg1)

	# The method SetDraftValue is actually a property, but must be used as a method to correctly pass the arguments
	def SetDraftValue(self, Normal=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'”гол уклона.'
		return self._oleobj_.InvokeTypes(5, LCID, 4, (24, 0), ((11, 1), (5, 1)),Normal
			, arg1)

	# The method SetExtrusionType is actually a property, but must be used as a method to correctly pass the arguments
	def SetExtrusionType(self, Normal=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'“ип выдавливани€.'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((11, 1), (3, 1)),Normal
			, arg1)

	def SetSideParameters(self, Normal=defaultNamedNotOptArg, ExtrusionType=defaultNamedNotOptArg, Depth=defaultNamedNotOptArg, DraftValue=defaultNamedNotOptArg
			, DraftOutward=defaultNamedNotOptArg, DepthObject=defaultNamedNotOptArg):
		'”становить параметры выдавливани€ в одном направлении.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), ((11, 1), (3, 1), (5, 1), (5, 1), (11, 1), (9, 1)),Normal
			, ExtrusionType, Depth, DraftValue, DraftOutward, DepthObject
			)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Cut": (101, 2, (11, 0), (), "Cut", None),
		"Direction": (2, 2, (3, 0), (), "Direction", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'Sketch' returns object of type 'ISketch'
		"Sketch": (1, 2, (9, 0), (), "Sketch", '{E6BBF50D-8401-4FB3-A6B6-153D3F447255}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Cut": ((101, LCID, 4, 0),()),
		"Direction": ((2, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Sketch": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICutLine(DispatchBaseClass):
	'Ћини€ разреза/сечени€.'
	CLSID = IID('{26E86124-DC1C-41A2-8075-E73F3EAD8474}')
	coclass_clsid = IID('{DE089315-444A-46A1-A551-4F0264EF11D2}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'AdditionalText' returns object of type 'IText'
		"AdditionalText": (9, 2, (9, 0), (), "AdditionalText", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		"AdditionalTextPos": (12, 2, (11, 0), (), "AdditionalTextPos", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ArrowPos": (1, 2, (11, 0), (), "ArrowPos", None),
		"ArrowType": (13, 2, (3, 0), (), "ArrowType", None),
		"AutoSheet": (10, 2, (11, 0), (), "AutoSheet", None),
		"AutoSorted": (7, 2, (11, 0), (), "AutoSorted", None),
		"AutoZone": (11, 2, (11, 0), (), "AutoZone", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Points": (6, 2, (12, 0), (), "Points", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		# Method 'Text' returns object of type 'IText'
		"Text": (8, 2, (9, 0), (), "Text", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"X1": (2, 2, (5, 0), (), "X1", None),
		"X2": (4, 2, (5, 0), (), "X2", None),
		"Y1": (3, 2, (5, 0), (), "Y1", None),
		"Y2": (5, 2, (5, 0), (), "Y2", None),
	}
	_prop_map_put_ = {
		"AdditionalTextPos": ((12, LCID, 4, 0),()),
		"ArrowPos": ((1, LCID, 4, 0),()),
		"ArrowType": ((13, LCID, 4, 0),()),
		"AutoSheet": ((10, LCID, 4, 0),()),
		"AutoSorted": ((7, LCID, 4, 0),()),
		"AutoZone": ((11, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"Points": ((6, LCID, 4, 0),()),
		"X1": ((2, LCID, 4, 0),()),
		"X2": ((4, LCID, 4, 0),()),
		"Y1": ((3, LCID, 4, 0),()),
		"Y2": ((5, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICutLines(DispatchBaseClass):
	' оллекци€ линий разреза/сечени€.'
	CLSID = IID('{666DA5B4-324C-493C-9A91-37D9E078EB4E}')
	coclass_clsid = IID('{AFDE9B99-603D-4B29-B2E5-3F7399B72619}')

	# Result is of type ICutLine
	def Add(self):
		'ƒобавить линию разреза/сечени€ в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{26E86124-DC1C-41A2-8075-E73F3EAD8474}')
		return ret

	# Result is of type ICutLine
	# The method CutLine is actually a property, but must be used as a method to correctly pass the arguments
	def CutLine(self, Index=defaultNamedNotOptArg):
		'ѕолучить линию разреза/сечени€ по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'CutLine', '{26E86124-DC1C-41A2-8075-E73F3EAD8474}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ICutRotated(DispatchBaseClass):
	"Ёлемент '¬ырезать вращением'."
	CLSID = IID('{115A16EF-B0C3-4DEB-9D65-D2324FA075D8}')
	coclass_clsid = IID('{D96A0574-FB91-4D49-AF19-EBCC78335723}')

	# The method Angle is actually a property, but must be used as a method to correctly pass the arguments
	def Angle(self, Normal=defaultNamedNotOptArg):
		'”гол вращени€.'
		return self._oleobj_.InvokeTypes(6, LCID, 2, (5, 0), ((11, 1),),Normal
			)

	# Result is of type IModelObject
	# The method AngleObject is actually a property, but must be used as a method to correctly pass the arguments
	def AngleObject(self, Normal=defaultNamedNotOptArg):
		'ќбъект, задающий угол вращени€.'
		ret = self._oleobj_.InvokeTypes(7, LCID, 2, (9, 0), ((11, 1),),Normal
			)
		if ret is not None:
			ret = Dispatch(ret, 'AngleObject', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# The method CutOffByPoint is actually a property, but must be used as a method to correctly pass the arguments
	def CutOffByPoint(self, Normal=defaultNamedNotOptArg):
		'‘лаг отсекать дл€ способа до точки.'
		return self._oleobj_.InvokeTypes(8, LCID, 2, (11, 0), ((11, 1),),Normal
			)

	# The method RotatedType is actually a property, but must be used as a method to correctly pass the arguments
	def RotatedType(self, Normal=defaultNamedNotOptArg):
		'—пособ построени€ угла вращени€.'
		return self._oleobj_.InvokeTypes(5, LCID, 2, (3, 0), ((11, 1),),Normal
			)

	# The method SetAngle is actually a property, but must be used as a method to correctly pass the arguments
	def SetAngle(self, Normal=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'”гол вращени€.'
		return self._oleobj_.InvokeTypes(6, LCID, 4, (24, 0), ((11, 1), (5, 1)),Normal
			, arg1)

	# The method SetAngleObject is actually a property, but must be used as a method to correctly pass the arguments
	def SetAngleObject(self, Normal=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ќбъект, задающий угол вращени€.'
		return self._oleobj_.InvokeTypes(7, LCID, 4, (24, 0), ((11, 1), (9, 1)),Normal
			, arg1)

	# The method SetCutOffByPoint is actually a property, but must be used as a method to correctly pass the arguments
	def SetCutOffByPoint(self, Normal=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'‘лаг отсекать дл€ способа до точки.'
		return self._oleobj_.InvokeTypes(8, LCID, 4, (24, 0), ((11, 1), (11, 1)),Normal
			, arg1)

	# The method SetRotatedType is actually a property, but must be used as a method to correctly pass the arguments
	def SetRotatedType(self, Normal=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'—пособ построени€ угла вращени€.'
		return self._oleobj_.InvokeTypes(5, LCID, 4, (24, 0), ((11, 1), (3, 1)),Normal
			, arg1)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Axis' returns object of type 'IModelObject'
		"Axis": (2, 2, (9, 0), (), "Axis", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Cut": (101, 2, (11, 0), (), "Cut", None),
		"Direction": (3, 2, (3, 0), (), "Direction", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		# Method 'Profile' returns object of type 'IModelObject'
		"Profile": (1, 2, (9, 0), (), "Profile", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"ToroidShapeType": (4, 2, (11, 0), (), "ToroidShapeType", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Axis": ((2, LCID, 4, 0),()),
		"Cut": ((101, LCID, 4, 0),()),
		"Direction": ((3, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Profile": ((1, LCID, 4, 0),()),
		"ToroidShapeType": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICutUnitMarking(DispatchBaseClass):
	'ќбозначение узла в сечении.'
	CLSID = IID('{2EDA58EE-DBDA-44CC-AD10-6895006D498C}')
	coclass_clsid = IID('{BE66B386-7D76-4AFC-AC47-521B6648CB8F}')

	def AddStroke(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Length=defaultNamedNotOptArg):
		'ƒобавить штрих.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1)),X
			, Y, Length)

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def DeleteStroke(self, Index=defaultNamedNotOptArg):
		'”далить штрих.'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (11, 0), ((3, 1),),Index
			)

	# The method SetStroke is actually a property, but must be used as a method to correctly pass the arguments
	def SetStroke(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ƒлина штриха'
		return self._oleobj_.InvokeTypes(4, LCID, 4, (24, 0), ((3, 1), (5, 1)),Index
			, arg1)

	# The method SetStrokeX is actually a property, but must be used as a method to correctly pass the arguments
	def SetStrokeX(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		' оордината точки прив€зки штриха по X.'
		return self._oleobj_.InvokeTypes(2, LCID, 4, (24, 0), ((3, 1), (5, 1)),Index
			, arg1)

	# The method SetStrokeY is actually a property, but must be used as a method to correctly pass the arguments
	def SetStrokeY(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		' оордината точки прив€зки штриха по Y.'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((3, 1), (5, 1)),Index
			, arg1)

	# The method Stroke is actually a property, but must be used as a method to correctly pass the arguments
	def Stroke(self, Index=defaultNamedNotOptArg):
		'ƒлина штриха'
		return self._oleobj_.InvokeTypes(4, LCID, 2, (5, 0), ((3, 1),),Index
			)

	# The method StrokeX is actually a property, but must be used as a method to correctly pass the arguments
	def StrokeX(self, Index=defaultNamedNotOptArg):
		' оордината точки прив€зки штриха по X.'
		return self._oleobj_.InvokeTypes(2, LCID, 2, (5, 0), ((3, 1),),Index
			)

	# The method StrokeY is actually a property, but must be used as a method to correctly pass the arguments
	def StrokeY(self, Index=defaultNamedNotOptArg):
		' оордината точки прив€зки штриха по Y.'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (5, 0), ((3, 1),),Index
			)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (5, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"ShelfDirection": (6, 2, (3, 0), (), "ShelfDirection", None),
		"ShelfX": (7, 2, (5, 0), (), "ShelfX", None),
		"ShelfY": (8, 2, (5, 0), (), "ShelfY", None),
		"StrokeCount": (1, 2, (3, 0), (), "StrokeCount", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		# Method 'TextDown' returns object of type 'IText'
		"TextDown": (10, 2, (9, 0), (), "TextDown", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		# Method 'TextUp' returns object of type 'IText'
		"TextUp": (9, 2, (9, 0), (), "TextUp", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Angle": ((5, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"ShelfDirection": ((6, LCID, 4, 0),()),
		"ShelfX": ((7, LCID, 4, 0),()),
		"ShelfY": ((8, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICutUnitMarkings(DispatchBaseClass):
	' оллекци€ обозначений узлов в сечении.'
	CLSID = IID('{23B00F94-98D3-4AD7-8827-F4088F4A9E5C}')
	coclass_clsid = IID('{DDEFF219-E3BC-457F-87FF-3C3ADCFA720E}')

	# Result is of type ICutUnitMarking
	def Add(self):
		'ƒобавить обозначение узла в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{2EDA58EE-DBDA-44CC-AD10-6895006D498C}')
		return ret

	# Result is of type ICutUnitMarking
	# The method CutUnitMarking is actually a property, but must be used as a method to correctly pass the arguments
	def CutUnitMarking(self, Index=defaultNamedNotOptArg):
		'ѕолучить обозначение узла в сечении, заданное по индексу, тексту или ссылке.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'CutUnitMarking', '{2EDA58EE-DBDA-44CC-AD10-6895006D498C}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ICutViewParam(DispatchBaseClass):
	'ѕараметры разреза вида.'
	CLSID = IID('{D4C8B5AF-B2A1-4E07-9CD0-A1FC5B0BC1E1}')
	coclass_clsid = None

	def AddCut(self, Name=defaultNamedNotOptArg, Number=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg
			, ModelCut=defaultNamedNotOptArg, Contour=defaultNamedNotOptArg, View=defaultNamedNotOptArg):
		'ƒобавить разрез.'
		return self._oleobj_.InvokeTypes(3500, LCID, 1, (3, 0), ((8, 1), (3, 1), (5, 1), (5, 1), (11, 1), (9, 1), (9, 1)),Name
			, Number, X, Y, ModelCut, Contour
			, View)

	def DeleteAllCuts(self):
		'”далить все разрезы.'
		return self._oleobj_.InvokeTypes(3502, LCID, 1, (11, 0), (),)

	def DeleteCut(self, Index=defaultNamedNotOptArg):
		'”далить разрез.'
		return self._oleobj_.InvokeTypes(3501, LCID, 1, (11, 0), ((3, 1),),Index
			)

	# Result is of type IDrawingObject
	def GetCutParams(self, Index=defaultNamedNotOptArg, Name=pythoncom.Missing, Number=pythoncom.Missing, ModelCut=pythoncom.Missing):
		'ѕолучить параметры разреза.'
		return self._ApplyTypes_(3506, 1, (9, 0), ((3, 1), (16392, 2), (16387, 2), (16395, 2)), 'GetCutParams', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}',Index
			, Name, Number, ModelCut)

	def GetCutPlanePosition(self, Index=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing):
		'ѕолучить координаты точки, через которую пройдЄт секуща€ плоскость.'
		return self._ApplyTypes_(3504, 1, (11, 0), ((3, 1), (16389, 2), (16389, 2)), 'GetCutPlanePosition', None,Index
			, X, Y)

	# Result is of type IHatchParam
	# The method HatchParam is actually a property, but must be used as a method to correctly pass the arguments
	def HatchParam(self, Index=defaultNamedNotOptArg):
		'ѕараметры штриховки.'
		ret = self._oleobj_.InvokeTypes(3509, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'HatchParam', '{437D6587-7649-4A0C-80BB-7A6E89661839}')
		return ret

	# The method LocalCut is actually a property, but must be used as a method to correctly pass the arguments
	def LocalCut(self, Index=defaultNamedNotOptArg):
		'ћестный разрез.'
		return self._oleobj_.InvokeTypes(3508, LCID, 2, (11, 0), ((3, 1),),Index
			)

	def SetCutParams(self, Index=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, Number=defaultNamedNotOptArg, ModelCut=defaultNamedNotOptArg):
		'”становить параметры разреза.'
		return self._oleobj_.InvokeTypes(3505, LCID, 1, (11, 0), ((3, 1), (8, 1), (3, 1), (11, 1)),Index
			, Name, Number, ModelCut)

	def SetCutPlanePosition(self, Index=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg):
		'”становить координаты точки, через которую пройдЄт секуща€ плоскость.'
		return self._oleobj_.InvokeTypes(3503, LCID, 1, (11, 0), ((3, 1), (5, 1), (5, 1)),Index
			, X, Y)

	# The method SetLocalCut is actually a property, but must be used as a method to correctly pass the arguments
	def SetLocalCut(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ћестный разрез.'
		return self._oleobj_.InvokeTypes(3508, LCID, 4, (24, 0), ((3, 1), (11, 1)),Index
			, arg1)

	_prop_map_get_ = {
		"CutsCount": (3507, 2, (3, 0), (), "CutsCount", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ICuts(DispatchBaseClass):
	" оллекци€ операций 'сечение'."
	CLSID = IID('{85B81047-11F3-46D3-869D-EFE37A6A8588}')
	coclass_clsid = IID('{3803D968-E469-45C2-8C3B-0D5B0E00C034}')

	# Result is of type ICut
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{D76BE44A-2AB3-4B5A-B893-3C27E227DF4D}')
		return ret

	# Result is of type ICut
	# The method Cut is actually a property, but must be used as a method to correctly pass the arguments
	def Cut(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу или по имени.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Cut', '{D76BE44A-2AB3-4B5A-B893-3C27E227DF4D}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ICylindricSpiral3D(DispatchBaseClass):
	'÷илиндрическа€ спираль.'
	CLSID = IID('{529DE4B2-3130-4C96-B230-32DB100BCFAC}')
	coclass_clsid = IID('{CC5B7B89-DFA5-42EB-B307-113A013052D6}')

	def GetBasePoint(self, X=pythoncom.Missing, Y=pythoncom.Missing):
		'ѕолучить координаты точки прив€зки спирали на базовой плоскости (точку пересечени€ оси спирали с базовой плоскостью).'
		return self._ApplyTypes_(5, 1, (11, 0), ((16389, 2), (16389, 2)), 'GetBasePoint', None,X
			, Y)

	def SetBasePoint(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg):
		'”становить координаты точки прив€зки спирали на базовой плоскости (точку пересечени€ оси спирали с базовой плоскостью).'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), ((5, 1), (5, 1)),X
			, Y)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BasePlane' returns object of type 'IModelObject'
		"BasePlane": (4, 2, (9, 0), (), "BasePlane", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"BuildingDirection": (8, 2, (11, 0), (), "BuildingDirection", None),
		"BuildingType": (7, 2, (3, 0), (), "BuildingType", None),
		"Diameter": (101, 2, (5, 0), (), "Diameter", None),
		# Method 'DiameterBaseObject' returns object of type 'IModelObject'
		"DiameterBaseObject": (103, 2, (9, 0), (), "DiameterBaseObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"DiameterType": (102, 2, (3, 0), (), "DiameterType", None),
		"Height": (10, 2, (5, 0), (), "Height", None),
		# Method 'HeightBaseObject' returns object of type 'IModelObject'
		"HeightBaseObject": (11, 2, (9, 0), (), "HeightBaseObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"HeightCorrection": (12, 2, (5, 0), (), "HeightCorrection", None),
		"HeightCorrectionType": (15, 2, (11, 0), (), "HeightCorrectionType", None),
		"HeightType": (9, 2, (3, 0), (), "HeightType", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'Sketch' returns object of type 'ISketch'
		"Sketch": (14, 2, (9, 0), (), "Sketch", '{E6BBF50D-8401-4FB3-A6B6-153D3F447255}'),
		"Step": (2, 2, (5, 0), (), "Step", None),
		"TurnDirection": (3, 2, (11, 0), (), "TurnDirection", None),
		"TurningAngle": (13, 2, (5, 0), (), "TurningAngle", None),
		"TurnsCount": (1, 2, (5, 0), (), "TurnsCount", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"BasePlane": ((4, LCID, 4, 0),()),
		"BuildingDirection": ((8, LCID, 4, 0),()),
		"BuildingType": ((7, LCID, 4, 0),()),
		"Diameter": ((101, LCID, 4, 0),()),
		"DiameterBaseObject": ((103, LCID, 4, 0),()),
		"DiameterType": ((102, LCID, 4, 0),()),
		"Height": ((10, LCID, 4, 0),()),
		"HeightBaseObject": ((11, LCID, 4, 0),()),
		"HeightCorrection": ((12, LCID, 4, 0),()),
		"HeightCorrectionType": ((15, LCID, 4, 0),()),
		"HeightType": ((9, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Step": ((2, LCID, 4, 0),()),
		"TurnDirection": ((3, LCID, 4, 0),()),
		"TurningAngle": ((13, LCID, 4, 0),()),
		"TurnsCount": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDerivedPattern(DispatchBaseClass):
	'ћассив по образцу.'
	CLSID = IID('{575D30E2-EFA3-40B5-9CA1-02A63E0D50D9}')
	coclass_clsid = IID('{9B988E67-1EFB-4441-BB37-F33A50A5C209}')

	def AddInitialObjects(self, Objects=defaultNamedNotOptArg):
		'ƒобавить объекты в массив копируемых объектов.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), ((12, 1),),Objects
			)

	def Clear(self):
		'ќчистить список исходных объектов массива.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), (),)

	def Destroy(self):
		'–азрушить массив.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), (),)

	# Result is of type IModelObject
	# The method Exemplar is actually a property, but must be used as a method to correctly pass the arguments
	def Exemplar(self, Index1=defaultNamedNotOptArg, Index2=defaultNamedNotOptArg):
		'ѕолучить экземпл€р по индексу (или индексам).'
		ret = self._oleobj_.InvokeTypes(11, LCID, 2, (9, 0), ((3, 1), (3, 1)),Index1
			, Index2)
		if ret is not None:
			ret = Dispatch(ret, 'Exemplar', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def GetExemplarsCounts(self, Count1=pythoncom.Missing, Count2=pythoncom.Missing):
		'ѕолучить количество экземпл€ров.'
		return self._ApplyTypes_(12, 1, (11, 0), ((16387, 2), (16387, 2)), 'GetExemplarsCounts', None,Count1
			, Count2)

	def IsInitialObject(self, Object=defaultNamedNotOptArg):
		'ѕроверка - €вл€етс€ ли объект исходным дл€ массива.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((9, 1),),Object
			)

	def IsSuitableObject(self, Object=defaultNamedNotOptArg):
		'ѕроверка пригодности объекта дл€ операции.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), ((9, 1),),Object
			)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"AllowDeleted": (105, 2, (11, 0), (), "AllowDeleted", None),
		"AllowNesting": (104, 2, (11, 0), (), "AllowNesting", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BasePoint' returns object of type 'IModelObject'
		"BasePoint": (10, 2, (9, 0), (), "BasePoint", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"BasePointType": (9, 2, (3, 0), (), "BasePointType", None),
		"GeometryPattern": (8, 2, (11, 0), (), "GeometryPattern", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"InitialObjects": (1, 2, (12, 0), (), "InitialObjects", None),
		"InstanceDeletedIndexes": (2, 2, (12, 0), (), "InstanceDeletedIndexes", None),
		# Method 'MasterPattern' returns object of type 'IModelObject'
		"MasterPattern": (101, 2, (9, 0), (), "MasterPattern", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		"OrientBySample": (102, 2, (11, 0), (), "OrientBySample", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'SampleExemplar' returns object of type 'IModelObject'
		"SampleExemplar": (103, 2, (9, 0), (), "SampleExemplar", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"AllowDeleted": ((105, LCID, 4, 0),()),
		"AllowNesting": ((104, LCID, 4, 0),()),
		"BasePoint": ((10, LCID, 4, 0),()),
		"BasePointType": ((9, LCID, 4, 0),()),
		"GeometryPattern": ((8, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"InitialObjects": ((1, LCID, 4, 0),()),
		"InstanceDeletedIndexes": ((2, LCID, 4, 0),()),
		"MasterPattern": ((101, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"OrientBySample": ((102, LCID, 4, 0),()),
		"SampleExemplar": ((103, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDiametralDimension(DispatchBaseClass):
	'ƒиаметральный размер.'
	CLSID = IID('{2B4CE92F-438D-4D3E-8F8D-4D14E5D0E214}')
	coclass_clsid = IID('{117E5AB9-3D8C-4F14-BB4B-14FF43082EA7}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (6, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BaseObject' returns object of type 'IDrawingObject'
		"BaseObject": (5, 2, (9, 0), (), "BaseObject", '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}'),
		"DimensionType": (4, 2, (11, 0), (), "DimensionType", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Radius": (3, 2, (5, 0), (), "Radius", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"Xc": (1, 2, (5, 0), (), "Xc", None),
		"Yc": (2, 2, (5, 0), (), "Yc", None),
	}
	_prop_map_put_ = {
		"Angle": ((6, LCID, 4, 0),()),
		"BaseObject": ((5, LCID, 4, 0),()),
		"DimensionType": ((4, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"Radius": ((3, LCID, 4, 0),()),
		"Xc": ((1, LCID, 4, 0),()),
		"Yc": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDiametralDimension3D(DispatchBaseClass):
	'ƒиаметральный размер 3D.'
	CLSID = IID('{261AE065-69B8-4B42-B103-C8746720C5BF}')
	coclass_clsid = IID('{FC1FC235-02C5-41D5-871B-D754926B593E}')

	def GetCenterPoint(self, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		' оординаты центра.'
		return self._ApplyTypes_(7, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2)), 'GetCenterPoint', None,X
			, Y, Z)

	def GetSurfacePoint(self, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'“очка пересечени€ размера с поверхностью или ребром.'
		return self._ApplyTypes_(5, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2)), 'GetSurfacePoint', None,X
			, Y, Z)

	def SetCenterPoint(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg):
		' оординаты центра.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1)),X
			, Y, Z)

	def SetSurfacePoint(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg):
		'“очка пересечени€ размера с поверхностью или ребром.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1)),X
			, Y, Z)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (4, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"DimensionType": (3, 2, (11, 0), (), "DimensionType", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Object1' returns object of type 'IModelObject'
		"Object1": (1, 2, (9, 0), (), "Object1", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		# Method 'PlaneObject' returns object of type 'IModelObject'
		"PlaneObject": (2, 2, (9, 0), (), "PlaneObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Angle": ((4, LCID, 4, 0),()),
		"DimensionType": ((3, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Object1": ((1, LCID, 4, 0),()),
		"PlaneObject": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDiametralDimensions(DispatchBaseClass):
	' оллекци€ диаметральных размеров.'
	CLSID = IID('{8E45FEB9-7BCD-4C9F-9767-320736980662}')
	coclass_clsid = IID('{2195AC03-677A-4236-9BEA-FBDE74CEE7F3}')

	# Result is of type IDiametralDimension
	def Add(self):
		'ƒобавить диаметральный размер в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{2B4CE92F-438D-4D3E-8F8D-4D14E5D0E214}')
		return ret

	# Result is of type IDiametralDimension
	# The method DiametralDimension is actually a property, but must be used as a method to correctly pass the arguments
	def DiametralDimension(self, Index=defaultNamedNotOptArg):
		'ѕолучить диаметральный размер, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'DiametralDimension', '{2B4CE92F-438D-4D3E-8F8D-4D14E5D0E214}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IDiametralDimensions3D(DispatchBaseClass):
	' оллекци€ диаметральных размеров 3D.'
	CLSID = IID('{79B5AC3B-9B2F-4C75-8482-3C0D6B07D911}')
	coclass_clsid = IID('{F3F0EDE3-3E00-48E8-922F-121CA571BE26}')

	# Result is of type IDiametralDimension3D
	def Add(self):
		'ƒобавить диаметральный размер в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{261AE065-69B8-4B42-B103-C8746720C5BF}')
		return ret

	# Result is of type IDiametralDimension3D
	# The method DiametralDimension3D is actually a property, but must be used as a method to correctly pass the arguments
	def DiametralDimension3D(self, Index=defaultNamedNotOptArg):
		'ѕолучить диаметральный размер, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'DiametralDimension3D', '{261AE065-69B8-4B42-B103-C8746720C5BF}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IDimensionParams(DispatchBaseClass):
	'ѕараметры отрисовки размера.'
	CLSID = IID('{534518CC-6577-4273-887A-6B833FDE6ED7}')
	coclass_clsid = None

	def InitDefaultValues(self):
		'»нициализаци€ параметров умолчательными значени€ми.'
		return self._oleobj_.InvokeTypes(4015, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"ArrowPos": (4005, 2, (3, 0), (), "ArrowPos", None),
		"ArrowType1": (4003, 2, (3, 0), (), "ArrowType1", None),
		"ArrowType2": (4004, 2, (3, 0), (), "ArrowType2", None),
		"Gap": (4013, 2, (11, 0), (), "Gap", None),
		"GapValue": (4014, 2, (3, 0), (), "GapValue", None),
		"RemoteLine1": (4001, 2, (11, 0), (), "RemoteLine1", None),
		"RemoteLine2": (4002, 2, (11, 0), (), "RemoteLine2", None),
		"ShelfAngle": (4011, 2, (5, 0), (), "ShelfAngle", None),
		"ShelfDirection": (4010, 2, (3, 0), (), "ShelfDirection", None),
		"ShelfLength": (4012, 2, (5, 0), (), "ShelfLength", None),
		"TextBase": (4009, 2, (3, 0), (), "TextBase", None),
		"TextOnLine": (4008, 2, (3, 0), (), "TextOnLine", None),
		"TextPos": (4006, 2, (3, 0), (), "TextPos", None),
		"TextType": (4007, 2, (3, 0), (), "TextType", None),
	}
	_prop_map_put_ = {
		"ArrowPos": ((4005, LCID, 4, 0),()),
		"ArrowType1": ((4003, LCID, 4, 0),()),
		"ArrowType2": ((4004, LCID, 4, 0),()),
		"Gap": ((4013, LCID, 4, 0),()),
		"GapValue": ((4014, LCID, 4, 0),()),
		"RemoteLine1": ((4001, LCID, 4, 0),()),
		"RemoteLine2": ((4002, LCID, 4, 0),()),
		"ShelfAngle": ((4011, LCID, 4, 0),()),
		"ShelfDirection": ((4010, LCID, 4, 0),()),
		"ShelfLength": ((4012, LCID, 4, 0),()),
		"TextBase": ((4009, LCID, 4, 0),()),
		"TextOnLine": ((4008, LCID, 4, 0),()),
		"TextPos": ((4006, LCID, 4, 0),()),
		"TextType": ((4007, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDimensionText(DispatchBaseClass):
	'“ексты размера.'
	CLSID = IID('{E0197BA7-C3FB-44A3-9C13-49115A150ED2}')
	coclass_clsid = None

	def InitDeviations(self, HighDeviationValue=defaultNamedNotOptArg, LowDeviationValue=defaultNamedNotOptArg):
		'”становить отклонени€.'
		return self._oleobj_.InvokeTypes(5025, LCID, 1, (11, 0), ((5, 1), (5, 1)),HighDeviationValue
			, LowDeviationValue)

	_prop_map_get_ = {
		"Accuracy": (5026, 2, (3, 0), (), "Accuracy", None),
		"AccuracyDecimalsCount": (5027, 2, (3, 0), (), "AccuracyDecimalsCount", None),
		"AutoNominalValue": (5005, 2, (11, 0), (), "AutoNominalValue", None),
		"Brackets": (5011, 2, (3, 0), (), "Brackets", None),
		"DeviationOn": (5007, 2, (11, 0), (), "DeviationOn", None),
		"DeviationType": (5008, 2, (3, 0), (), "DeviationType", None),
		"HasTolerance": (5022, 2, (11, 0), (), "HasTolerance", None),
		# Method 'HighDeviation' returns object of type 'ITextLine'
		"HighDeviation": (5016, 2, (9, 0), (), "HighDeviation", '{AAB72FE2-DEA3-4FB6-B0DD-B926249EF67C}'),
		"HighDeviationValue": (5023, 2, (5, 0), (), "HighDeviationValue", None),
		# Method 'LowDeviation' returns object of type 'ITextLine'
		"LowDeviation": (5017, 2, (9, 0), (), "LowDeviation", '{AAB72FE2-DEA3-4FB6-B0DD-B926249EF67C}'),
		"LowDeviationValue": (5024, 2, (5, 0), (), "LowDeviationValue", None),
		# Method 'NominalText' returns object of type 'ITextLine'
		"NominalText": (5014, 2, (9, 0), (), "NominalText", '{AAB72FE2-DEA3-4FB6-B0DD-B926249EF67C}'),
		"NominalValue": (5004, 2, (5, 0), (), "NominalValue", None),
		# Method 'Prefix' returns object of type 'ITextLine'
		"Prefix": (5013, 2, (9, 0), (), "Prefix", '{AAB72FE2-DEA3-4FB6-B0DD-B926249EF67C}'),
		"Rectangle": (5009, 2, (11, 0), (), "Rectangle", None),
		"Sign": (5002, 2, (3, 0), (), "Sign", None),
		"SignFont": (5003, 2, (8, 0), (), "SignFont", None),
		"Style": (5001, 2, (3, 0), (), "Style", None),
		# Method 'Suffix' returns object of type 'ITextLine'
		"Suffix": (5019, 2, (9, 0), (), "Suffix", '{AAB72FE2-DEA3-4FB6-B0DD-B926249EF67C}'),
		"TextAlign": (5012, 2, (3, 0), (), "TextAlign", None),
		"TextFormat": (5021, 2, (3, 0), (), "TextFormat", None),
		# Method 'TextUnder' returns object of type 'IText'
		"TextUnder": (5020, 2, (9, 0), (), "TextUnder", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		"Tolerance": (5015, 2, (8, 0), (), "Tolerance", None),
		"ToleranceOn": (5006, 2, (11, 0), (), "ToleranceOn", None),
		"Underline": (5010, 2, (11, 0), (), "Underline", None),
		# Method 'Unit' returns object of type 'ITextLine'
		"Unit": (5018, 2, (9, 0), (), "Unit", '{AAB72FE2-DEA3-4FB6-B0DD-B926249EF67C}'),
	}
	_prop_map_put_ = {
		"Accuracy": ((5026, LCID, 4, 0),()),
		"AutoNominalValue": ((5005, LCID, 4, 0),()),
		"Brackets": ((5011, LCID, 4, 0),()),
		"DeviationOn": ((5007, LCID, 4, 0),()),
		"DeviationType": ((5008, LCID, 4, 0),()),
		"HasTolerance": ((5022, LCID, 4, 0),()),
		"NominalValue": ((5004, LCID, 4, 0),()),
		"Rectangle": ((5009, LCID, 4, 0),()),
		"Sign": ((5002, LCID, 4, 0),()),
		"SignFont": ((5003, LCID, 4, 0),()),
		"Style": ((5001, LCID, 4, 0),()),
		"TextAlign": ((5012, LCID, 4, 0),()),
		"TextFormat": ((5021, LCID, 4, 0),()),
		"Tolerance": ((5015, LCID, 4, 0),()),
		"ToleranceOn": ((5006, LCID, 4, 0),()),
		"Underline": ((5010, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDistanceAngleMeasurement3D(DispatchBaseClass):
	'»змерение рассто€ни€ и угла.'
	CLSID = IID('{FF326C86-55CD-49FB-BBCE-BC033F762CF7}')
	coclass_clsid = IID('{2A128198-F2CF-4F33-85BF-7E4814254308}')

	def GetMaxPoint1(self, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'ѕолучить первую точку отрезка максимального рассто€ни€.'
		return self._ApplyTypes_(12, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2)), 'GetMaxPoint1', None,X
			, Y, Z)

	def GetMaxPoint2(self, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'ѕолучить вторую точку отрезка максимального рассто€ни€.'
		return self._ApplyTypes_(13, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2)), 'GetMaxPoint2', None,X
			, Y, Z)

	def GetMinPoint1(self, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'ѕолучить первую точку отрезка минимального рассто€ни€.'
		return self._ApplyTypes_(10, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2)), 'GetMinPoint1', None,X
			, Y, Z)

	def GetMinPoint2(self, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'ѕолучить вторую точку отрезка минимального рассто€ни€.'
		return self._ApplyTypes_(11, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2)), 'GetMinPoint2', None,X
			, Y, Z)

	def GetNormalPoint1(self, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'ѕолучить первую точку отрезка рассто€ни€ по нормали.'
		return self._ApplyTypes_(14, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2)), 'GetNormalPoint1', None,X
			, Y, Z)

	def GetNormalPoint2(self, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'ѕолучить вторую точку отрезка рассто€ни€ по норамли.'
		return self._ApplyTypes_(15, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2)), 'GetNormalPoint2', None,X
			, Y, Z)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (9, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Briefly": (3, 2, (11, 0), (), "Briefly", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"IsAngleValid": (8, 2, (11, 0), (), "IsAngleValid", None),
		"LNormal": (7, 2, (5, 0), (), "LNormal", None),
		"Lmax": (6, 2, (5, 0), (), "Lmax", None),
		"Lmin": (5, 2, (5, 0), (), "Lmin", None),
		"MeasureResult": (4, 2, (3, 0), (), "MeasureResult", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Object1' returns object of type 'IModelObject'
		"Object1": (1, 2, (9, 0), (), "Object1", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'Object2' returns object of type 'IModelObject'
		"Object2": (2, 2, (9, 0), (), "Object2", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Briefly": ((3, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Object1": ((1, LCID, 4, 0),()),
		"Object2": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDistanceAngleMeasurements3D(DispatchBaseClass):
	' оллекци€ измерений рассто€ни€ и угла.'
	CLSID = IID('{F16C388F-16DC-4498-8875-EC8B300CE4A0}')
	coclass_clsid = IID('{CFA1BE63-DAEC-4B9B-AE59-A200323FDAB1}')

	# Result is of type IDistanceAngleMeasurement3D
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{FF326C86-55CD-49FB-BBCE-BC033F762CF7}')
		return ret

	# Result is of type IDistanceAngleMeasurement3D
	# The method DistanceAngleMeasurement3D is actually a property, but must be used as a method to correctly pass the arguments
	def DistanceAngleMeasurement3D(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу или по имени.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'DistanceAngleMeasurement3D', '{FF326C86-55CD-49FB-BBCE-BC033F762CF7}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IDocument2DSettings(DispatchBaseClass):
	'Ќастройки 2D документа.'
	CLSID = IID('{B09A64BF-7AA6-4BF6-B8E8-AA8E8EE6E9D6}')
	coclass_clsid = IID('{EBB0EE6B-305C-4448-9674-3F5072606D47}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"CompositionInherit": (102, 2, (11, 0), (), "CompositionInherit", None),
		"LayersGroupWay": (101, 2, (3, 0), (), "LayersGroupWay", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"CompositionInherit": ((102, LCID, 4, 0),()),
		"LayersGroupWay": ((101, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDocument3DManager(DispatchBaseClass):
	'ћенеджер 3D документа.'
	CLSID = IID('{75F1CA7E-5071-4C1F-8A9F-F76A6E05CAF6}')
	coclass_clsid = IID('{2EDCB445-FE02-4529-BAD6-DED0C9DAF6A5}')

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Layers3D' returns object of type 'ILayers3D'
		"Layers3D": (1, 2, (9, 0), (), "Layers3D", '{D637078B-6498-40B6-9F41-83ED1EA40D1F}'),
		# Method 'LayersDynamicGroups3D' returns object of type 'ILayerGroups3D'
		"LayersDynamicGroups3D": (3, 2, (9, 0), (), "LayersDynamicGroups3D", '{D3F08D03-3BB2-4DE6-95A9-38B5C05D8C12}'),
		# Method 'LayersGroups3D' returns object of type 'ILayerGroups3D'
		"LayersGroups3D": (2, 2, (9, 0), (), "LayersGroups3D", '{D3F08D03-3BB2-4DE6-95A9-38B5C05D8C12}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDocument3DSettings(DispatchBaseClass):
	'Ќастройки 3D документа.'
	CLSID = IID('{6FFAF1BC-98C1-4562-A7A7-1D263996B1D4}')
	coclass_clsid = IID('{91008BBD-B5BE-42D8-B9D9-37127514C6F1}')

	_prop_map_get_ = {
		"AccuracyMassProperties": (102, 2, (5, 0), (), "AccuracyMassProperties", None),
		"AccuracyModelDisplaying": (101, 2, (5, 0), (), "AccuracyModelDisplaying", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"AccuracyMassProperties": ((102, LCID, 4, 0),()),
		"AccuracyModelDisplaying": ((101, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDocumentFrame(DispatchBaseClass):
	'»нтерфейс окна документа'
	CLSID = IID('{4437FABA-990F-45E2-B1A2-7754FB326B76}')
	coclass_clsid = IID('{8BFFC9B4-5FE7-4EC5-8BA5-0FF8520D5FF6}')

	def ConvertCoordinates(self, Type=defaultNamedNotOptArg, LX=defaultNamedNotOptArg, LY=defaultNamedNotOptArg, X=pythoncom.Missing
			, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'ѕреобразовать логические координаты в координаты документа.'
		return self._ApplyTypes_(11, 1, (11, 0), ((3, 1), (3, 1), (3, 1), (16389, 2), (16389, 2), (16389, 2)), 'ConvertCoordinates', None,Type
			, LX, LY, X, Y, Z
			)

	def ExecuteKompasCommand(self, CommandID=defaultNamedNotOptArg, PostMessage=True):
		'¬ыполнить команду  омпаса.'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (11, 0), ((3, 1), (11, 49)),CommandID
			, PostMessage)

	def GetFPSData(self):
		return self._ApplyTypes_(15, 1, (12, 0), (), 'GetFPSData', None,)

	def GetHWND(self):
		'ѕолучить Handle окна.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (3, 0), (),)

	def GetPickRay(self, wx=defaultNamedNotOptArg, wy=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing
			, Z=pythoncom.Missing, zx=pythoncom.Missing, zy=pythoncom.Missing, zz=pythoncom.Missing):
		'ѕолучить луч взгл€да.'
		return self._ApplyTypes_(16, 1, (11, 0), ((3, 1), (3, 1), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2)), 'GetPickRay', None,wx
			, wy, X, Y, Z, zx
			, zy, zz)

	def GetZoomScale(self, X=pythoncom.Missing, Y=pythoncom.Missing, Scale=pythoncom.Missing):
		'¬ернуть масштаб и ценр окна документа.'
		return self._ApplyTypes_(7, 1, (24, 0), ((16389, 2), (16389, 2), (16389, 2)), 'GetZoomScale', None,X
			, Y, Scale)

	def IsKompasCommandCheck(self, CommandID=defaultNamedNotOptArg):
		'ѕроверить нажата ли кнопка команды.'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (3, 0), ((3, 1),),CommandID
			)

	def IsKompasCommandEnable(self, CommandID=defaultNamedNotOptArg):
		'ѕроверить доступна ли команда.'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (11, 0), ((3, 1),),CommandID
			)

	def RefreshWindow(self):
		'ќбновить изображение окна.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (24, 0), (),)

	def SetGabaritModifying(self):
		'¬звести флаг изменени€ габарита документа дл€ собственного рисовани€ в окне.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), (),)

	def Zoom(self, X1=defaultNamedNotOptArg, Y1=defaultNamedNotOptArg, X2=defaultNamedNotOptArg, Y2=defaultNamedNotOptArg):
		'–аст€нуть изображение окна.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), ((5, 1), (5, 1), (5, 1), (5, 1)),X1
			, Y1, X2, Y2)

	def ZoomPrevNextOrAll(self, Type=defaultNamedNotOptArg):
		'ќтобразить предыдущий/следующий масштаб или показать весь документ.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((3, 1),),Type
			)

	def ZoomScale(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Scale=defaultNamedNotOptArg):
		'–аст€нуть изображение окна.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (24, 0), ((5, 1), (5, 1), (5, 1)),X
			, Y, Scale)

	_prop_map_get_ = {
		"Active": (2, 2, (11, 0), (), "Active", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Caption": (3, 2, (8, 0), (), "Caption", None),
		"CurrentCursorStep": (18, 2, (5, 0), (), "CurrentCursorStep", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Regime": (1, 2, (3, 0), (), "Regime", None),
		"RoundModeOn": (17, 2, (11, 0), (), "RoundModeOn", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"Active": ((2, LCID, 4, 0),()),
		"Regime": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDocumentFrames(DispatchBaseClass):
	' оллекци€ окон документа'
	CLSID = IID('{1D18C466-C085-4D68-A465-A85D0C8E3A0E}')
	coclass_clsid = IID('{CC89942A-6FE5-4808-8DC8-FF46D546A8EB}')

	# Result is of type IDocumentFrame
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает окно, заданное по индексу'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{4437FABA-990F-45E2-B1A2-7754FB326B76}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает окно, заданное по индексу'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{4437FABA-990F-45E2-B1A2-7754FB326B76}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{4437FABA-990F-45E2-B1A2-7754FB326B76}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IDocumentSettings(DispatchBaseClass):
	'Ќастройки документа.'
	CLSID = IID('{B35FF50E-2991-4630-8AB8-DC3153E7971A}')
	coclass_clsid = IID('{91008BBD-B5BE-42D8-B9D9-37127514C6F1}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDocuments(DispatchBaseClass):
	' оллекци€ документов, открытых в приложении'
	CLSID = IID('{8BF39F08-5537-4910-84CE-B338E55F7BCF}')
	coclass_clsid = IID('{385647BD-89B1-4F2D-A06E-4DD829EE096B}')

	# Result is of type IKompasDocument
	def Add(self, Type=defaultNamedNotOptArg, Visible=True):
		'—оздает новый документ и добавл€ет его в коллекцию'
		ret = self._oleobj_.InvokeTypes(1, LCID, 1, (9, 0), ((3, 1), (11, 49)),Type
			, Visible)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{5C6E318D-BD6E-4AFA-8A13-977EAA0845EF}')
		return ret

	# Result is of type IKompasDocument
	def AddCustomDocument(self, DocumentTypeId=defaultNamedNotOptArg):
		'—оздает новый документ и добавл€ет его в коллекцию'
		ret = self._oleobj_.InvokeTypes(14, LCID, 1, (9, 0), ((8, 1),),DocumentTypeId
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddCustomDocument', '{5C6E318D-BD6E-4AFA-8A13-977EAA0845EF}')
		return ret

	# Result is of type IKompasDocument
	def AddNewDocumentFromTemplate(self, TemplateFileName=defaultNamedNotOptArg):
		'—оздает новый документ по шаблону и добавл€ет его в коллекцию'
		ret = self._oleobj_.InvokeTypes(15, LCID, 1, (9, 0), ((8, 1),),TemplateFileName
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddNewDocumentFromTemplate', '{5C6E318D-BD6E-4AFA-8A13-977EAA0845EF}')
		return ret

	# Result is of type IKompasDocument
	def AddWithDefaultSettings(self, Type=defaultNamedNotOptArg, Visible=True):
		'—оздает новый документ с параметрами из настроек дл€ новых документов'
		ret = self._oleobj_.InvokeTypes(5, LCID, 1, (9, 0), ((3, 1), (11, 49)),Type
			, Visible)
		if ret is not None:
			ret = Dispatch(ret, 'AddWithDefaultSettings', '{5C6E318D-BD6E-4AFA-8A13-977EAA0845EF}')
		return ret

	def GetEmbodimentsTree(self, FileName=defaultNamedNotOptArg, MarkingType=defaultNamedNotOptArg, AddSystemDelimer=defaultNamedNotOptArg, AddSpaces=defaultNamedNotOptArg
			, CurrentEmbodiment=pythoncom.Missing):
		'ƒерево исполнений. ћассив узлов дерева исполнений. SAFEARRAY BSTR - (VT_ARRAY | VT_BSTR)'
		return self._ApplyTypes_(12, 1, (12, 0), ((8, 1), (3, 1), (11, 1), (11, 1), (16387, 2)), 'GetEmbodimentsTree', None,FileName
			, MarkingType, AddSystemDelimer, AddSpaces, CurrentEmbodiment)

	def GetLoadCombinations(self, PathName=defaultNamedNotOptArg, CurrentIndex=pythoncom.Missing):
		"ѕолучить массив типов загрузки в виде SAFEARRAY'€ BSTR  - (VT_ARRAY | VT_BSTR)"
		return self._ApplyTypes_(4, 1, (12, 0), ((8, 1), (16387, 2)), 'GetLoadCombinations', None,PathName
			, CurrentIndex)

	# Result is of type ILoadCombinationsParam
	def GetLoadCombinationsParam(self, PathName=defaultNamedNotOptArg):
		'ѕолучить интерфейс типов загрузки документа.'
		ret = self._oleobj_.InvokeTypes(9, LCID, 1, (9, 0), ((8, 1),),PathName
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetLoadCombinationsParam', '{A70BF191-E1E1-4A92-8CA9-E6D3FEAD2D9A}')
		return ret

	# Result is of type IOpenDocumentParam
	def GetOpenDocumentParam(self):
		'ѕолучить интерфейс параметров открыти€ документа.'
		ret = self._oleobj_.InvokeTypes(10, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetOpenDocumentParam', '{FADCA157-95B1-4E3F-97AA-622E34DA3238}')
		return ret

	# Result is of type IKompasDocument
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает документ, заданный по имени, ссылке или по индексу'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{5C6E318D-BD6E-4AFA-8A13-977EAA0845EF}')
		return ret

	# Result is of type IKompasDocument
	def Open(self, PathName=defaultNamedNotOptArg, Visible=True, ReadOnly=False):
		'ќткрывает уже существующий документ и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1), (11, 49), (11, 49)),PathName
			, Visible, ReadOnly)
		if ret is not None:
			ret = Dispatch(ret, 'Open', '{5C6E318D-BD6E-4AFA-8A13-977EAA0845EF}')
		return ret

	# Result is of type IKompasDocument
	def OpenDocument(self, FileName=defaultNamedNotOptArg, Param=defaultNamedNotOptArg):
		'ќткрыть документ с заданными параметрами открыти€ документа.'
		ret = self._oleobj_.InvokeTypes(11, LCID, 1, (9, 0), ((8, 1), (9, 1)),FileName
			, Param)
		if ret is not None:
			ret = Dispatch(ret, 'OpenDocument', '{5C6E318D-BD6E-4AFA-8A13-977EAA0845EF}')
		return ret

	# Result is of type IKompasDocument
	def OpenEx(self, PathName=defaultNamedNotOptArg, Visible=defaultNamedNotOptArg, ReadOnly=defaultNamedNotOptArg, LoadCombinationIndex=defaultNamedNotOptArg):
		'ќткрывает уже существующий документ  добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(3, LCID, 1, (9, 0), ((8, 1), (11, 1), (11, 1), (12, 1)),PathName
			, Visible, ReadOnly, LoadCombinationIndex)
		if ret is not None:
			ret = Dispatch(ret, 'OpenEx', '{5C6E318D-BD6E-4AFA-8A13-977EAA0845EF}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		"DocumentSynchronize": (6, 2, (11, 0), (), "DocumentSynchronize", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"RecoverError": (8, 2, (3, 0), (), "RecoverError", None),
		"RecoverMode": (7, 2, (11, 0), (), "RecoverMode", None),
		"RecoverModeErrorList": (13, 2, (12, 0), (), "RecoverModeErrorList", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"DocumentSynchronize": ((6, LCID, 4, 0),()),
		"RecoverError": ((8, LCID, 4, 0),()),
		"RecoverMode": ((7, LCID, 4, 0),()),
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает документ, заданный по имени, ссылке или по индексу'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{5C6E318D-BD6E-4AFA-8A13-977EAA0845EF}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{5C6E318D-BD6E-4AFA-8A13-977EAA0845EF}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IDrawingContainer(DispatchBaseClass):
	' онтейнер объектов 2D.'
	CLSID = IID('{D603FEC9-75B7-4FA5-918F-47074C45B848}')
	coclass_clsid = None

	# The method Objects is actually a property, but must be used as a method to correctly pass the arguments
	def Objects(self, ObjType=defaultNamedNotOptArg):
		'ћассив SAFEARRAY объектов, вход€щих в состав данного объекта.'
		return self._ApplyTypes_(5001, 2, (12, 0), ((12, 1),), 'Objects', None,ObjType
			)

	_prop_map_get_ = {
		# Method 'Arcs' returns object of type 'IArcs'
		"Arcs": (5004, 2, (9, 0), (), "Arcs", '{4FCB4C17-3B9E-45E8-B83C-9284027BAA0D}'),
		# Method 'Beziers' returns object of type 'IBeziers'
		"Beziers": (5009, 2, (9, 0), (), "Beziers", '{57944ECC-5491-4551-9DB9-FABC45125A63}'),
		# Method 'Circles' returns object of type 'ICircles'
		"Circles": (5007, 2, (9, 0), (), "Circles", '{C8CA9255-E5FE-4396-9C3F-75EE7377C508}'),
		# Method 'Colourings' returns object of type 'IColourings'
		"Colourings": (5023, 2, (9, 0), (), "Colourings", '{60437DAD-2688-4146-B765-3FCC55C39D0F}'),
		# Method 'ConicCurves' returns object of type 'IConicCurves'
		"ConicCurves": (5025, 2, (9, 0), (), "ConicCurves", '{D496F149-AB99-402B-B3D2-942B26069753}'),
		# Method 'DrawingContours' returns object of type 'IDrawingContours'
		"DrawingContours": (5006, 2, (9, 0), (), "DrawingContours", '{DBA3626C-12BE-4BFF-8D42-B01A78666BC9}'),
		# Method 'DrawingTexts' returns object of type 'IDrawingTexts'
		"DrawingTexts": (5002, 2, (9, 0), (), "DrawingTexts", '{C72E0E9D-7078-4AA7-95E4-E8C75CA9BCEC}'),
		# Method 'EllipseArcs' returns object of type 'IEllipseArcs'
		"EllipseArcs": (5017, 2, (9, 0), (), "EllipseArcs", '{CC5B7FCB-B887-4A47-AE6B-2522DFA24433}'),
		# Method 'Ellipses' returns object of type 'IEllipses'
		"Ellipses": (5016, 2, (9, 0), (), "Ellipses", '{47633C44-93BB-4F41-A6CA-4F8CCAEA0659}'),
		# Method 'Equidistants' returns object of type 'IEquidistants'
		"Equidistants": (5020, 2, (9, 0), (), "Equidistants", '{86182E5E-8FA3-4283-9DC5-43D1673C80DA}'),
		# Method 'Hatches' returns object of type 'IHatches'
		"Hatches": (5022, 2, (9, 0), (), "Hatches", '{B7E776B0-9524-4254-9D1F-0CF8E0314A1B}'),
		# Method 'InsertionObjects' returns object of type 'IInsertionObjects'
		"InsertionObjects": (5021, 2, (9, 0), (), "InsertionObjects", '{C485550B-29E3-4F2A-A85C-C2795E0F1F86}'),
		# Method 'LineSegments' returns object of type 'ILineSegments'
		"LineSegments": (5003, 2, (9, 0), (), "LineSegments", '{B211C782-A830-468E-9F4F-C499A77078D8}'),
		# Method 'Lines' returns object of type 'ILines'
		"Lines": (5011, 2, (9, 0), (), "Lines", '{889A9B9C-7533-4EC5-8E2C-5ECF8228B06F}'),
		# Method 'MacroObjects' returns object of type 'IMacroObjects'
		"MacroObjects": (5010, 2, (9, 0), (), "MacroObjects", '{5B3F5454-160A-4981-B093-890E9A719AE3}'),
		# Method 'Multilines' returns object of type 'IMultilines'
		"Multilines": (5005, 2, (9, 0), (), "Multilines", '{968D7B84-2BC1-4354-AAFE-73192E405546}'),
		# Method 'Nurbses' returns object of type 'INurbses'
		"Nurbses": (5013, 2, (9, 0), (), "Nurbses", '{88ECED7C-181C-4D9F-84DE-44B2E360F278}'),
		# Method 'NurbsesByPoints' returns object of type 'INurbses'
		"NurbsesByPoints": (5024, 2, (9, 0), (), "NurbsesByPoints", '{88ECED7C-181C-4D9F-84DE-44B2E360F278}'),
		# Method 'OleDrawingObjects' returns object of type 'IOleDrawingObjects'
		"OleDrawingObjects": (5015, 2, (9, 0), (), "OleDrawingObjects", '{E7A8DD07-CD6B-45A6-B6AF-155A674BC7E4}'),
		# Method 'Points' returns object of type 'IPoints'
		"Points": (5008, 2, (9, 0), (), "Points", '{8C6846A4-EE3B-4C00-A708-5C0FD01E21B7}'),
		# Method 'PolyLines2D' returns object of type 'IPolyLines2D'
		"PolyLines2D": (5012, 2, (9, 0), (), "PolyLines2D", '{D1A9CB2D-A259-4CCC-9CD4-FA006494BCA7}'),
		# Method 'Rasters' returns object of type 'IRasters'
		"Rasters": (5014, 2, (9, 0), (), "Rasters", '{C6E4E32D-E077-4B14-B9DE-041BD628C38C}'),
		# Method 'Rectangles' returns object of type 'IRectangles'
		"Rectangles": (5018, 2, (9, 0), (), "Rectangles", '{D6BC2EE9-249F-4961-89A7-88DA854F35FE}'),
		# Method 'RegularPolygons' returns object of type 'IRegularPolygons'
		"RegularPolygons": (5019, 2, (9, 0), (), "RegularPolygons", '{80377CB2-073E-4C38-8532-C42A078BA719}'),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDrawingContour(DispatchBaseClass):
	' онтур'
	CLSID = IID('{25509C3A-7B46-4E3F-B0E8-0E61B7548664}')
	coclass_clsid = IID('{63502BD9-2EC0-4908-8E45-DE433E7B9DB7}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Style": (1, 2, (3, 0), (), "Style", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"Style": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDrawingContours(DispatchBaseClass):
	' оллекци€ контуров.'
	CLSID = IID('{DBA3626C-12BE-4BFF-8D42-B01A78666BC9}')
	coclass_clsid = IID('{B3BADEEA-2F85-4A72-8546-DFEA96E3E736}')

	# Result is of type IDrawingContour
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{25509C3A-7B46-4E3F-B0E8-0E61B7548664}')
		return ret

	def AddBooleanResultContours(self, Contour1=defaultNamedNotOptArg, Contour2=defaultNamedNotOptArg, BooleanType=defaultNamedNotOptArg):
		'Ѕулева операцию над замкнутами и не самопересекающимис€ кривыми.'
		return self._ApplyTypes_(3, 1, (12, 0), ((9, 1), (9, 1), (3, 1)), 'AddBooleanResultContours', None,Contour1
			, Contour2, BooleanType)

	# Result is of type IDrawingContour
	# The method DrawingContour is actually a property, but must be used as a method to correctly pass the arguments
	def DrawingContour(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'DrawingContour', '{25509C3A-7B46-4E3F-B0E8-0E61B7548664}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IDrawingDocument(DispatchBaseClass):
	'»нтерфейс чертежа.'
	CLSID = IID('{C2214318-5C89-40F8-A25C-C87D08B490F4}')
	coclass_clsid = IID('{5414B05F-A731-4369-BBD2-419B5CD9D2A2}')

	def Close(self, closeOptions=defaultNamedNotOptArg):
		'«акрыть документ. ≈сли SaveChanges = False, то система предложит пользователю сохранить имеющиес€ изменени€.'
		return self._oleobj_.InvokeTypes(3002, LCID, 1, (11, 0), ((3, 1),),closeOptions
			)

	def GetDrawingObjectNotifyResult(self):
		'»нтерфейс результатов редактировани€ объекта при обработке событий.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetDrawingObjectNotifyResult', None)
		return ret

	def Save(self):
		'—охранить документ на диске.'
		return self._oleobj_.InvokeTypes(3003, LCID, 1, (24, 0), (),)

	def SaveAs(self, PathName=defaultNamedNotOptArg):
		'—охранить документ под другим именем.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (24, 0), ((8, 1),),PathName
			)

	_prop_map_get_ = {
		"Active": (3009, 2, (11, 0), (), "Active", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'ChangeListDescriptions' returns object of type 'ISpecificationDescriptions'
		"ChangeListDescriptions": (5001, 2, (9, 0), (), "ChangeListDescriptions", '{B9632C5C-86E1-4BC9-83A5-A954E407246A}'),
		"Changed": (3011, 2, (11, 0), (), "Changed", None),
		# Method 'DocumentFrames' returns object of type 'IDocumentFrames'
		"DocumentFrames": (3001, 2, (9, 0), (), "DocumentFrames", '{1D18C466-C085-4D68-A465-A85D0C8E3A0E}'),
		# Method 'DocumentSettings' returns object of type 'IDocumentSettings'
		"DocumentSettings": (3012, 2, (9, 0), (), "DocumentSettings", '{B35FF50E-2991-4630-8AB8-DC3153E7971A}'),
		"DocumentType": (3000, 2, (3, 0), (), "DocumentType", None),
		# Method 'LayoutSheets' returns object of type 'ILayoutSheets'
		"LayoutSheets": (3014, 2, (9, 0), (), "LayoutSheets", '{7AB54196-0B76-4B01-B769-7F47637173C4}'),
		"Name": (3005, 2, (8, 0), (), "Name", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Path": (3007, 2, (8, 0), (), "Path", None),
		"PathName": (3006, 2, (8, 0), (), "PathName", None),
		"ReadOnly": (3010, 2, (11, 0), (), "ReadOnly", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'SpecRough' returns object of type 'ISpecRough'
		"SpecRough": (5002, 2, (9, 0), (), "SpecRough", '{D723AAC1-0315-4AED-99BF-88A7E55B6E6D}'),
		# Method 'SpecificationDescriptions' returns object of type 'ISpecificationDescriptions'
		"SpecificationDescriptions": (3013, 2, (9, 0), (), "SpecificationDescriptions", '{B9632C5C-86E1-4BC9-83A5-A954E407246A}'),
		# Method 'TechnicalDemand' returns object of type 'ITechnicalDemand'
		"TechnicalDemand": (5003, 2, (9, 0), (), "TechnicalDemand", '{18C80AE5-BF92-482A-9C56-3D1638F5E5F5}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		# Method 'UserDataStoragesMng' returns object of type 'IUserDataStoragesMng'
		"UserDataStoragesMng": (3015, 2, (9, 0), (), "UserDataStoragesMng", '{77A6D4CA-6418-4DEE-B59C-400BFD052375}'),
		# Method 'ViewsAndLayersManager' returns object of type 'IViewsAndLayersManager'
		"ViewsAndLayersManager": (1, 2, (9, 0), (), "ViewsAndLayersManager", '{A4737593-578B-4187-8CAD-E1056EB5404B}'),
		"Visible": (3008, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Active": ((3009, LCID, 4, 0),()),
		"ReadOnly": ((3010, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDrawingDocumentSettings(DispatchBaseClass):
	'Ќастройки чертежа.'
	CLSID = IID('{0DC39FC2-4FB1-489E-A76E-E47413199FA3}')
	coclass_clsid = None

	_prop_map_get_ = {
		"SheetAutoCount": (3, 2, (11, 0), (), "SheetAutoCount", None),
		"SheetAutoNumber": (1, 2, (11, 0), (), "SheetAutoNumber", None),
		"SheetFirstNumber": (2, 2, (3, 0), (), "SheetFirstNumber", None),
		"SheetsCount": (4, 2, (3, 0), (), "SheetsCount", None),
		"TechnicalDemandSynchronize": (5, 2, (11, 0), (), "TechnicalDemandSynchronize", None),
	}
	_prop_map_put_ = {
		"SheetAutoCount": ((3, LCID, 4, 0),()),
		"SheetAutoNumber": ((1, LCID, 4, 0),()),
		"SheetFirstNumber": ((2, LCID, 4, 0),()),
		"SheetsCount": ((4, LCID, 4, 0),()),
		"TechnicalDemandSynchronize": ((5, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDrawingGroup(DispatchBaseClass):
	'√руппа (посто€нна€, временна€, именована€).'
	CLSID = IID('{2C96ACB2-4877-45D9-B62D-78BBAD704458}')
	coclass_clsid = IID('{C0A36437-0D32-4D41-9C3F-0A70D66A4C03}')

	def AddObjects(self, Objects=defaultNamedNotOptArg):
		'ƒобавить объекты в группу.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), ((12, 1),),Objects
			)

	def AddRegion(self, RegionType=defaultNamedNotOptArg, XMin=defaultNamedNotOptArg, YMin=defaultNamedNotOptArg, XMax=defaultNamedNotOptArg
			, YMax=defaultNamedNotOptArg):
		'ƒобавить объекты в группу рамкой.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), ((3, 1), (5, 1), (5, 1), (5, 1), (5, 1)),RegionType
			, XMin, YMin, XMax, YMax)

	def Clear(self, DeleteTmp=defaultNamedNotOptArg):
		'ќчистить группу.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), ((11, 1),),DeleteTmp
			)

	def Close(self):
		'«акрыть группу'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (11, 0), (),)

	def Delete(self):
		'”далить.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), (),)

	def DetachObjects(self, Objects=defaultNamedNotOptArg, DeleteTmp=defaultNamedNotOptArg):
		'»сключить объекты из группы.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((12, 1), (11, 1)),Objects
			, DeleteTmp)

	def Draw(self, HWnd=defaultNamedNotOptArg):
		'ќтрисовать в окне.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (11, 0), ((3, 1),),HWnd
			)

	def ExistObject(self, Object=defaultNamedNotOptArg):
		'≈сть ли объект в группе.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), ((9, 1),),Object
			)

	# The method Objects is actually a property, but must be used as a method to correctly pass the arguments
	def Objects(self, Type=defaultNamedNotOptArg):
		'ѕолучить массив объектов SAFEARRAY|VT_DISPATCH.'
		return self._ApplyTypes_(2, 2, (12, 0), ((12, 1),), 'Objects', None,Type
			)

	def Open(self):
		'ќткрыть группу'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (11, 0), (),)

	def ReadFragment(self, FileName=defaultNamedNotOptArg, CurentLayer=defaultNamedNotOptArg, XBase=defaultNamedNotOptArg, YBase=defaultNamedNotOptArg
			, Scale=defaultNamedNotOptArg, Angle=defaultNamedNotOptArg, ScaleProjLinesSize=defaultNamedNotOptArg):
		'ƒобавить объекты в группу из фрагмента.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), ((8, 1), (11, 1), (5, 1), (5, 1), (5, 1), (5, 1), (11, 1)),FileName
			, CurentLayer, XBase, YBase, Scale, Angle
			, ScaleProjLinesSize)

	def ReadFromClip(self, AttrCopy=defaultNamedNotOptArg, SpcObjCopy=defaultNamedNotOptArg):
		'—читать объекты из клипа.'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (11, 0), ((11, 1), (11, 1)),AttrCopy
			, SpcObjCopy)

	def Store(self):
		'¬ставить времееную группу в документ.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), (),)

	def WriteFragment(self, FileName=defaultNamedNotOptArg, Comment=defaultNamedNotOptArg, XBase=defaultNamedNotOptArg, YBase=defaultNamedNotOptArg):
		'«аписать в фрагмент.'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (11, 0), ((8, 1), (8, 0), (5, 1), (5, 1)),FileName
			, Comment, XBase, YBase)

	def WriteToClip(self, AttrCopy=defaultNamedNotOptArg, SpcObjCopy=defaultNamedNotOptArg):
		'«аписать объекты в клип.'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (11, 0), ((11, 1), (11, 1)),AttrCopy
			, SpcObjCopy)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Current": (18, 2, (11, 0), (), "Current", None),
		"Name": (1, 2, (8, 0), (), "Name", None),
		"ObjectsCount": (7, 2, (3, 0), (), "ObjectsCount", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"Name": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDrawingGroups(DispatchBaseClass):
	' оллекци€ групп (»меннованные, –абочие (¬ременные и посто€нные)).'
	CLSID = IID('{0ED06421-907C-4EF0-89F7-AEFC81BEF1DF}')
	coclass_clsid = IID('{ABBC0387-2E69-4575-BAD1-A97B02B418B2}')

	# Result is of type IDrawingGroup
	def Add(self, Temp=defaultNamedNotOptArg, Name=defaultNamedNotOptArg):
		'—оздает новую группу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 1, (9, 0), ((11, 1), (8, 1)),Temp
			, Name)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{2C96ACB2-4877-45D9-B62D-78BBAD704458}')
		return ret

	# Result is of type IDrawingGroup
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{2C96ACB2-4877-45D9-B62D-78BBAD704458}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{2C96ACB2-4877-45D9-B62D-78BBAD704458}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{2C96ACB2-4877-45D9-B62D-78BBAD704458}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IDrawingObject(DispatchBaseClass):
	'Ѕазовый интерфейс дл€ всех графических объектов.'
	CLSID = IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	coclass_clsid = IID('{F7458066-14B5-4945-ACCC-1199F98AAFDA}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDrawingObject1(DispatchBaseClass):
	'ƒополнительный интерфейс дл€ графических объектов.'
	CLSID = IID('{649F0EB2-EBC0-449B-8B61-DC3CF1953BF9}')
	coclass_clsid = None

	def Associate(self):
		'јссоциировать данный объект с другими объектами.'
		return self._oleobj_.InvokeTypes(6003, LCID, 1, (11, 0), (),)

	def DeleteConstraints(self):
		'”далить все ограничени€.'
		return self._oleobj_.InvokeTypes(6004, LCID, 1, (11, 0), (),)

	def DeleteHyperLink(self):
		'”далить гиперссылку.'
		return self._oleobj_.InvokeTypes(6011, LCID, 1, (11, 0), (),)

	# Result is of type ICurve2D
	def GetCurve2D(self):
		'ѕолучить математическую кривую.'
		ret = self._oleobj_.InvokeTypes(6012, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetCurve2D', '{65C82884-C41B-47A1-8C07-E8820D6718EA}')
		return ret

	def GetHyperLinkParam(self, Type=pythoncom.Missing, LinkObject=pythoncom.Missing, Level=pythoncom.Missing):
		'ѕолучить параметры гиперссылки.'
		return self._ApplyTypes_(6010, 1, (8, 0), ((16387, 2), (16393, 2), (16387, 2)), 'GetHyperLinkParam', None,Type
			, LinkObject, Level)

	# Result is of type IParametriticConstraint
	def NewConstraint(self):
		'—оздает новое ограничение '
		ret = self._oleobj_.InvokeTypes(6002, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'NewConstraint', '{131069F4-A4E2-4DB4-A559-85EACCC74CE4}')
		return ret

	_prop_map_get_ = {
		"AutoTransparentBackground": (6006, 2, (11, 0), (), "AutoTransparentBackground", None),
		"Constraints": (6001, 2, (12, 0), (), "Constraints", None),
		"Id": (6013, 2, (20, 0), (), "Id", None),
		"IsAnnotativeObject": (6008, 2, (11, 0), (), "IsAnnotativeObject", None),
		"IsCurve": (6009, 2, (11, 0), (), "IsCurve", None),
		"IsGeometryObject": (6007, 2, (11, 0), (), "IsGeometryObject", None),
		"TransparentBackground": (6005, 2, (11, 0), (), "TransparentBackground", None),
	}
	_prop_map_put_ = {
		"AutoTransparentBackground": ((6006, LCID, 4, 0),()),
		"TransparentBackground": ((6005, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDrawingObjects(DispatchBaseClass):
	' оллекци€ графических объектов.'
	CLSID = IID('{3DD7F97B-59CB-4297-A1BA-04E5A7FFF448}')
	coclass_clsid = IID('{0031BFFF-6A43-44B4-8E0B-0DA3984CB9ED}')

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IDrawingTable(DispatchBaseClass):
	'“аблица на чертеже.'
	CLSID = IID('{9B421BDA-0444-4A68-B69C-1C05D05C9D28}')
	coclass_clsid = IID('{020B47A5-6B61-48B2-80F6-3A607E0E0A94}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Save(self, FileName=defaultNamedNotOptArg):
		'—охранить в файл.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), ((8, 1),),FileName
			)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (3, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"FixedCellsSize": (4, 2, (11, 0), (), "FixedCellsSize", None),
		"FixedColumnCount": (6, 2, (11, 0), (), "FixedColumnCount", None),
		"FixedRowCount": (5, 2, (11, 0), (), "FixedRowCount", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"X": (1, 2, (5, 0), (), "X", None),
		"Y": (2, 2, (5, 0), (), "Y", None),
	}
	_prop_map_put_ = {
		"Angle": ((3, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"FixedCellsSize": ((4, LCID, 4, 0),()),
		"FixedColumnCount": ((6, LCID, 4, 0),()),
		"FixedRowCount": ((5, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"X": ((1, LCID, 4, 0),()),
		"Y": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDrawingTables(DispatchBaseClass):
	' оллекци€ таблиц.'
	CLSID = IID('{DF92DACE-BDC6-4341-86DA-3A9C8DCFDEFE}')
	coclass_clsid = IID('{E0C24704-8D4E-45BA-9175-972D58E37C7F}')

	# Result is of type IDrawingTable
	def Add(self, RowsCount=defaultNamedNotOptArg, ColumnsCount=defaultNamedNotOptArg, RowHeigh=defaultNamedNotOptArg, ColumnsWidth=defaultNamedNotOptArg
			, TitlePos=defaultNamedNotOptArg):
		'ƒобавить таблицу в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((3, 1), (3, 1), (5, 1), (5, 1), (3, 1)),RowsCount
			, ColumnsCount, RowHeigh, ColumnsWidth, TitlePos)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{9B421BDA-0444-4A68-B69C-1C05D05C9D28}')
		return ret

	# Result is of type IDrawingTable
	# The method DrawingTable is actually a property, but must be used as a method to correctly pass the arguments
	def DrawingTable(self, Index=defaultNamedNotOptArg):
		'ѕолучить таблицу по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'DrawingTable', '{9B421BDA-0444-4A68-B69C-1C05D05C9D28}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	# Result is of type IDrawingTable
	def Load(self, FileName=defaultNamedNotOptArg):
		'«агрузить таблицу из файла.'
		ret = self._oleobj_.InvokeTypes(3, LCID, 1, (9, 0), ((8, 1),),FileName
			)
		if ret is not None:
			ret = Dispatch(ret, 'Load', '{9B421BDA-0444-4A68-B69C-1C05D05C9D28}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IDrawingText(DispatchBaseClass):
	'“екст на чертеже.'
	CLSID = IID('{E32E5703-0141-41CF-9917-9565648FE331}')
	coclass_clsid = IID('{2E194B4E-F08D-4D62-A9B8-849004D8D923}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Allocation": (8, 2, (3, 0), (), "Allocation", None),
		"Angle": (3, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"HFormat": (6, 2, (3, 0), (), "HFormat", None),
		"Height": (4, 2, (5, 0), (), "Height", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		"MirrorSymmetry": (9, 2, (11, 0), (), "MirrorSymmetry", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"VFormat": (7, 2, (11, 0), (), "VFormat", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"Width": (5, 2, (5, 0), (), "Width", None),
		"X": (1, 2, (5, 0), (), "X", None),
		"Y": (2, 2, (5, 0), (), "Y", None),
	}
	_prop_map_put_ = {
		"Allocation": ((8, LCID, 4, 0),()),
		"Angle": ((3, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"HFormat": ((6, LCID, 4, 0),()),
		"Height": ((4, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"MirrorSymmetry": ((9, LCID, 4, 0),()),
		"VFormat": ((7, LCID, 4, 0),()),
		"Width": ((5, LCID, 4, 0),()),
		"X": ((1, LCID, 4, 0),()),
		"Y": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDrawingTexts(DispatchBaseClass):
	' оллекци€ текстов на чертеже.'
	CLSID = IID('{C72E0E9D-7078-4AA7-95E4-E8C75CA9BCEC}')
	coclass_clsid = IID('{5F4C3AA0-4B59-4EEE-AB00-53CEA8909F66}')

	# Result is of type IDrawingText
	def Add(self):
		'ƒобавить текст на чертеже в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{E32E5703-0141-41CF-9917-9565648FE331}')
		return ret

	# Result is of type IDrawingText
	# The method DrawingText is actually a property, but must be used as a method to correctly pass the arguments
	def DrawingText(self, Index=defaultNamedNotOptArg):
		'ѕолучить текст на чертеже, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'DrawingText', '{E32E5703-0141-41CF-9917-9565648FE331}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IDynamicCrossSection(DispatchBaseClass):
	'ƒинамическое сечение.'
	CLSID = IID('{DC056BC2-64CD-4AFE-910E-97ACE56B647B}')
	coclass_clsid = IID('{2180F44D-3125-45F6-8466-62793172A940}')

	# Result is of type IDynamicCrossSectionStep
	def AddStep(self, BuildingType=defaultNamedNotOptArg):
		'ƒобавить шаг.'
		ret = self._oleobj_.InvokeTypes(3, LCID, 1, (9, 0), ((3, 1),),BuildingType
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddStep', '{4A8082D6-FC56-4FD4-A258-51E74A44510D}')
		return ret

	def Delete(self):
		'”даление сечени€.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), (),)

	# Result is of type IDynamicCrossSectionStep
	# The method Step is actually a property, but must be used as a method to correctly pass the arguments
	def Step(self, Index=defaultNamedNotOptArg):
		'ѕолучить шаг сечени€ по индексу.'
		ret = self._oleobj_.InvokeTypes(4, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Step', '{4A8082D6-FC56-4FD4-A258-51E74A44510D}')
		return ret

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"FillCutPlanes": (1, 2, (11, 0), (), "FillCutPlanes", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"StepsCount": (2, 2, (3, 0), (), "StepsCount", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"FillCutPlanes": ((1, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDynamicCrossSectionStep(DispatchBaseClass):
	'Ўаг динамического сечени€.'
	CLSID = IID('{4A8082D6-FC56-4FD4-A258-51E74A44510D}')
	coclass_clsid = IID('{5CA6F5DA-81A0-4B99-93B4-C4D68DD8F42D}')

	def Delete(self):
		'”даление шага.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"BuildingType": (1, 2, (3, 0), (), "BuildingType", None),
		# Method 'Parameters' returns object of type 'IKompasAPIObject'
		"Parameters": (2, 2, (9, 0), (), "Parameters", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"BuildingType": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDynamicCrossSectionStepParametersByBorderPoints(DispatchBaseClass):
	'ѕараметры шага динамического сечени€ по габаритному параллелепипеду заданному точками.'
	CLSID = IID('{D8A8BCBB-E337-431B-AC37-07007217190B}')
	coclass_clsid = IID('{E785BB44-EA2D-4704-A645-2400A19AEBBC}')

	# Result is of type IModelObject
	# The method AssociationObject is actually a property, but must be used as a method to correctly pass the arguments
	def AssociationObject(self, First=defaultNamedNotOptArg):
		'”становить опорный объект дл€ вершины.'
		ret = self._oleobj_.InvokeTypes(4, LCID, 2, (9, 0), ((11, 1),),First
			)
		if ret is not None:
			ret = Dispatch(ret, 'AssociationObject', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def GetPoint(self, First=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'ѕолучить координату точки.'
		return self._ApplyTypes_(2, 1, (11, 0), ((11, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetPoint', None,First
			, X, Y, Z)

	# Result is of type IKompasAPIObject
	# The method PointParameters is actually a property, but must be used as a method to correctly pass the arguments
	def PointParameters(self, First=defaultNamedNotOptArg):
		'ѕолучить интерфейс параметров точки'
		ret = self._oleobj_.InvokeTypes(6, LCID, 2, (9, 0), ((11, 1),),First
			)
		if ret is not None:
			ret = Dispatch(ret, 'PointParameters', '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')
		return ret

	# The method PointType is actually a property, but must be used as a method to correctly pass the arguments
	def PointType(self, First=defaultNamedNotOptArg):
		'“ип параметров построени€ точки.'
		return self._oleobj_.InvokeTypes(5, LCID, 2, (3, 0), ((11, 1),),First
			)

	# The method SetAssociationObject is actually a property, but must be used as a method to correctly pass the arguments
	def SetAssociationObject(self, First=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'”становить опорный объект дл€ вершины.'
		return self._oleobj_.InvokeTypes(4, LCID, 4, (24, 0), ((11, 1), (9, 1)),First
			, arg1)

	def SetPoint(self, First=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg):
		'”становить координату точки.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), ((11, 1), (5, 1), (5, 1), (5, 1)),First
			, X, Y, Z)

	# The method SetPointType is actually a property, but must be used as a method to correctly pass the arguments
	def SetPointType(self, First=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'“ип параметров построени€ точки.'
		return self._oleobj_.InvokeTypes(5, LCID, 4, (24, 0), ((11, 1), (3, 1)),First
			, arg1)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"BuildingType": (1, 2, (3, 0), (), "BuildingType", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"BuildingType": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDynamicCrossSectionStepParametersByFreePlane(DispatchBaseClass):
	'ѕараметры шага динамического сечени€ по произвольной плоскости.'
	CLSID = IID('{3918486A-85B2-4F9B-A85E-13BB754951E0}')
	coclass_clsid = IID('{0CEFC601-D4AA-4493-8905-636F87167515}')

	def ReverseDirection(self):
		'»зменить направление отсечени€.'
		return self._oleobj_.InvokeTypes(802, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'LocalCoordinateSystem' returns object of type 'ILocalCoordinateSystem'
		"LocalCoordinateSystem": (801, 2, (9, 0), (), "LocalCoordinateSystem", '{BA6395F5-3506-4483-8864-4EEC220AF316}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDynamicCrossSectionStepParametersByOffsetPlane(DispatchBaseClass):
	'ѕараметры шага динамического сечени€ по смещенной плоскости.'
	CLSID = IID('{E5BEB695-4C46-4897-9330-7463ED4D6725}')
	coclass_clsid = IID('{543A8DAF-A009-4D20-83EE-1ECFFAB1CD24}')

	def ReverseDirection(self):
		'»зменить направление отсечени€.'
		return self._oleobj_.InvokeTypes(804, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BaseStep' returns object of type 'IDynamicCrossSectionStep'
		"BaseStep": (803, 2, (9, 0), (), "BaseStep", '{4A8082D6-FC56-4FD4-A258-51E74A44510D}'),
		# Method 'OffsetPlane' returns object of type 'IPlane3DByOffset'
		"OffsetPlane": (801, 2, (9, 0), (), "OffsetPlane", '{5F5E0FA2-84D7-44D1-A946-018EBEB82926}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"PlaneBuildingType": (802, 2, (3, 0), (), "PlaneBuildingType", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"BaseStep": ((803, LCID, 4, 0),()),
		"PlaneBuildingType": ((802, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDynamicCrossSectionStepParametersByRotatedPlane(DispatchBaseClass):
	'ѕараметры шага динамического сечени€ по плоскости под углом.'
	CLSID = IID('{69ED339F-A095-467D-85F3-91C120BF01BF}')
	coclass_clsid = IID('{D6F7640A-CE45-4792-B301-B9F9BE8FF483}')

	def ReverseDirection(self):
		'»зменить направление отсечени€.'
		return self._oleobj_.InvokeTypes(804, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BaseStep' returns object of type 'IDynamicCrossSectionStep'
		"BaseStep": (803, 2, (9, 0), (), "BaseStep", '{4A8082D6-FC56-4FD4-A258-51E74A44510D}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Plane' returns object of type 'IPlane3DByAngle'
		"Plane": (801, 2, (9, 0), (), "Plane", '{4AD8121E-95BB-4B0F-B1D8-E0394A72DEE2}'),
		"PlaneBuildingType": (802, 2, (3, 0), (), "PlaneBuildingType", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"BaseStep": ((803, LCID, 4, 0),()),
		"PlaneBuildingType": ((802, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDynamicCrossSectionStepParametersByZone(DispatchBaseClass):
	'ѕараметры шага динамического сечени€ по зоне.'
	CLSID = IID('{F966880F-C8EC-4455-A155-43ED46F159F5}')
	coclass_clsid = IID('{017A292E-8BFE-4A2C-A3F5-AC6B8D015D49}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		# Method 'Zone' returns object of type 'IZone'
		"Zone": (1, 2, (9, 0), (), "Zone", '{05C71C4B-F8BC-42E9-89D5-B9BC0145ED36}'),
	}
	_prop_map_put_ = {
		"Zone": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IDynamicCrossSectionsManager(DispatchBaseClass):
	'ћенеджер динамических сечений.'
	CLSID = IID('{FE4BE487-B453-45E4-8BE2-2EBD28D56CF5}')
	coclass_clsid = None

	# Result is of type IDynamicCrossSection
	def AddDynamicCrossSection(self):
		'ƒобавить динамическое сечение.'
		ret = self._oleobj_.InvokeTypes(19003, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'AddDynamicCrossSection', '{DC056BC2-64CD-4AFE-910E-97ACE56B647B}')
		return ret

	# Result is of type IDynamicCrossSection
	# The method DynamicCrossSection is actually a property, but must be used as a method to correctly pass the arguments
	def DynamicCrossSection(self, Index=defaultNamedNotOptArg):
		'ѕолучить объект по имени или индексу.'
		ret = self._oleobj_.InvokeTypes(8502, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'DynamicCrossSection', '{DC056BC2-64CD-4AFE-910E-97ACE56B647B}')
		return ret

	_prop_map_get_ = {
		# Method 'CurrentDynamicCrossSection' returns object of type 'IDynamicCrossSection'
		"CurrentDynamicCrossSection": (8504, 2, (9, 0), (), "CurrentDynamicCrossSection", '{DC056BC2-64CD-4AFE-910E-97ACE56B647B}'),
		"DynamicCrossSectionModeOn": (8505, 2, (11, 0), (), "DynamicCrossSectionModeOn", None),
		"DynamicCrossSectionsCount": (8501, 2, (3, 0), (), "DynamicCrossSectionsCount", None),
	}
	_prop_map_put_ = {
		"CurrentDynamicCrossSection": ((8504, LCID, 4, 0),()),
		"DynamicCrossSectionModeOn": ((8505, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IEdge(DispatchBaseClass):
	'–ебро 3D.'
	CLSID = IID('{5A61CED2-DCED-4CDA-8C3C-CF710F0E727B}')
	coclass_clsid = IID('{98F55F56-45A6-4210-955A-E831907FD36F}')

	# Result is of type IFace
	# The method AdjacentFace is actually a property, but must be used as a method to correctly pass the arguments
	def AdjacentFace(self, FacePlus=defaultNamedNotOptArg):
		'ѕолучить указатель на интерфейс грани, в цикл которой входит ребро.'
		ret = self._oleobj_.InvokeTypes(6, LCID, 2, (9, 0), ((11, 1),),FacePlus
			)
		if ret is not None:
			ret = Dispatch(ret, 'AdjacentFace', '{299A549E-3F82-4F60-98A3-258D632AA635}')
		return ret

	# The method Edges is actually a property, but must be used as a method to correctly pass the arguments
	def Edges(self, Start=defaultNamedNotOptArg):
		'ѕолучить указатель на интерфейс массива ребер, стыкующихс€ с данным ребром.'
		return self._ApplyTypes_(9, 2, (12, 0), ((11, 1),), 'Edges', None,Start
			)

	def GetLength(self, BitVector=defaultNamedNotOptArg):
		'ѕолучить длину ребра.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (5, 0), ((3, 1),),BitVector
			)

	def GetPoint(self, Start=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'ѕолучить координаты вершины.'
		return self._ApplyTypes_(8, 1, (11, 0), ((11, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetPoint', None,Start
			, X, Y, Z)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	# Result is of type IVertex
	# The method Vertex is actually a property, but must be used as a method to correctly pass the arguments
	def Vertex(self, Start=defaultNamedNotOptArg):
		'ѕолучить указатель на интерфейс вершин: начальной и конечной.'
		ret = self._oleobj_.InvokeTypes(7, LCID, 2, (9, 0), ((11, 1),),Start
			)
		if ret is not None:
			ret = Dispatch(ret, 'Vertex', '{585E265F-0AAD-4A42-8030-3A69882A9B39}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"BaseCurve3DType": (2, 2, (3, 0), (), "BaseCurve3DType", None),
		"Curve3DType": (1, 2, (3, 0), (), "Curve3DType", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"IsPeriodic": (4, 2, (11, 0), (), "IsPeriodic", None),
		"IsSketchEdge": (12, 2, (11, 0), (), "IsSketchEdge", None),
		"IsStraight": (5, 2, (11, 0), (), "IsStraight", None),
		# Method 'MathCurve' returns object of type 'IMathCurve3D'
		"MathCurve": (3, 2, (9, 0), (), "MathCurve", '{6D2112DD-F6E1-49CF-9678-89B0C6CC6ACA}'),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		"OrientedEdges": (10, 2, (12, 0), (), "OrientedEdges", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IEdgeLengthMeasurement3D(DispatchBaseClass):
	'»змерение длины ребра.'
	CLSID = IID('{93154762-202B-41E4-9ADA-7792EC3E6481}')
	coclass_clsid = IID('{8064EACE-0AAE-4AE9-96A1-C7A31310DDD6}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Edges": (1, 2, (12, 0), (), "Edges", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"Lengths": (2, 2, (12, 0), (), "Lengths", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Sum": (3, 2, (5, 0), (), "Sum", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Edges": ((1, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IEdgeLengthMeasurements3D(DispatchBaseClass):
	' оллекци€ измерений длины ребра.'
	CLSID = IID('{90749843-C25C-4E07-A432-F46201BEE90C}')
	coclass_clsid = IID('{18B1FABC-67DB-4847-A0E8-95CFC542D109}')

	# Result is of type IEdgeLengthMeasurement3D
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{93154762-202B-41E4-9ADA-7792EC3E6481}')
		return ret

	# Result is of type IEdgeLengthMeasurement3D
	# The method EdgeLengthMeasurement3D is actually a property, but must be used as a method to correctly pass the arguments
	def EdgeLengthMeasurement3D(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу или по имени.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'EdgeLengthMeasurement3D', '{93154762-202B-41E4-9ADA-7792EC3E6481}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IEditDoubleManipulator(DispatchBaseClass):
	'ћанипул€тор - редактор вещественного значени€.'
	CLSID = IID('{89D98E20-A4F4-4F49-8FDF-FE4DC28F208F}')
	coclass_clsid = IID('{F942D621-874A-4A51-A651-A435CE0C6304}')

	def SetValueRange(self, MinVal=defaultNamedNotOptArg, MaxVal=defaultNamedNotOptArg):
		'”становить новые ограничени€ на значение.'
		return self._oleobj_.InvokeTypes(2002, LCID, 1, (11, 0), ((5, 1), (5, 1)),MinVal
			, MaxVal)

	_prop_map_get_ = {
		"EditValue": (2001, 2, (5, 0), (), "EditValue", None),
		"IsEditCreated": (2003, 2, (11, 0), (), "IsEditCreated", None),
	}
	_prop_map_put_ = {
		"EditValue": ((2001, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IEllipse(DispatchBaseClass):
	'Ёллипс.'
	CLSID = IID('{F60C9107-D8E2-433C-A0E3-A4E508D09353}')
	coclass_clsid = IID('{209A2979-6F0C-4D27-B157-CFC74BA53F14}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (9, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"SemiAxisA": (7, 2, (5, 0), (), "SemiAxisA", None),
		"SemiAxisB": (8, 2, (5, 0), (), "SemiAxisB", None),
		"Style": (10, 2, (3, 0), (), "Style", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"X1": (3, 2, (5, 0), (), "X1", None),
		"X2": (5, 2, (5, 0), (), "X2", None),
		"Xc": (1, 2, (5, 0), (), "Xc", None),
		"Y1": (4, 2, (5, 0), (), "Y1", None),
		"Y2": (6, 2, (5, 0), (), "Y2", None),
		"Yc": (2, 2, (5, 0), (), "Yc", None),
	}
	_prop_map_put_ = {
		"Angle": ((9, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"SemiAxisA": ((7, LCID, 4, 0),()),
		"SemiAxisB": ((8, LCID, 4, 0),()),
		"Style": ((10, LCID, 4, 0),()),
		"X1": ((3, LCID, 4, 0),()),
		"X2": ((5, LCID, 4, 0),()),
		"Xc": ((1, LCID, 4, 0),()),
		"Y1": ((4, LCID, 4, 0),()),
		"Y2": ((6, LCID, 4, 0),()),
		"Yc": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IEllipseArc(DispatchBaseClass):
	'ƒуга эллипса.'
	CLSID = IID('{320D837F-0B27-45B0-98B4-9D21156E9857}')
	coclass_clsid = IID('{D79ADD45-A3FD-4376-A5E4-BD6E31C193C4}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (9, 2, (5, 0), (), "Angle", None),
		"Angle1": (5, 2, (5, 0), (), "Angle1", None),
		"Angle2": (6, 2, (5, 0), (), "Angle2", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Direction": (10, 2, (11, 0), (), "Direction", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"SemiAxisA": (7, 2, (5, 0), (), "SemiAxisA", None),
		"SemiAxisB": (8, 2, (5, 0), (), "SemiAxisB", None),
		"Style": (11, 2, (3, 0), (), "Style", None),
		"T1": (3, 2, (5, 0), (), "T1", None),
		"T2": (4, 2, (5, 0), (), "T2", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"Xc": (1, 2, (5, 0), (), "Xc", None),
		"Yc": (2, 2, (5, 0), (), "Yc", None),
	}
	_prop_map_put_ = {
		"Angle": ((9, LCID, 4, 0),()),
		"Angle1": ((5, LCID, 4, 0),()),
		"Angle2": ((6, LCID, 4, 0),()),
		"Direction": ((10, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"SemiAxisA": ((7, LCID, 4, 0),()),
		"SemiAxisB": ((8, LCID, 4, 0),()),
		"Style": ((11, LCID, 4, 0),()),
		"T1": ((3, LCID, 4, 0),()),
		"T2": ((4, LCID, 4, 0),()),
		"Xc": ((1, LCID, 4, 0),()),
		"Yc": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IEllipseArcs(DispatchBaseClass):
	' оллекци€ дуг эллипсов.'
	CLSID = IID('{CC5B7FCB-B887-4A47-AE6B-2522DFA24433}')
	coclass_clsid = IID('{A1471F9B-32BE-4E66-BF1C-F83255C7EC6D}')

	# Result is of type IEllipseArc
	def Add(self):
		'—оздать дугу эллипса (добавить дугу эллипса в коллекцию).'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{320D837F-0B27-45B0-98B4-9D21156E9857}')
		return ret

	# Result is of type IEllipseArc
	# The method EllipseArc is actually a property, but must be used as a method to correctly pass the arguments
	def EllipseArc(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'EllipseArc', '{320D837F-0B27-45B0-98B4-9D21156E9857}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IEllipses(DispatchBaseClass):
	' оллекци€ эллипсов.'
	CLSID = IID('{47633C44-93BB-4F41-A6CA-4F8CCAEA0659}')
	coclass_clsid = IID('{F0270B21-879A-4B96-BA43-95B402754FC0}')

	# Result is of type IEllipse
	def Add(self):
		'—оздать эллипс (добавить эллипс в коллекцию).'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{F60C9107-D8E2-433C-A0E3-A4E508D09353}')
		return ret

	# Result is of type IEllipse
	# The method Ellipse is actually a property, but must be used as a method to correctly pass the arguments
	def Ellipse(self, Index=defaultNamedNotOptArg):
		'¬озвращает эллипс, заданную по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Ellipse', '{F60C9107-D8E2-433C-A0E3-A4E508D09353}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IEmbodiment(DispatchBaseClass):
	'»сполнение.'
	CLSID = IID('{83DBB66A-83B8-47D9-93FE-2A90992193E8}')
	coclass_clsid = IID('{8ED8030C-87C3-41D4-BB4D-319BA74D6879}')

	def Delete(self):
		'”даление.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), (),)

	# Result is of type IEmbodiment
	# The method Embodiment is actually a property, but must be used as a method to correctly pass the arguments
	def Embodiment(self, Index=defaultNamedNotOptArg):
		'«ависимое исполнение.'
		ret = self._oleobj_.InvokeTypes(12, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Embodiment', '{83DBB66A-83B8-47D9-93FE-2A90992193E8}')
		return ret

	def GetMarking(self, MarkingType=defaultNamedNotOptArg, AddSystemDelimer=defaultNamedNotOptArg):
		'ќбозначение исполнени€'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(2, LCID, 1, (8, 0), ((3, 1), (11, 1)),MarkingType
			, AddSystemDelimer)

	def SetMarking(self, MarkingType=defaultNamedNotOptArg, Marking=defaultNamedNotOptArg):
		'ќбозначение исполнени€'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), ((3, 1), (8, 1)),MarkingType
			, Marking)

	def SetMaterial(self, Name=defaultNamedNotOptArg, Density=defaultNamedNotOptArg):
		'”становить материал.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), ((8, 1), (5, 1)),Name
			, Density)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Density": (5, 2, (5, 0), (), "Density", None),
		"EmbodimentsCount": (13, 2, (3, 0), (), "EmbodimentsCount", None),
		"IsCurrent": (10, 2, (11, 0), (), "IsCurrent", None),
		"LeftHandedCS": (15, 2, (11, 0), (), "LeftHandedCS", None),
		"Mass": (4, 2, (5, 0), (), "Mass", None),
		"Material": (6, 2, (8, 0), (), "Material", None),
		"Name": (1, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IEmbodiment'
		"Owner": (11, 2, (9, 0), (), "Owner", '{83DBB66A-83B8-47D9-93FE-2A90992193E8}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (16, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'SpecRough' returns object of type 'ISpecRough3D'
		"SpecRough": (14, 2, (9, 0), (), "SpecRough", '{AED8F9FC-E493-4CBD-9341-9D9E39E14FDC}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"IsCurrent": ((10, LCID, 4, 0),()),
		"LeftHandedCS": ((15, LCID, 4, 0),()),
		"Name": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IEmbodimentsManager(DispatchBaseClass):
	'»нтерфейс менеджера исполнений.'
	CLSID = IID('{C1948CE8-0933-4D75-9446-3E143928D045}')
	coclass_clsid = IID('{62AFE65C-2F2E-47FA-965A-37CCA9B25352}')

	def AddEmbodiment(self, ParentIndex=defaultNamedNotOptArg, Depended=defaultNamedNotOptArg, BaseMarking=defaultNamedNotOptArg, EmbodimentNumber=defaultNamedNotOptArg
			, AdditionalNumber=defaultNamedNotOptArg):
		'ƒобавл€ет новое исполнение и делает его текущим.'
		return self._oleobj_.InvokeTypes(8005, LCID, 1, (11, 0), ((12, 1), (11, 1), (8, 1), (8, 1), (8, 1)),ParentIndex
			, Depended, BaseMarking, EmbodimentNumber, AdditionalNumber)

	def AddMirrorEmbodiment(self, ParentIndex=defaultNamedNotOptArg, BaseMarking=defaultNamedNotOptArg, EmbodimentNumber=defaultNamedNotOptArg, AdditionalNumber=defaultNamedNotOptArg):
		'ƒобавл€ет новое зеркальное исполнение и делает его текущим.'
		return self._oleobj_.InvokeTypes(8013, LCID, 1, (11, 0), ((12, 1), (8, 1), (8, 1), (8, 1)),ParentIndex
			, BaseMarking, EmbodimentNumber, AdditionalNumber)

	def DeleteEmbodiment(self, Index=defaultNamedNotOptArg):
		'”далить исполнение по имени или индексу.'
		return self._oleobj_.InvokeTypes(8006, LCID, 1, (11, 0), ((12, 1),),Index
			)

	# Result is of type IEmbodiment
	# The method Embodiment is actually a property, but must be used as a method to correctly pass the arguments
	def Embodiment(self, Index=defaultNamedNotOptArg):
		'ѕолучить исполнение по индексу или имени.'
		ret = self._oleobj_.InvokeTypes(8010, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Embodiment', '{83DBB66A-83B8-47D9-93FE-2A90992193E8}')
		return ret

	def GetCurrentEmbodimentMarking(self, MarkingType=defaultNamedNotOptArg, AddSystemDelimer=defaultNamedNotOptArg):
		'»м€ текущего исполнени€'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(8002, LCID, 1, (8, 0), ((3, 1), (11, 1)),MarkingType
			, AddSystemDelimer)

	def GetEmbodimentMarking(self, Index=defaultNamedNotOptArg, MarkingType=defaultNamedNotOptArg, AddSystemDelimer=defaultNamedNotOptArg):
		'ќбозначение исполнени€'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(8007, LCID, 1, (8, 0), ((3, 1), (3, 1), (11, 1)),Index
			, MarkingType, AddSystemDelimer)

	def GetEmbodimentsTree(self, MarkingType=defaultNamedNotOptArg, AddSystemDelimer=defaultNamedNotOptArg, AddSpaces=defaultNamedNotOptArg):
		'ƒерево исполнений. ћассив узлов дерева исполнений. SAFEARRAY BSTR - (VT_ARRAY | VT_BSTR)'
		return self._ApplyTypes_(8001, 1, (12, 0), ((3, 1), (11, 1), (11, 1)), 'GetEmbodimentsTree', None,MarkingType
			, AddSystemDelimer, AddSpaces)

	def SetCurrentEmbodiment(self, Index=defaultNamedNotOptArg):
		'”становить текущее исполнение по имени или индексу.'
		return self._oleobj_.InvokeTypes(8004, LCID, 1, (11, 0), ((12, 1),),Index
			)

	def SetEmbodimentMarking(self, Index=defaultNamedNotOptArg, MarkingType=defaultNamedNotOptArg, Marking=defaultNamedNotOptArg):
		'ќбозначение исполнени€'
		return self._oleobj_.InvokeTypes(8008, LCID, 1, (11, 0), ((3, 1), (3, 1), (8, 1)),Index
			, MarkingType, Marking)

	_prop_map_get_ = {
		# Method 'CurrentEmbodiment' returns object of type 'IEmbodiment'
		"CurrentEmbodiment": (8012, 2, (9, 0), (), "CurrentEmbodiment", '{83DBB66A-83B8-47D9-93FE-2A90992193E8}'),
		"CurrentEmbodimentIndex": (8003, 2, (3, 0), (), "CurrentEmbodimentIndex", None),
		"EmbodimentAdditionalNumber": (8014, 2, (8, 0), (), "EmbodimentAdditionalNumber", None),
		"EmbodimentCount": (8009, 2, (3, 0), (), "EmbodimentCount", None),
		# Method 'TopEmbodiment' returns object of type 'IEmbodiment'
		"TopEmbodiment": (8011, 2, (9, 0), (), "TopEmbodiment", '{83DBB66A-83B8-47D9-93FE-2A90992193E8}'),
	}
	_prop_map_put_ = {
		"EmbodimentAdditionalNumber": ((8014, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IEquidistant(DispatchBaseClass):
	'Ёквидистанта.'
	CLSID = IID('{EE6713F9-AD9A-466D-9FB9-D19235E42C95}')
	coclass_clsid = IID('{5EB10E2C-0D66-4AC2-9619-93B437CBECE7}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BaseObject' returns object of type 'IDrawingObject'
		"BaseObject": (1, 2, (9, 0), (), "BaseObject", '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}'),
		"CutMode": (3, 2, (11, 0), (), "CutMode", None),
		"DegenerateSegment": (4, 2, (11, 0), (), "DegenerateSegment", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		"LeftRadius": (5, 2, (5, 0), (), "LeftRadius", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"RightRadius": (6, 2, (5, 0), (), "RightRadius", None),
		"Side": (2, 2, (3, 0), (), "Side", None),
		"Style": (7, 2, (3, 0), (), "Style", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"BaseObject": ((1, LCID, 4, 0),()),
		"CutMode": ((3, LCID, 4, 0),()),
		"DegenerateSegment": ((4, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"LeftRadius": ((5, LCID, 4, 0),()),
		"RightRadius": ((6, LCID, 4, 0),()),
		"Side": ((2, LCID, 4, 0),()),
		"Style": ((7, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IEquidistant3D(DispatchBaseClass):
	'Ёквидистанта 3D.'
	CLSID = IID('{C25DDBF4-3CC1-467D-B996-E30ED4D529B6}')
	coclass_clsid = IID('{948EB787-026E-4990-8A92-B6B3F25D4D7C}')

	def AddEdge(self, Object=defaultNamedNotOptArg):
		'ƒобавить объект в эквидистанту.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), ((9, 1),),Object
			)

	def RemoveEdge(self, Index=defaultNamedNotOptArg):
		'”далить объект из списка объектов эквидистанты.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), ((3, 1),),Index
			)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (4, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BaseObject' returns object of type 'IModelObject'
		"BaseObject": (3, 2, (9, 0), (), "BaseObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"CutMode": (6, 2, (3, 0), (), "CutMode", None),
		"DirFromBegin": (8, 2, (11, 0), (), "DirFromBegin", None),
		"Distance": (5, 2, (5, 0), (), "Distance", None),
		"Edges": (1, 2, (12, 0), (), "Edges", None),
		"EdgesCount": (12, 2, (3, 0), (), "EdgesCount", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"KeepRadius": (7, 2, (11, 0), (), "KeepRadius", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		"OnFace": (2, 2, (11, 0), (), "OnFace", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
		# Method 'Vector3D' returns object of type 'IVector3D'
		"Vector3D": (9, 2, (9, 0), (), "Vector3D", '{D51A4DCF-627D-44F5-89BA-46EF2449A212}'),
	}
	_prop_map_put_ = {
		"Angle": ((4, LCID, 4, 0),()),
		"BaseObject": ((3, LCID, 4, 0),()),
		"CutMode": ((6, LCID, 4, 0),()),
		"DirFromBegin": ((8, LCID, 4, 0),()),
		"Distance": ((5, LCID, 4, 0),()),
		"Edges": ((1, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"KeepRadius": ((7, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"OnFace": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IEquidistantSurface(DispatchBaseClass):
	'ќпераци€ построени€ эквидистанты поверхности.'
	CLSID = IID('{F665724F-7177-4B93-B51A-063BAF70CED4}')
	coclass_clsid = IID('{D575BF4A-81A5-4E01-A22B-CF944C3E9BDC}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"BaseSurface": (1, 2, (12, 0), (), "BaseSurface", None),
		"Direction": (2, 2, (11, 0), (), "Direction", None),
		"Distance": (3, 2, (5, 0), (), "Distance", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"BaseSurface": ((1, LCID, 4, 0),()),
		"Direction": ((2, LCID, 4, 0),()),
		"Distance": ((3, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IEquidistantSurfaces(DispatchBaseClass):
	' оллекци€ эквидистант поверхности.'
	CLSID = IID('{992D7C05-7A25-46FB-AAB1-B7337E6EA74B}')
	coclass_clsid = IID('{939B3DEB-7BFD-47EA-AF42-233B3B683571}')

	# Result is of type IEquidistantSurface
	def Add(self):
		'—оздать эквидистанту поверхности(добавить в коллекцию).'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{F665724F-7177-4B93-B51A-063BAF70CED4}')
		return ret

	# Result is of type IEquidistantSurface
	# The method EquidistantSurface is actually a property, but must be used as a method to correctly pass the arguments
	def EquidistantSurface(self, Index=defaultNamedNotOptArg):
		'¬озвращает эквидистанту поверхности, заданную по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'EquidistantSurface', '{F665724F-7177-4B93-B51A-063BAF70CED4}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IEquidistants(DispatchBaseClass):
	' оллекци€ эквидистант.'
	CLSID = IID('{86182E5E-8FA3-4283-9DC5-43D1673C80DA}')
	coclass_clsid = IID('{487511E6-E3F4-4F7C-9217-C485B1463A61}')

	# Result is of type IEquidistant
	def Add(self):
		'—оздать эквидистанту (добавить эквидистанту в коллекцию).'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{EE6713F9-AD9A-466D-9FB9-D19235E42C95}')
		return ret

	# Result is of type IEquidistant
	# The method Equidistant is actually a property, but must be used as a method to correctly pass the arguments
	def Equidistant(self, Index=defaultNamedNotOptArg):
		'¬озвращает эквидистанту, заданную по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Equidistant', '{EE6713F9-AD9A-466D-9FB9-D19235E42C95}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IEquidistants3D(DispatchBaseClass):
	' оллекци€ эквидистант 3D.'
	CLSID = IID('{8B94F332-EEFD-4610-9C55-20A1F7336122}')
	coclass_clsid = IID('{D5ABFF52-A8A7-45CB-BDCD-103FDFEF3E3E}')

	# Result is of type IEquidistant3D
	def Add(self):
		'—оздать эквидистанту (добавить эквидистанту 3D в коллекцию).'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{C25DDBF4-3CC1-467D-B996-E30ED4D529B6}')
		return ret

	# Result is of type IEquidistant3D
	# The method Equidistant3D is actually a property, but must be used as a method to correctly pass the arguments
	def Equidistant3D(self, Index=defaultNamedNotOptArg):
		'¬озвращает эквидистанту 3D, заданную по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Equidistant3D', '{C25DDBF4-3CC1-467D-B996-E30ED4D529B6}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IEvolution(DispatchBaseClass):
	'»нтерфейс кинематической операции.'
	CLSID = IID('{9AE8A34A-DE20-4C56-A793-BFCBB9343903}')
	coclass_clsid = IID('{B8BEEC82-BEC3-406F-93C5-4464149C3275}')

	def GetPathLength(self, Unit=defaultNamedNotOptArg):
		'ƒлина троектории.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (5, 0), ((3, 1),),Unit
			)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"BySurfaceNormal": (6, 2, (11, 0), (), "BySurfaceNormal", None),
		"Edges": (3, 2, (12, 0), (), "Edges", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		"OperationResult": (1, 2, (3, 0), (), "OperationResult", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'Sketch' returns object of type 'IModelObject'
		"Sketch": (2, 2, (9, 0), (), "Sketch", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"SketchShiftType": (4, 2, (3, 0), (), "SketchShiftType", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"BySurfaceNormal": ((6, LCID, 4, 0),()),
		"Edges": ((3, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"OperationResult": ((1, LCID, 4, 0),()),
		"Sketch": ((2, LCID, 4, 0),()),
		"SketchShiftType": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IEvolutions(DispatchBaseClass):
	' оллекци€ кинематических операций.'
	CLSID = IID('{8D984124-C430-45B3-939A-B5264C5B1388}')
	coclass_clsid = IID('{C21B92BD-B9D0-44C7-B52F-4AFE57F7899E}')

	# Result is of type IEvolution
	def Add(self, EvolutionType=defaultNamedNotOptArg):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((3, 1),),EvolutionType
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{9AE8A34A-DE20-4C56-A793-BFCBB9343903}')
		return ret

	# Result is of type IEvolution
	# The method Evolution is actually a property, but must be used as a method to correctly pass the arguments
	def Evolution(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу или по имени.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Evolution', '{9AE8A34A-DE20-4C56-A793-BFCBB9343903}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IExtensionSurface(DispatchBaseClass):
	'ќпераци€ продлени€ поверхности.'
	CLSID = IID('{27FE71E1-C84D-4F59-8F9B-F0C144314C83}')
	coclass_clsid = IID('{A6CD01C2-FD04-4B95-93F4-4D0648349C3F}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BuildingVectorParameters' returns object of type 'IVector3D'
		"BuildingVectorParameters": (9, 2, (9, 0), (), "BuildingVectorParameters", '{D51A4DCF-627D-44F5-89BA-46EF2449A212}'),
		# Method 'DirObject' returns object of type 'IModelObject'
		"DirObject": (6, 2, (9, 0), (), "DirObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Edges": (1, 2, (12, 0), (), "Edges", None),
		"ExtensionLimitType": (3, 2, (3, 0), (), "ExtensionLimitType", None),
		"ExtensionType": (2, 2, (3, 0), (), "ExtensionType", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"Length": (4, 2, (5, 0), (), "Length", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Sense": (8, 2, (11, 0), (), "Sense", None),
		"SideEdges": (5, 2, (11, 0), (), "SideEdges", None),
		# Method 'TargetObject' returns object of type 'IModelObject'
		"TargetObject": (7, 2, (9, 0), (), "TargetObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"DirObject": ((6, LCID, 4, 0),()),
		"Edges": ((1, LCID, 4, 0),()),
		"ExtensionLimitType": ((3, LCID, 4, 0),()),
		"ExtensionType": ((2, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Length": ((4, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Sense": ((8, LCID, 4, 0),()),
		"SideEdges": ((5, LCID, 4, 0),()),
		"TargetObject": ((7, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IExtensionSurfaces(DispatchBaseClass):
	' оллекци€ ќпераций продлени€ поверхности.'
	CLSID = IID('{5F6EE7F9-972A-4BB8-B1E4-BC1C74048FFF}')
	coclass_clsid = IID('{E117EB74-5E7D-4EDA-9F32-9C7CEFA29311}')

	# Result is of type IExtensionSurface
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{27FE71E1-C84D-4F59-8F9B-F0C144314C83}')
		return ret

	# Result is of type IExtensionSurface
	# The method ExtensionSurface is actually a property, but must be used as a method to correctly pass the arguments
	def ExtensionSurface(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'ExtensionSurface', '{27FE71E1-C84D-4F59-8F9B-F0C144314C83}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IExternalGDIObject(DispatchBaseClass):
	'¬нешний GDI объект.'
	CLSID = IID('{C234E81D-4232-41FD-980D-8E7E6EA7B733}')
	coclass_clsid = IID('{D7A43DA7-65AE-4006-AB72-B579CEE9A99C}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), (),)

	def SetBkColors(self, BkColors=defaultNamedNotOptArg):
		'”становить цвета фона текстов с Alpha каналом.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), ((12, 1),),BkColors
			)

	def SetPlace(self, Place=defaultNamedNotOptArg):
		'”становить матрицу дл€ отрисовки объекта.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), ((12, 1),),Place
			)

	def SetTextColors(self, textColors=defaultNamedNotOptArg):
		'”становить цвета текстов.'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (11, 0), ((12, 1),),textColors
			)

	def SetTextOrientation(self, textOrients=defaultNamedNotOptArg):
		'”становить наклон ситволов текстов.'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (11, 0), ((12, 1),),textOrients
			)

	def SetTexts(self, Texts=defaultNamedNotOptArg, Points=defaultNamedNotOptArg, Colors=defaultNamedNotOptArg, Fonts=defaultNamedNotOptArg
			, Is3DPoints=defaultNamedNotOptArg):
		'ќтрисовать текст в мировых координатах.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), ((12, 1), (12, 1), (12, 1), (12, 1), (11, 1)),Texts
			, Points, Colors, Fonts, Is3DPoints)

	def SetTextsAlign(self, TextsAlign=defaultNamedNotOptArg):
		'”становить выравнивание текста.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), ((12, 1),),TextsAlign
			)

	# The method SetVisible is actually a property, but must be used as a method to correctly pass the arguments
	def SetVisible(self, Frame=defaultNamedNotOptArg, arg1=True):
		'ѕоказатьскрыть объект (≈сли frame == NULL ќбъект будет виден во всех окнах документа).'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((9, 1), (11, 49)),Frame
			, arg1)

	_prop_map_get_ = {
		"AlwaysDrawInScreenPlane": (9, 2, (3, 0), (), "AlwaysDrawInScreenPlane", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"NonPickable": (12, 2, (11, 0), (), "NonPickable", None),
		"NonScalableX": (6, 2, (11, 0), (), "NonScalableX", None),
		"NonScalableY": (7, 2, (11, 0), (), "NonScalableY", None),
		"NonScalableZ": (8, 2, (11, 0), (), "NonScalableZ", None),
		"ObjectID": (1, 2, (3, 0), (), "ObjectID", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"ScalableText": (15, 2, (11, 0), (), "ScalableText", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"AlwaysDrawInScreenPlane": ((9, LCID, 4, 0),()),
		"NonPickable": ((12, LCID, 4, 0),()),
		"NonScalableX": ((6, LCID, 4, 0),()),
		"NonScalableY": ((7, LCID, 4, 0),()),
		"NonScalableZ": ((8, LCID, 4, 0),()),
		"ScalableText": ((15, LCID, 4, 0),()),
		"Visible": ((3, LCID, 4, 0),('True',)),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IExternalTessellationManager(DispatchBaseClass):
	'ћенеджер объектов с внешней триангул€цией.'
	CLSID = IID('{DC21F3D3-FFA6-4274-A976-79F34729B866}')
	coclass_clsid = None

	# Result is of type IExternalTessellationObject
	def Add(self):
		'ƒобавить объект с внешней триангул€цией.'
		ret = self._oleobj_.InvokeTypes(7501, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{9D5CDE37-7833-4359-B25A-FE7011EA771A}')
		return ret

	# Result is of type IExternalGDIObject
	def AddGDIObject(self):
		'ƒобавить внешний GDI объект.'
		ret = self._oleobj_.InvokeTypes(7506, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'AddGDIObject', '{C234E81D-4232-41FD-980D-8E7E6EA7B733}')
		return ret

	def Clear(self):
		'”далить все объекты.'
		return self._oleobj_.InvokeTypes(7505, LCID, 1, (11, 0), (),)

	def CreateTextureImage(self, Width=defaultNamedNotOptArg, Heigh=defaultNamedNotOptArg, RGBA=defaultNamedNotOptArg, WrapMode=defaultNamedNotOptArg
			, FiltMode=defaultNamedNotOptArg, ImageData=defaultNamedNotOptArg):
		'—оздать изображение текстуры. –азмер и массив данных VT_ARRAY|VT_UI1.'
		return self._oleobj_.InvokeTypes(7508, LCID, 1, (3, 0), ((3, 1), (3, 1), (11, 1), (11, 1), (11, 1), (12, 1)),Width
			, Heigh, RGBA, WrapMode, FiltMode, ImageData
			)

	def DeleteObjects(self, Id=defaultNamedNotOptArg):
		'”далить объект по ID.'
		return self._oleobj_.InvokeTypes(7504, LCID, 1, (11, 0), ((12, 1),),Id
			)

	def DeleteTextureImage(self, TexImgId=defaultNamedNotOptArg):
		'”далить изображение текстуры.'
		return self._oleobj_.InvokeTypes(7509, LCID, 1, (11, 0), ((3, 1),),TexImgId
			)

	def DisableModelDrawing(self, ForElements=defaultNamedNotOptArg):
		'«апретить отрисовку модели дл€ указанных элементов.'
		return self._oleobj_.InvokeTypes(7511, LCID, 1, (11, 0), ((3, 1),),ForElements
			)

	def EnableModelDrawing(self):
		'ќтменить последний запрет на отрисовку элементов модели.'
		return self._oleobj_.InvokeTypes(7512, LCID, 1, (11, 0), (),)

	# Result is of type IExternalGDIObject
	# The method GDIObject is actually a property, but must be used as a method to correctly pass the arguments
	def GDIObject(self, Id=defaultNamedNotOptArg):
		'ѕолучить внешний GDI объект по ID.'
		ret = self._oleobj_.InvokeTypes(7507, LCID, 2, (9, 0), ((3, 1),),Id
			)
		if ret is not None:
			ret = Dispatch(ret, 'GDIObject', '{C234E81D-4232-41FD-980D-8E7E6EA7B733}')
		return ret

	def IsModelDrawingEnabled(self, ForElements=defaultNamedNotOptArg):
		'ѕроверить, разрешена ли отрисовка дл€ указанных элементов.'
		return self._oleobj_.InvokeTypes(7513, LCID, 1, (11, 0), ((3, 1),),ForElements
			)

	# The method ObjectsVisible is actually a property, but must be used as a method to correctly pass the arguments
	def ObjectsVisible(self, Ids=defaultNamedNotOptArg, Frame=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		'ѕоказатьскрыть объект.'
		return self._oleobj_.InvokeTypes(7503, LCID, 4, (24, 0), ((12, 1), (9, 1), (11, 1)),Ids
			, Frame, arg2)

	def PickObjects(self, Frame=defaultNamedNotOptArg, PickRay=defaultNamedNotOptArg, Visible=defaultNamedNotOptArg, PickedObjs=pythoncom.Missing
			, PickedPars=pythoncom.Missing):
		'—обрать объекты по лучу.'
		return self._ApplyTypes_(7510, 1, (11, 0), ((9, 1), (12, 1), (11, 1), (16396, 2), (16396, 2)), 'PickObjects', None,Frame
			, PickRay, Visible, PickedObjs, PickedPars)

	# Result is of type IExternalTessellationObject
	# The method TessellationObject is actually a property, but must be used as a method to correctly pass the arguments
	def TessellationObject(self, Id=defaultNamedNotOptArg):
		'ѕолучить объект по ID.'
		ret = self._oleobj_.InvokeTypes(7502, LCID, 2, (9, 0), ((3, 1),),Id
			)
		if ret is not None:
			ret = Dispatch(ret, 'TessellationObject', '{9D5CDE37-7833-4359-B25A-FE7011EA771A}')
		return ret

	_prop_map_get_ = {
		"DisableModelRotation": (7514, 2, (11, 0), (), "DisableModelRotation", None),
	}
	_prop_map_put_ = {
		"DisableModelRotation": ((7514, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IExternalTessellationObject(DispatchBaseClass):
	'ќбъект с внешней триангул€цией.'
	CLSID = IID('{9D5CDE37-7833-4359-B25A-FE7011EA771A}')
	coclass_clsid = IID('{C51785D4-4665-4521-885E-1D0633AE445C}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), (),)

	def SelectTextureImage(self, TexImgId=defaultNamedNotOptArg):
		'«адать изображение текстуры по идентификатору.'
		return self._oleobj_.InvokeTypes(19, LCID, 1, (11, 0), ((3, 1),),TexImgId
			)

	def SetAdvancedColor(self, Color=defaultNamedNotOptArg, Ambient=defaultNamedNotOptArg, Diffuse=defaultNamedNotOptArg, Specularity=defaultNamedNotOptArg
			, Shininess=defaultNamedNotOptArg, Transparency=defaultNamedNotOptArg, Emission=defaultNamedNotOptArg):
		'”становить параметры цвета объекта.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), ((3, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1)),Color
			, Ambient, Diffuse, Specularity, Shininess, Transparency
			, Emission)

	def SetEdgeColors(self, Colors=defaultNamedNotOptArg):
		'”становить цвет ребрам сетки.'
		return self._oleobj_.InvokeTypes(21, LCID, 1, (11, 0), ((12, 1),),Colors
			)

	def SetEdgeStyles(self, Styles=defaultNamedNotOptArg):
		'”становить стили рЄбер сетки.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), ((12, 1),),Styles
			)

	def SetEdgeWidths(self, Widths=defaultNamedNotOptArg):
		'”становить толщины ребер сетки.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), ((12, 1),),Widths
			)

	def SetEdges(self, Points=defaultNamedNotOptArg, Edges=defaultNamedNotOptArg, Colors=defaultNamedNotOptArg):
		'”становить ребра сетки.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), ((12, 1), (12, 1), (12, 1)),Points
			, Edges, Colors)

	def SetFacetMode(self, SideMode=defaultNamedNotOptArg, CullingMode=defaultNamedNotOptArg):
		'”становить режим отображени€ граней.'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (11, 0), ((11, 1), (3, 1)),SideMode
			, CullingMode)

	def SetPlaces(self, Places=defaultNamedNotOptArg):
		'”становить матрицы дл€ отрисовки объекта.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), ((12, 1),),Places
			)

	def SetTessellation(self, Points=defaultNamedNotOptArg, Indexes=defaultNamedNotOptArg, Normals=defaultNamedNotOptArg, Colors=defaultNamedNotOptArg):
		'”становить параметры треангул€ции.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),Points
			, Indexes, Normals, Colors)

	def SetTextureImage(self, Width=defaultNamedNotOptArg, Heigh=defaultNamedNotOptArg, RGBA=defaultNamedNotOptArg, WrapMode=defaultNamedNotOptArg
			, FiltMode=defaultNamedNotOptArg, ImageData=defaultNamedNotOptArg):
		'”становить изображение текстуры. –азмер и массив данных VT_ARRAY|VT_UI1.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), ((3, 1), (3, 1), (11, 1), (11, 1), (11, 1), (12, 1)),Width
			, Heigh, RGBA, WrapMode, FiltMode, ImageData
			)

	def SetTexturePoints(self, Image2D=defaultNamedNotOptArg, ImagePoints=defaultNamedNotOptArg):
		'”становить координаты вывода текстуры. ћассив VT_ARRAY|VT_R8'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), ((11, 1), (12, 1)),Image2D
			, ImagePoints)

	# The method SetVisible is actually a property, but must be used as a method to correctly pass the arguments
	def SetVisible(self, Frame=defaultNamedNotOptArg, arg1=True):
		'ѕоказатьскрыть объект (≈сли frame == NULL ќбъект будет виден во всех окнах документа).'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((9, 1), (11, 49)),Frame
			, arg1)

	_prop_map_get_ = {
		"AlwaysDrawInScreenPlane": (17, 2, (3, 0), (), "AlwaysDrawInScreenPlane", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"DisableDepthTest": (13, 2, (11, 0), (), "DisableDepthTest", None),
		"NonGeometry": (18, 2, (11, 0), (), "NonGeometry", None),
		"NonPickable": (20, 2, (11, 0), (), "NonPickable", None),
		"NonScalableX": (14, 2, (11, 0), (), "NonScalableX", None),
		"NonScalableY": (15, 2, (11, 0), (), "NonScalableY", None),
		"NonScalableZ": (16, 2, (11, 0), (), "NonScalableZ", None),
		"ObjectID": (1, 2, (3, 0), (), "ObjectID", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"AlwaysDrawInScreenPlane": ((17, LCID, 4, 0),()),
		"DisableDepthTest": ((13, LCID, 4, 0),()),
		"NonGeometry": ((18, LCID, 4, 0),()),
		"NonPickable": ((20, LCID, 4, 0),()),
		"NonScalableX": ((14, LCID, 4, 0),()),
		"NonScalableY": ((15, LCID, 4, 0),()),
		"NonScalableZ": ((16, LCID, 4, 0),()),
		"Visible": ((3, LCID, 4, 0),('True',)),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IExtrusion(DispatchBaseClass):
	'Ёлемент выдавливани€.'
	CLSID = IID('{0D7FFE70-33EB-442C-A9B6-A205EA85A237}')
	coclass_clsid = IID('{E25EFEF5-D5C7-49E6-9149-9EA6E36CE9AE}')

	# The method Depth is actually a property, but must be used as a method to correctly pass the arguments
	def Depth(self, Normal=defaultNamedNotOptArg):
		'√лубина выдавливани€.'
		return self._oleobj_.InvokeTypes(4, LCID, 2, (5, 0), ((11, 1),),Normal
			)

	# Result is of type IModelObject
	# The method DepthObject is actually a property, but must be used as a method to correctly pass the arguments
	def DepthObject(self, Normal=defaultNamedNotOptArg):
		'ќбъект, задающий глубину выдавливани€'
		ret = self._oleobj_.InvokeTypes(7, LCID, 2, (9, 0), ((11, 1),),Normal
			)
		if ret is not None:
			ret = Dispatch(ret, 'DepthObject', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# The method DraftOutward is actually a property, but must be used as a method to correctly pass the arguments
	def DraftOutward(self, Normal=defaultNamedNotOptArg):
		'ѕризнак уклона наружу.'
		return self._oleobj_.InvokeTypes(6, LCID, 2, (11, 0), ((11, 1),),Normal
			)

	# The method DraftValue is actually a property, but must be used as a method to correctly pass the arguments
	def DraftValue(self, Normal=defaultNamedNotOptArg):
		'”гол уклона.'
		return self._oleobj_.InvokeTypes(5, LCID, 2, (5, 0), ((11, 1),),Normal
			)

	# The method ExtrusionType is actually a property, but must be used as a method to correctly pass the arguments
	def ExtrusionType(self, Normal=defaultNamedNotOptArg):
		'“ип выдавливани€.'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (3, 0), ((11, 1),),Normal
			)

	def GetSideParameters(self, Normal=defaultNamedNotOptArg, ExtrusionType=pythoncom.Missing, Depth=pythoncom.Missing, DraftValue=pythoncom.Missing
			, DraftOutward=pythoncom.Missing, DepthObject=pythoncom.Missing):
		'ѕолучить параметры выдавливани€ в одном направлении.'
		return self._ApplyTypes_(8, 1, (11, 0), ((11, 1), (16387, 2), (16389, 2), (16389, 2), (16395, 2), (16393, 2)), 'GetSideParameters', None,Normal
			, ExtrusionType, Depth, DraftValue, DraftOutward, DepthObject
			)

	# The method SetDepth is actually a property, but must be used as a method to correctly pass the arguments
	def SetDepth(self, Normal=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'√лубина выдавливани€.'
		return self._oleobj_.InvokeTypes(4, LCID, 4, (24, 0), ((11, 1), (5, 1)),Normal
			, arg1)

	# The method SetDepthObject is actually a property, but must be used as a method to correctly pass the arguments
	def SetDepthObject(self, Normal=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ќбъект, задающий глубину выдавливани€'
		return self._oleobj_.InvokeTypes(7, LCID, 4, (24, 0), ((11, 1), (9, 1)),Normal
			, arg1)

	# The method SetDraftOutward is actually a property, but must be used as a method to correctly pass the arguments
	def SetDraftOutward(self, Normal=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ѕризнак уклона наружу.'
		return self._oleobj_.InvokeTypes(6, LCID, 4, (24, 0), ((11, 1), (11, 1)),Normal
			, arg1)

	# The method SetDraftValue is actually a property, but must be used as a method to correctly pass the arguments
	def SetDraftValue(self, Normal=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'”гол уклона.'
		return self._oleobj_.InvokeTypes(5, LCID, 4, (24, 0), ((11, 1), (5, 1)),Normal
			, arg1)

	# The method SetExtrusionType is actually a property, but must be used as a method to correctly pass the arguments
	def SetExtrusionType(self, Normal=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'“ип выдавливани€.'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((11, 1), (3, 1)),Normal
			, arg1)

	def SetSideParameters(self, Normal=defaultNamedNotOptArg, ExtrusionType=defaultNamedNotOptArg, Depth=defaultNamedNotOptArg, DraftValue=defaultNamedNotOptArg
			, DraftOutward=defaultNamedNotOptArg, DepthObject=defaultNamedNotOptArg):
		'”становить параметры выдавливани€ в одном направлении.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), ((11, 1), (3, 1), (5, 1), (5, 1), (11, 1), (9, 1)),Normal
			, ExtrusionType, Depth, DraftValue, DraftOutward, DepthObject
			)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Direction": (2, 2, (3, 0), (), "Direction", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'Sketch' returns object of type 'ISketch'
		"Sketch": (1, 2, (9, 0), (), "Sketch", '{E6BBF50D-8401-4FB3-A6B6-153D3F447255}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Direction": ((2, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Sketch": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IExtrusion1(DispatchBaseClass):
	'Ёлемент выдавливани€.'
	CLSID = IID('{58B4011D-3C0B-499A-A441-7870B663E8CF}')
	coclass_clsid = None

	# The method CutOffByPoint is actually a property, but must be used as a method to correctly pass the arguments
	def CutOffByPoint(self, Normal=defaultNamedNotOptArg):
		'‘лаг отсекать дл€ способа до точки.'
		return self._oleobj_.InvokeTypes(13, LCID, 2, (11, 0), ((11, 1),),Normal
			)

	# The method SetCutOffByPoint is actually a property, but must be used as a method to correctly pass the arguments
	def SetCutOffByPoint(self, Normal=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'‘лаг отсекать дл€ способа до точки.'
		return self._oleobj_.InvokeTypes(13, LCID, 4, (24, 0), ((11, 1), (11, 1)),Normal
			, arg1)

	_prop_map_get_ = {
		# Method 'DirectionObject' returns object of type 'IModelObject'
		"DirectionObject": (11, 2, (9, 0), (), "DirectionObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"OperationResult": (14, 2, (3, 0), (), "OperationResult", None),
		# Method 'Profile' returns object of type 'IModelObject'
		"Profile": (10, 2, (9, 0), (), "Profile", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'Vector3D' returns object of type 'IVector3D'
		"Vector3D": (12, 2, (9, 0), (), "Vector3D", '{D51A4DCF-627D-44F5-89BA-46EF2449A212}'),
	}
	_prop_map_put_ = {
		"DirectionObject": ((11, LCID, 4, 0),()),
		"OperationResult": ((14, LCID, 4, 0),()),
		"Profile": ((10, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IExtrusionSurface(DispatchBaseClass):
	'Ёлемент поверхность выдавливани€.'
	CLSID = IID('{B505B91C-3444-4F7D-B987-5BB554932362}')
	coclass_clsid = IID('{E25EFEF5-D5C7-49E6-9149-9EA6E36CE9AE}')

	# The method Depth is actually a property, but must be used as a method to correctly pass the arguments
	def Depth(self, Normal=defaultNamedNotOptArg):
		'√лубина выдавливани€.'
		return self._oleobj_.InvokeTypes(4, LCID, 2, (5, 0), ((11, 1),),Normal
			)

	# Result is of type IModelObject
	# The method DepthObject is actually a property, but must be used as a method to correctly pass the arguments
	def DepthObject(self, Normal=defaultNamedNotOptArg):
		'ќбъект, задающий глубину выдавливани€'
		ret = self._oleobj_.InvokeTypes(7, LCID, 2, (9, 0), ((11, 1),),Normal
			)
		if ret is not None:
			ret = Dispatch(ret, 'DepthObject', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# The method DraftOutward is actually a property, but must be used as a method to correctly pass the arguments
	def DraftOutward(self, Normal=defaultNamedNotOptArg):
		'ѕризнак уклона наружу.'
		return self._oleobj_.InvokeTypes(6, LCID, 2, (11, 0), ((11, 1),),Normal
			)

	# The method DraftValue is actually a property, but must be used as a method to correctly pass the arguments
	def DraftValue(self, Normal=defaultNamedNotOptArg):
		'”гол уклона.'
		return self._oleobj_.InvokeTypes(5, LCID, 2, (5, 0), ((11, 1),),Normal
			)

	# The method ExtrusionType is actually a property, but must be used as a method to correctly pass the arguments
	def ExtrusionType(self, Normal=defaultNamedNotOptArg):
		'“ип выдавливани€.'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (3, 0), ((11, 1),),Normal
			)

	def GetSideParameters(self, Normal=defaultNamedNotOptArg, ExtrusionType=pythoncom.Missing, Depth=pythoncom.Missing, DraftValue=pythoncom.Missing
			, DraftOutward=pythoncom.Missing, DepthObject=pythoncom.Missing):
		'ѕолучить параметры выдавливани€ в одном направлении.'
		return self._ApplyTypes_(8, 1, (11, 0), ((11, 1), (16387, 2), (16389, 2), (16389, 2), (16395, 2), (16393, 2)), 'GetSideParameters', None,Normal
			, ExtrusionType, Depth, DraftValue, DraftOutward, DepthObject
			)

	# The method SetDepth is actually a property, but must be used as a method to correctly pass the arguments
	def SetDepth(self, Normal=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'√лубина выдавливани€.'
		return self._oleobj_.InvokeTypes(4, LCID, 4, (24, 0), ((11, 1), (5, 1)),Normal
			, arg1)

	# The method SetDepthObject is actually a property, but must be used as a method to correctly pass the arguments
	def SetDepthObject(self, Normal=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ќбъект, задающий глубину выдавливани€'
		return self._oleobj_.InvokeTypes(7, LCID, 4, (24, 0), ((11, 1), (9, 1)),Normal
			, arg1)

	# The method SetDraftOutward is actually a property, but must be used as a method to correctly pass the arguments
	def SetDraftOutward(self, Normal=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ѕризнак уклона наружу.'
		return self._oleobj_.InvokeTypes(6, LCID, 4, (24, 0), ((11, 1), (11, 1)),Normal
			, arg1)

	# The method SetDraftValue is actually a property, but must be used as a method to correctly pass the arguments
	def SetDraftValue(self, Normal=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'”гол уклона.'
		return self._oleobj_.InvokeTypes(5, LCID, 4, (24, 0), ((11, 1), (5, 1)),Normal
			, arg1)

	# The method SetExtrusionType is actually a property, but must be used as a method to correctly pass the arguments
	def SetExtrusionType(self, Normal=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'“ип выдавливани€.'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((11, 1), (3, 1)),Normal
			, arg1)

	def SetSideParameters(self, Normal=defaultNamedNotOptArg, ExtrusionType=defaultNamedNotOptArg, Depth=defaultNamedNotOptArg, DraftValue=defaultNamedNotOptArg
			, DraftOutward=defaultNamedNotOptArg, DepthObject=defaultNamedNotOptArg):
		'”становить параметры выдавливани€ в одном направлении.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), ((11, 1), (3, 1), (5, 1), (5, 1), (11, 1), (9, 1)),Normal
			, ExtrusionType, Depth, DraftValue, DraftOutward, DepthObject
			)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ClosedShell": (301, 2, (11, 0), (), "ClosedShell", None),
		"Direction": (2, 2, (3, 0), (), "Direction", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'Sketch' returns object of type 'ISketch'
		"Sketch": (1, 2, (9, 0), (), "Sketch", '{E6BBF50D-8401-4FB3-A6B6-153D3F447255}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"ClosedShell": ((301, LCID, 4, 0),()),
		"Direction": ((2, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Sketch": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IExtrusions(DispatchBaseClass):
	' оллекци€ элементов выдавливани€.'
	CLSID = IID('{A160C032-CF96-4467-A682-CE2243DF76BD}')
	coclass_clsid = IID('{2B4C99E4-FB5D-4D7D-A44D-5B898E1F5E9E}')

	# Result is of type IExtrusion
	def Add(self, ExtrusionType=defaultNamedNotOptArg):
		'—оздает новый элемент выдавливани€ и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((3, 1),),ExtrusionType
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{0D7FFE70-33EB-442C-A9B6-A205EA85A237}')
		return ret

	# Result is of type IExtrusion
	# The method Extrusion is actually a property, but must be used as a method to correctly pass the arguments
	def Extrusion(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент выдавливани€, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Extrusion', '{0D7FFE70-33EB-442C-A9B6-A205EA85A237}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IFace(DispatchBaseClass):
	'»нтерфейс грани.'
	CLSID = IID('{299A549E-3F82-4F60-98A3-258D632AA635}')
	coclass_clsid = IID('{B92823BB-3D0F-4994-8BB4-7BFC4B6F4CCE}')

	def GetArea(self, Unit=defaultNamedNotOptArg):
		'ѕолучить площадь грани.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (5, 0), ((3, 1),),Unit
			)

	def GetConeParam(self, Height=pythoncom.Missing, Angle=pythoncom.Missing, Radius=pythoncom.Missing):
		'ѕолучить параметры конической грани.'
		return self._ApplyTypes_(10, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2)), 'GetConeParam', None,Height
			, Angle, Radius)

	def IsConnectedWith(self, OtherFace=defaultNamedNotOptArg):
		'—в€заны ли грани.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), ((9, 1),),OtherFace
			)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"BaseSurface3DType": (2, 2, (3, 0), (), "BaseSurface3DType", None),
		"ConnectedFaces": (6, 2, (12, 0), (), "ConnectedFaces", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"LimitingEdges": (7, 2, (12, 0), (), "LimitingEdges", None),
		"Loops": (5, 2, (12, 0), (), "Loops", None),
		# Method 'MathSurface' returns object of type 'IMathSurface3D'
		"MathSurface": (3, 2, (9, 0), (), "MathSurface", '{25675C2F-10FD-4CE7-9E73-D3915D3E894E}'),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		"NormalOrientation": (4, 2, (11, 0), (), "NormalOrientation", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Radius": (9, 2, (5, 0), (), "Radius", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Surface3DType": (1, 2, (3, 0), (), "Surface3DType", None),
		# Method 'Tessellation' returns object of type 'ITessellation7'
		"Tessellation": (12, 2, (9, 0), (), "Tessellation", '{CA597AE6-2ECE-4483-A997-1AFD5ABF9D3A}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IFaceRemover(DispatchBaseClass):
	'ќпераци€ удалени€ граней.'
	CLSID = IID('{4CAE21E3-4183-47A6-94B8-8AD14D5775EE}')
	coclass_clsid = IID('{5B433BC2-C5DB-4CF7-8C99-EBCD1421D43E}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Faces": (1, 2, (12, 0), (), "Faces", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Faces": ((1, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IFaceRemovers(DispatchBaseClass):
	' оллекци€ операций удалени€ граней.'
	CLSID = IID('{6E177627-05D6-40B4-B955-9203F00656B5}')
	coclass_clsid = IID('{8B491E62-1DE7-4C17-9629-F77DF0E8E45C}')

	# Result is of type IFaceRemover
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{4CAE21E3-4183-47A6-94B8-8AD14D5775EE}')
		return ret

	# Result is of type IFaceRemover
	# The method FaceRemover is actually a property, but must be used as a method to correctly pass the arguments
	def FaceRemover(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'FaceRemover', '{4CAE21E3-4183-47A6-94B8-8AD14D5775EE}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IFeature7(DispatchBaseClass):
	'ќбъект дерева, представитель объекта модели.'
	CLSID = IID('{EF4343FA-985D-4FE9-AD5F-439BC8F92958}')
	coclass_clsid = None

	def Delete(self):
		'”далить компонент.'
		return self._oleobj_.InvokeTypes(2008, LCID, 1, (11, 0), (),)

	# The method ModelObjects is actually a property, but must be used as a method to correctly pass the arguments
	def ModelObjects(self, ObjType=defaultNamedNotOptArg):
		"ќбъекты вход€щие в состав данного объекта (грани, ребра, вершины) в виде SAFEARRAY'€ DISPATCH - VT_ARRAY | VT_DISPATCH."
		return self._ApplyTypes_(2006, 2, (12, 0), ((12, 1),), 'ModelObjects', None,ObjType
			)

	# The method SubFeatures is actually a property, but must be used as a method to correctly pass the arguments
	def SubFeatures(self, TreeType=defaultNamedNotOptArg, Through=defaultNamedNotOptArg, LibObject=defaultNamedNotOptArg):
		' оллекци€ элементов дерева заданного типа в виде массива SAFEARRAY DISPATCH - VT_ARRAY | VT_DISPATCH.'
		return self._ApplyTypes_(2009, 2, (12, 0), ((3, 1), (11, 1), (11, 1)), 'SubFeatures', None,TreeType
			, Through, LibObject)

	# Result is of type IVariable7
	# The method Variable is actually a property, but must be used as a method to correctly pass the arguments
	def Variable(self, External=defaultNamedNotOptArg, InSource=defaultNamedNotOptArg, Index=defaultNamedNotOptArg):
		'ѕолучить параметрическую переменную по имени, индексу или указателю на размер.'
		ret = self._oleobj_.InvokeTypes(2012, LCID, 2, (9, 0), ((11, 1), (11, 1), (12, 1)),External
			, InSource, Index)
		if ret is not None:
			ret = Dispatch(ret, 'Variable', '{8BAB52D9-8EF6-43A6-A1B8-AF42D5961A94}')
		return ret

	# The method Variables is actually a property, but must be used as a method to correctly pass the arguments
	def Variables(self, ExternalOnly=defaultNamedNotOptArg, InSource=defaultNamedNotOptArg):
		'ѕолучить массив параметрических переменных в виде SAFEARRAY VT_DISPATCH'
		return self._ApplyTypes_(2011, 2, (12, 0), ((11, 1), (11, 1)), 'Variables', None,ExternalOnly
			, InSource)

	# The method VariablesCount is actually a property, but must be used as a method to correctly pass the arguments
	def VariablesCount(self, External=defaultNamedNotOptArg, InSource=defaultNamedNotOptArg):
		'ѕолучить количество параметрических переменных.'
		return self._oleobj_.InvokeTypes(2013, LCID, 2, (3, 0), ((11, 1), (11, 1)),External
			, InSource)

	_prop_map_get_ = {
		"Excluded": (2005, 2, (11, 0), (), "Excluded", None),
		"FeatureType": (2007, 2, (3, 0), (), "FeatureType", None),
		"Name": (2001, 2, (8, 0), (), "Name", None),
		"ObjectError": (2014, 2, (3, 0), (), "ObjectError", None),
		# Method 'OwnerFeature' returns object of type 'IFeature7'
		"OwnerFeature": (2003, 2, (9, 0), (), "OwnerFeature", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		"ResultBodies": (2010, 2, (12, 0), (), "ResultBodies", None),
		"State": (2015, 2, (3, 0), (), "State", None),
		"UpdateStamp": (2002, 2, (3, 0), (), "UpdateStamp", None),
		"Valid": (2004, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Excluded": ((2005, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IFeaturePattern(DispatchBaseClass):
	'Ѕазовый интерфейс работы с массивами.'
	CLSID = IID('{C020E994-FB7F-449A-A3D9-2181135F4200}')
	coclass_clsid = IID('{345103DC-4694-4A5E-AB0E-9652B62646CD}')

	def AddInitialObjects(self, Objects=defaultNamedNotOptArg):
		'ƒобавить объекты в массив копируемых объектов.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), ((12, 1),),Objects
			)

	def Clear(self):
		'ќчистить список исходных объектов массива.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), (),)

	def Destroy(self):
		'–азрушить массив.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), (),)

	# Result is of type IModelObject
	# The method Exemplar is actually a property, but must be used as a method to correctly pass the arguments
	def Exemplar(self, Index1=defaultNamedNotOptArg, Index2=defaultNamedNotOptArg):
		'ѕолучить экземпл€р по индексу (или индексам).'
		ret = self._oleobj_.InvokeTypes(11, LCID, 2, (9, 0), ((3, 1), (3, 1)),Index1
			, Index2)
		if ret is not None:
			ret = Dispatch(ret, 'Exemplar', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def GetExemplarsCounts(self, Count1=pythoncom.Missing, Count2=pythoncom.Missing):
		'ѕолучить количество экземпл€ров.'
		return self._ApplyTypes_(12, 1, (11, 0), ((16387, 2), (16387, 2)), 'GetExemplarsCounts', None,Count1
			, Count2)

	def IsInitialObject(self, Object=defaultNamedNotOptArg):
		'ѕроверка - €вл€етс€ ли объект исходным дл€ массива.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((9, 1),),Object
			)

	def IsSuitableObject(self, Object=defaultNamedNotOptArg):
		'ѕроверка пригодности объекта дл€ операции.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), ((9, 1),),Object
			)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BasePoint' returns object of type 'IModelObject'
		"BasePoint": (10, 2, (9, 0), (), "BasePoint", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"BasePointType": (9, 2, (3, 0), (), "BasePointType", None),
		"GeometryPattern": (8, 2, (11, 0), (), "GeometryPattern", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"InitialObjects": (1, 2, (12, 0), (), "InitialObjects", None),
		"InstanceDeletedIndexes": (2, 2, (12, 0), (), "InstanceDeletedIndexes", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"BasePoint": ((10, LCID, 4, 0),()),
		"BasePointType": ((9, LCID, 4, 0),()),
		"GeometryPattern": ((8, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"InitialObjects": ((1, LCID, 4, 0),()),
		"InstanceDeletedIndexes": ((2, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IFeaturePatterns(DispatchBaseClass):
	' оллекци€ массивов.'
	CLSID = IID('{5CD7AC22-D8C2-42C4-96E5-5D64E44046F7}')
	coclass_clsid = IID('{33289D92-16E7-4E98-B126-DE9FCE328B5E}')

	# Result is of type IFeaturePattern
	def Add(self, Type=defaultNamedNotOptArg):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((3, 1),),Type
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{C020E994-FB7F-449A-A3D9-2181135F4200}')
		return ret

	# Result is of type IFeaturePattern
	# The method FeaturePattern is actually a property, but must be used as a method to correctly pass the arguments
	def FeaturePattern(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'FeaturePattern', '{C020E994-FB7F-449A-A3D9-2181135F4200}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IFillet(DispatchBaseClass):
	'—кругление.'
	CLSID = IID('{15E3132F-4D4E-451F-B104-478A4E3E0128}')
	coclass_clsid = IID('{754D6A63-A68D-4574-AA01-F8C252873A1C}')

	def AddVariableRadius(self, PointObject=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg, Position=defaultNamedNotOptArg, PositionType=defaultNamedNotOptArg):
		'ƒобавить настройку переменного радиуса дл€ ребра в точке заданной смещением.'
		return self._oleobj_.InvokeTypes(21, LCID, 1, (11, 0), ((9, 1), (5, 1), (5, 1), (11, 1)),PointObject
			, Radius, Position, PositionType)

	# The method SetStopFilletCutByObject is actually a property, but must be used as a method to correctly pass the arguments
	def SetStopFilletCutByObject(self, First=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'”секать по объекту (ѕри  секущей )  дл€ точки останова скруглени€.'
		return self._oleobj_.InvokeTypes(16, LCID, 4, (24, 0), ((11, 1), (11, 1)),First
			, arg1)

	# The method SetStopFilletCutObject is actually a property, but must be used as a method to correctly pass the arguments
	def SetStopFilletCutObject(self, First=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'—екущий объект дл€ точки останова скруглени€.'
		return self._oleobj_.InvokeTypes(15, LCID, 4, (24, 0), ((11, 1), (9, 1)),First
			, arg1)

	# The method SetStopFilletCutPointIndex is actually a property, but must be used as a method to correctly pass the arguments
	def SetStopFilletCutPointIndex(self, First=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'»ндекс точки пересечени€ с секущим объектом  дл€ точки останова скруглени€.'
		return self._oleobj_.InvokeTypes(17, LCID, 4, (24, 0), ((11, 1), (3, 1)),First
			, arg1)

	# The method SetStopFilletOffset is actually a property, but must be used as a method to correctly pass the arguments
	def SetStopFilletOffset(self, First=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'¬еличина смещени€ дл€ точки останова скруглени€.'
		return self._oleobj_.InvokeTypes(14, LCID, 4, (24, 0), ((11, 1), (5, 1)),First
			, arg1)

	# The method SetStopFilletOffsetMode is actually a property, but must be used as a method to correctly pass the arguments
	def SetStopFilletOffsetMode(self, First=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'—пособ расчета смещени€ дл€ точки останова скруглени€.'
		return self._oleobj_.InvokeTypes(13, LCID, 4, (24, 0), ((11, 1), (3, 1)),First
			, arg1)

	# The method SetStopFilletOn is actually a property, but must be used as a method to correctly pass the arguments
	def SetStopFilletOn(self, First=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'»спользовать точку останова скруглени€.'
		return self._oleobj_.InvokeTypes(12, LCID, 4, (24, 0), ((11, 1), (11, 1)),First
			, arg1)

	# The method SetVariableRadius is actually a property, but must be used as a method to correctly pass the arguments
	def SetVariableRadius(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'«начениее переменного радиуса в точке.'
		return self._oleobj_.InvokeTypes(24, LCID, 4, (24, 0), ((3, 1), (5, 1)),Index
			, arg1)

	# The method SetVariableRadiusPosition is actually a property, but must be used as a method to correctly pass the arguments
	def SetVariableRadiusPosition(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'¬еличина смещени€ точки настойки переменного радиуса в %.'
		return self._oleobj_.InvokeTypes(25, LCID, 4, (24, 0), ((3, 1), (5, 1)),Index
			, arg1)

	# The method SetVariableRadiusPositionLenght is actually a property, but must be used as a method to correctly pass the arguments
	def SetVariableRadiusPositionLenght(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'¬еличина смещени€ точки настойки переменного радиуса в мм.'
		return self._oleobj_.InvokeTypes(26, LCID, 4, (24, 0), ((3, 1), (5, 1)),Index
			, arg1)

	# The method StopFilletCutByObject is actually a property, but must be used as a method to correctly pass the arguments
	def StopFilletCutByObject(self, First=defaultNamedNotOptArg):
		'”секать по объекту (ѕри  секущей )  дл€ точки останова скруглени€.'
		return self._oleobj_.InvokeTypes(16, LCID, 2, (11, 0), ((11, 1),),First
			)

	# Result is of type IModelObject
	# The method StopFilletCutObject is actually a property, but must be used as a method to correctly pass the arguments
	def StopFilletCutObject(self, First=defaultNamedNotOptArg):
		'—екущий объект дл€ точки останова скруглени€.'
		ret = self._oleobj_.InvokeTypes(15, LCID, 2, (9, 0), ((11, 1),),First
			)
		if ret is not None:
			ret = Dispatch(ret, 'StopFilletCutObject', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# The method StopFilletCutPointIndex is actually a property, but must be used as a method to correctly pass the arguments
	def StopFilletCutPointIndex(self, First=defaultNamedNotOptArg):
		'»ндекс точки пересечени€ с секущим объектом  дл€ точки останова скруглени€.'
		return self._oleobj_.InvokeTypes(17, LCID, 2, (3, 0), ((11, 1),),First
			)

	# The method StopFilletOffset is actually a property, but must be used as a method to correctly pass the arguments
	def StopFilletOffset(self, First=defaultNamedNotOptArg):
		'¬еличина смещени€ дл€ точки останова скруглени€.'
		return self._oleobj_.InvokeTypes(14, LCID, 2, (5, 0), ((11, 1),),First
			)

	# The method StopFilletOffsetMode is actually a property, but must be used as a method to correctly pass the arguments
	def StopFilletOffsetMode(self, First=defaultNamedNotOptArg):
		'—пособ расчета смещени€ дл€ точки останова скруглени€.'
		return self._oleobj_.InvokeTypes(13, LCID, 2, (3, 0), ((11, 1),),First
			)

	# The method StopFilletOn is actually a property, but must be used as a method to correctly pass the arguments
	def StopFilletOn(self, First=defaultNamedNotOptArg):
		'»спользовать точку останова скруглени€.'
		return self._oleobj_.InvokeTypes(12, LCID, 2, (11, 0), ((11, 1),),First
			)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	# The method VariableRadius is actually a property, but must be used as a method to correctly pass the arguments
	def VariableRadius(self, Index=defaultNamedNotOptArg):
		'«начениее переменного радиуса в точке.'
		return self._oleobj_.InvokeTypes(24, LCID, 2, (5, 0), ((3, 1),),Index
			)

	def VariableRadiusClear(self):
		'ќчистить список настроек переменных радиусов скруглений.'
		return self._oleobj_.InvokeTypes(22, LCID, 1, (11, 0), (),)

	def VariableRadiusDelete(self, Index=defaultNamedNotOptArg):
		'”далить настройку переменного радиуса скруглений по индексу.'
		return self._oleobj_.InvokeTypes(23, LCID, 1, (11, 0), ((3, 1),),Index
			)

	# Result is of type IModelObject
	# The method VariableRadiusEdge is actually a property, but must be used as a method to correctly pass the arguments
	def VariableRadiusEdge(self, Index=defaultNamedNotOptArg):
		'–ебро дл€ которого задана настройка переменного радиуса.'
		ret = self._oleobj_.InvokeTypes(27, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'VariableRadiusEdge', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# The method VariableRadiusPosition is actually a property, but must be used as a method to correctly pass the arguments
	def VariableRadiusPosition(self, Index=defaultNamedNotOptArg):
		'¬еличина смещени€ точки настойки переменного радиуса в %.'
		return self._oleobj_.InvokeTypes(25, LCID, 2, (5, 0), ((3, 1),),Index
			)

	# The method VariableRadiusPositionLenght is actually a property, but must be used as a method to correctly pass the arguments
	def VariableRadiusPositionLenght(self, Index=defaultNamedNotOptArg):
		'¬еличина смещени€ точки настойки переменного радиуса в мм.'
		return self._oleobj_.InvokeTypes(26, LCID, 2, (5, 0), ((3, 1),),Index
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AutoSaveEdge": (10, 2, (11, 0), (), "AutoSaveEdge", None),
		"BaseObjects": (2, 2, (12, 0), (), "BaseObjects", None),
		"BuildingType": (1, 2, (3, 0), (), "BuildingType", None),
		"Chord": (6, 2, (5, 0), (), "Chord", None),
		"Coefficient": (5, 2, (5, 0), (), "Coefficient", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Radius1": (3, 2, (5, 0), (), "Radius1", None),
		"Radius2": (4, 2, (5, 0), (), "Radius2", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"RoundCorners": (9, 2, (11, 0), (), "RoundCorners", None),
		"SaveEdge": (11, 2, (11, 0), (), "SaveEdge", None),
		"SmoothCorner": (8, 2, (11, 0), (), "SmoothCorner", None),
		"StopFilletDirection": (18, 2, (11, 0), (), "StopFilletDirection", None),
		"Tangent": (7, 2, (11, 0), (), "Tangent", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
		"VariableRadiusCount": (20, 2, (3, 0), (), "VariableRadiusCount", None),
		"VariableRadiusOn": (19, 2, (11, 0), (), "VariableRadiusOn", None),
	}
	_prop_map_put_ = {
		"AutoSaveEdge": ((10, LCID, 4, 0),()),
		"BaseObjects": ((2, LCID, 4, 0),()),
		"BuildingType": ((1, LCID, 4, 0),()),
		"Chord": ((6, LCID, 4, 0),()),
		"Coefficient": ((5, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Radius1": ((3, LCID, 4, 0),()),
		"Radius2": ((4, LCID, 4, 0),()),
		"RoundCorners": ((9, LCID, 4, 0),()),
		"SaveEdge": ((11, LCID, 4, 0),()),
		"SmoothCorner": ((8, LCID, 4, 0),()),
		"StopFilletDirection": ((18, LCID, 4, 0),()),
		"Tangent": ((7, LCID, 4, 0),()),
		"VariableRadiusOn": ((19, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IFilletCurve(DispatchBaseClass):
	'ќпераци€ скруглени€ кривых.'
	CLSID = IID('{962810E4-0C48-4886-8B80-AEA166B1952B}')
	coclass_clsid = IID('{DDC4358E-877E-469F-A465-26901265C51E}')

	def GetCurve1CutPoint(self, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'ѕриближенна€ точка начала скруглени€ на кривой 1.'
		return self._ApplyTypes_(7, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2)), 'GetCurve1CutPoint', None,X
			, Y, Z)

	def GetCurve2CutPoint(self, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'ѕриближенна€ точка начала скруглени€ на кривой 2.'
		return self._ApplyTypes_(9, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2)), 'GetCurve2CutPoint', None,X
			, Y, Z)

	def SetCurve1CutPoint(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg):
		'ѕриближенна€ точка начала скруглени€ на кривой 1.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1)),X
			, Y, Z)

	def SetCurve2CutPoint(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg):
		'ѕриближенна€ точка начала скруглени€ на кривой 2.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1)),X
			, Y, Z)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Curve1' returns object of type 'IModelObject'
		"Curve1": (1, 2, (9, 0), (), "Curve1", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'Curve2' returns object of type 'IModelObject'
		"Curve2": (2, 2, (9, 0), (), "Curve2", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Direction": (5, 2, (11, 0), (), "Direction", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		"OnSurface": (11, 2, (11, 0), (), "OnSurface", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Radius": (6, 2, (5, 0), (), "Radius", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"TrimCurve1": (3, 2, (11, 0), (), "TrimCurve1", None),
		"TrimCurve2": (4, 2, (11, 0), (), "TrimCurve2", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Curve1": ((1, LCID, 4, 0),()),
		"Curve2": ((2, LCID, 4, 0),()),
		"Direction": ((5, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"OnSurface": ((11, LCID, 4, 0),()),
		"Radius": ((6, LCID, 4, 0),()),
		"TrimCurve1": ((3, LCID, 4, 0),()),
		"TrimCurve2": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IFilletCurves(DispatchBaseClass):
	' оллекци€ ќпераций скруглени€ кривых.'
	CLSID = IID('{E530740C-AB81-4DAA-AFB2-18E90121C8DC}')
	coclass_clsid = IID('{52CF9D27-73D6-4CC7-980E-26A4BEC840BF}')

	# Result is of type IFilletCurve
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{962810E4-0C48-4886-8B80-AEA166B1952B}')
		return ret

	# Result is of type IFilletCurve
	# The method FilletCurve is actually a property, but must be used as a method to correctly pass the arguments
	def FilletCurve(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'FilletCurve', '{962810E4-0C48-4886-8B80-AEA166B1952B}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IFillets(DispatchBaseClass):
	' оллекци€ скруглений.'
	CLSID = IID('{7A0672EF-4C38-4FD7-8D06-DADD256E1E38}')
	coclass_clsid = IID('{BC5254E9-8A80-49BA-9812-689F597E0908}')

	# Result is of type IFillet
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{15E3132F-4D4E-451F-B104-478A4E3E0128}')
		return ret

	# Result is of type IFillet
	# The method Fillet is actually a property, but must be used as a method to correctly pass the arguments
	def Fillet(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу или по имени.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Fillet', '{15E3132F-4D4E-451F-B104-478A4E3E0128}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IFindObjectParameters(DispatchBaseClass):
	'ѕараметры поиска объектов.'
	CLSID = IID('{8F1A7123-BD4A-4A49-8E22-1502D59B1FE6}')
	coclass_clsid = IID('{D4ED8463-0728-42BD-9413-83144E174241}')

	def Clear(self):
		'ќчистить параметры поиска.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"DisabledObjects": (5, 2, (12, 0), (), "DisabledObjects", None),
		"DisabledViews": (6, 2, (12, 0), (), "DisabledViews", None),
		"DrawingObjectType": (2, 2, (3, 0), (), "DrawingObjectType", None),
		"FindInBackgroundViewsAndLayers": (3, 2, (11, 0), (), "FindInBackgroundViewsAndLayers", None),
		"FindObjectsType": (1, 2, (3, 0), (), "FindObjectsType", None),
		"GeometryOnly": (4, 2, (11, 0), (), "GeometryOnly", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"DisabledObjects": ((5, LCID, 4, 0),()),
		"DisabledViews": ((6, LCID, 4, 0),()),
		"DrawingObjectType": ((2, LCID, 4, 0),()),
		"FindInBackgroundViewsAndLayers": ((3, LCID, 4, 0),()),
		"FindObjectsType": ((1, LCID, 4, 0),()),
		"GeometryOnly": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IFragmentDocument(DispatchBaseClass):
	'»нтерфейс фрагмента.'
	CLSID = IID('{E19CE626-DF9C-48C4-A83D-3E3BC7F0DACA}')
	coclass_clsid = IID('{86CA15DA-A197-4993-AB98-8921D156114E}')

	def Close(self, closeOptions=defaultNamedNotOptArg):
		'«акрыть документ. ≈сли SaveChanges = False, то система предложит пользователю сохранить имеющиес€ изменени€.'
		return self._oleobj_.InvokeTypes(3002, LCID, 1, (11, 0), ((3, 1),),closeOptions
			)

	def GetDrawingObjectNotifyResult(self):
		'»нтерфейс результатов редактировани€ объекта при обработке событий.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetDrawingObjectNotifyResult', None)
		return ret

	def Save(self):
		'—охранить документ на диске.'
		return self._oleobj_.InvokeTypes(3003, LCID, 1, (24, 0), (),)

	def SaveAs(self, PathName=defaultNamedNotOptArg):
		'—охранить документ под другим именем.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (24, 0), ((8, 1),),PathName
			)

	_prop_map_get_ = {
		"Active": (3009, 2, (11, 0), (), "Active", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Changed": (3011, 2, (11, 0), (), "Changed", None),
		# Method 'DocumentFrames' returns object of type 'IDocumentFrames'
		"DocumentFrames": (3001, 2, (9, 0), (), "DocumentFrames", '{1D18C466-C085-4D68-A465-A85D0C8E3A0E}'),
		# Method 'DocumentSettings' returns object of type 'IDocumentSettings'
		"DocumentSettings": (3012, 2, (9, 0), (), "DocumentSettings", '{B35FF50E-2991-4630-8AB8-DC3153E7971A}'),
		"DocumentType": (3000, 2, (3, 0), (), "DocumentType", None),
		"IsSketch": (5001, 2, (11, 0), (), "IsSketch", None),
		# Method 'LayoutSheets' returns object of type 'ILayoutSheets'
		"LayoutSheets": (3014, 2, (9, 0), (), "LayoutSheets", '{7AB54196-0B76-4B01-B769-7F47637173C4}'),
		"Name": (3005, 2, (8, 0), (), "Name", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Path": (3007, 2, (8, 0), (), "Path", None),
		"PathName": (3006, 2, (8, 0), (), "PathName", None),
		"ReadOnly": (3010, 2, (11, 0), (), "ReadOnly", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'SpecificationDescriptions' returns object of type 'ISpecificationDescriptions'
		"SpecificationDescriptions": (3013, 2, (9, 0), (), "SpecificationDescriptions", '{B9632C5C-86E1-4BC9-83A5-A954E407246A}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		# Method 'UserDataStoragesMng' returns object of type 'IUserDataStoragesMng'
		"UserDataStoragesMng": (3015, 2, (9, 0), (), "UserDataStoragesMng", '{77A6D4CA-6418-4DEE-B59C-400BFD052375}'),
		# Method 'ViewsAndLayersManager' returns object of type 'IViewsAndLayersManager'
		"ViewsAndLayersManager": (1, 2, (9, 0), (), "ViewsAndLayersManager", '{A4737593-578B-4187-8CAD-E1056EB5404B}'),
		"Visible": (3008, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Active": ((3009, LCID, 4, 0),()),
		"ReadOnly": ((3010, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IFragmentDocumentSettings(DispatchBaseClass):
	'Ќастройки фрагмента.'
	CLSID = IID('{A33D05CF-EFFF-4BBE-9BE0-15D283425828}')
	coclass_clsid = None

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IFrameTreesManager(DispatchBaseClass):
	'»нтерфейс менеджера закладок окна документа.'
	CLSID = IID('{B9019350-FF1D-4161-B41B-CD1B020ECF36}')
	coclass_clsid = None

	def AddTab(self, TabCaption=defaultNamedNotOptArg, OcxClassID=defaultNamedNotOptArg):
		'ƒобавить закладку.'
		ret = self._oleobj_.InvokeTypes(2001, LCID, 1, (9, 0), ((8, 1), (8, 1)),TabCaption
			, OcxClassID)
		if ret is not None:
			ret = Dispatch(ret, 'AddTab', None)
		return ret

	def AddTabEx(self, TabCaption=defaultNamedNotOptArg, TreeCaption=defaultNamedNotOptArg, OcxClassID=defaultNamedNotOptArg, Active=defaultNamedNotOptArg
			, Layout=defaultNamedNotOptArg):
		'ƒобавить закладку.'
		ret = self._oleobj_.InvokeTypes(2006, LCID, 1, (9, 0), ((8, 1), (8, 1), (8, 1), (11, 1), (3, 1)),TabCaption
			, TreeCaption, OcxClassID, Active, Layout)
		if ret is not None:
			ret = Dispatch(ret, 'AddTabEx', None)
		return ret

	def RemoveTab(self, Ocx=defaultNamedNotOptArg):
		'”далить закладку.'
		return self._oleobj_.InvokeTypes(2002, LCID, 1, (11, 0), ((9, 1),),Ocx
			)

	# The method SetTabVisible is actually a property, but must be used as a method to correctly pass the arguments
	def SetTabVisible(self, Ocx=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'¬идимость закладки.'
		return self._oleobj_.InvokeTypes(2007, LCID, 4, (24, 0), ((9, 1), (11, 1)),Ocx
			, arg1)

	# The method SetTreeCaption is actually a property, but must be used as a method to correctly pass the arguments
	def SetTreeCaption(self, Ocx=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'«аголовок окна дерева документа, устанавливаемый при активизации закладки.'
		return self._oleobj_.InvokeTypes(2005, LCID, 4, (24, 0), ((9, 1), (8, 1)),Ocx
			, arg1)

	# The method TabVisible is actually a property, but must be used as a method to correctly pass the arguments
	def TabVisible(self, Ocx=defaultNamedNotOptArg):
		'¬идимость закладки.'
		return self._oleobj_.InvokeTypes(2007, LCID, 2, (11, 0), ((9, 1),),Ocx
			)

	# The method TreeCaption is actually a property, but must be used as a method to correctly pass the arguments
	def TreeCaption(self, Ocx=defaultNamedNotOptArg):
		'«аголовок окна дерева документа, устанавливаемый при активизации закладки.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(2005, LCID, 2, (8, 0), ((9, 1),),Ocx
			)

	_prop_map_get_ = {
		"ActiveTab": (2003, 2, (9, 0), (), "ActiveTab", None),
		"TabsVisible": (2004, 2, (11, 0), (), "TabsVisible", None),
	}
	_prop_map_put_ = {
		"ActiveTab": ((2003, LCID, 4, 0),()),
		"TabsVisible": ((2004, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IFullFillet(DispatchBaseClass):
	'ѕолное скругление.'
	CLSID = IID('{7FEA11B5-B4D3-4481-AB09-B0DE0A699189}')
	coclass_clsid = IID('{39BC03AF-5E8D-4466-B69A-7E5C2FE8E79C}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"CenterFaces": (3, 2, (12, 0), (), "CenterFaces", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Side1Faces": (1, 2, (12, 0), (), "Side1Faces", None),
		"Side2Faces": (2, 2, (12, 0), (), "Side2Faces", None),
		"Tangent": (4, 2, (11, 0), (), "Tangent", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"CenterFaces": ((3, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Side1Faces": ((1, LCID, 4, 0),()),
		"Side2Faces": ((2, LCID, 4, 0),()),
		"Tangent": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IFullFillets(DispatchBaseClass):
	' оллекци€ операций полного скруглени€.'
	CLSID = IID('{F36E8FBA-F786-4E65-8782-3F6BC2F9D006}')
	coclass_clsid = IID('{C2C76BBB-C57C-4263-8250-6289DF04EE8E}')

	# Result is of type IFullFillet
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{7FEA11B5-B4D3-4481-AB09-B0DE0A699189}')
		return ret

	# Result is of type IFullFillet
	# The method FullFillet is actually a property, but must be used as a method to correctly pass the arguments
	def FullFillet(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу или по имени.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'FullFillet', '{7FEA11B5-B4D3-4481-AB09-B0DE0A699189}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IGabaritObject(DispatchBaseClass):
	'¬спомогательные данные дл€ изменени€ габарита документа'
	CLSID = IID('{B6674824-CD9D-4220-B2CB-9F939A9C35C8}')
	coclass_clsid = None

	def AddGabarit(self, X1=defaultNamedNotOptArg, Y1=defaultNamedNotOptArg, Z1=defaultNamedNotOptArg, X2=defaultNamedNotOptArg
			, Y2=defaultNamedNotOptArg, Z2=defaultNamedNotOptArg):
		'ƒобавить дополнительный габарит к габариту документа.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1)),X1
			, Y1, Z1, X2, Y2, Z2
			)

	def GetCurrentGabarit(self, NPage=defaultNamedNotOptArg, P1X=pythoncom.Missing, P1Y=pythoncom.Missing, P1Z=pythoncom.Missing
			, P2X=pythoncom.Missing, P2Y=pythoncom.Missing, P2Z=pythoncom.Missing):
		'ѕолучить текущий габарит документа.'
		return self._ApplyTypes_(1, 1, (11, 0), ((3, 1), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2)), 'GetCurrentGabarit', None,NPage
			, P1X, P1Y, P1Z, P2X, P2Y
			, P2Z)

	def GetGabaritModifying(self):
		'»змененилс€ ли габарит документа.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IHatch(DispatchBaseClass):
	'Ўтриховка.'
	CLSID = IID('{826C0B5B-0146-417A-8128-E581F8430F37}')
	coclass_clsid = IID('{7627E43F-0B5A-410F-9456-81E7C130AC5B}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Side": (3, 2, (11, 0), (), "Side", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"X": (1, 2, (5, 0), (), "X", None),
		"Y": (2, 2, (5, 0), (), "Y", None),
	}
	_prop_map_put_ = {
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"Side": ((3, LCID, 4, 0),()),
		"X": ((1, LCID, 4, 0),()),
		"Y": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IHatchParam(DispatchBaseClass):
	'ѕараметры штриховки.'
	CLSID = IID('{437D6587-7649-4A0C-80BB-7A6E89661839}')
	coclass_clsid = None

	def AddStyleFromLibrary(self, FileName=defaultNamedNotOptArg, StyleNumber=defaultNamedNotOptArg):
		'»нициализаци€ стил€ штриховки из библиотеки стилей.'
		return self._oleobj_.InvokeTypes(6509, LCID, 1, (11, 0), ((8, 1), (5, 1)),FileName
			, StyleNumber)

	_prop_map_get_ = {
		"HatchAngle": (6503, 2, (5, 0), (), "HatchAngle", None),
		"HatchColor": (6501, 2, (3, 0), (), "HatchColor", None),
		"HatchFileName": (6507, 2, (8, 0), (), "HatchFileName", None),
		"HatchType": (6504, 2, (11, 0), (), "HatchType", None),
		"IsSheetAngle": (6506, 2, (11, 0), (), "IsSheetAngle", None),
		"LibraryStyleNumber": (6508, 2, (5, 0), (), "LibraryStyleNumber", None),
		"Step": (6502, 2, (5, 0), (), "Step", None),
		"Style": (6500, 2, (3, 0), (), "Style", None),
		"Width": (6505, 2, (5, 0), (), "Width", None),
	}
	_prop_map_put_ = {
		"HatchAngle": ((6503, LCID, 4, 0),()),
		"HatchColor": ((6501, LCID, 4, 0),()),
		"HatchType": ((6504, LCID, 4, 0),()),
		"IsSheetAngle": ((6506, LCID, 4, 0),()),
		"Step": ((6502, LCID, 4, 0),()),
		"Style": ((6500, LCID, 4, 0),()),
		"Width": ((6505, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IHatchStyle(DispatchBaseClass):
	'—тиль штриховки.'
	CLSID = IID('{9315D8A2-95B7-4E7F-B861-B88FA490EE2B}')
	coclass_clsid = IID('{F280E407-A09F-4A98-93A4-451260A3E4C0}')

	def AddLine(self, Style=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Angle=defaultNamedNotOptArg
			, DX=defaultNamedNotOptArg, DY=defaultNamedNotOptArg):
		'ƒобавить линию.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), ((9, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1)),Style
			, X, Y, Angle, DX, DY
			)

	def ClearLines(self):
		'”далить все параметры линий.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def Delete(self):
		'”далить стиль.'
		return self._oleobj_.InvokeTypes(3008, LCID, 1, (11, 0), (),)

	def DeleteLine(self, Index=defaultNamedNotOptArg):
		'”далить параметры линии по индексу.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), ((3, 1),),Index
			)

	# The method LineAngle is actually a property, but must be used as a method to correctly pass the arguments
	def LineAngle(self, Index=defaultNamedNotOptArg):
		'ƒобавочный угол поворота относительно угла штриховки.'
		return self._oleobj_.InvokeTypes(15, LCID, 2, (5, 0), ((3, 1),),Index
			)

	# The method LineBeginX is actually a property, but must be used as a method to correctly pass the arguments
	def LineBeginX(self, Index=defaultNamedNotOptArg):
		'Ќачальное положение относительно базовой точки штриховки по X.'
		return self._oleobj_.InvokeTypes(13, LCID, 2, (5, 0), ((3, 1),),Index
			)

	# The method LineBeginY is actually a property, but must be used as a method to correctly pass the arguments
	def LineBeginY(self, Index=defaultNamedNotOptArg):
		'Ќачальное положение относительно базовой точки штриховки по Y.'
		return self._oleobj_.InvokeTypes(14, LCID, 2, (5, 0), ((3, 1),),Index
			)

	# The method LineDx is actually a property, but must be used as a method to correctly pass the arguments
	def LineDx(self, Index=defaultNamedNotOptArg):
		'—мещение по направлению линии.'
		return self._oleobj_.InvokeTypes(16, LCID, 2, (5, 0), ((3, 1),),Index
			)

	# The method LineDy is actually a property, but must be used as a method to correctly pass the arguments
	def LineDy(self, Index=defaultNamedNotOptArg):
		'—мещение по нормали к линии.'
		return self._oleobj_.InvokeTypes(17, LCID, 2, (5, 0), ((3, 1),),Index
			)

	# Result is of type ICurveStyle
	# The method LineStyle is actually a property, but must be used as a method to correctly pass the arguments
	def LineStyle(self, Index=defaultNamedNotOptArg):
		'—тиль линии штриховки.'
		ret = self._oleobj_.InvokeTypes(12, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'LineStyle', '{5046BF60-687A-4E5D-BBEF-3CB5D95F7A41}')
		return ret

	# The method SetLineAngle is actually a property, but must be used as a method to correctly pass the arguments
	def SetLineAngle(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ƒобавочный угол поворота относительно угла штриховки.'
		return self._oleobj_.InvokeTypes(15, LCID, 4, (24, 0), ((3, 1), (5, 1)),Index
			, arg1)

	# The method SetLineBeginX is actually a property, but must be used as a method to correctly pass the arguments
	def SetLineBeginX(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'Ќачальное положение относительно базовой точки штриховки по X.'
		return self._oleobj_.InvokeTypes(13, LCID, 4, (24, 0), ((3, 1), (5, 1)),Index
			, arg1)

	# The method SetLineBeginY is actually a property, but must be used as a method to correctly pass the arguments
	def SetLineBeginY(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'Ќачальное положение относительно базовой точки штриховки по Y.'
		return self._oleobj_.InvokeTypes(14, LCID, 4, (24, 0), ((3, 1), (5, 1)),Index
			, arg1)

	# The method SetLineDx is actually a property, but must be used as a method to correctly pass the arguments
	def SetLineDx(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'—мещение по направлению линии.'
		return self._oleobj_.InvokeTypes(16, LCID, 4, (24, 0), ((3, 1), (5, 1)),Index
			, arg1)

	# The method SetLineDy is actually a property, but must be used as a method to correctly pass the arguments
	def SetLineDy(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'—мещение по нормали к линии.'
		return self._oleobj_.InvokeTypes(17, LCID, 4, (24, 0), ((3, 1), (5, 1)),Index
			, arg1)

	# The method SetLineStyle is actually a property, but must be used as a method to correctly pass the arguments
	def SetLineStyle(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'—тиль линии штриховки.'
		return self._oleobj_.InvokeTypes(12, LCID, 4, (24, 0), ((3, 1), (9, 1)),Index
			, arg1)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3007, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (1, 2, (5, 0), (), "Angle", None),
		"ApiStyleId": (3002, 2, (3, 0), (), "ApiStyleId", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'CurvesStyles' returns object of type 'IStyles'
		"CurvesStyles": (7, 2, (9, 0), (), "CurvesStyles", '{E821AE61-FA05-4B39-8908-BD37D6D044A4}'),
		"DisplayStyleId": (3003, 2, (3, 0), (), "DisplayStyleId", None),
		"HatchType": (5, 2, (11, 0), (), "HatchType", None),
		"IsExternalStyle": (3004, 2, (11, 0), (), "IsExternalStyle", None),
		"KeepAngle": (2, 2, (11, 0), (), "KeepAngle", None),
		"KeepScale": (4, 2, (11, 0), (), "KeepScale", None),
		"LibraryPath": (3005, 2, (8, 0), (), "LibraryPath", None),
		"LibraryStyleId": (3006, 2, (3, 0), (), "LibraryStyleId", None),
		"LinesCount": (8, 2, (3, 0), (), "LinesCount", None),
		"Name": (3001, 2, (8, 0), (), "Name", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Scale": (3, 2, (5, 0), (), "Scale", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Width": (6, 2, (5, 0), (), "Width", None),
	}
	_prop_map_put_ = {
		"Angle": ((1, LCID, 4, 0),()),
		"DisplayStyleId": ((3003, LCID, 4, 0),()),
		"HatchType": ((5, LCID, 4, 0),()),
		"KeepAngle": ((2, LCID, 4, 0),()),
		"KeepScale": ((4, LCID, 4, 0),()),
		"Name": ((3001, LCID, 4, 0),()),
		"Scale": ((3, LCID, 4, 0),()),
		"Width": ((6, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IHatches(DispatchBaseClass):
	' оллекци€ штриховок.'
	CLSID = IID('{B7E776B0-9524-4254-9D1F-0CF8E0314A1B}')
	coclass_clsid = IID('{1044ADC3-E779-4C48-A4DD-A00BEF9341D6}')

	# Result is of type IHatch
	def Add(self):
		'—оздать штриховку (добавить осевую линию в коллекцию).'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{826C0B5B-0146-417A-8128-E581F8430F37}')
		return ret

	# Result is of type IHatch
	# The method Hatch is actually a property, but must be used as a method to correctly pass the arguments
	def Hatch(self, Index=defaultNamedNotOptArg):
		'¬озвращает штриховку, заданную по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Hatch', '{826C0B5B-0146-417A-8128-E581F8430F37}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IHeightDimension(DispatchBaseClass):
	'–азмер высоты.'
	CLSID = IID('{938BE57F-55FF-469F-82A5-B1CD6CCF8340}')
	coclass_clsid = IID('{CA99C371-8E76-4FE0-A176-A33FC6D2FDFC}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"DimensionType": (1, 2, (3, 0), (), "DimensionType", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"X": (2, 2, (5, 0), (), "X", None),
		"X1": (4, 2, (5, 0), (), "X1", None),
		"X2": (6, 2, (5, 0), (), "X2", None),
		"Y": (3, 2, (5, 0), (), "Y", None),
		"Y1": (5, 2, (5, 0), (), "Y1", None),
		"Y2": (7, 2, (5, 0), (), "Y2", None),
	}
	_prop_map_put_ = {
		"DimensionType": ((1, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"X": ((2, LCID, 4, 0),()),
		"X1": ((4, LCID, 4, 0),()),
		"X2": ((6, LCID, 4, 0),()),
		"Y": ((3, LCID, 4, 0),()),
		"Y1": ((5, LCID, 4, 0),()),
		"Y2": ((7, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IHeightDimensions(DispatchBaseClass):
	' оллекци€ размеров высоты.'
	CLSID = IID('{3A56D35C-3242-4C49-BA99-CF790EB10356}')
	coclass_clsid = IID('{2A942576-E76D-4375-A1D9-0CCC4B382786}')

	# Result is of type IHeightDimension
	def Add(self):
		'ƒобавить размер в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{938BE57F-55FF-469F-82A5-B1CD6CCF8340}')
		return ret

	# Result is of type IHeightDimension
	# The method HeightDimension is actually a property, but must be used as a method to correctly pass the arguments
	def HeightDimension(self, Index=defaultNamedNotOptArg):
		'ѕолучить размер, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'HeightDimension', '{938BE57F-55FF-469F-82A5-B1CD6CCF8340}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IHole3D(DispatchBaseClass):
	'ќтверстие.'
	CLSID = IID('{4C901765-3E0D-4A5D-B2F8-FA708E3CC605}')
	coclass_clsid = IID('{9F4504BC-739E-42C6-A946-7875F3D43589}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Axis": (9, 2, (11, 0), (), "Axis", None),
		"Depth": (2, 2, (5, 0), (), "Depth", None),
		# Method 'DepthFace' returns object of type 'IModelObject'
		"DepthFace": (8, 2, (9, 0), (), "DepthFace", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"DepthType": (3, 2, (3, 0), (), "DepthType", None),
		# Method 'DepthVertex' returns object of type 'IModelObject'
		"DepthVertex": (7, 2, (9, 0), (), "DepthVertex", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Diameter": (1, 2, (5, 0), (), "Diameter", None),
		"EndFaceAngle": (5, 2, (5, 0), (), "EndFaceAngle", None),
		"EndFaceType": (4, 2, (3, 0), (), "EndFaceType", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		# Method 'HoleParameters' returns object of type 'IKompasAPIObject'
		"HoleParameters": (11, 2, (9, 0), (), "HoleParameters", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"HoleType": (6, 2, (3, 0), (), "HoleType", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"ShowThread": (12, 2, (11, 0), (), "ShowThread", None),
		# Method 'Thread' returns object of type 'IThread'
		"Thread": (10, 2, (9, 0), (), "Thread", '{BC710E4D-A679-40FC-B5AE-16302ABBFEB8}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Axis": ((9, LCID, 4, 0),()),
		"Depth": ((2, LCID, 4, 0),()),
		"DepthFace": ((8, LCID, 4, 0),()),
		"DepthType": ((3, LCID, 4, 0),()),
		"DepthVertex": ((7, LCID, 4, 0),()),
		"Diameter": ((1, LCID, 4, 0),()),
		"EndFaceAngle": ((5, LCID, 4, 0),()),
		"EndFaceType": ((4, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"HoleType": ((6, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"ShowThread": ((12, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IHoleDisposal(DispatchBaseClass):
	'–азмещение отверсти€.'
	CLSID = IID('{071C7A25-91E2-4C9D-954A-CA0FA0E94863}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'AssociationVertex' returns object of type 'IModelObject'
		"AssociationVertex": (204, 2, (9, 0), (), "AssociationVertex", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'BaseSurface' returns object of type 'IModelObject'
		"BaseSurface": (201, 2, (9, 0), (), "BaseSurface", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Direction": (206, 2, (11, 0), (), "Direction", None),
		# Method 'DirectionObject' returns object of type 'IModelObject'
		"DirectionObject": (209, 2, (9, 0), (), "DirectionObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"OffsetType": (202, 2, (3, 0), (), "OffsetType", None),
		"Perpendicular": (205, 2, (11, 0), (), "Perpendicular", None),
		# Method 'Point3DParamSurface' returns object of type 'IKompasAPIObject'
		"Point3DParamSurface": (203, 2, (9, 0), (), "Point3DParamSurface", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"ProcessCanopy": (207, 2, (11, 0), (), "ProcessCanopy", None),
		# Method 'Vector' returns object of type 'IVector3D'
		"Vector": (208, 2, (9, 0), (), "Vector", '{D51A4DCF-627D-44F5-89BA-46EF2449A212}'),
	}
	_prop_map_put_ = {
		"AssociationVertex": ((204, LCID, 4, 0),()),
		"BaseSurface": ((201, LCID, 4, 0),()),
		"Direction": ((206, LCID, 4, 0),()),
		"DirectionObject": ((209, LCID, 4, 0),()),
		"OffsetType": ((202, LCID, 4, 0),()),
		"Perpendicular": ((205, LCID, 4, 0),()),
		"ProcessCanopy": ((207, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IHoles3D(DispatchBaseClass):
	' оллекци€ отверстий.'
	CLSID = IID('{A018E8CE-26F6-4DAE-801B-378ED08A6314}')
	coclass_clsid = IID('{12851DCA-A72C-4F44-9CF0-282476F65052}')

	# Result is of type IHole3D
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{4C901765-3E0D-4A5D-B2F8-FA708E3CC605}')
		return ret

	# Result is of type IHole3D
	# The method Hole3D is actually a property, but must be used as a method to correctly pass the arguments
	def Hole3D(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу или по имени.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Hole3D', '{4C901765-3E0D-4A5D-B2F8-FA708E3CC605}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IHypertextReferenceParam(DispatchBaseClass):
	'ѕараметры вставки ссылки в текст.'
	CLSID = IID('{B416C2CA-CA76-4CBE-8D3A-458967F8E0CE}')
	coclass_clsid = None

	def Destroy(self):
		'–азрушить ссылку.'
		return self._oleobj_.InvokeTypes(3006, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Brackets": (3004, 2, (11, 0), (), "Brackets", None),
		"HypertextType": (3002, 2, (3, 0), (), "HypertextType", None),
		# Method 'LinkObject' returns object of type 'IKompasAPIObject'
		"LinkObject": (3001, 2, (9, 0), (), "LinkObject", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Precission": (3005, 2, (3, 0), (), "Precission", None),
		"PropertyId": (3007, 2, (5, 0), (), "PropertyId", None),
		"TextLineIndex": (3003, 2, (3, 0), (), "TextLineIndex", None),
	}
	_prop_map_put_ = {
		"Brackets": ((3004, LCID, 4, 0),()),
		"HypertextType": ((3002, LCID, 4, 0),()),
		"LinkObject": ((3001, LCID, 4, 0),()),
		"Precission": ((3005, LCID, 4, 0),()),
		"PropertyId": ((3007, LCID, 4, 0),()),
		"TextLineIndex": ((3003, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IImportedSurface(DispatchBaseClass):
	'»мпортированна€ поверхность.'
	CLSID = IID('{2B98DEE2-3352-4F9B-85B7-F0D94742EFA7}')
	coclass_clsid = IID('{F5DD3012-45BD-42EA-A448-1CF7E646487A}')

	def AddPoint(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg):
		'ƒобавить точку в создаваемый р€д.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1)),X
			, Y, Z)

	def AddPointsSeries(self, UV=defaultNamedNotOptArg, IndexAt=defaultNamedNotOptArg, Arr=defaultNamedNotOptArg):
		'ƒобавить р€д точек, UV == TRUE - по U, FALSE - по V.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), ((11, 1), (3, 1), (12, 1)),UV
			, IndexAt, Arr)

	def BeginPointsSeries(self, UV=defaultNamedNotOptArg, IndexAt=defaultNamedNotOptArg):
		'Ќачать добавление нового р€да точек, UV == TRUE - по U, FALSE - по V.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((11, 1), (3, 1)),UV
			, IndexAt)

	def ClearPointsSeries(self):
		'ќчистить список р€дов точек.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), (),)

	def DeletePointsSeries(self, UV=defaultNamedNotOptArg, Index=defaultNamedNotOptArg):
		'”далить р€д точек.'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (11, 0), ((11, 1), (3, 1)),UV
			, Index)

	def EndPointsSeries(self):
		'«авершить создание нового р€да точек.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), (),)

	def GetPoint(self, UIndex=defaultNamedNotOptArg, VIndex=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing
			, Z=pythoncom.Missing):
		'ѕараметры точки.'
		return self._ApplyTypes_(10, 1, (11, 0), ((3, 1), (3, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetPoint', None,UIndex
			, VIndex, X, Y, Z)

	def GetPoints(self, UPCount=pythoncom.Missing, VPCount=pythoncom.Missing):
		'ћассив всех точек.'
		return self._ApplyTypes_(1, 1, (12, 0), ((16387, 2), (16387, 2)), 'GetPoints', None,UPCount
			, VPCount)

	def SetPoint(self, UIndex=defaultNamedNotOptArg, VIndex=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg
			, Z=defaultNamedNotOptArg):
		'ѕараметры точки.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), ((3, 1), (3, 1), (5, 1), (5, 1), (5, 1)),UIndex
			, VIndex, X, Y, Z)

	def SetPoints(self, UPCount=defaultNamedNotOptArg, VPCount=defaultNamedNotOptArg, Points=defaultNamedNotOptArg):
		'ћассив всех точек.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), ((3, 1), (3, 1), (12, 1)),UPCount
			, VPCount, Points)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"PointsUCount": (9, 2, (3, 0), (), "PointsUCount", None),
		"PointsVCount": (8, 2, (3, 0), (), "PointsVCount", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IImportedSurfaces(DispatchBaseClass):
	' оллекци€ импортированных поверхностей.'
	CLSID = IID('{7791DDC6-7C2D-450B-BB44-660B078E52D6}')
	coclass_clsid = IID('{2DF37218-0F1D-4E7E-B1E4-954B8AA790D2}')

	# Result is of type IImportedSurface
	def Add(self):
		'ƒобавить новый элемент.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{2B98DEE2-3352-4F9B-85B7-F0D94742EFA7}')
		return ret

	# Result is of type IImportedSurface
	# The method ImportedSurface is actually a property, but must be used as a method to correctly pass the arguments
	def ImportedSurface(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'ImportedSurface', '{2B98DEE2-3352-4F9B-85B7-F0D94742EFA7}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def Load(self, FileName=defaultNamedNotOptArg, SewSurfaces=defaultNamedNotOptArg):
		'ѕрочитать из файла.'
		return self._ApplyTypes_(3, 1, (12, 0), ((8, 1), (11, 1)), 'Load', None,FileName
			, SewSurfaces)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IIncline(DispatchBaseClass):
	'ќпераци€ уклон.'
	CLSID = IID('{2DB9E3CE-7603-4C88-8FF5-F8985AD26C58}')
	coclass_clsid = IID('{1E0DC81A-179B-45DA-A285-06A40015C953}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (2, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Direction": (3, 2, (11, 0), (), "Direction", None),
		"Faces": (1, 2, (12, 0), (), "Faces", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		# Method 'Plane' returns object of type 'IModelObject'
		"Plane": (4, 2, (9, 0), (), "Plane", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Angle": ((2, LCID, 4, 0),()),
		"Direction": ((3, LCID, 4, 0),()),
		"Faces": ((1, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Plane": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IInclines(DispatchBaseClass):
	' оллекци€ операций уклон.'
	CLSID = IID('{37E37D7D-58D1-4469-9B79-2254D2B9E112}')
	coclass_clsid = IID('{6DCEC4A9-CFA6-410B-B7A1-1FD60DCD2BAF}')

	# Result is of type IIncline
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{2DB9E3CE-7603-4C88-8FF5-F8985AD26C58}')
		return ret

	# Result is of type IIncline
	# The method Incline is actually a property, but must be used as a method to correctly pass the arguments
	def Incline(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Incline', '{2DB9E3CE-7603-4C88-8FF5-F8985AD26C58}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IInsert(DispatchBaseClass):
	'Ёлемент(документ) библиотеки элементов(документов).'
	CLSID = IID('{D6A6D305-6B5C-4392-B61D-D669C092EEF2}')
	coclass_clsid = IID('{5D1BD639-051F-48C5-BCA7-7698B4D070B4}')

	def Delete(self):
		'”дал€ет элемент из библиотеки.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), (),)

	# Result is of type IKompasDocument
	def Edit(self):
		'–едактировать элемент.'
		ret = self._oleobj_.InvokeTypes(5, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Edit', '{5C6E318D-BD6E-4AFA-8A13-977EAA0845EF}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Comment": (2, 2, (12, 0), (), "Comment", None),
		"InsertType": (7, 2, (3, 0), (), "InsertType", None),
		"LibraryFolder": (3, 2, (8, 0), (), "LibraryFolder", None),
		"Name": (1, 2, (8, 0), (), "Name", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"PathName": (4, 2, (8, 0), (), "PathName", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"Comment": ((2, LCID, 4, 0),()),
		"Name": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IInsertionDefinition(DispatchBaseClass):
	'ќписание вставки фрагмента или вида.'
	CLSID = IID('{66907239-09BA-4456-AC9A-318804099628}')
	coclass_clsid = IID('{30D92D83-D913-4898-85A4-A6DCEF2007CA}')

	# Result is of type IKompasDocument2D
	def Open(self, Visible=True, ReadOnly=False):
		'ќткрытие документа-источника на редактирование.'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((11, 49), (11, 49)),Visible
			, ReadOnly)
		if ret is not None:
			ret = Dispatch(ret, 'Open', '{096E62B3-7184-4998-9925-74BB710D8D8E}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"FileName": (3, 2, (8, 0), (), "FileName", None),
		"InsertionObjectsCount": (5, 2, (3, 0), (), "InsertionObjectsCount", None),
		"InsertionType": (1, 2, (3, 0), (), "InsertionType", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"FileName": ((3, LCID, 4, 0),()),
		"Name": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IInsertionFragment(DispatchBaseClass):
	'¬ставка фрагмента.'
	CLSID = IID('{3D99B82C-CD88-406D-A946-2D8C8E94EE73}')
	coclass_clsid = None

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def GetPlacement(self, X=pythoncom.Missing, Y=pythoncom.Missing, Angle=pythoncom.Missing, MirrorSymmetry=pythoncom.Missing):
		'ѕолучить местоположение объекта.'
		return self._ApplyTypes_(1, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2), (16395, 2)), 'GetPlacement', None,X
			, Y, Angle, MirrorSymmetry)

	def SetPlacement(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Angle=defaultNamedNotOptArg, MirrorSymmetry=defaultNamedNotOptArg):
		'”становить местоположение объекта.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1), (11, 1)),X
			, Y, Angle, MirrorSymmetry)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	# Result is of type IVariable7
	# The method Variable is actually a property, but must be used as a method to correctly pass the arguments
	def Variable(self, Index=defaultNamedNotOptArg):
		'ѕолучить параметрическую переменную по имени, индексу или указателю на размер'
		ret = self._oleobj_.InvokeTypes(2004, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Variable', '{8BAB52D9-8EF6-43A6-A1B8-AF42D5961A94}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"BreakObjectsEnabled": (2008, 2, (11, 0), (), "BreakObjectsEnabled", None),
		"CreateSpcObjects": (2007, 2, (11, 0), (), "CreateSpcObjects", None),
		"DimensionLineScale": (6, 2, (11, 0), (), "DimensionLineScale", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"FileName": (4, 2, (8, 0), (), "FileName", None),
		# Method 'InsertionDefinition' returns object of type 'IInsertionDefinition'
		"InsertionDefinition": (7, 2, (9, 0), (), "InsertionDefinition", '{66907239-09BA-4456-AC9A-318804099628}'),
		"InsertionType": (5, 2, (3, 0), (), "InsertionType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		"MultiLayer": (2002, 2, (11, 0), (), "MultiLayer", None),
		"Name": (3, 2, (8, 0), (), "Name", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Scale": (2001, 2, (5, 0), (), "Scale", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		# Method 'VariableTable' returns object of type 'IVariableTable'
		"VariableTable": (2006, 2, (9, 0), (), "VariableTable", '{2B8B154E-ED76-4FF0-B3E4-FEE691D014A4}'),
		"Variables": (2003, 2, (12, 0), (), "Variables", None),
		"VariablesCount": (2005, 2, (3, 0), (), "VariablesCount", None),
	}
	_prop_map_put_ = {
		"BreakObjectsEnabled": ((2008, LCID, 4, 0),()),
		"CreateSpcObjects": ((2007, LCID, 4, 0),()),
		"DimensionLineScale": ((6, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"InsertionDefinition": ((7, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"MultiLayer": ((2002, LCID, 4, 0),()),
		"Name": ((3, LCID, 4, 0),()),
		"Scale": ((2001, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IInsertionObject(DispatchBaseClass):
	'¬ставка фрагмента или вида другого чертежа.'
	CLSID = IID('{B9E9CE68-371D-4600-9233-84D89A015C55}')
	coclass_clsid = IID('{A4E92DC4-9804-4381-9B54-8E2030C50E6D}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def GetPlacement(self, X=pythoncom.Missing, Y=pythoncom.Missing, Angle=pythoncom.Missing, MirrorSymmetry=pythoncom.Missing):
		'ѕолучить местоположение объекта.'
		return self._ApplyTypes_(1, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2), (16395, 2)), 'GetPlacement', None,X
			, Y, Angle, MirrorSymmetry)

	def SetPlacement(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Angle=defaultNamedNotOptArg, MirrorSymmetry=defaultNamedNotOptArg):
		'”становить местоположение объекта.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1), (11, 1)),X
			, Y, Angle, MirrorSymmetry)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"DimensionLineScale": (6, 2, (11, 0), (), "DimensionLineScale", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"FileName": (4, 2, (8, 0), (), "FileName", None),
		# Method 'InsertionDefinition' returns object of type 'IInsertionDefinition'
		"InsertionDefinition": (7, 2, (9, 0), (), "InsertionDefinition", '{66907239-09BA-4456-AC9A-318804099628}'),
		"InsertionType": (5, 2, (3, 0), (), "InsertionType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		"Name": (3, 2, (8, 0), (), "Name", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"DimensionLineScale": ((6, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"InsertionDefinition": ((7, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"Name": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IInsertionObjects(DispatchBaseClass):
	' оллекци€ вставок фрагментов и видов других чертежей.'
	CLSID = IID('{C485550B-29E3-4F2A-A85C-C2795E0F1F86}')
	coclass_clsid = IID('{8095A5E3-86CB-4B66-AA45-E71E1E8883A9}')

	# Result is of type IInsertionObject
	def Add(self, Definition=defaultNamedNotOptArg):
		'ƒобавить новую вставку фрагмента или вида другого чертежа.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((9, 1),),Definition
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{B9E9CE68-371D-4600-9233-84D89A015C55}')
		return ret

	# Result is of type IInsertionObject
	# The method InsertionObject is actually a property, but must be used as a method to correctly pass the arguments
	def InsertionObject(self, Index=defaultNamedNotOptArg):
		'¬ставка фрагмента или вида другого чертежа по индексу, имени вставки или reference.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'InsertionObject', '{B9E9CE68-371D-4600-9233-84D89A015C55}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IInsertionParameters(DispatchBaseClass):
	'ѕраметры вставки фрагмента и растрового объекта в текст.'
	CLSID = IID('{1DB65C7E-535E-489E-8F34-84DF7FBA09B2}')
	coclass_clsid = IID('{863D0E6D-C8E0-4E49-88B7-DAB423CDA1C3}')

	def AutoScale(self, ByHeight=defaultNamedNotOptArg):
		'ѕодобрать масштаб: TRUE - по высоте, FALSE по ширене.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), ((11, 1),),ByHeight
			)

	_prop_map_get_ = {
		"Angle": (8, 2, (3, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"FileName": (1, 2, (8, 0), (), "FileName", None),
		"Height": (4, 2, (5, 0), (), "Height", None),
		"ImageResolution": (10, 2, (5, 0), (), "ImageResolution", None),
		# Method 'InsertionDefinition' returns object of type 'IInsertionDefinition'
		"InsertionDefinition": (9, 2, (9, 0), (), "InsertionDefinition", '{66907239-09BA-4456-AC9A-318804099628}'),
		"Palette": (11, 2, (3, 0), (), "Palette", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Scale": (6, 2, (5, 0), (), "Scale", None),
		"SourceHeight": (2, 2, (5, 0), (), "SourceHeight", None),
		"SourceWidth": (3, 2, (5, 0), (), "SourceWidth", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Width": (5, 2, (5, 0), (), "Width", None),
	}
	_prop_map_put_ = {
		"Angle": ((8, LCID, 4, 0),()),
		"Height": ((4, LCID, 4, 0),()),
		"ImageResolution": ((10, LCID, 4, 0),()),
		"InsertionDefinition": ((9, LCID, 4, 0),()),
		"Scale": ((6, LCID, 4, 0),()),
		"Width": ((5, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IInsertionView(DispatchBaseClass):
	'¬ставка вида из другого чертежа.'
	CLSID = IID('{0C8FC5A9-57A8-4971-8E6C-68933269D42E}')
	coclass_clsid = IID('{A4E92DC4-9804-4381-9B54-8E2030C50E6D}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def GetPlacement(self, X=pythoncom.Missing, Y=pythoncom.Missing, Angle=pythoncom.Missing, MirrorSymmetry=pythoncom.Missing):
		'ѕолучить местоположение объекта.'
		return self._ApplyTypes_(1, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2), (16395, 2)), 'GetPlacement', None,X
			, Y, Angle, MirrorSymmetry)

	def SetPlacement(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Angle=defaultNamedNotOptArg, MirrorSymmetry=defaultNamedNotOptArg):
		'”становить местоположение объекта.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1), (11, 1)),X
			, Y, Angle, MirrorSymmetry)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"CreateSpcObjects": (2005, 2, (11, 0), (), "CreateSpcObjects", None),
		"DimensionLineScale": (6, 2, (11, 0), (), "DimensionLineScale", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"FileName": (4, 2, (8, 0), (), "FileName", None),
		# Method 'InsertionDefinition' returns object of type 'IInsertionDefinition'
		"InsertionDefinition": (7, 2, (9, 0), (), "InsertionDefinition", '{66907239-09BA-4456-AC9A-318804099628}'),
		"InsertionType": (5, 2, (3, 0), (), "InsertionType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		"Name": (3, 2, (8, 0), (), "Name", None),
		"OwnerDocumentParams": (2004, 2, (11, 0), (), "OwnerDocumentParams", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"ThinLines": (2003, 2, (11, 0), (), "ThinLines", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"ViewName": (2002, 2, (8, 0), (), "ViewName", None),
		"ViewNumber": (2001, 2, (3, 0), (), "ViewNumber", None),
	}
	_prop_map_put_ = {
		"CreateSpcObjects": ((2005, LCID, 4, 0),()),
		"DimensionLineScale": ((6, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"InsertionDefinition": ((7, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"Name": ((3, LCID, 4, 0),()),
		"OwnerDocumentParams": ((2004, LCID, 4, 0),()),
		"ThinLines": ((2003, LCID, 4, 0),()),
		"ViewNumber": ((2001, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IInsertionsManager(DispatchBaseClass):
	'ћенеджер вставок фрагментов и видов.'
	CLSID = IID('{B43FA13A-9488-422C-A9F3-D279FDA296BB}')
	coclass_clsid = None

	# Result is of type IInsertionDefinition
	def AddDefinition(self, Type=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, FileName=defaultNamedNotOptArg):
		'—оздать новое описание дл€ фрагмента или вида.'
		ret = self._oleobj_.InvokeTypes(503, LCID, 1, (9, 0), ((3, 1), (8, 1), (8, 1)),Type
			, Name, FileName)
		if ret is not None:
			ret = Dispatch(ret, 'AddDefinition', '{66907239-09BA-4456-AC9A-318804099628}')
		return ret

	# The method DefinitionsCount is actually a property, but must be used as a method to correctly pass the arguments
	def DefinitionsCount(self, Type=defaultNamedNotOptArg):
		' оличество описаний.'
		return self._oleobj_.InvokeTypes(504, LCID, 2, (3, 0), ((3, 1),),Type
			)

	# Result is of type IInsertionDefinition
	# The method InsertionDefinition is actually a property, but must be used as a method to correctly pass the arguments
	def InsertionDefinition(self, Type=defaultNamedNotOptArg, Index=defaultNamedNotOptArg):
		'ѕолучить описание по имени или индексу.'
		ret = self._oleobj_.InvokeTypes(502, LCID, 2, (9, 0), ((3, 1), (12, 1)),Type
			, Index)
		if ret is not None:
			ret = Dispatch(ret, 'InsertionDefinition', '{66907239-09BA-4456-AC9A-318804099628}')
		return ret

	# The method InsertionDefinitions is actually a property, but must be used as a method to correctly pass the arguments
	def InsertionDefinitions(self, Type=defaultNamedNotOptArg):
		'ќписани€ фрагментов и видов SAFEARRAY|VT_DISPATCH.'
		return self._ApplyTypes_(501, 2, (12, 0), ((3, 1),), 'InsertionDefinitions', None,Type
			)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IInserts(DispatchBaseClass):
	' оллекци€ элементов(документов) библиотеки.'
	CLSID = IID('{FCBF6340-119D-4736-BB95-F1EAB4BEF1B8}')
	coclass_clsid = IID('{F8527798-EB6E-43C6-AE05-6FA964CFD96B}')

	# Result is of type IInsert
	def Add(self, Name=defaultNamedNotOptArg, DocType=defaultNamedNotOptArg):
		'ƒобавл€ет элемент в коллекцию.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 1, (9, 0), ((8, 1), (3, 1)),Name
			, DocType)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{D6A6D305-6B5C-4392-B61D-D669C092EEF2}')
		return ret

	# Result is of type IInsert
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по имени или по индексу'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{D6A6D305-6B5C-4392-B61D-D669C092EEF2}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по имени или по индексу'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{D6A6D305-6B5C-4392-B61D-D669C092EEF2}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{D6A6D305-6B5C-4392-B61D-D669C092EEF2}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IInsertsLibraries(DispatchBaseClass):
	' оллекци€ библиотек элементов(документов)  ќћѕј—.'
	CLSID = IID('{A6E82D68-69D5-40C0-9A85-275B22219135}')
	coclass_clsid = IID('{6C64BD39-1613-4AD4-B5BA-B6F38D32E82C}')

	# Result is of type IInsertsLibrary
	def Add(self, PathName=defaultNamedNotOptArg, LibManagerFolder=defaultNamedNotOptArg):
		'ƒобавл€ет элемент в коллекцию.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 1, (9, 0), ((8, 1), (8, 1)),PathName
			, LibManagerFolder)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{885CAD68-B42B-45CF-8620-E0138558EFE3}')
		return ret

	# Result is of type IInsertsLibrary
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по имени или по индексу'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{885CAD68-B42B-45CF-8620-E0138558EFE3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по имени или по индексу'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{885CAD68-B42B-45CF-8620-E0138558EFE3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{885CAD68-B42B-45CF-8620-E0138558EFE3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IInsertsLibrary(DispatchBaseClass):
	'Ѕиблиотека элементов(документов)  ќћѕј—.'
	CLSID = IID('{885CAD68-B42B-45CF-8620-E0138558EFE3}')
	coclass_clsid = IID('{9A06D2A1-BCDE-4C43-88A1-5A491469BE11}')

	def AddFolder(self, PathFolder=defaultNamedNotOptArg):
		'ƒобавл€ет новый каталог в библиотеку элементов.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((8, 1),),PathFolder
			)

	def Delete(self):
		'”далить описание библиотеки.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), (),)

	def Execute(self, Command=defaultNamedNotOptArg, External=defaultNamedNotOptArg, Post=defaultNamedNotOptArg):
		'¬ыполн€ет команду.'
		return self._oleobj_.InvokeTypes(2007, LCID, 1, (11, 0), ((3, 1), (9, 1), (11, 1)),Command
			, External, Post)

	def RemoveFolder(self, PathFolder=defaultNamedNotOptArg):
		'”дал€ет каталог из библиотеки элементов.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), ((8, 1),),PathFolder
			)

	def SetActiveFolder(self, PathFolder=defaultNamedNotOptArg, LastIsFile=defaultNamedNotOptArg, HaveLibName=defaultNamedNotOptArg):
		' ”становить активный каталог в окне библиотеки элементов.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), ((8, 1), (11, 1), (11, 1)),PathFolder
			, LastIsFile, HaveLibName)

	_prop_map_get_ = {
		"ActiveFolder": (1, 2, (8, 0), (), "ActiveFolder", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Attach": (2002, 2, (11, 0), (), "Attach", None),
		"Enable": (2006, 2, (11, 0), (), "Enable", None),
		# Method 'Inserts' returns object of type 'IInserts'
		"Inserts": (3, 2, (9, 0), (), "Inserts", '{FCBF6340-119D-4736-BB95-F1EAB4BEF1B8}'),
		"LibraryManagerFolder": (2001, 2, (8, 0), (), "LibraryManagerFolder", None),
		"LibraryType": (2003, 2, (3, 0), (), "LibraryType", None),
		"Name": (2004, 2, (8, 0), (), "Name", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"PathName": (2005, 2, (8, 0), (), "PathName", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"Attach": ((2002, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IIsoparametricCurve(DispatchBaseClass):
	'»зопараметрическа€ крива€.'
	CLSID = IID('{D7E519C3-EA15-43CA-A2EB-D5F119A70051}')
	coclass_clsid = IID('{E05CD072-EAC4-4439-84C9-F1084D178D8C}')

	def GetPoint(self, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'ѕолучить координату точки на поверхности.'
		return self._ApplyTypes_(6, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2)), 'GetPoint', None,X
			, Y, Z)

	def SetPoint(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg):
		'”становить координату точки на поверхности.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1)),X
			, Y, Z)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'AssociationObject' returns object of type 'IModelObject'
		"AssociationObject": (4, 2, (9, 0), (), "AssociationObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'SurfaceObject' returns object of type 'IModelObject'
		"SurfaceObject": (1, 2, (9, 0), (), "SurfaceObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"U": (2, 2, (5, 0), (), "U", None),
		"UDirection": (5, 2, (11, 0), (), "UDirection", None),
		"V": (3, 2, (5, 0), (), "V", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"AssociationObject": ((4, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"SurfaceObject": ((1, LCID, 4, 0),()),
		"U": ((2, LCID, 4, 0),()),
		"UDirection": ((5, LCID, 4, 0),()),
		"V": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IIsoparametricCurves(DispatchBaseClass):
	' оллекци€ изопараметрических кривых.'
	CLSID = IID('{6046FD5E-434A-4B9F-826F-37ECC1730AD4}')
	coclass_clsid = IID('{6F579902-6CB6-4902-8020-4F2F71F9C3AA}')

	# Result is of type IIsoparametricCurve
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{D7E519C3-EA15-43CA-A2EB-D5F119A70051}')
		return ret

	# Result is of type IIsoparametricCurve
	# The method IsoparametricCurve is actually a property, but must be used as a method to correctly pass the arguments
	def IsoparametricCurve(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по ссылке или индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'IsoparametricCurve', '{D7E519C3-EA15-43CA-A2EB-D5F119A70051}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IIsoparametricCurvesSet(DispatchBaseClass):
	'√руппа изопараметрических кривых.'
	CLSID = IID('{F6768800-D726-4530-8966-CA1DC1AC2927}')
	coclass_clsid = IID('{74F538E8-B3FA-40AB-8EEC-5B3071E98C44}')

	def Destroy(self):
		'–ассыпать.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), (),)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"SaveBoundaries": (4, 2, (11, 0), (), "SaveBoundaries", None),
		# Method 'SurfaceObject' returns object of type 'IModelObject'
		"SurfaceObject": (1, 2, (9, 0), (), "SurfaceObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"UCount": (2, 2, (3, 0), (), "UCount", None),
		"VCount": (3, 2, (3, 0), (), "VCount", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"SaveBoundaries": ((4, LCID, 4, 0),()),
		"SurfaceObject": ((1, LCID, 4, 0),()),
		"UCount": ((2, LCID, 4, 0),()),
		"VCount": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IIsoparametricCurvesSets(DispatchBaseClass):
	' оллекци€ групп изпараметрических кривых.'
	CLSID = IID('{8A0AADFB-D56C-46BB-90E7-29BEEB42EA63}')
	coclass_clsid = IID('{6D1AEFF5-1F8E-4BF1-986C-2D4332B3D5F8}')

	# Result is of type IIsoparametricCurvesSet
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{F6768800-D726-4530-8966-CA1DC1AC2927}')
		return ret

	# Result is of type IIsoparametricCurvesSet
	# The method IsoparametricCurvesSet is actually a property, but must be used as a method to correctly pass the arguments
	def IsoparametricCurvesSet(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по ссылке или индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'IsoparametricCurvesSet', '{F6768800-D726-4530-8966-CA1DC1AC2927}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IJointSurface(DispatchBaseClass):
	'ѕоверхность соединени€.'
	CLSID = IID('{E9C8814E-A3C0-4E31-BFFD-ED8F3DD13016}')
	coclass_clsid = IID('{B82A24F7-C580-4577-9F18-09E817D9CC90}')

	def AddNewEdge(self, IndexAt=defaultNamedNotOptArg):
		'ƒобавление ребра после указанного индексом.'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (11, 0), ((3, 1),),IndexAt
			)

	def DeleteEdge(self, Index=defaultNamedNotOptArg):
		'”даление ребра.'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (11, 0), ((3, 1),),Index
			)

	def GetEdgePointParam(self, EdgeIndex=defaultNamedNotOptArg, StartPoint=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing
			, Z=pythoncom.Missing, T=pythoncom.Missing, AssociateVertex=pythoncom.Missing):
		'ѕолучение параметров точки ребра.'
		return self._ApplyTypes_(20, 1, (11, 0), ((3, 1), (11, 1), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16393, 2)), 'GetEdgePointParam', None,EdgeIndex
			, StartPoint, X, Y, Z, T
			, AssociateVertex)

	def GetEdgePointParams(self, Points1=pythoncom.Missing, T1=pythoncom.Missing, AssociateVertexes1=pythoncom.Missing, Points2=pythoncom.Missing
			, T2=pythoncom.Missing, AssociateVertexes2=pythoncom.Missing):
		'ѕолучение параметров ребер.'
		return self._ApplyTypes_(21, 1, (11, 0), ((16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetEdgePointParams', None,Points1
			, T1, AssociateVertexes1, Points2, T2, AssociateVertexes2
			)

	def SetEdgePointParam(self, EdgeIndex=defaultNamedNotOptArg, StartPoint=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg
			, Z=defaultNamedNotOptArg, T=defaultNamedNotOptArg, AssociateVertex=defaultNamedNotOptArg):
		'»зменение положени€ точки ребра.'
		return self._oleobj_.InvokeTypes(19, LCID, 1, (11, 0), ((3, 1), (11, 1), (5, 1), (5, 1), (5, 1), (16389, 1), (9, 1)),EdgeIndex
			, StartPoint, X, Y, Z, T
			, AssociateVertex)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AutoSegmentation": (15, 2, (11, 0), (), "AutoSegmentation", None),
		"CheckSelfIntersection": (14, 2, (11, 0), (), "CheckSelfIntersection", None),
		"Curves1": (1, 2, (12, 0), (), "Curves1", None),
		"Curves2": (2, 2, (12, 0), (), "Curves2", None),
		"EdgesCount": (18, 2, (3, 0), (), "EdgesCount", None),
		# Method 'Face1' returns object of type 'IModelObject'
		"Face1": (3, 2, (9, 0), (), "Face1", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Face1ConnectType": (5, 2, (3, 0), (), "Face1ConnectType", None),
		# Method 'Face2' returns object of type 'IModelObject'
		"Face2": (4, 2, (9, 0), (), "Face2", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Face2ConnectType": (6, 2, (3, 0), (), "Face2ConnectType", None),
		"GeneralTension": (13, 2, (11, 0), (), "GeneralTension", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Sense1": (7, 2, (11, 0), (), "Sense1", None),
		"Sense2": (8, 2, (11, 0), (), "Sense2", None),
		"SideEdges1": (11, 2, (11, 0), (), "SideEdges1", None),
		"SideEdges2": (12, 2, (11, 0), (), "SideEdges2", None),
		"Tension1": (9, 2, (5, 0), (), "Tension1", None),
		"Tension2": (10, 2, (5, 0), (), "Tension2", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"AutoSegmentation": ((15, LCID, 4, 0),()),
		"CheckSelfIntersection": ((14, LCID, 4, 0),()),
		"Curves1": ((1, LCID, 4, 0),()),
		"Curves2": ((2, LCID, 4, 0),()),
		"Face1": ((3, LCID, 4, 0),()),
		"Face1ConnectType": ((5, LCID, 4, 0),()),
		"Face2": ((4, LCID, 4, 0),()),
		"Face2ConnectType": ((6, LCID, 4, 0),()),
		"GeneralTension": ((13, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Sense1": ((7, LCID, 4, 0),()),
		"Sense2": ((8, LCID, 4, 0),()),
		"SideEdges1": ((11, LCID, 4, 0),()),
		"SideEdges2": ((12, LCID, 4, 0),()),
		"Tension1": ((9, LCID, 4, 0),()),
		"Tension2": ((10, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IJointSurfaces(DispatchBaseClass):
	' оллекци€ поверхностей соединени€.'
	CLSID = IID('{C8AD51FA-5A71-4EE4-ADB2-DDAAA90F1621}')
	coclass_clsid = IID('{0FD2565C-9396-4DF6-936A-DBBC3378BC21}')

	# Result is of type IJointSurface
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{E9C8814E-A3C0-4E31-BFFD-ED8F3DD13016}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type IJointSurface
	# The method JointSurface is actually a property, but must be used as a method to correctly pass the arguments
	def JointSurface(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'JointSurface', '{E9C8814E-A3C0-4E31-BFFD-ED8F3DD13016}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IKompasAPIObject(DispatchBaseClass):
	'Ѕазовый объект  омпас API.'
	CLSID = IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')
	coclass_clsid = IID('{B0AA22BA-3F8B-4DC7-97FF-688AE467179D}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IKompasCollection(DispatchBaseClass):
	'Ѕазова€ коллекци€  омпас API.'
	CLSID = IID('{901F85DE-FA5A-4314-BD75-066A79AF20A8}')
	coclass_clsid = IID('{0031BFFF-6A43-44B4-8E0B-0DA3984CB9ED}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IKompasDocument(DispatchBaseClass):
	'Ѕазовый класс документов  ќћѕј—.'
	CLSID = IID('{5C6E318D-BD6E-4AFA-8A13-977EAA0845EF}')
	coclass_clsid = IID('{705B37C7-CA52-4588-980E-1105C919E20C}')

	def Close(self, closeOptions=defaultNamedNotOptArg):
		'«акрыть документ. ≈сли SaveChanges = False, то система предложит пользователю сохранить имеющиес€ изменени€.'
		return self._oleobj_.InvokeTypes(3002, LCID, 1, (11, 0), ((3, 1),),closeOptions
			)

	def Save(self):
		'—охранить документ на диске.'
		return self._oleobj_.InvokeTypes(3003, LCID, 1, (24, 0), (),)

	def SaveAs(self, PathName=defaultNamedNotOptArg):
		'—охранить документ под другим именем.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (24, 0), ((8, 1),),PathName
			)

	_prop_map_get_ = {
		"Active": (3009, 2, (11, 0), (), "Active", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Changed": (3011, 2, (11, 0), (), "Changed", None),
		# Method 'DocumentFrames' returns object of type 'IDocumentFrames'
		"DocumentFrames": (3001, 2, (9, 0), (), "DocumentFrames", '{1D18C466-C085-4D68-A465-A85D0C8E3A0E}'),
		# Method 'DocumentSettings' returns object of type 'IDocumentSettings'
		"DocumentSettings": (3012, 2, (9, 0), (), "DocumentSettings", '{B35FF50E-2991-4630-8AB8-DC3153E7971A}'),
		"DocumentType": (3000, 2, (3, 0), (), "DocumentType", None),
		# Method 'LayoutSheets' returns object of type 'ILayoutSheets'
		"LayoutSheets": (3014, 2, (9, 0), (), "LayoutSheets", '{7AB54196-0B76-4B01-B769-7F47637173C4}'),
		"Name": (3005, 2, (8, 0), (), "Name", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Path": (3007, 2, (8, 0), (), "Path", None),
		"PathName": (3006, 2, (8, 0), (), "PathName", None),
		"ReadOnly": (3010, 2, (11, 0), (), "ReadOnly", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'SpecificationDescriptions' returns object of type 'ISpecificationDescriptions'
		"SpecificationDescriptions": (3013, 2, (9, 0), (), "SpecificationDescriptions", '{B9632C5C-86E1-4BC9-83A5-A954E407246A}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		# Method 'UserDataStoragesMng' returns object of type 'IUserDataStoragesMng'
		"UserDataStoragesMng": (3015, 2, (9, 0), (), "UserDataStoragesMng", '{77A6D4CA-6418-4DEE-B59C-400BFD052375}'),
		"Visible": (3008, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Active": ((3009, LCID, 4, 0),()),
		"ReadOnly": ((3010, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IKompasDocument1(DispatchBaseClass):
	'ƒополнительный интерфейс IKompasDocument'
	CLSID = IID('{58890FE8-E671-4561-994A-600DD29032E4}')
	coclass_clsid = None

	def ActivateToolbarSet(self, TolbrSetId=defaultNamedNotOptArg):
		'јктивизировать набор по идентификатору.'
		return self._oleobj_.InvokeTypes(10017, LCID, 1, (11, 0), ((8, 1),),TolbrSetId
			)

	def ApplyMetadataFromFile(self, FileName=defaultNamedNotOptArg):
		'ѕрименить метаданные из файла.'
		return self._oleobj_.InvokeTypes(10016, LCID, 1, (11, 0), ((8, 1),),FileName
			)

	# The method Attributes is actually a property, but must be used as a method to correctly pass the arguments
	def Attributes(self, Key1=defaultNamedNotOptArg, Key2=defaultNamedNotOptArg, Key3=defaultNamedNotOptArg, Key4=defaultNamedNotOptArg
			, Numb=defaultNamedNotOptArg, Objects=defaultNamedNotOptArg):
		'ћассив атрибутов документа в виде массива SAFEARRAY DISPATCH - VT_ARRAY | VT_DISPATCH.'
		return self._ApplyTypes_(10002, 2, (12, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (5, 1), (12, 1)), 'Attributes', None,Key1
			, Key2, Key3, Key4, Numb, Objects
			)

	# Result is of type IAttribute
	def CreateAttr(self, AttrID=defaultNamedNotOptArg, Libname=defaultNamedNotOptArg, Objects=defaultNamedNotOptArg):
		'—оздать атрибут по номеру типа атрибута из библиотеки libname.'
		ret = self._oleobj_.InvokeTypes(10004, LCID, 1, (9, 0), ((5, 1), (8, 1), (12, 1)),AttrID
			, Libname, Objects)
		if ret is not None:
			ret = Dispatch(ret, 'CreateAttr', '{94F965B0-5ABB-4994-98C7-B08FA8515452}')
		return ret

	def Delete(self, Objects=defaultNamedNotOptArg):
		'”далить объект или объекты.'
		return self._oleobj_.InvokeTypes(10001, LCID, 1, (11, 0), ((12, 1),),Objects
			)

	# The method ExternalFilesNames is actually a property, but must be used as a method to correctly pass the arguments
	def ExternalFilesNames(self, allFiles=defaultNamedNotOptArg):
		"ѕолучить список внешних файлов в виде SAFEARRAY'€ BSTR  - (VT_ARRAY | VT_BSTR)."
		return self._ApplyTypes_(10007, 2, (12, 0), ((11, 1),), 'ExternalFilesNames', None,allFiles
			)

	def GetExternalFilesNamesEx(self, allFiles=defaultNamedNotOptArg, Files=pythoncom.Missing, FilesTypes=pythoncom.Missing):
		"ѕолучить список внешних файлов в виде SAFEARRAY'€ BSTR - (VT_ARRAY | VT_BSTR) и их типов в виде SAFEARRAY'€ long - (VT_ARRAY | VT_I4)."
		return self._ApplyTypes_(10011, 1, (11, 0), ((11, 1), (16396, 2), (16396, 2)), 'GetExternalFilesNamesEx', None,allFiles
			, Files, FilesTypes)

	# Result is of type IKompasAPIObject
	def GetInterface(self, Type=defaultNamedNotOptArg):
		'ѕолучить вспомогательный интерфейс.'
		ret = self._oleobj_.InvokeTypes(10006, LCID, 1, (9, 0), ((3, 1),),Type
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetInterface', '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')
		return ret

	# The method ObjectsByAttr is actually a property, but must be used as a method to correctly pass the arguments
	def ObjectsByAttr(self, Key1=defaultNamedNotOptArg, Key2=defaultNamedNotOptArg, Key3=defaultNamedNotOptArg, Key4=defaultNamedNotOptArg
			, Numb=defaultNamedNotOptArg, ObjectType=defaultNamedNotOptArg):
		'ћассив объектов документа в виде массива SAFEARRAY DISPATCH - VT_ARRAY | VT_DISPATCH.'
		return self._ApplyTypes_(10003, 2, (12, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (5, 1), (12, 1)), 'ObjectsByAttr', None,Key1
			, Key2, Key3, Key4, Numb, ObjectType
			)

	def RedrawDocument(self, Mode=defaultNamedNotOptArg):
		'ѕерерисовать окна документа.'
		return self._oleobj_.InvokeTypes(10018, LCID, 1, (11, 0), ((3, 1),),Mode
			)

	def ReportPropertiesMultieditMode(self, On=defaultNamedNotOptArg, UpdateProps=defaultNamedNotOptArg):
		'¬ключить/¬ыключить режим массовой работы со свойствами объектов.'
		return self._oleobj_.InvokeTypes(10013, LCID, 1, (11, 0), ((11, 1), (11, 1)),On
			, UpdateProps)

	def SaveAsEx(self, PathName=defaultNamedNotOptArg, saveMode=defaultNamedNotOptArg):
		'—охранить документ под другим именем.'
		return self._oleobj_.InvokeTypes(10008, LCID, 1, (11, 0), ((8, 1), (3, 1)),PathName
			, saveMode)

	def ViewEditAttr(self, HWnd=defaultNamedNotOptArg, Objects=defaultNamedNotOptArg):
		'¬ыводитс€ диалог дл€ просмотра атрибутов объекта.'
		return self._oleobj_.InvokeTypes(10005, LCID, 1, (11, 0), ((3, 1), (12, 1)),HWnd
			, Objects)

	def WriteMetadataToFile(self, FileName=defaultNamedNotOptArg):
		'«аписать метаданные в файл.'
		return self._oleobj_.InvokeTypes(10015, LCID, 1, (11, 0), ((8, 1),),FileName
			)

	_prop_map_get_ = {
		"Author": (10019, 2, (8, 0), (), "Author", None),
		"Comment": (10020, 2, (8, 0), (), "Comment", None),
		"CreationDate": (10009, 2, (5, 0), (), "CreationDate", None),
		"DocumentTypeId": (10021, 2, (8, 0), (), "DocumentTypeId", None),
		"LastChangeDate": (10010, 2, (5, 0), (), "LastChangeDate", None),
		"Metadata": (10014, 2, (8, 0), (), "Metadata", None),
		"OpenVersion": (10022, 2, (3, 0), (), "OpenVersion", None),
		"Organization": (10012, 2, (8, 0), (), "Organization", None),
	}
	_prop_map_put_ = {
		"Author": ((10019, LCID, 4, 0),()),
		"Comment": ((10020, LCID, 4, 0),()),
		"DocumentTypeId": ((10021, LCID, 4, 0),()),
		"Metadata": ((10014, LCID, 4, 0),()),
		"Organization": ((10012, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IKompasDocument2D(DispatchBaseClass):
	'Ѕазовый класс 2D документов  ќћѕј—.'
	CLSID = IID('{096E62B3-7184-4998-9925-74BB710D8D8E}')
	coclass_clsid = IID('{86CA15DA-A197-4993-AB98-8921D156114E}')

	def Close(self, closeOptions=defaultNamedNotOptArg):
		'«акрыть документ. ≈сли SaveChanges = False, то система предложит пользователю сохранить имеющиес€ изменени€.'
		return self._oleobj_.InvokeTypes(3002, LCID, 1, (11, 0), ((3, 1),),closeOptions
			)

	def GetDrawingObjectNotifyResult(self):
		'»нтерфейс результатов редактировани€ объекта при обработке событий.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetDrawingObjectNotifyResult', None)
		return ret

	def Save(self):
		'—охранить документ на диске.'
		return self._oleobj_.InvokeTypes(3003, LCID, 1, (24, 0), (),)

	def SaveAs(self, PathName=defaultNamedNotOptArg):
		'—охранить документ под другим именем.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (24, 0), ((8, 1),),PathName
			)

	_prop_map_get_ = {
		"Active": (3009, 2, (11, 0), (), "Active", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Changed": (3011, 2, (11, 0), (), "Changed", None),
		# Method 'DocumentFrames' returns object of type 'IDocumentFrames'
		"DocumentFrames": (3001, 2, (9, 0), (), "DocumentFrames", '{1D18C466-C085-4D68-A465-A85D0C8E3A0E}'),
		# Method 'DocumentSettings' returns object of type 'IDocumentSettings'
		"DocumentSettings": (3012, 2, (9, 0), (), "DocumentSettings", '{B35FF50E-2991-4630-8AB8-DC3153E7971A}'),
		"DocumentType": (3000, 2, (3, 0), (), "DocumentType", None),
		# Method 'LayoutSheets' returns object of type 'ILayoutSheets'
		"LayoutSheets": (3014, 2, (9, 0), (), "LayoutSheets", '{7AB54196-0B76-4B01-B769-7F47637173C4}'),
		"Name": (3005, 2, (8, 0), (), "Name", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Path": (3007, 2, (8, 0), (), "Path", None),
		"PathName": (3006, 2, (8, 0), (), "PathName", None),
		"ReadOnly": (3010, 2, (11, 0), (), "ReadOnly", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'SpecificationDescriptions' returns object of type 'ISpecificationDescriptions'
		"SpecificationDescriptions": (3013, 2, (9, 0), (), "SpecificationDescriptions", '{B9632C5C-86E1-4BC9-83A5-A954E407246A}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		# Method 'UserDataStoragesMng' returns object of type 'IUserDataStoragesMng'
		"UserDataStoragesMng": (3015, 2, (9, 0), (), "UserDataStoragesMng", '{77A6D4CA-6418-4DEE-B59C-400BFD052375}'),
		# Method 'ViewsAndLayersManager' returns object of type 'IViewsAndLayersManager'
		"ViewsAndLayersManager": (1, 2, (9, 0), (), "ViewsAndLayersManager", '{A4737593-578B-4187-8CAD-E1056EB5404B}'),
		"Visible": (3008, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Active": ((3009, LCID, 4, 0),()),
		"ReadOnly": ((3010, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IKompasDocument2D1(DispatchBaseClass):
	'ƒополнительный интерфейс дл€ 2D документа.'
	CLSID = IID('{FB57F1C4-44FE-4C73-9B15-87241E8735B5}')
	coclass_clsid = None

	# Result is of type IVariable7
	def AddVariable(self, Name=defaultNamedNotOptArg, Value=defaultNamedNotOptArg, Note=defaultNamedNotOptArg):
		'—оздать переменную(добавить переменную в массив переменных и документ).'
		ret = self._oleobj_.InvokeTypes(11014, LCID, 1, (9, 0), ((8, 1), (5, 1), (8, 1)),Name
			, Value, Note)
		if ret is not None:
			ret = Dispatch(ret, 'AddVariable', '{8BAB52D9-8EF6-43A6-A1B8-AF42D5961A94}')
		return ret

	def CopyObjects(self, Objects=defaultNamedNotOptArg, Params=defaultNamedNotOptArg):
		' опирование объектов.'
		return self._ApplyTypes_(11007, 1, (12, 0), ((12, 1), (9, 1)), 'CopyObjects', None,Objects
			, Params)

	def CreateHyperLink(self, Objects=defaultNamedNotOptArg, Type=defaultNamedNotOptArg, Text=defaultNamedNotOptArg, LinkObject=defaultNamedNotOptArg
			, Level=defaultNamedNotOptArg):
		'—оздать гиперссылку.'
		return self._oleobj_.InvokeTypes(11016, LCID, 1, (11, 0), ((12, 1), (3, 1), (8, 1), (9, 1), (3, 1)),Objects
			, Type, Text, LinkObject, Level)

	def DeleteHyperLinks(self, Objects=defaultNamedNotOptArg):
		'”далить гиперрссылки.'
		return self._oleobj_.InvokeTypes(11018, LCID, 1, (11, 0), ((12, 1),),Objects
			)

	# Result is of type IDrawingObject
	def FindObject(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Limit=defaultNamedNotOptArg, Param=defaultNamedNotOptArg):
		'Ќайти объект, ближайший к заданной точке, удовлетвор€ющий параметрам поиска.'
		ret = self._oleobj_.InvokeTypes(11022, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1), (9, 1)),X
			, Y, Limit, Param)
		if ret is not None:
			ret = Dispatch(ret, 'FindObject', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def FindObjects(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Limit=defaultNamedNotOptArg, Param=defaultNamedNotOptArg):
		'Ќайти объекты, в заданной точке, удовлетвор€ющий параметрам поиска.'
		return self._ApplyTypes_(11023, 1, (12, 0), ((5, 1), (5, 1), (5, 1), (9, 1)), 'FindObjects', None,X
			, Y, Limit, Param)

	def GetHyperLinkObjects(self, Type=defaultNamedNotOptArg, LinkObject=defaultNamedNotOptArg, Level=defaultNamedNotOptArg, Text=defaultNamedNotOptArg):
		'ѕолучить объекты имеющие гиперрссылку.'
		return self._ApplyTypes_(11017, 1, (12, 0), ((3, 1), (9, 1), (3, 1), (8, 1)), 'GetHyperLinkObjects', None,Type
			, LinkObject, Level, Text)

	# Result is of type IDrawingObject
	def GetObjectById(self, Id=defaultNamedNotOptArg):
		'ѕолучить объект по его уникальному идентификатору.'
		ret = self._oleobj_.InvokeTypes(11020, LCID, 1, (9, 0), ((20, 1),),Id
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetObjectById', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def IsVariableNameValid(self, Name=defaultNamedNotOptArg):
		'ѕроверить допустимость создани€ новой переменной с данным именем'
		return self._oleobj_.InvokeTypes(11013, LCID, 1, (11, 0), ((8, 1),),Name
			)

	# Result is of type IProcess2D
	# The method LibProcess is actually a property, but must be used as a method to correctly pass the arguments
	def LibProcess(self, ProcessType=defaultNamedNotOptArg):
		'ѕолучить объект процесса.'
		ret = self._oleobj_.InvokeTypes(11021, LCID, 2, (9, 0), ((3, 1),),ProcessType
			)
		if ret is not None:
			ret = Dispatch(ret, 'LibProcess', '{C74D7419-0970-4904-907C-DCC5407C59B0}')
		return ret

	def RebuildDocument(self):
		'ѕерестроить документ.'
		return self._oleobj_.InvokeTypes(11015, LCID, 1, (11, 0), (),)

	def SelectObjects(self, RegionType=defaultNamedNotOptArg, XMin=defaultNamedNotOptArg, YMin=defaultNamedNotOptArg, XMax=defaultNamedNotOptArg
			, YMax=defaultNamedNotOptArg):
		'ќтобрать объекты рамкой.'
		return self._ApplyTypes_(11024, 1, (12, 0), ((3, 1), (5, 1), (5, 1), (5, 1), (5, 1)), 'SelectObjects', None,RegionType
			, XMin, YMin, XMax, YMax)

	def UpdateVariables(self):
		'”становить новые значени€ внешних переменных.'
		return self._oleobj_.InvokeTypes(11011, LCID, 1, (11, 0), (),)

	# Result is of type IVariable7
	# The method Variable is actually a property, but must be used as a method to correctly pass the arguments
	def Variable(self, External=defaultNamedNotOptArg, Index=defaultNamedNotOptArg):
		'ѕолучить параметрическую переменную по имени, индексу или указателю на размер'
		ret = self._oleobj_.InvokeTypes(11009, LCID, 2, (9, 0), ((11, 1), (12, 1)),External
			, Index)
		if ret is not None:
			ret = Dispatch(ret, 'Variable', '{8BAB52D9-8EF6-43A6-A1B8-AF42D5961A94}')
		return ret

	# The method Variables is actually a property, but must be used as a method to correctly pass the arguments
	def Variables(self, ExternalOnly=defaultNamedNotOptArg):
		'ѕолучить массив параметрических переменных в виде SAFEARRAY VT_DISPATCH'
		return self._ApplyTypes_(11008, 2, (12, 0), ((11, 1),), 'Variables', None,ExternalOnly
			)

	# The method VariablesCount is actually a property, but must be used as a method to correctly pass the arguments
	def VariablesCount(self, External=defaultNamedNotOptArg):
		'ѕолучить количество параметрических переменных.'
		return self._oleobj_.InvokeTypes(11010, LCID, 2, (3, 0), ((11, 1),),External
			)

	_prop_map_get_ = {
		# Method 'ChooseManager' returns object of type 'IChooseManager'
		"ChooseManager": (11006, 2, (9, 0), (), "ChooseManager", '{E2D9EAA6-F88C-4ADB-AC32-854E32E9FEE1}'),
		# Method 'CurrentGroup' returns object of type 'IDrawingGroup'
		"CurrentGroup": (11004, 2, (9, 0), (), "CurrentGroup", '{2C96ACB2-4877-45D9-B62D-78BBAD704458}'),
		# Method 'DrawingGroups' returns object of type 'IDrawingGroups'
		"DrawingGroups": (11002, 2, (9, 0), (), "DrawingGroups", '{0ED06421-907C-4EF0-89F7-AEFC81BEF1DF}'),
		# Method 'EditMacroObject' returns object of type 'IMacroObject'
		"EditMacroObject": (11001, 2, (9, 0), (), "EditMacroObject", '{B21C70C9-53EC-4BB7-A9DB-BCE852CA6716}'),
		"EditMacroVisibleRegime": (11019, 2, (11, 0), (), "EditMacroVisibleRegime", None),
		# Method 'NamedGroups' returns object of type 'IDrawingGroups'
		"NamedGroups": (11003, 2, (9, 0), (), "NamedGroups", '{0ED06421-907C-4EF0-89F7-AEFC81BEF1DF}'),
		# Method 'SelectionManager' returns object of type 'ISelectionManager'
		"SelectionManager": (11005, 2, (9, 0), (), "SelectionManager", '{E6DF688C-5B23-436B-A027-A96BFD5484CC}'),
		# Method 'VariableTable' returns object of type 'IVariableTable'
		"VariableTable": (11012, 2, (9, 0), (), "VariableTable", '{2B8B154E-ED76-4FF0-B3E4-FEE691D014A4}'),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IKompasDocument3D(DispatchBaseClass):
	'Ѕазовый класс 3D документов  ќћѕј—.'
	CLSID = IID('{7B60E769-06C3-4FDC-9677-7B5EF5180308}')
	coclass_clsid = IID('{705B37C7-CA52-4588-980E-1105C919E20C}')

	# The method AttributesEx is actually a property, but must be used as a method to correctly pass the arguments
	def AttributesEx(self, Key1=defaultNamedNotOptArg, Key2=defaultNamedNotOptArg, Key3=defaultNamedNotOptArg, Key4=defaultNamedNotOptArg
			, Numb=defaultNamedNotOptArg, Objects=defaultNamedNotOptArg, SourcePart=defaultNamedNotOptArg):
		'ћассив атрибутов документа в виде массива SAFEARRAY DISPATCH - VT_ARRAY | VT_DISPATCH.'
		return self._ApplyTypes_(5022, 2, (12, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (5, 1), (12, 1), (9, 1)), 'AttributesEx', None,Key1
			, Key2, Key3, Key4, Numb, Objects
			, SourcePart)

	def Close(self, closeOptions=defaultNamedNotOptArg):
		'«акрыть документ. ≈сли SaveChanges = False, то система предложит пользователю сохранить имеющиес€ изменени€.'
		return self._oleobj_.InvokeTypes(3002, LCID, 1, (11, 0), ((3, 1),),closeOptions
			)

	# Result is of type IAttribute
	def CreateAttrEx(self, AttrID=defaultNamedNotOptArg, Libname=defaultNamedNotOptArg, Objects=defaultNamedNotOptArg, SourcePart=defaultNamedNotOptArg):
		'—оздать атрибут по номеру типа атрибута из библиотеки libname.'
		ret = self._oleobj_.InvokeTypes(5021, LCID, 1, (9, 0), ((5, 1), (8, 1), (12, 1), (9, 1)),AttrID
			, Libname, Objects, SourcePart)
		if ret is not None:
			ret = Dispatch(ret, 'CreateAttrEx', '{94F965B0-5ABB-4994-98C7-B08FA8515452}')
		return ret

	def DeleteHistory(self):
		'”далить историю построени€.'
		return self._oleobj_.InvokeTypes(5026, LCID, 1, (11, 0), (),)

	def RebuildDocument(self):
		'ѕерестроить документ.'
		return self._oleobj_.InvokeTypes(5023, LCID, 1, (11, 0), (),)

	def Save(self):
		'—охранить документ на диске.'
		return self._oleobj_.InvokeTypes(3003, LCID, 1, (24, 0), (),)

	def SaveAs(self, PathName=defaultNamedNotOptArg):
		'—охранить документ под другим именем.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (24, 0), ((8, 1),),PathName
			)

	_prop_map_get_ = {
		"Active": (3009, 2, (11, 0), (), "Active", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Changed": (3011, 2, (11, 0), (), "Changed", None),
		# Method 'ChooseManager' returns object of type 'IChooseManager'
		"ChooseManager": (5020, 2, (9, 0), (), "ChooseManager", '{E2D9EAA6-F88C-4ADB-AC32-854E32E9FEE1}'),
		"CreateObjectsInCurrentLocalCS": (5014, 2, (11, 0), (), "CreateObjectsInCurrentLocalCS", None),
		# Method 'DocumentFrames' returns object of type 'IDocumentFrames'
		"DocumentFrames": (3001, 2, (9, 0), (), "DocumentFrames", '{1D18C466-C085-4D68-A465-A85D0C8E3A0E}'),
		# Method 'DocumentSettings' returns object of type 'IDocumentSettings'
		"DocumentSettings": (3012, 2, (9, 0), (), "DocumentSettings", '{B35FF50E-2991-4630-8AB8-DC3153E7971A}'),
		"DocumentType": (3000, 2, (3, 0), (), "DocumentType", None),
		"DrawMode": (5012, 2, (3, 0), (), "DrawMode", None),
		"EnableUndo": (5024, 2, (11, 0), (), "EnableUndo", None),
		"HideAllAuxiliaryGeom": (5017, 2, (11, 0), (), "HideAllAuxiliaryGeom", None),
		"HideAllAxis": (5004, 2, (11, 0), (), "HideAllAxis", None),
		"HideAllControlPoints": (5010, 2, (11, 0), (), "HideAllControlPoints", None),
		"HideAllCurves": (5009, 2, (11, 0), (), "HideAllCurves", None),
		"HideAllDesignations": (5016, 2, (11, 0), (), "HideAllDesignations", None),
		"HideAllDimensions": (5015, 2, (11, 0), (), "HideAllDimensions", None),
		"HideAllPlaces": (5006, 2, (11, 0), (), "HideAllPlaces", None),
		"HideAllPlanes": (5003, 2, (11, 0), (), "HideAllPlanes", None),
		"HideAllSketches": (5005, 2, (11, 0), (), "HideAllSketches", None),
		"HideAllSurfaces": (5007, 2, (11, 0), (), "HideAllSurfaces", None),
		"HideAllThreads": (5008, 2, (11, 0), (), "HideAllThreads", None),
		"HideInComponentsMode": (5018, 2, (11, 0), (), "HideInComponentsMode", None),
		# Method 'LayoutSheets' returns object of type 'ILayoutSheets'
		"LayoutSheets": (3014, 2, (9, 0), (), "LayoutSheets", '{7AB54196-0B76-4B01-B769-7F47637173C4}'),
		"Name": (3005, 2, (8, 0), (), "Name", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Path": (3007, 2, (8, 0), (), "Path", None),
		"PathName": (3006, 2, (8, 0), (), "PathName", None),
		"Perspective": (5011, 2, (11, 0), (), "Perspective", None),
		"ReadOnly": (3010, 2, (11, 0), (), "ReadOnly", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'SelectionManager' returns object of type 'ISelectionManager'
		"SelectionManager": (5019, 2, (9, 0), (), "SelectionManager", '{E6DF688C-5B23-436B-A027-A96BFD5484CC}'),
		"ShadedWireframe": (5013, 2, (11, 0), (), "ShadedWireframe", None),
		# Method 'SpecificationDescriptions' returns object of type 'ISpecificationDescriptions'
		"SpecificationDescriptions": (3013, 2, (9, 0), (), "SpecificationDescriptions", '{B9632C5C-86E1-4BC9-83A5-A954E407246A}'),
		# Method 'TechnicalDemand3D' returns object of type 'ITechnicalDemand3D'
		"TechnicalDemand3D": (5027, 2, (9, 0), (), "TechnicalDemand3D", '{CD435B3D-175C-4E18-BAA0-81FDD7EB6A86}'),
		"ToleranceMode": (5028, 2, (11, 0), (), "ToleranceMode", None),
		# Method 'TopPart' returns object of type 'IPart7'
		"TopPart": (5002, 2, (9, 0), (), "TopPart", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"UndoContainer": (5025, 2, (11, 0), (), "UndoContainer", None),
		# Method 'UserDataStoragesMng' returns object of type 'IUserDataStoragesMng'
		"UserDataStoragesMng": (3015, 2, (9, 0), (), "UserDataStoragesMng", '{77A6D4CA-6418-4DEE-B59C-400BFD052375}'),
		"Visible": (3008, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Active": ((3009, LCID, 4, 0),()),
		"CreateObjectsInCurrentLocalCS": ((5014, LCID, 4, 0),()),
		"DrawMode": ((5012, LCID, 4, 0),()),
		"EnableUndo": ((5024, LCID, 4, 0),()),
		"HideAllAuxiliaryGeom": ((5017, LCID, 4, 0),()),
		"HideAllAxis": ((5004, LCID, 4, 0),()),
		"HideAllControlPoints": ((5010, LCID, 4, 0),()),
		"HideAllCurves": ((5009, LCID, 4, 0),()),
		"HideAllDesignations": ((5016, LCID, 4, 0),()),
		"HideAllDimensions": ((5015, LCID, 4, 0),()),
		"HideAllPlaces": ((5006, LCID, 4, 0),()),
		"HideAllPlanes": ((5003, LCID, 4, 0),()),
		"HideAllSketches": ((5005, LCID, 4, 0),()),
		"HideAllSurfaces": ((5007, LCID, 4, 0),()),
		"HideAllThreads": ((5008, LCID, 4, 0),()),
		"HideInComponentsMode": ((5018, LCID, 4, 0),()),
		"Perspective": ((5011, LCID, 4, 0),()),
		"ReadOnly": ((3010, LCID, 4, 0),()),
		"ShadedWireframe": ((5013, LCID, 4, 0),()),
		"ToleranceMode": ((5028, LCID, 4, 0),()),
		"UndoContainer": ((5025, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IKompasDocument3D1(DispatchBaseClass):
	'ƒополнительный интерфейс дл€ 3D документа.'
	CLSID = IID('{92AB02F7-2C68-4A74-9E74-70C51E015FEF}')
	coclass_clsid = None

	def ClearUndo(self):
		'ќчистить undo контейнер.'
		return self._oleobj_.InvokeTypes(5033, LCID, 1, (11, 0), (),)

	def ExcludeObjects(self, Objects=defaultNamedNotOptArg, Excl=defaultNamedNotOptArg):
		'»сключить из расчета объект или объекты.'
		return self._oleobj_.InvokeTypes(5035, LCID, 1, (11, 0), ((12, 1), (11, 1)),Objects
			, Excl)

	def ExecuteProcessOfInsertComponentFromFile(self, FileName=defaultNamedNotOptArg, ProcessType=defaultNamedNotOptArg):
		'«апустить процесс вставки компонента из файла или библиотеки моделей.'
		return self._oleobj_.InvokeTypes(5036, LCID, 1, (11, 0), ((8, 1), (3, 1)),FileName
			, ProcessType)

	# Result is of type IProcess3D
	# The method LibProcess is actually a property, but must be used as a method to correctly pass the arguments
	def LibProcess(self, ProcessType=defaultNamedNotOptArg):
		'ѕолучить объект процесса.'
		ret = self._oleobj_.InvokeTypes(5037, LCID, 2, (9, 0), ((3, 1),),ProcessType
			)
		if ret is not None:
			ret = Dispatch(ret, 'LibProcess', '{77730022-3179-4674-AE49-604FABC0B6B1}')
		return ret

	_prop_map_get_ = {
		# Method 'Document3DManager' returns object of type 'IDocument3DManager'
		"Document3DManager": (5031, 2, (9, 0), (), "Document3DManager", '{75F1CA7E-5071-4C1F-8A9F-F76A6E05CAF6}'),
		# Method 'EditObject' returns object of type 'IFeature7'
		"EditObject": (5030, 2, (9, 0), (), "EditObject", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		"HideLayoutGeometry": (5029, 2, (11, 0), (), "HideLayoutGeometry", None),
		# Method 'MateConstraints' returns object of type 'IMateConstraints3D'
		"MateConstraints": (5034, 2, (9, 0), (), "MateConstraints", '{95F316E1-0A18-4F42-8B70-1423250F244D}'),
		# Method 'SpecRough' returns object of type 'ISpecRough3D'
		"SpecRough": (5032, 2, (9, 0), (), "SpecRough", '{AED8F9FC-E493-4CBD-9341-9D9E39E14FDC}'),
	}
	_prop_map_put_ = {
		"EditObject": ((5030, LCID, 4, 0),()),
		"HideLayoutGeometry": ((5029, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IKompasDocument3DNotifyResult(DispatchBaseClass):
	'ƒополнительные параметры дл€ событий 3D документа.'
	CLSID = IID('{354EA69A-3191-4DA4-B980-821BE9B7683C}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'NotifyObject' returns object of type 'IKompasAPIObject'
		"NotifyObject": (4003, 2, (9, 0), (), "NotifyObject", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"NotifyObjectType": (4002, 2, (3, 0), (), "NotifyObjectType", None),
		"NotifyType": (4001, 2, (3, 0), (), "NotifyType", None),
		"RequestFilesType": (4004, 2, (3, 0), (), "RequestFilesType", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IKompasError(DispatchBaseClass):
	'»нформаци€ о ошибке системы  ќћѕј—.'
	CLSID = IID('{0A8B4CD1-7158-4CE6-96E0-885376F5DE1B}')
	coclass_clsid = IID('{A5B4DB5F-0554-4D75-915B-3F838F18C809}')

	def Clear(self):
		'—бросить ошибку.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), (),)

	def Report(self):
		'¬ывести сообщение о ошибке.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Code": (1, 2, (3, 0), (), "Code", None),
		"Description": (2, 2, (8, 0), (), "Description", None),
		"Error3D": (3, 2, (11, 0), (), "Error3D", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILayer(DispatchBaseClass):
	'—лой.'
	CLSID = IID('{9AD76C38-CC48-4901-AEE5-27B48F51563C}')
	coclass_clsid = IID('{392916B8-171E-4229-9E75-1D514C75FB17}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Background": (2, 2, (11, 0), (), "Background", None),
		"Color": (5, 2, (3, 0), (), "Color", None),
		"Comment": (6, 2, (8, 0), (), "Comment", None),
		"Current": (4, 2, (11, 0), (), "Current", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		"Name": (1, 2, (8, 0), (), "Name", None),
		"ObjectCount": (7, 2, (3, 0), (), "ObjectCount", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Printable": (8, 2, (11, 0), (), "Printable", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"Visible": (3, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Background": ((2, LCID, 4, 0),()),
		"Color": ((5, LCID, 4, 0),()),
		"Comment": ((6, LCID, 4, 0),()),
		"Current": ((4, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"Name": ((1, LCID, 4, 0),()),
		"Printable": ((8, LCID, 4, 0),()),
		"Visible": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILayer3D(DispatchBaseClass):
	'—лой в 3D.'
	CLSID = IID('{D8ADF279-1CAC-4A2A-911B-9A44378407A0}')
	coclass_clsid = IID('{4F500BED-70AE-4AFD-A13C-C345FBE39663}')

	def Delete(self):
		'”далить слой.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Color": (5, 2, (3, 0), (), "Color", None),
		"Comment": (6, 2, (8, 0), (), "Comment", None),
		"Current": (4, 2, (11, 0), (), "Current", None),
		"Editable": (7, 2, (11, 0), (), "Editable", None),
		"Name": (1, 2, (8, 0), (), "Name", None),
		"Number": (2, 2, (3, 0), (), "Number", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Projected": (8, 2, (11, 0), (), "Projected", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Visible": (3, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Color": ((5, LCID, 4, 0),()),
		"Comment": ((6, LCID, 4, 0),()),
		"Current": ((4, LCID, 4, 0),()),
		"Editable": ((7, LCID, 4, 0),()),
		"Name": ((1, LCID, 4, 0),()),
		"Number": ((2, LCID, 4, 0),()),
		"Projected": ((8, LCID, 4, 0),()),
		"Visible": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILayerFilterCondition(DispatchBaseClass):
	'”словие фильтрации слоев.'
	CLSID = IID('{D743BC12-82A9-4E8F-85B2-7154A356ACC0}')
	coclass_clsid = IID('{21D31870-5EBC-42CE-8858-A308E7E4B8A4}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Background": (3, 2, (3, 0), (), "Background", None),
		"Color": (6, 2, (3, 0), (), "Color", None),
		"Comment": (7, 2, (8, 0), (), "Comment", None),
		"HaveObjects": (5, 2, (3, 0), (), "HaveObjects", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"Number": (1, 2, (8, 0), (), "Number", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Projected": (8, 2, (3, 0), (), "Projected", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Visible": (4, 2, (3, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Background": ((3, LCID, 4, 0),()),
		"Color": ((6, LCID, 4, 0),()),
		"Comment": ((7, LCID, 4, 0),()),
		"HaveObjects": ((5, LCID, 4, 0),()),
		"Name": ((2, LCID, 4, 0),()),
		"Number": ((1, LCID, 4, 0),()),
		"Projected": ((8, LCID, 4, 0),()),
		"Visible": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILayerFilterConditions(DispatchBaseClass):
	' олекци€ условий фильтрации слоев.'
	CLSID = IID('{BCA22E27-AB60-4BA6-87EE-92158AA6D366}')
	coclass_clsid = IID('{9F90DA69-2CA3-4C2E-AB59-6BB9B0E7DFB8}')

	# Result is of type ILayerFilterCondition
	def Add(self):
		'—оздать условие фильтрации слоев (добавл€ет условие фильтрации слоев в коллекцию).'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{D743BC12-82A9-4E8F-85B2-7154A356ACC0}')
		return ret

	# Result is of type ILayerFilterCondition
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает условие фильтрации слоев, заданное по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{D743BC12-82A9-4E8F-85B2-7154A356ACC0}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает условие фильтрации слоев, заданное по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{D743BC12-82A9-4E8F-85B2-7154A356ACC0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{D743BC12-82A9-4E8F-85B2-7154A356ACC0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ILayerGroup(DispatchBaseClass):
	'√руппа слоев.'
	CLSID = IID('{265BBB5A-7B8A-4AA5-A0BB-FF64D23BE62B}')
	coclass_clsid = IID('{5543C50A-B56D-48AF-87C3-09C1B48CBC5A}')

	def Delete(self):
		'”далить группу.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), (),)

	def GetLayerStates(self, LayerIndex=defaultNamedNotOptArg, Visible=pythoncom.Missing, Background=pythoncom.Missing, Curent=pythoncom.Missing
			, Color=pythoncom.Missing):
		'ѕолучить состо€ни€ сло€ группы по индексу, имени или ссылке.'
		return self._ApplyTypes_(6, 1, (11, 0), ((12, 1), (16395, 2), (16395, 2), (16395, 2), (16387, 2)), 'GetLayerStates', None,LayerIndex
			, Visible, Background, Curent, Color)

	def SetLayerStates(self, LayerIndex=defaultNamedNotOptArg, Visible=defaultNamedNotOptArg, Background=defaultNamedNotOptArg, Curent=defaultNamedNotOptArg
			, Color=defaultNamedNotOptArg):
		'»зменить состо€ни€ сло€ группы по индексу, имени или ссылке.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), ((12, 1), (11, 1), (11, 1), (11, 1), (3, 1)),LayerIndex
			, Visible, Background, Curent, Color)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Current": (8, 2, (11, 0), (), "Current", None),
		# Method 'LayerFilterConditions' returns object of type 'ILayerFilterConditions'
		"LayerFilterConditions": (5, 2, (9, 0), (), "LayerFilterConditions", '{BCA22E27-AB60-4BA6-87EE-92158AA6D366}'),
		# Method 'LayerGroups' returns object of type 'ILayerGroups'
		"LayerGroups": (2, 2, (9, 0), (), "LayerGroups", '{DBFF6D98-8F79-453E-9B8B-81E40A6D8027}'),
		# Method 'Layers' returns object of type 'ILayers'
		"Layers": (3, 2, (9, 0), (), "Layers", '{F6DC2898-D596-4418-A21A-D15AE07B9A40}'),
		"Name": (4, 2, (8, 0), (), "Name", None),
		# Method 'OwnerGroup' returns object of type 'ILayerGroup'
		"OwnerGroup": (1, 2, (9, 0), (), "OwnerGroup", '{265BBB5A-7B8A-4AA5-A0BB-FF64D23BE62B}'),
		# Method 'OwnerView' returns object of type 'IView'
		"OwnerView": (10, 2, (9, 0), (), "OwnerView", '{21A7BA87-1C8B-41B4-8247-CDD593546F37}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"UniqueId": (11, 2, (5, 0), (), "UniqueId", None),
	}
	_prop_map_put_ = {
		"Current": ((8, LCID, 4, 0),()),
		"Name": ((4, LCID, 4, 0),()),
		"OwnerView": ((10, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILayerGroup3D(DispatchBaseClass):
	'√руппа слоев в 3D.'
	CLSID = IID('{0B176BBC-51F5-4D31-A630-6A04207E4DA1}')
	coclass_clsid = IID('{049F66CC-B9AC-4689-B0B4-B1183B5B67B2}')

	def Delete(self):
		'”далить группу.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'LayerFilterConditions' returns object of type 'ILayerFilterConditions'
		"LayerFilterConditions": (7, 2, (9, 0), (), "LayerFilterConditions", '{BCA22E27-AB60-4BA6-87EE-92158AA6D366}'),
		# Method 'LayerGroups' returns object of type 'ILayerGroups3D'
		"LayerGroups": (2, 2, (9, 0), (), "LayerGroups", '{D3F08D03-3BB2-4DE6-95A9-38B5C05D8C12}'),
		# Method 'Layers' returns object of type 'ILayers3D'
		"Layers": (3, 2, (9, 0), (), "Layers", '{D637078B-6498-40B6-9F41-83ED1EA40D1F}'),
		"Name": (4, 2, (8, 0), (), "Name", None),
		# Method 'OwnerGroup' returns object of type 'ILayerGroup3D'
		"OwnerGroup": (1, 2, (9, 0), (), "OwnerGroup", '{0B176BBC-51F5-4D31-A630-6A04207E4DA1}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"UniqueId": (6, 2, (5, 0), (), "UniqueId", None),
	}
	_prop_map_put_ = {
		"Name": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILayerGroups(DispatchBaseClass):
	' оллекци€ групп слоев.'
	CLSID = IID('{DBFF6D98-8F79-453E-9B8B-81E40A6D8027}')
	coclass_clsid = IID('{E53FFD4E-619D-4B9B-9C34-9C23668E6F4A}')

	# Result is of type ILayerGroup
	def Add(self, Owner=defaultNamedNotOptArg, Dinamic=defaultNamedNotOptArg):
		'—оздать группу (добавл€ет группу в коллекцию).'
		ret = self._oleobj_.InvokeTypes(1, LCID, 1, (9, 0), ((9, 1), (11, 1)),Owner
			, Dinamic)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{265BBB5A-7B8A-4AA5-A0BB-FF64D23BE62B}')
		return ret

	def Attach(self, PGroup=defaultNamedNotOptArg):
		'ƒобавить существующую группу слоев.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), ((9, 1),),PGroup
			)

	def Detach(self, PGroup=defaultNamedNotOptArg):
		'ќтсоединить группу слоев.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), ((9, 1),),PGroup
			)

	# Result is of type ILayerGroup
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает группу по индексу, уникальному идентификатору или имени.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{265BBB5A-7B8A-4AA5-A0BB-FF64D23BE62B}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает группу по индексу, уникальному идентификатору или имени.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{265BBB5A-7B8A-4AA5-A0BB-FF64D23BE62B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{265BBB5A-7B8A-4AA5-A0BB-FF64D23BE62B}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ILayerGroups3D(DispatchBaseClass):
	' оллекци€ групп слоев в 3D.'
	CLSID = IID('{D3F08D03-3BB2-4DE6-95A9-38B5C05D8C12}')
	coclass_clsid = IID('{E08FA7C6-1A29-43AE-B0D8-158159BF1D27}')

	# Result is of type ILayerGroup3D
	def Add(self):
		'—оздать группу (добавл€ет группу в коллекцию).'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{0B176BBC-51F5-4D31-A630-6A04207E4DA1}')
		return ret

	# Result is of type ILayerGroup3D
	# The method LayerGroup3D is actually a property, but must be used as a method to correctly pass the arguments
	def LayerGroup3D(self, Index=defaultNamedNotOptArg):
		'¬озвращает группу по индексу, уникальному идентификатору или имени.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'LayerGroup3D', '{0B176BBC-51F5-4D31-A630-6A04207E4DA1}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ILayers(DispatchBaseClass):
	' оллекци€ слоев.'
	CLSID = IID('{F6DC2898-D596-4418-A21A-D15AE07B9A40}')
	coclass_clsid = IID('{C0402ED4-D1AB-4567-BE4F-AFD88AF848EC}')

	# Result is of type ILayer
	def Add(self):
		'—оздать слой (добавл€ет слой в коллекцию).'
		ret = self._oleobj_.InvokeTypes(3, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{9AD76C38-CC48-4901-AEE5-27B48F51563C}')
		return ret

	def Attach(self, PVal=defaultNamedNotOptArg):
		'ƒобавить существующий слой.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((9, 1),),PVal
			)

	def Detach(self, PVal=defaultNamedNotOptArg):
		'ќтсоединить слой.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), ((9, 1),),PVal
			)

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	# Result is of type ILayer
	# The method Layer is actually a property, but must be used as a method to correctly pass the arguments
	def Layer(self, Index=defaultNamedNotOptArg):
		'¬озвращает слой, заданный по индексу, имени или ссылке.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Layer', '{9AD76C38-CC48-4901-AEE5-27B48F51563C}')
		return ret

	# Result is of type ILayer
	# The method LayerByNumber is actually a property, but must be used as a method to correctly pass the arguments
	def LayerByNumber(self, Number=defaultNamedNotOptArg):
		'¬озвращает слой, заданный по номеру.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 2, (9, 0), ((3, 1),),Number
			)
		if ret is not None:
			ret = Dispatch(ret, 'LayerByNumber', '{9AD76C38-CC48-4901-AEE5-27B48F51563C}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ILayers3D(DispatchBaseClass):
	' оллекци€ слоев в 3D.'
	CLSID = IID('{D637078B-6498-40B6-9F41-83ED1EA40D1F}')
	coclass_clsid = IID('{B74E958E-2583-4B60-A1BA-FE72EC8F0930}')

	# Result is of type ILayer3D
	def Add(self):
		'—оздать слой (добавл€ет слой в коллекцию).'
		ret = self._oleobj_.InvokeTypes(3, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{D8ADF279-1CAC-4A2A-911B-9A44378407A0}')
		return ret

	def Attach(self, PVal=defaultNamedNotOptArg):
		'ƒобавить существующий слой.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((9, 1),),PVal
			)

	def Detach(self, PVal=defaultNamedNotOptArg):
		'ќтсоединить слой.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), ((9, 1),),PVal
			)

	# Result is of type ILayer3D
	# The method Layer3D is actually a property, but must be used as a method to correctly pass the arguments
	def Layer3D(self, Index=defaultNamedNotOptArg):
		'¬озвращает слой, заданный по индексу, имени или ссылке.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Layer3D', '{D8ADF279-1CAC-4A2A-911B-9A44378407A0}')
		return ret

	# Result is of type ILayer3D
	# The method Layer3DByNumber is actually a property, but must be used as a method to correctly pass the arguments
	def Layer3DByNumber(self, Number=defaultNamedNotOptArg):
		'¬озвращает слой, заданный по номеру.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 2, (9, 0), ((3, 1),),Number
			)
		if ret is not None:
			ret = Dispatch(ret, 'Layer3DByNumber', '{D8ADF279-1CAC-4A2A-911B-9A44378407A0}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ILayoutSheet(DispatchBaseClass):
	'ѕараметры листа оформлени€.'
	CLSID = IID('{D87B5A80-CF52-4510-ADD9-D1344FFFFC07}')
	coclass_clsid = IID('{5331E747-7833-4988-92CA-90283160DDF6}')

	def Delete(self):
		'”далить лист.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), (),)

	def GetPlaceInsideFrames(self, Left=pythoncom.Missing, Top=pythoncom.Missing, Right=pythoncom.Missing, Bottom=pythoncom.Missing):
		'¬ыдать свободное место внутри рамок.'
		return self._ApplyTypes_(8, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2), (16389, 2)), 'GetPlaceInsideFrames', None,Left
			, Top, Right, Bottom)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Format' returns object of type 'ISheetFormat'
		"Format": (1, 2, (9, 0), (), "Format", '{B9CDE694-4C33-4375-A6F6-AE94DC759510}'),
		"LayoutLibraryFileName": (2, 2, (8, 0), (), "LayoutLibraryFileName", None),
		"LayoutStyleNumber": (3, 2, (5, 0), (), "LayoutStyleNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"SheetType": (7, 2, (3, 0), (), "SheetType", None),
		# Method 'Stamp' returns object of type 'IStamp'
		"Stamp": (6, 2, (9, 0), (), "Stamp", '{250CE350-7C21-47FD-8FF2-C44A9FF177DF}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"LayoutLibraryFileName": ((2, LCID, 4, 0),()),
		"LayoutStyleNumber": ((3, LCID, 4, 0),()),
		"SheetType": ((7, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILayoutSheets(DispatchBaseClass):
	' оллекци€ листов оформлени€.'
	CLSID = IID('{7AB54196-0B76-4B01-B769-7F47637173C4}')
	coclass_clsid = IID('{1EF17E36-3C4D-4C86-AD1B-17E744075DF8}')

	# Result is of type ILayoutSheet
	def Add(self):
		'—оздать лист оформлени€ (добавл€ет лист оформлени€ в коллекцию).'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{D87B5A80-CF52-4510-ADD9-D1344FFFFC07}')
		return ret

	# Result is of type ILayoutSheet
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает лист оформлени€, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{D87B5A80-CF52-4510-ADD9-D1344FFFFC07}')
		return ret

	# Result is of type ILayoutSheet
	# The method ItemByNumber is actually a property, but must be used as a method to correctly pass the arguments
	def ItemByNumber(self, Number=defaultNamedNotOptArg):
		'¬озвращает лист оформлени€, заданный по номеру.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((3, 1),),Number
			)
		if ret is not None:
			ret = Dispatch(ret, 'ItemByNumber', '{D87B5A80-CF52-4510-ADD9-D1344FFFFC07}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает лист оформлени€, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{D87B5A80-CF52-4510-ADD9-D1344FFFFC07}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{D87B5A80-CF52-4510-ADD9-D1344FFFFC07}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ILeader(DispatchBaseClass):
	'ѕараметры простой линии выноски.'
	CLSID = IID('{A7419920-06B8-4F34-AC1E-9D48E0ED9DCB}')
	coclass_clsid = None

	# The method BranchBegin is actually a property, but must be used as a method to correctly pass the arguments
	def BranchBegin(self, Index=defaultNamedNotOptArg):
		'Ќачало ответвлени€: TRUE - от начала полки, FALSE - от конца полки.'
		return self._oleobj_.InvokeTypes(1509, LCID, 2, (11, 0), ((3, 1),),Index
			)

	# The method SetBranchBegin is actually a property, but must be used as a method to correctly pass the arguments
	def SetBranchBegin(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'Ќачало ответвлени€: TRUE - от начала полки, FALSE - от конца полки.'
		return self._oleobj_.InvokeTypes(1509, LCID, 4, (24, 0), ((3, 1), (11, 1)),Index
			, arg1)

	_prop_map_get_ = {
		"Arround": (1503, 2, (11, 0), (), "Arround", None),
		"AutoSorted": (1511, 2, (11, 0), (), "AutoSorted", None),
		"ParallelBranch": (1510, 2, (11, 0), (), "ParallelBranch", None),
		"ShelfDirection": (1501, 2, (3, 0), (), "ShelfDirection", None),
		"SignType": (1502, 2, (3, 0), (), "SignType", None),
		# Method 'TextAfterShelf' returns object of type 'IText'
		"TextAfterShelf": (1508, 2, (9, 0), (), "TextAfterShelf", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		# Method 'TextOnBranch' returns object of type 'IText'
		"TextOnBranch": (1506, 2, (9, 0), (), "TextOnBranch", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		# Method 'TextOnShelf' returns object of type 'IText'
		"TextOnShelf": (1504, 2, (9, 0), (), "TextOnShelf", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		# Method 'TextUnderBranch' returns object of type 'IText'
		"TextUnderBranch": (1507, 2, (9, 0), (), "TextUnderBranch", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		# Method 'TextUnderShelf' returns object of type 'IText'
		"TextUnderShelf": (1505, 2, (9, 0), (), "TextUnderShelf", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
	}
	_prop_map_put_ = {
		"Arround": ((1503, LCID, 4, 0),()),
		"AutoSorted": ((1511, LCID, 4, 0),()),
		"ParallelBranch": ((1510, LCID, 4, 0),()),
		"ShelfDirection": ((1501, LCID, 4, 0),()),
		"SignType": ((1502, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILeaders(DispatchBaseClass):
	' оллекци€ линий выносок.'
	CLSID = IID('{BA2D820C-0DB9-47C6-A32D-34C7D8BA1B2F}')
	coclass_clsid = IID('{90E9D9E8-1451-4BA1-97A6-4BE6D1508649}')

	# Result is of type IBaseLeader
	def Add(self, DimType=defaultNamedNotOptArg):
		'ƒобавить выносную линию в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((3, 1),),DimType
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{1AF590A9-C339-477A-9F22-799C04D20BB4}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	# Result is of type IBaseLeader
	# The method Leader is actually a property, but must be used as a method to correctly pass the arguments
	def Leader(self, Index=defaultNamedNotOptArg):
		'ѕолучить выносную линию по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Leader', '{1AF590A9-C339-477A-9F22-799C04D20BB4}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ILeaders3D(DispatchBaseClass):
	' оллекци€ линий выносок 3D.'
	CLSID = IID('{C6E6BDD4-2B0E-49BF-87D3-04E800200DDC}')
	coclass_clsid = IID('{9B18CB77-9EDD-440C-B154-969F1B5C7B98}')

	# Result is of type IBaseLeader3D
	def Add(self, DimType=defaultNamedNotOptArg):
		'ƒобавить выносную линию в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((3, 1),),DimType
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{7170F38E-8230-4C9C-B36B-0BACBB27B123}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type IBaseLeader3D
	# The method Leader3D is actually a property, but must be used as a method to correctly pass the arguments
	def Leader3D(self, Index=defaultNamedNotOptArg):
		'ѕолучить выносную линию по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Leader3D', '{7170F38E-8230-4C9C-B36B-0BACBB27B123}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ILibArraySettings(DispatchBaseClass):
	'»нтерфейс дл€ выбора состо€ний библиотек в настройках'
	CLSID = IID('{76D9033D-5F87-41CC-A3E8-55EFEE94B677}')
	coclass_clsid = IID('{19144A91-0D9F-4906-AFD0-BEFB5625662D}')

	def AddLibrary(self, FileName=defaultNamedNotOptArg, Use=defaultNamedNotOptArg):
		'ƒобавить библиотеку и признак использовани€.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), ((8, 1), (11, 1)),FileName
			, Use)

	def GetLibrary(self, Index=defaultNamedNotOptArg, Use=pythoncom.Missing):
		'ѕолучить им€ библиотеки и признак использовани€ по индексу.'
		return self._ApplyTypes_(2, 1, (8, 0), ((3, 1), (16395, 2)), 'GetLibrary', None,Index
			, Use)

	def GetLibrarys(self, FileNames=pythoncom.Missing, Uses=pythoncom.Missing):
		'ѕолучить массив всех библиотек и признаков использовни€.'
		return self._ApplyTypes_(4, 1, (11, 0), ((16396, 2), (16396, 2)), 'GetLibrarys', None,FileNames
			, Uses)

	def RemoveLibrary(self, Index=defaultNamedNotOptArg):
		'”далить библиотеку и признак использовани€'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), ((12, 1),),Index
			)

	def SetLibraryUse(self, Index=defaultNamedNotOptArg, Use=defaultNamedNotOptArg):
		'”становить признак использовани€ по индексу.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), ((12, 1), (11, 1)),Index
			, Use)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"LibraryCount": (1, 2, (3, 0), (), "LibraryCount", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILibItemSettings(DispatchBaseClass):
	'»нтерфейс дл€ выбора состо€ний элементов библиотек в настройках(стилей отчетов/свойств)'
	CLSID = IID('{C474582A-2AD4-4ED5-A86A-A169C4DA5D54}')
	coclass_clsid = None

	def GetItem(self, Index=defaultNamedNotOptArg, Use=pythoncom.Missing):
		'ѕолучить элемент библиотеки и признак использовани€ по индексу.'
		return self._ApplyTypes_(501, 1, (5, 0), ((12, 1), (16395, 2)), 'GetItem', None,Index
			, Use)

	def GetItems(self, UniqIds=pythoncom.Missing, Uses=pythoncom.Missing):
		'ѕолучить массив всех элементов библиотек и признаков использовни€.'
		return self._ApplyTypes_(503, 1, (11, 0), ((16396, 2), (16396, 2)), 'GetItems', None,UniqIds
			, Uses)

	def GetItemsEx(self, UniqIds=pythoncom.Missing, Uses=pythoncom.Missing, ItemNames=pythoncom.Missing, FileNames=pythoncom.Missing):
		'ѕолучить массив всех элементов библиотек и признаков использовни€.'
		return self._ApplyTypes_(504, 1, (11, 0), ((16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetItemsEx', None,UniqIds
			, Uses, ItemNames, FileNames)

	def SetItem(self, Index=defaultNamedNotOptArg, Use=defaultNamedNotOptArg):
		'”становить признак использовани€.'
		return self._oleobj_.InvokeTypes(502, LCID, 1, (11, 0), ((12, 1), (11, 1)),Index
			, Use)

	_prop_map_get_ = {
		"ItemCount": (500, 2, (3, 0), (), "ItemCount", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILibrary(DispatchBaseClass):
	'Ѕазовый интерфейс дл€ всех библиотек  ќћѕј—.'
	CLSID = IID('{9D6E9AE1-7DDF-4354-B8D0-E12023B186FA}')
	coclass_clsid = IID('{9A06D2A1-BCDE-4C43-88A1-5A491469BE11}')

	def Execute(self, Command=defaultNamedNotOptArg, External=defaultNamedNotOptArg, Post=defaultNamedNotOptArg):
		'¬ыполн€ет команду.'
		return self._oleobj_.InvokeTypes(2007, LCID, 1, (11, 0), ((3, 1), (9, 1), (11, 1)),Command
			, External, Post)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Attach": (2002, 2, (11, 0), (), "Attach", None),
		"Enable": (2006, 2, (11, 0), (), "Enable", None),
		"LibraryManagerFolder": (2001, 2, (8, 0), (), "LibraryManagerFolder", None),
		"LibraryType": (2003, 2, (3, 0), (), "LibraryType", None),
		"Name": (2004, 2, (8, 0), (), "Name", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"PathName": (2005, 2, (8, 0), (), "PathName", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"Attach": ((2002, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILibraryHoleParameters(DispatchBaseClass):
	'ѕараметры отверсти€ из библиотеки.'
	CLSID = IID('{2123D327-4119-4F1D-A9E4-48462883E968}')
	coclass_clsid = IID('{DA8608DC-9B21-418E-8813-AA33B50A4DAD}')

	# Result is of type IVariable7
	# The method Variable is actually a property, but must be used as a method to correctly pass the arguments
	def Variable(self, Index=defaultNamedNotOptArg):
		'ѕолучить параметрическую переменную по имени, индексу или указателю на размер'
		ret = self._oleobj_.InvokeTypes(3, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Variable', '{8BAB52D9-8EF6-43A6-A1B8-AF42D5961A94}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"FileName": (1, 2, (8, 0), (), "FileName", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Variables": (2, 2, (12, 0), (), "Variables", None),
		"VariablesCount": (4, 2, (3, 0), (), "VariablesCount", None),
	}
	_prop_map_put_ = {
		"FileName": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILibraryManager(DispatchBaseClass):
	'ћенеджер библиотек.'
	CLSID = IID('{53CDC510-99EA-4736-8542-194F4D8FB32B}')
	coclass_clsid = IID('{AACB5896-8918-43CB-A5B4-F3EAF45BCEF7}')

	def AddFolder(self, PathFolder=defaultNamedNotOptArg):
		'ƒобавл€ет новый каталог в менеджер библиотек.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (24, 0), ((8, 1),),PathFolder
			)

	def RemoveFolder(self, PathFolder=defaultNamedNotOptArg):
		'”дал€ет каталог из менеджера библиотек.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (24, 0), ((8, 1),),PathFolder
			)

	def SetCurrentLibrary(self, PVal=defaultNamedNotOptArg):
		'”становить текущую прикладную библиотеку.'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (11, 0), ((9, 1),),PVal
			)

	_prop_map_get_ = {
		"ActiveFolder": (6, 2, (8, 0), (), "ActiveFolder", None),
		"ActiveFolderComment": (7, 2, (12, 0), (), "ActiveFolderComment", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'CurrentLibrary' returns object of type 'IProceduresLibrary'
		"CurrentLibrary": (11, 2, (9, 0), (), "CurrentLibrary", '{1AECE59E-DE4C-4FB9-B62B-7967573AD3B1}'),
		# Method 'DocumentsLibraries' returns object of type 'IInsertsLibraries'
		"DocumentsLibraries": (14, 2, (9, 0), (), "DocumentsLibraries", '{A6E82D68-69D5-40C0-9A85-275B22219135}'),
		# Method 'FragmentsLibraries' returns object of type 'IInsertsLibraries'
		"FragmentsLibraries": (2, 2, (9, 0), (), "FragmentsLibraries", '{A6E82D68-69D5-40C0-9A85-275B22219135}'),
		"Layout": (5, 2, (3, 0), (), "Layout", None),
		# Method 'ModelsLibraries' returns object of type 'IInsertsLibraries'
		"ModelsLibraries": (3, 2, (9, 0), (), "ModelsLibraries", '{A6E82D68-69D5-40C0-9A85-275B22219135}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'ProceduresLibraries' returns object of type 'IProceduresLibraries'
		"ProceduresLibraries": (1, 2, (9, 0), (), "ProceduresLibraries", '{80F95B5B-DB8A-46B7-8C22-605A0AECD597}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'SystemControlStartLibrary' returns object of type 'IProceduresLibrary'
		"SystemControlStartLibrary": (10, 2, (9, 0), (), "SystemControlStartLibrary", '{1AECE59E-DE4C-4FB9-B62B-7967573AD3B1}'),
		"SystemControlStartResult": (13, 2, (3, 0), (), "SystemControlStartResult", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Visible": (4, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"ActiveFolder": ((6, LCID, 4, 0),()),
		"ActiveFolderComment": ((7, LCID, 4, 0),()),
		"Visible": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILine(DispatchBaseClass):
	'Ћини€.'
	CLSID = IID('{3EA0DA9B-F2C0-40C4-BE36-7103509A9389}')
	coclass_clsid = IID('{BCA8BBB8-CCAA-4865-918F-7D035BD9E0D4}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (5, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"X1": (1, 2, (5, 0), (), "X1", None),
		"X2": (3, 2, (5, 0), (), "X2", None),
		"Y1": (2, 2, (5, 0), (), "Y1", None),
		"Y2": (4, 2, (5, 0), (), "Y2", None),
	}
	_prop_map_put_ = {
		"Angle": ((5, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"X1": ((1, LCID, 4, 0),()),
		"X2": ((3, LCID, 4, 0),()),
		"Y1": ((2, LCID, 4, 0),()),
		"Y2": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILineDimension(DispatchBaseClass):
	'Ћинейный размер.'
	CLSID = IID('{A3767BDA-E605-4FC1-988D-81809DEB36F4}')
	coclass_clsid = IID('{A7B94E84-CB49-4021-8AC2-27ADC8036B4D}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (10, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		"Orientation": (9, 2, (3, 0), (), "Orientation", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"ShelfX": (7, 2, (5, 0), (), "ShelfX", None),
		"ShelfY": (8, 2, (5, 0), (), "ShelfY", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"X1": (1, 2, (5, 0), (), "X1", None),
		"X2": (3, 2, (5, 0), (), "X2", None),
		"X3": (5, 2, (5, 0), (), "X3", None),
		"Y1": (2, 2, (5, 0), (), "Y1", None),
		"Y2": (4, 2, (5, 0), (), "Y2", None),
		"Y3": (6, 2, (5, 0), (), "Y3", None),
	}
	_prop_map_put_ = {
		"Angle": ((10, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"Orientation": ((9, LCID, 4, 0),()),
		"ShelfX": ((7, LCID, 4, 0),()),
		"ShelfY": ((8, LCID, 4, 0),()),
		"X1": ((1, LCID, 4, 0),()),
		"X2": ((3, LCID, 4, 0),()),
		"X3": ((5, LCID, 4, 0),()),
		"Y1": ((2, LCID, 4, 0),()),
		"Y2": ((4, LCID, 4, 0),()),
		"Y3": ((6, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILineDimension3D(DispatchBaseClass):
	'Ћинейный размер в 3D (на плоскости).'
	CLSID = IID('{F38E986B-9CC0-4492-B850-180D3A6AF713}')
	coclass_clsid = IID('{0FD2290E-6FF6-48C4-9B10-E1C6D0608C74}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"Length": (1, 2, (5, 0), (), "Length", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Object1' returns object of type 'IModelObject'
		"Object1": (2, 2, (9, 0), (), "Object1", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'Object2' returns object of type 'IModelObject'
		"Object2": (3, 2, (9, 0), (), "Object2", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		# Method 'Plane' returns object of type 'IModelObject'
		"Plane": (101, 2, (9, 0), (), "Plane", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Hidden": ((502, LCID, 4, 0),()),
		"Length": ((1, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Object1": ((2, LCID, 4, 0),()),
		"Object2": ((3, LCID, 4, 0),()),
		"Plane": ((101, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILineDimensions(DispatchBaseClass):
	' оллекци€ линейных размеров.'
	CLSID = IID('{A6F6A18A-78FA-4A77-BB75-90647E0C545C}')
	coclass_clsid = IID('{D44491CE-CDD2-4435-AFAB-7AEC8E58D912}')

	# Result is of type ILineDimension
	def Add(self):
		'ƒобавить линейный размер в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{A3767BDA-E605-4FC1-988D-81809DEB36F4}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	# Result is of type ILineDimension
	# The method LineDimension is actually a property, but must be used as a method to correctly pass the arguments
	def LineDimension(self, Index=defaultNamedNotOptArg):
		'ѕолучить линейный размер, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'LineDimension', '{A3767BDA-E605-4FC1-988D-81809DEB36F4}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ILineDimensions3D(DispatchBaseClass):
	' оллекци€ линейных размеров 3D.'
	CLSID = IID('{8E30C80C-4C79-497B-A74B-84D44F96EF4D}')
	coclass_clsid = IID('{BC66C415-362A-4246-850F-A7D39BDE6C1B}')

	# Result is of type IBaseLineDimension3D
	def Add(self, DimType=defaultNamedNotOptArg):
		'ƒобавить линейный размер в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((3, 1),),DimType
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{3514887E-321B-4CE3-A966-3EB1A02CEEF2}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type IBaseLineDimension3D
	# The method LineDimension3D is actually a property, but must be used as a method to correctly pass the arguments
	def LineDimension3D(self, Index=defaultNamedNotOptArg):
		'ѕолучить линейный размер, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'LineDimension3D', '{3514887E-321B-4CE3-A966-3EB1A02CEEF2}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ILineSegment(DispatchBaseClass):
	'ќтрезок.'
	CLSID = IID('{64ACC86F-4B10-4897-8552-BC0A556D228B}')
	coclass_clsid = IID('{EE1993AD-CAC2-421C-B9B1-131BA16466CF}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (6, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		"Length": (5, 2, (5, 0), (), "Length", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Style": (7, 2, (3, 0), (), "Style", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"X1": (1, 2, (5, 0), (), "X1", None),
		"X2": (3, 2, (5, 0), (), "X2", None),
		"Y1": (2, 2, (5, 0), (), "Y1", None),
		"Y2": (4, 2, (5, 0), (), "Y2", None),
	}
	_prop_map_put_ = {
		"Angle": ((6, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"Length": ((5, LCID, 4, 0),()),
		"Style": ((7, LCID, 4, 0),()),
		"X1": ((1, LCID, 4, 0),()),
		"X2": ((3, LCID, 4, 0),()),
		"Y1": ((2, LCID, 4, 0),()),
		"Y2": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILineSegment3D(DispatchBaseClass):
	'ќтрезок 3D.'
	CLSID = IID('{74880880-4F48-44CC-8FC3-83FE3CA7C44A}')
	coclass_clsid = IID('{874A7DFC-944E-49DE-80DE-EB78894C48D1}')

	# Result is of type IModelObject
	# The method AssociationObject is actually a property, but must be used as a method to correctly pass the arguments
	def AssociationObject(self, Begin=defaultNamedNotOptArg):
		'”становить опорный объект дл€ вершины.'
		ret = self._oleobj_.InvokeTypes(3, LCID, 2, (9, 0), ((11, 1),),Begin
			)
		if ret is not None:
			ret = Dispatch(ret, 'AssociationObject', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def GetPoint(self, Begin=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'ѕолучить координату точки.'
		return self._ApplyTypes_(1, 1, (11, 0), ((11, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetPoint', None,Begin
			, X, Y, Z)

	# Result is of type IKompasAPIObject
	# The method PointParameters is actually a property, but must be used as a method to correctly pass the arguments
	def PointParameters(self, Begin=defaultNamedNotOptArg):
		'ѕолучить интерфейс параметров точки'
		ret = self._oleobj_.InvokeTypes(5, LCID, 2, (9, 0), ((11, 1),),Begin
			)
		if ret is not None:
			ret = Dispatch(ret, 'PointParameters', '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')
		return ret

	# The method PointType is actually a property, but must be used as a method to correctly pass the arguments
	def PointType(self, Begin=defaultNamedNotOptArg):
		'“ип параметров построени€ точки.'
		return self._oleobj_.InvokeTypes(4, LCID, 2, (3, 0), ((11, 1),),Begin
			)

	# The method SetAssociationObject is actually a property, but must be used as a method to correctly pass the arguments
	def SetAssociationObject(self, Begin=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'”становить опорный объект дл€ вершины.'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((11, 1), (9, 1)),Begin
			, arg1)

	def SetPoint(self, Begin=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg):
		'”становить координату точки.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), ((11, 1), (5, 1), (5, 1), (5, 1)),Begin
			, X, Y, Z)

	# The method SetPointType is actually a property, but must be used as a method to correctly pass the arguments
	def SetPointType(self, Begin=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'“ип параметров построени€ точки.'
		return self._oleobj_.InvokeTypes(4, LCID, 4, (24, 0), ((11, 1), (3, 1)),Begin
			, arg1)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (9, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BasePlane' returns object of type 'IModelObject'
		"BasePlane": (8, 2, (9, 0), (), "BasePlane", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"BuildingType": (7, 2, (3, 0), (), "BuildingType", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"Lenght": (6, 2, (5, 0), (), "Lenght", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Angle": ((9, LCID, 4, 0),()),
		"BasePlane": ((8, LCID, 4, 0),()),
		"BuildingType": ((7, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Lenght": ((6, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILineSegments(DispatchBaseClass):
	' оллекци€ отрезков.'
	CLSID = IID('{B211C782-A830-468E-9F4F-C499A77078D8}')
	coclass_clsid = IID('{B7B673AF-5E78-45AA-8C78-894D1F4F77AC}')

	# Result is of type ILineSegment
	def Add(self):
		'—оздать отрезок (ƒобавить отрезок в коллекцию).'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{64ACC86F-4B10-4897-8552-BC0A556D228B}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	# Result is of type ILineSegment
	# The method LineSegment is actually a property, but must be used as a method to correctly pass the arguments
	def LineSegment(self, Index=defaultNamedNotOptArg):
		'¬озвращает отрезок, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'LineSegment', '{64ACC86F-4B10-4897-8552-BC0A556D228B}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ILineSegments3D(DispatchBaseClass):
	' оллекци€ отрезков 3D.'
	CLSID = IID('{0DFA5C90-9674-4C27-9441-ACDCD46C0AF4}')
	coclass_clsid = IID('{9D634ADF-E8BD-48A3-AA20-4FE654605D3E}')

	# Result is of type ILineSegment3D
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{74880880-4F48-44CC-8FC3-83FE3CA7C44A}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type ILineSegment3D
	# The method LineSegment3D is actually a property, but must be used as a method to correctly pass the arguments
	def LineSegment3D(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'LineSegment3D', '{74880880-4F48-44CC-8FC3-83FE3CA7C44A}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ILinearCentres(DispatchBaseClass):
	'Ћинейна€ сетка центров.'
	CLSID = IID('{C1E24970-64F0-4689-A3AB-CC34698378DC}')
	coclass_clsid = IID('{B7C0077B-FAEF-4183-B3BE-0B07529D3342}')

	def AddCentre(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg):
		'ƒобавить обозначение центра в сетку.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1)),X
			, Y, Radius)

	def AddCentreByObject(self, Object=defaultNamedNotOptArg):
		'ƒобавить обозначение центра в сетку.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), ((9, 1),),Object
			)

	def Clear(self):
		'ќчистить список центров.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), (),)

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def DeleteCentre(self, Index=defaultNamedNotOptArg):
		'”далить обозначение центра из сетки.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), ((3, 1),),Index
			)

	def DeleteCentreByPoint(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg):
		'”далить обозначение центра из сетки.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), ((5, 1), (5, 1)),X
			, Y)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AxisAngle": (3, 2, (5, 0), (), "AxisAngle", None),
		"BaseObjects": (1, 2, (12, 0), (), "BaseObjects", None),
		"Centres": (5, 2, (12, 0), (), "Centres", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"HasBreaks": (2, 2, (11, 0), (), "HasBreaks", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Radiuses": (6, 2, (12, 0), (), "Radiuses", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"TurnAngle": (4, 2, (5, 0), (), "TurnAngle", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"AxisAngle": ((3, LCID, 4, 0),()),
		"BaseObjects": ((1, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"HasBreaks": ((2, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"TurnAngle": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILinearPattern(DispatchBaseClass):
	'ќпераци€ копировани€ по сетке.'
	CLSID = IID('{FAA408C7-1A43-499C-B2E2-06F29B48BCBB}')
	coclass_clsid = IID('{9A4B0A4C-961B-465E-AC12-99A604A503CB}')

	def AddInitialObjects(self, Objects=defaultNamedNotOptArg):
		'ƒобавить объекты в массив копируемых объектов.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), ((12, 1),),Objects
			)

	def Clear(self):
		'ќчистить список исходных объектов массива.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), (),)

	def Destroy(self):
		'–азрушить массив.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), (),)

	# Result is of type IModelObject
	# The method Exemplar is actually a property, but must be used as a method to correctly pass the arguments
	def Exemplar(self, Index1=defaultNamedNotOptArg, Index2=defaultNamedNotOptArg):
		'ѕолучить экземпл€р по индексу (или индексам).'
		ret = self._oleobj_.InvokeTypes(11, LCID, 2, (9, 0), ((3, 1), (3, 1)),Index1
			, Index2)
		if ret is not None:
			ret = Dispatch(ret, 'Exemplar', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def GetBaseExemplarPlacement(self, Index1=pythoncom.Missing, Index2=pythoncom.Missing):
		'ѕолучить положение базового экземпл€ра в массиве.'
		return self._ApplyTypes_(117, 1, (11, 0), ((16387, 2), (16387, 2)), 'GetBaseExemplarPlacement', None,Index1
			, Index2)

	def GetExemplarsCounts(self, Count1=pythoncom.Missing, Count2=pythoncom.Missing):
		'ѕолучить количество экземпл€ров.'
		return self._ApplyTypes_(12, 1, (11, 0), ((16387, 2), (16387, 2)), 'GetExemplarsCounts', None,Count1
			, Count2)

	def IsInitialObject(self, Object=defaultNamedNotOptArg):
		'ѕроверка - €вл€етс€ ли объект исходным дл€ массива.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((9, 1),),Object
			)

	def IsSuitableObject(self, Object=defaultNamedNotOptArg):
		'ѕроверка пригодности объекта дл€ операции.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), ((9, 1),),Object
			)

	def SetBaseExemplarPlacement(self, Index1=defaultNamedNotOptArg, Index2=defaultNamedNotOptArg):
		'«адать положение базового экземпл€ра в массиве.'
		return self._oleobj_.InvokeTypes(116, LCID, 1, (11, 0), ((3, 1), (3, 1)),Index1
			, Index2)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle1": (103, 2, (5, 0), (), "Angle1", None),
		"Angle2": (110, 2, (5, 0), (), "Angle2", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Axis1' returns object of type 'IModelObject'
		"Axis1": (101, 2, (9, 0), (), "Axis1", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'Axis2' returns object of type 'IModelObject'
		"Axis2": (108, 2, (9, 0), (), "Axis2", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'BasePoint' returns object of type 'IModelObject'
		"BasePoint": (10, 2, (9, 0), (), "BasePoint", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"BasePointType": (9, 2, (3, 0), (), "BasePointType", None),
		"BoundaryInstancesStepFactor1": (106, 2, (11, 0), (), "BoundaryInstancesStepFactor1", None),
		"BoundaryInstancesStepFactor2": (113, 2, (11, 0), (), "BoundaryInstancesStepFactor2", None),
		"BuildingType": (115, 2, (3, 0), (), "BuildingType", None),
		"Count1": (107, 2, (3, 0), (), "Count1", None),
		"Count2": (114, 2, (3, 0), (), "Count2", None),
		"Direction1": (104, 2, (11, 0), (), "Direction1", None),
		"Direction2": (111, 2, (11, 0), (), "Direction2", None),
		"GeometryPattern": (8, 2, (11, 0), (), "GeometryPattern", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"InitialObjects": (1, 2, (12, 0), (), "InitialObjects", None),
		"InstanceDeletedIndexes": (2, 2, (12, 0), (), "InstanceDeletedIndexes", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Step1": (105, 2, (5, 0), (), "Step1", None),
		"Step2": (112, 2, (5, 0), (), "Step2", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
		# Method 'Vector1' returns object of type 'IVector3D'
		"Vector1": (102, 2, (9, 0), (), "Vector1", '{D51A4DCF-627D-44F5-89BA-46EF2449A212}'),
		# Method 'Vector2' returns object of type 'IVector3D'
		"Vector2": (109, 2, (9, 0), (), "Vector2", '{D51A4DCF-627D-44F5-89BA-46EF2449A212}'),
	}
	_prop_map_put_ = {
		"Angle1": ((103, LCID, 4, 0),()),
		"Angle2": ((110, LCID, 4, 0),()),
		"Axis1": ((101, LCID, 4, 0),()),
		"Axis2": ((108, LCID, 4, 0),()),
		"BasePoint": ((10, LCID, 4, 0),()),
		"BasePointType": ((9, LCID, 4, 0),()),
		"BoundaryInstancesStepFactor1": ((106, LCID, 4, 0),()),
		"BoundaryInstancesStepFactor2": ((113, LCID, 4, 0),()),
		"BuildingType": ((115, LCID, 4, 0),()),
		"Count1": ((107, LCID, 4, 0),()),
		"Count2": ((114, LCID, 4, 0),()),
		"Direction1": ((104, LCID, 4, 0),()),
		"Direction2": ((111, LCID, 4, 0),()),
		"GeometryPattern": ((8, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"InitialObjects": ((1, LCID, 4, 0),()),
		"InstanceDeletedIndexes": ((2, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Step1": ((105, LCID, 4, 0),()),
		"Step2": ((112, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILinearsCentries(DispatchBaseClass):
	' оллекци€ линейных сеток центров.'
	CLSID = IID('{E0854CCB-7849-4503-BF8B-F70CF493D59B}')
	coclass_clsid = IID('{EAFBF8C9-EA01-4550-8C56-391D57ECCE3A}')

	# Result is of type ILinearCentres
	def Add(self, BaseObjects=defaultNamedNotOptArg, AutoFindOtherObjects=defaultNamedNotOptArg, HasBreaks=defaultNamedNotOptArg, AxisAngle=defaultNamedNotOptArg
			, TurnAngle=defaultNamedNotOptArg):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((12, 1), (11, 1), (11, 1), (5, 1), (5, 1)),BaseObjects
			, AutoFindOtherObjects, HasBreaks, AxisAngle, TurnAngle)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{C1E24970-64F0-4689-A3AB-CC34698378DC}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	# Result is of type ILinearCentres
	# The method LinearCentres is actually a property, but must be used as a method to correctly pass the arguments
	def LinearCentres(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу или по имени.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'LinearCentres', '{C1E24970-64F0-4689-A3AB-CC34698378DC}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ILines(DispatchBaseClass):
	' оллекци€ линий.'
	CLSID = IID('{889A9B9C-7533-4EC5-8E2C-5ECF8228B06F}')
	coclass_clsid = IID('{431C0844-4C3E-4110-8E16-2B952AA0521D}')

	# Result is of type ILine
	def Add(self):
		'—оздать линию (добавить линию в коллекцию).'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{3EA0DA9B-F2C0-40C4-BE36-7103509A9389}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	# Result is of type ILine
	# The method Line is actually a property, but must be used as a method to correctly pass the arguments
	def Line(self, Index=defaultNamedNotOptArg):
		'¬озвращает линию, заданную по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Line', '{3EA0DA9B-F2C0-40C4-BE36-7103509A9389}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ILoadCombination(DispatchBaseClass):
	'»нтерфейс дл€ работы с типами загрузки.'
	CLSID = IID('{E7F1FD16-B641-4264-859C-D47217DA8B04}')
	coclass_clsid = None

	def Apply(self, LoadCombinationIndex=defaultNamedNotOptArg):
		'ѕрименить тип загрузки.'
		return self._oleobj_.InvokeTypes(6006, LCID, 1, (11, 0), ((12, 1),),LoadCombinationIndex
			)

	def ApplyEx(self, LoadCombinationIndex=defaultNamedNotOptArg, Password=defaultNamedNotOptArg):
		'ѕрименить тип загрузки'
		return self._oleobj_.InvokeTypes(6008, LCID, 1, (11, 0), ((12, 1), (8, 1)),LoadCombinationIndex
			, Password)

	def Create(self, CombinationName=defaultNamedNotOptArg):
		'—оздать тип загрузки.'
		return self._oleobj_.InvokeTypes(6004, LCID, 1, (3, 0), ((8, 1),),CombinationName
			)

	def Delete(self, LoadCombinationIndex=defaultNamedNotOptArg):
		'”далить тип загрузки.'
		return self._oleobj_.InvokeTypes(6005, LCID, 1, (11, 0), ((12, 1),),LoadCombinationIndex
			)

	def DeleteEx(self, LoadCombinationIndex=defaultNamedNotOptArg, Password=defaultNamedNotOptArg, DeleteDependant=defaultNamedNotOptArg):
		'”далить тип загрузки. DeleteDependant = TRUE - с подчиненными типами загрузки, DeleteDependant = FALSE - без подчиненных.'
		return self._oleobj_.InvokeTypes(6007, LCID, 1, (11, 0), ((12, 1), (8, 1), (11, 1)),LoadCombinationIndex
			, Password, DeleteDependant)

	def GetLoadCombinationComment(self, LoadCombinationIndex=defaultNamedNotOptArg):
		'ѕолучить комментарий.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(6012, LCID, 1, (8, 0), ((12, 1),),LoadCombinationIndex
			)

	def GetLoadCombinationName(self, LoadCombinationIndex=defaultNamedNotOptArg):
		'ѕолучить им€.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(6014, LCID, 1, (8, 0), ((12, 1),),LoadCombinationIndex
			)

	def SetLoadCombinationComment(self, LoadCombinationIndex=defaultNamedNotOptArg, NewVal=defaultNamedNotOptArg, Password=defaultNamedNotOptArg):
		'”становить комментарий.'
		return self._oleobj_.InvokeTypes(6011, LCID, 1, (11, 0), ((12, 1), (8, 1), (8, 1)),LoadCombinationIndex
			, NewVal, Password)

	def SetLoadCombinationName(self, LoadCombinationIndex=defaultNamedNotOptArg, NewVal=defaultNamedNotOptArg, Password=defaultNamedNotOptArg):
		'”становить им€.'
		return self._oleobj_.InvokeTypes(6013, LCID, 1, (11, 0), ((12, 1), (8, 1), (8, 1)),LoadCombinationIndex
			, NewVal, Password)

	def SetPassword(self, LoadCombinationIndex=defaultNamedNotOptArg, OldPassword=defaultNamedNotOptArg, Password=defaultNamedNotOptArg, UnprotectUsers=False):
		'”становить пароль. UnprotectUsers = TRUE - при удалении парол€ системного типа, удал€ть пароли пользовательских типов.'
		return self._oleobj_.InvokeTypes(6009, LCID, 1, (11, 0), ((12, 1), (8, 1), (8, 1), (11, 49)),LoadCombinationIndex
			, OldPassword, Password, UnprotectUsers)

	def UpdateByModel(self, LoadCombinationIndex=defaultNamedNotOptArg, Password=defaultNamedNotOptArg):
		'ќбновить по текущему состо€нию модели.'
		return self._oleobj_.InvokeTypes(6010, LCID, 1, (11, 0), ((12, 1), (8, 1)),LoadCombinationIndex
			, Password)

	_prop_map_get_ = {
		"CompletelyLoaded": (6001, 2, (11, 0), (), "CompletelyLoaded", None),
		"CurrentIndex": (6003, 2, (3, 0), (), "CurrentIndex", None),
		"LoadCombinations": (6002, 2, (12, 0), (), "LoadCombinations", None),
		"ProtectedFlags": (6015, 2, (12, 0), (), "ProtectedFlags", None),
	}
	_prop_map_put_ = {
		"CurrentIndex": ((6003, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILoadCombinationsParam(DispatchBaseClass):
	'»нтерфейс параметров типа загрузки документа.'
	CLSID = IID('{A70BF191-E1E1-4A92-8CA9-E6D3FEAD2D9A}')
	coclass_clsid = IID('{0801D00A-7F0A-4045-BCD7-E148083953D2}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ApplyingIndex": (3, 2, (3, 0), (), "ApplyingIndex", None),
		"LoadCombinations": (1, 2, (12, 0), (), "LoadCombinations", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"ProtectedFlags": (2, 2, (12, 0), (), "ProtectedFlags", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILocalCSAxesDirectionParam(DispatchBaseClass):
	"»нтерфейс параметров Ћ—  дл€ типа ориентации - 'направление осей'."
	CLSID = IID('{919DF6DB-0BA9-4EDD-B681-33E0B519834B}')
	coclass_clsid = IID('{D9B8494F-9693-488D-AC64-1EEE767737E9}')

	# The method AngleByOwnAxis is actually a property, but must be used as a method to correctly pass the arguments
	def AngleByOwnAxis(self, Axis=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'”становить угол поворота вокруг собственной оси.'
		return self._oleobj_.InvokeTypes(4, LCID, 4, (24, 0), ((3, 1), (5, 1)),Axis
			, arg1)

	# Result is of type IModelObject
	# The method DirectingObject is actually a property, but must be used as a method to correctly pass the arguments
	def DirectingObject(self, Axis=defaultNamedNotOptArg):
		'ѕолучить направл€ющий объект дл€ оси.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 2, (9, 0), ((3, 1),),Axis
			)
		if ret is not None:
			ret = Dispatch(ret, 'DirectingObject', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def RotateAxis(self, Axis=defaultNamedNotOptArg):
		'—менить направление оси на противоположное'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), ((3, 1),),Axis
			)

	def SetDirectingObject(self, Axis=defaultNamedNotOptArg, Object=defaultNamedNotOptArg):
		'”становить направл€ющий объект дл€ оси.'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (11, 0), ((3, 1), (9, 1)),Axis
			, Object)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILocalCSEulerParam(DispatchBaseClass):
	"»нтерфейс параметров Ћ—  дл€ типа ориентации - 'система углов Ёйлера'."
	CLSID = IID('{AD261149-1455-49BD-BA0A-B1760A0C8CB0}')
	coclass_clsid = IID('{D49278A6-1476-48FB-9374-CD066742B0AC}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"NutationAngle": (1, 2, (5, 0), (), "NutationAngle", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"PrecessionAngle": (2, 2, (5, 0), (), "PrecessionAngle", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"RotationAngle": (3, 2, (5, 0), (), "RotationAngle", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"NutationAngle": ((1, LCID, 4, 0),()),
		"PrecessionAngle": ((2, LCID, 4, 0),()),
		"RotationAngle": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILocalCSObject(DispatchBaseClass):
	'»нтерфейс подчиненного объекта Ћ— '
	CLSID = IID('{116F7E59-F175-47D2-8346-EB3C87D60578}')
	coclass_clsid = IID('{62AFE65C-2F2E-47FA-965A-37CCA9B25352}')

	_prop_map_get_ = {
		# Method 'CoordinateSystem' returns object of type 'IModelObject'
		"CoordinateSystem": (903, 2, (9, 0), (), "CoordinateSystem", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'LocalCoordinateSystem' returns object of type 'ILocalCoordinateSystem'
		"LocalCoordinateSystem": (902, 2, (9, 0), (), "LocalCoordinateSystem", '{BA6395F5-3506-4483-8864-4EEC220AF316}'),
		"ModelObjectParamType": (901, 2, (3, 0), (), "ModelObjectParamType", None),
	}
	_prop_map_put_ = {
		"CoordinateSystem": ((903, LCID, 4, 0),()),
		"ModelObjectParamType": ((901, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILocalCSOrientByObjectParam(DispatchBaseClass):
	"»нтерфейс параметров Ћ—  дл€ типа ориентации - 'ориентирование по объекту'."
	CLSID = IID('{618485E7-D88A-4DCC-8896-7EA04D831DBB}')
	coclass_clsid = IID('{9018B030-43B0-4A67-AE2B-11F14AB2716D}')

	def SetOrientationObject(self, Object=defaultNamedNotOptArg):
		'”становить объект, обладающий ориентацией.'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (11, 0), ((9, 1),),Object
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'OrientationObject' returns object of type 'IModelObject'
		"OrientationObject": (2, 2, (9, 0), (), "OrientationObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILocalCoordinateSystem(DispatchBaseClass):
	'»нтерфейс Ћ— .'
	CLSID = IID('{BA6395F5-3506-4483-8864-4EEC220AF316}')
	coclass_clsid = IID('{E39CAE1D-9B07-4171-8A97-90D9E7E475D4}')

	# Result is of type IModelObject
	# The method DefaultObject is actually a property, but must be used as a method to correctly pass the arguments
	def DefaultObject(self, Val=defaultNamedNotOptArg):
		'ѕолучить примитив Ћ— (ось или плоскость).'
		ret = self._oleobj_.InvokeTypes(3009, LCID, 2, (9, 0), ((3, 1),),Val
			)
		if ret is not None:
			ret = Dispatch(ret, 'DefaultObject', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def GetVector(self, Axis=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'ѕолучить вектора направлений главных осей.'
		return self._ApplyTypes_(3006, 1, (11, 0), ((3, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetVector', None,Axis
			, X, Y, Z)

	def InitByMatrix3D(self, mtr=defaultNamedNotOptArg):
		'”становить систему координат по матрице SAFEARRAY double (VT_ARRAY | VT_R8).'
		return self._oleobj_.InvokeTypes(3010, LCID, 1, (11, 0), ((12, 1),),mtr
			)

	def ReadFromFile(self, FileName=defaultNamedNotOptArg):
		'ѕрочитать файл с данными.'
		return self._oleobj_.InvokeTypes(3003, LCID, 1, (11, 0), ((8, 1),),FileName
			)

	def SetAssociationObject(self, NewVal=defaultNamedNotOptArg):
		'”становить опорный объект.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((9, 1),),NewVal
			)

	def SetDisplacementByAxis(self, Axis=defaultNamedNotOptArg, NewVal=defaultNamedNotOptArg):
		'”становить смещение по оси.'
		return self._oleobj_.InvokeTypes(3001, LCID, 1, (11, 0), ((3, 1), (5, 1)),Axis
			, NewVal)

	def SetStartingOrientation(self):
		'»сходна€ ориентаци€'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	# Result is of type IVector3D
	# The method Vector3D is actually a property, but must be used as a method to correctly pass the arguments
	def Vector3D(self, Axis=defaultNamedNotOptArg):
		'¬ектор, задающий направление оси.'
		ret = self._oleobj_.InvokeTypes(3011, LCID, 2, (9, 0), ((3, 1),),Axis
			)
		if ret is not None:
			ret = Dispatch(ret, 'Vector3D', '{D51A4DCF-627D-44F5-89BA-46EF2449A212}')
		return ret

	def WriteToFile(self, FileName=defaultNamedNotOptArg):
		'«аписать файл с данными.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), ((8, 1),),FileName
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'AssociationObject' returns object of type 'IModelObject'
		"AssociationObject": (5, 2, (9, 0), (), "AssociationObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Current": (3008, 2, (11, 0), (), "Current", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		# Method 'LocalCSParameters' returns object of type 'IKompasAPIObject'
		"LocalCSParameters": (3007, 2, (9, 0), (), "LocalCSParameters", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		"OrientationType": (3002, 2, (3, 0), (), "OrientationType", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		"ParameterType": (7, 2, (3, 0), (), "ParameterType", None),
		# Method 'Parameters' returns object of type 'IKompasAPIObject'
		"Parameters": (8, 2, (9, 0), (), "Parameters", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Symbol": (6, 2, (3, 0), (), "Symbol", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
		"X": (1, 2, (5, 0), (), "X", None),
		"Y": (2, 2, (5, 0), (), "Y", None),
		"Z": (3, 2, (5, 0), (), "Z", None),
	}
	_prop_map_put_ = {
		"Current": ((3008, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"OrientationType": ((3002, LCID, 4, 0),()),
		"ParameterType": ((7, LCID, 4, 0),()),
		"Symbol": ((6, LCID, 4, 0),()),
		"X": ((1, LCID, 4, 0),()),
		"Y": ((2, LCID, 4, 0),()),
		"Z": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILocalCoordinateSystem2D(DispatchBaseClass):
	'Ћокальна€ система координат.'
	CLSID = IID('{85EFCCC7-1667-48B7-A915-BB8149915EF8}')
	coclass_clsid = IID('{BCB037A2-D246-44AF-92EF-FDC54624FFA2}')

	def Delete(self):
		'”даление Ћ— .'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (4, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AxisXLabel": (5, 2, (8, 0), (), "AxisXLabel", None),
		"AxisYLabel": (6, 2, (8, 0), (), "AxisYLabel", None),
		"Name": (1, 2, (8, 0), (), "Name", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"X": (2, 2, (5, 0), (), "X", None),
		"Y": (3, 2, (5, 0), (), "Y", None),
	}
	_prop_map_put_ = {
		"Angle": ((4, LCID, 4, 0),()),
		"AxisXLabel": ((5, LCID, 4, 0),()),
		"AxisYLabel": ((6, LCID, 4, 0),()),
		"Name": ((1, LCID, 4, 0),()),
		"X": ((2, LCID, 4, 0),()),
		"Y": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILocalCoordinateSystems(DispatchBaseClass):
	' оллекци€ локальных систем координат.'
	CLSID = IID('{CC04CBF6-F0D4-456E-903A-C0B0D3551368}')
	coclass_clsid = IID('{C2EB441C-8053-4ECB-961F-D0607769B508}')

	# Result is of type ILocalCoordinateSystem
	def Add(self):
		'—оздает новую локальную систему координат и добавл€ет еЄ в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{BA6395F5-3506-4483-8864-4EEC220AF316}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type ILocalCoordinateSystem
	# The method LocalCoordinateSystem is actually a property, but must be used as a method to correctly pass the arguments
	def LocalCoordinateSystem(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'LocalCoordinateSystem', '{BA6395F5-3506-4483-8864-4EEC220AF316}')
		return ret

	def SetCurrent(self, Object=defaultNamedNotOptArg):
		'”становить Ћ—  в качестве текущей.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((9, 1),),Object
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Current' returns object of type 'IModelObject'
		"Current": (3, 2, (9, 0), (), "Current", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ILocalCoordinateSystems2D(DispatchBaseClass):
	' оллекци€ локальных систем координат.'
	CLSID = IID('{E6A6A1C8-A6F9-470E-AF64-D6AB7741D684}')
	coclass_clsid = IID('{CEFD648E-547C-4D66-94E9-336E6E89BCFE}')

	# Result is of type ILocalCoordinateSystem2D
	def Add(self):
		'—оздает новую Ћ—  и добавл€ет еЄ в коллекцию.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{85EFCCC7-1667-48B7-A915-BB8149915EF8}')
		return ret

	# Result is of type ILocalCoordinateSystem2D
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает Ћ—  заданную по индексу или имени.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{85EFCCC7-1667-48B7-A915-BB8149915EF8}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Current' returns object of type 'ILocalCoordinateSystem2D'
		"Current": (2, 2, (9, 0), (), "Current", '{85EFCCC7-1667-48B7-A915-BB8149915EF8}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"Current": ((2, LCID, 4, 0),()),
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает Ћ—  заданную по индексу или имени.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{85EFCCC7-1667-48B7-A915-BB8149915EF8}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{85EFCCC7-1667-48B7-A915-BB8149915EF8}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ILoft(DispatchBaseClass):
	'ќпераци€ по сечени€м.'
	CLSID = IID('{DDB04ECF-12A9-496E-8069-405F7302E039}')
	coclass_clsid = IID('{F4FA0EE2-9988-4FE9-AF69-D9F84368AF09}')

	# Result is of type ICoupling
	def AddCoupling(self):
		'ƒобавить цепочку.'
		ret = self._oleobj_.InvokeTypes(8, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'AddCoupling', '{FB39791B-2100-4F36-B352-AA4EB5FD9373}')
		return ret

	# Result is of type IModelObject
	# The method BuildingObject is actually a property, but must be used as a method to correctly pass the arguments
	def BuildingObject(self, BeginSection=defaultNamedNotOptArg):
		'Ќаправл€ющий объект построени€ элемента у крайних сечений.'
		ret = self._oleobj_.InvokeTypes(6, LCID, 2, (9, 0), ((11, 1),),BeginSection
			)
		if ret is not None:
			ret = Dispatch(ret, 'BuildingObject', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# The method BuildingType is actually a property, but must be used as a method to correctly pass the arguments
	def BuildingType(self, BeginSection=defaultNamedNotOptArg):
		'—пособы построени€ элемента у крайних сечений.'
		return self._oleobj_.InvokeTypes(5, LCID, 2, (3, 0), ((11, 1),),BeginSection
			)

	def ClearCouplings(self):
		'”далить все цепочки.'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (11, 0), (),)

	# Result is of type ICoupling
	# The method Coupling is actually a property, but must be used as a method to correctly pass the arguments
	def Coupling(self, Index=defaultNamedNotOptArg):
		'ѕолучить параметры цепочки по индексу.'
		ret = self._oleobj_.InvokeTypes(10, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Coupling', '{FB39791B-2100-4F36-B352-AA4EB5FD9373}')
		return ret

	def DeleteCoupling(self, Index=defaultNamedNotOptArg):
		'”далить цепочку по индексу.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), ((3, 1),),Index
			)

	# The method SetBuildingObject is actually a property, but must be used as a method to correctly pass the arguments
	def SetBuildingObject(self, BeginSection=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'Ќаправл€ющий объект построени€ элемента у крайних сечений.'
		return self._oleobj_.InvokeTypes(6, LCID, 4, (24, 0), ((11, 1), (9, 1)),BeginSection
			, arg1)

	# The method SetBuildingType is actually a property, but must be used as a method to correctly pass the arguments
	def SetBuildingType(self, BeginSection=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'—пособы построени€ элемента у крайних сечений.'
		return self._oleobj_.InvokeTypes(5, LCID, 4, (24, 0), ((11, 1), (3, 1)),BeginSection
			, arg1)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'AxisLine' returns object of type 'IModelObject'
		"AxisLine": (3, 2, (9, 0), (), "AxisLine", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Closed": (4, 2, (11, 0), (), "Closed", None),
		"CouplingsCount": (9, 2, (3, 0), (), "CouplingsCount", None),
		"DirectionalLines": (7, 2, (12, 0), (), "DirectionalLines", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		"OperationResult": (1, 2, (3, 0), (), "OperationResult", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Sketchs": (2, 2, (12, 0), (), "Sketchs", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"AxisLine": ((3, LCID, 4, 0),()),
		"Closed": ((4, LCID, 4, 0),()),
		"DirectionalLines": ((7, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"OperationResult": ((1, LCID, 4, 0),()),
		"Sketchs": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ILofts(DispatchBaseClass):
	' оллекци€ операций по сечени€м.'
	CLSID = IID('{AF5F922F-8C32-4949-A29A-BB5EC7A99D00}')
	coclass_clsid = IID('{73F8984C-5A44-455C-973D-98E9589DB57A}')

	# Result is of type ILoft
	def Add(self, LoftType=defaultNamedNotOptArg):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((3, 1),),LoftType
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{DDB04ECF-12A9-496E-8069-405F7302E039}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type ILoft
	# The method Loft is actually a property, but must be used as a method to correctly pass the arguments
	def Loft(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Loft', '{DDB04ECF-12A9-496E-8069-405F7302E039}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ILoop7(DispatchBaseClass):
	'»нтерфейс цикла - содержит информацию о св€з€х с другими гран€ми.'
	CLSID = IID('{02C63F96-1370-4147-B024-8BC6837B98FE}')
	coclass_clsid = IID('{6198541B-92B1-40B1-8484-F6E18302F75E}')

	def GetLength(self, Unit=defaultNamedNotOptArg):
		'ѕолучить общую длину ребер. bitVector = ST_MIX_MM..ST_MIX_M еденицы измерени€.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (5, 0), ((3, 1),),Unit
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Edges": (2, 2, (12, 0), (), "Edges", None),
		"IsOuter": (3, 2, (11, 0), (), "IsOuter", None),
		"OrientedEdges": (1, 2, (12, 0), (), "OrientedEdges", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMacroObject(DispatchBaseClass):
	'Ќетипизированный макроэлемент.'
	CLSID = IID('{B21C70C9-53EC-4BB7-A9DB-BCE852CA6716}')
	coclass_clsid = IID('{A9880F8D-2166-4690-ACA5-4479DBE4251B}')

	def AddDefaultHotPoint(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg):
		'«адать характерную точку макроэлемента.'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (11, 0), ((5, 1), (5, 1)),X
			, Y)

	def AddObjects(self, Objects=defaultNamedNotOptArg):
		'ƒобавить объект, слой, вид, группу или SAFEARRAY объектов в макрообъект.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), ((12, 1),),Objects
			)

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def DeleteAttachedLeaders(self):
		'”далить присоединенные линии выноски.'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (11, 0), (),)

	def DeleteDefaultHotPoint(self):
		'”далить характерную точку макроэлемента.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (11, 0), (),)

	# Result is of type IDrawingObject
	def FindObject(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Limit=defaultNamedNotOptArg, Param=defaultNamedNotOptArg):
		'Ќайти объект, ближайший к заданной точке, удовлетвор€ющий параметрам поиска.'
		ret = self._oleobj_.InvokeTypes(19, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1), (9, 1)),X
			, Y, Limit, Param)
		if ret is not None:
			ret = Dispatch(ret, 'FindObject', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def GetPlacement(self, X=pythoncom.Missing, Y=pythoncom.Missing, Angle=pythoncom.Missing, MirrorSymmetry=pythoncom.Missing):
		'ѕолучить точку прив€зки и угол поворота CK макроэлемента.'
		return self._ApplyTypes_(9, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2), (16395, 2)), 'GetPlacement', None,X
			, Y, Angle, MirrorSymmetry)

	def SetPlacement(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Angle=defaultNamedNotOptArg, MirrorSymmetry=defaultNamedNotOptArg
			, Relative=defaultNamedNotOptArg):
		'”становить точку прив€зки и угол поворота - CK макроэлемента.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1), (16395, 1), (11, 1)),X
			, Y, Angle, MirrorSymmetry, Relative)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'AttachedLeaders' returns object of type 'ILeaders'
		"AttachedLeaders": (12, 2, (9, 0), (), "AttachedLeaders", '{BA2D820C-0DB9-47C6-A32D-34C7D8BA1B2F}'),
		"BreakObjectsEnabled": (18, 2, (11, 0), (), "BreakObjectsEnabled", None),
		"Command": (3, 2, (3, 0), (), "Command", None),
		"CreateSpcObjects": (17, 2, (11, 0), (), "CreateSpcObjects", None),
		"DoubleClickEditable": (4, 2, (11, 0), (), "DoubleClickEditable", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"ExternalEditable": (6, 2, (11, 0), (), "ExternalEditable", None),
		"HotPointsEditable": (5, 2, (11, 0), (), "HotPointsEditable", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		"LibraryFileName": (1, 2, (8, 0), (), "LibraryFileName", None),
		"LibraryName": (2, 2, (8, 0), (), "LibraryName", None),
		"Name": (11, 2, (8, 0), (), "Name", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"PropertyObjectEditable": (16, 2, (11, 0), (), "PropertyObjectEditable", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"UserParams": (7, 2, (12, 0), (), "UserParams", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"BreakObjectsEnabled": ((18, LCID, 4, 0),()),
		"Command": ((3, LCID, 4, 0),()),
		"CreateSpcObjects": ((17, LCID, 4, 0),()),
		"DoubleClickEditable": ((4, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"ExternalEditable": ((6, LCID, 4, 0),()),
		"HotPointsEditable": ((5, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"LibraryFileName": ((1, LCID, 4, 0),()),
		"LibraryName": ((2, LCID, 4, 0),()),
		"Name": ((11, LCID, 4, 0),()),
		"PropertyObjectEditable": ((16, LCID, 4, 0),()),
		"UserParams": ((7, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMacroObject3D(DispatchBaseClass):
	'3D макроэлемент.'
	CLSID = IID('{09DBAA1E-FC4C-4E16-B033-FB9B8F7995D8}')
	coclass_clsid = IID('{6B9C4409-D991-4E0E-A8DE-AFDD3A582AE8}')

	# Result is of type IKompasAPIObject
	# The method AssociationObject is actually a property, but must be used as a method to correctly pass the arguments
	def AssociationObject(self, Index=defaultNamedNotOptArg):
		'”становить опорный объект.'
		ret = self._oleobj_.InvokeTypes(5, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'AssociationObject', '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')
		return ret

	def ClearAssociationObject(self):
		'”далить все опорные объекты.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), (),)

	def Destroy(self):
		'–азрушить макроэлемент.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), (),)

	# The method SetAssociationObject is actually a property, but must be used as a method to correctly pass the arguments
	def SetAssociationObject(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'”становить опорный объект.'
		return self._oleobj_.InvokeTypes(5, LCID, 4, (24, 0), ((3, 1), (9, 1)),Index
			, arg1)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AssociationObjectCount": (6, 2, (3, 0), (), "AssociationObjectCount", None),
		"DoubleClickEditable": (3, 2, (11, 0), (), "DoubleClickEditable", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		"Objects": (1, 2, (12, 0), (), "Objects", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"PropertyObjectEditable": (4, 2, (11, 0), (), "PropertyObjectEditable", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"StaffVisible": (2, 2, (11, 0), (), "StaffVisible", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"DoubleClickEditable": ((3, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Objects": ((1, LCID, 4, 0),()),
		"PropertyObjectEditable": ((4, LCID, 4, 0),()),
		"StaffVisible": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMacroObjects(DispatchBaseClass):
	' оллекци€ макроэлементов.'
	CLSID = IID('{5B3F5454-160A-4981-B093-890E9A719AE3}')
	coclass_clsid = IID('{2B471C1A-E44F-44AD-99EA-4AC126B80965}')

	# Result is of type IMacroObject
	def Add(self, MultyLayer=False):
		'ƒобавить макроэлемент.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((11, 49),),MultyLayer
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{B21C70C9-53EC-4BB7-A9DB-BCE852CA6716}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	# Result is of type IMacroObject
	# The method MacroObject is actually a property, but must be used as a method to correctly pass the arguments
	def MacroObject(self, Index=defaultNamedNotOptArg):
		'ѕолучить макроэлемент по индексу, уникальному номеру или reference.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'MacroObject', '{B21C70C9-53EC-4BB7-A9DB-BCE852CA6716}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMacroObjects3D(DispatchBaseClass):
	'»нтерфейс коллекции макроэлементов 3D.'
	CLSID = IID('{B4C41D1D-02E2-4A05-A493-7D25CEEC797C}')
	coclass_clsid = IID('{A7238B7E-7E31-46C0-A814-ECB90B5414A5}')

	# Result is of type IMacroObject3D
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{09DBAA1E-FC4C-4E16-B033-FB9B8F7995D8}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type IMacroObject3D
	# The method MacroObject3D is actually a property, but must be used as a method to correctly pass the arguments
	def MacroObject3D(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'MacroObject3D', '{09DBAA1E-FC4C-4E16-B033-FB9B8F7995D8}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IManipulators(DispatchBaseClass):
	' оллекци€ манипул€торов.'
	CLSID = IID('{5FBB9528-B629-46DE-8BA6-13C5872BDD15}')
	coclass_clsid = IID('{7CDB34A1-2B31-4FFD-BAF7-C06B588FE0CB}')

	# Result is of type IBaseManipulator
	def Add(self, Type=defaultNamedNotOptArg):
		'—оздать манипул€тор (добавл€ет контрол в коллекцию).'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((3, 1),),Type
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{606FD023-3944-4215-A426-1E4EB82A8E32}')
		return ret

	# Result is of type IBaseManipulator
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает манипул€тор, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{606FD023-3944-4215-A426-1E4EB82A8E32}')
		return ret

	# Result is of type IBaseManipulator
	# The method Manipulator is actually a property, but must be used as a method to correctly pass the arguments
	def Manipulator(self, Id=defaultNamedNotOptArg):
		'¬озвращает манипул€тор с заданным идентификатором.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((3, 1),),Id
			)
		if ret is not None:
			ret = Dispatch(ret, 'Manipulator', '{606FD023-3944-4215-A426-1E4EB82A8E32}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает манипул€тор, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{606FD023-3944-4215-A426-1E4EB82A8E32}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{606FD023-3944-4215-A426-1E4EB82A8E32}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMark(DispatchBaseClass):
	'ћарка - базовый интерфейс дл€ всех типов марок.'
	CLSID = IID('{B5D1A0BE-8F3C-4143-B9C5-66F0CF0FE74D}')
	coclass_clsid = IID('{CF195C37-A915-48CA-9F6B-6B3845FED05B}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AutoNumber": (2003, 2, (11, 0), (), "AutoNumber", None),
		"Comment": (2009, 2, (8, 0), (), "Comment", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Name' returns object of type 'IText'
		"Name": (2004, 2, (9, 0), (), "Name", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		# Method 'Number' returns object of type 'IText'
		"Number": (2005, 2, (9, 0), (), "Number", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		# Method 'TextAfter' returns object of type 'IText'
		"TextAfter": (2007, 2, (9, 0), (), "TextAfter", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		# Method 'TextBefore' returns object of type 'IText'
		"TextBefore": (2006, 2, (9, 0), (), "TextBefore", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		# Method 'TextUnder' returns object of type 'IText'
		"TextUnder": (2008, 2, (9, 0), (), "TextUnder", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"X": (2001, 2, (5, 0), (), "X", None),
		"Y": (2002, 2, (5, 0), (), "Y", None),
	}
	_prop_map_put_ = {
		"AutoNumber": ((2003, LCID, 4, 0),()),
		"Comment": ((2009, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"X": ((2001, LCID, 4, 0),()),
		"Y": ((2002, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMarkInsideForm(DispatchBaseClass):
	'ћарка и позиционного обозначени€ (без линии-выноски).'
	CLSID = IID('{E5C5A0FF-6CAB-4179-9BF3-868D96BF6AEA}')
	coclass_clsid = IID('{CDABB418-649A-4AB9-8A92-C51789075912}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (1, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AutoNumber": (2003, 2, (11, 0), (), "AutoNumber", None),
		"Comment": (2009, 2, (8, 0), (), "Comment", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"Form": (2, 2, (3, 0), (), "Form", None),
		"FormGabarit": (3, 2, (5, 0), (), "FormGabarit", None),
		"FormHeight": (4, 2, (5, 0), (), "FormHeight", None),
		"FormStyle": (5, 2, (3, 0), (), "FormStyle", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Name' returns object of type 'IText'
		"Name": (2004, 2, (9, 0), (), "Name", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		# Method 'Number' returns object of type 'IText'
		"Number": (2005, 2, (9, 0), (), "Number", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		# Method 'TextAfter' returns object of type 'IText'
		"TextAfter": (2007, 2, (9, 0), (), "TextAfter", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		# Method 'TextBefore' returns object of type 'IText'
		"TextBefore": (2006, 2, (9, 0), (), "TextBefore", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		# Method 'TextUnder' returns object of type 'IText'
		"TextUnder": (2008, 2, (9, 0), (), "TextUnder", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"X": (2001, 2, (5, 0), (), "X", None),
		"Y": (2002, 2, (5, 0), (), "Y", None),
	}
	_prop_map_put_ = {
		"Angle": ((1, LCID, 4, 0),()),
		"AutoNumber": ((2003, LCID, 4, 0),()),
		"Comment": ((2009, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"Form": ((2, LCID, 4, 0),()),
		"FormGabarit": ((3, LCID, 4, 0),()),
		"FormHeight": ((4, LCID, 4, 0),()),
		"FormStyle": ((5, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"X": ((2001, LCID, 4, 0),()),
		"Y": ((2002, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMarkLeader(DispatchBaseClass):
	'«нак маркировки.'
	CLSID = IID('{8A5D2A56-ECB6-4151-B1AC-F8548CD668CF}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'Designation' returns object of type 'IText'
		"Designation": (1503, 2, (9, 0), (), "Designation", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		# Method 'TextOnBranch' returns object of type 'IText'
		"TextOnBranch": (1501, 2, (9, 0), (), "TextOnBranch", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		# Method 'TextUnderBranch' returns object of type 'IText'
		"TextUnderBranch": (1502, 2, (9, 0), (), "TextUnderBranch", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMarkNode(DispatchBaseClass):
	'”зел дл€ вставки дополнительных марок.'
	CLSID = IID('{5AC48E97-80B1-459F-9709-1F3F374559BE}')
	coclass_clsid = IID('{B98EA663-66BC-46C0-A86C-1FE40AF8A3D8}')

	def Delete(self):
		'”далить узел.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), (),)

	def GetInsertionPoints(self, LeftJut=defaultNamedNotOptArg, Points=pythoncom.Missing, Directions=pythoncom.Missing):
		'ѕолучить координаты точек дл€ вставки дополнительных элементов.'
		return self._ApplyTypes_(7, 1, (11, 0), ((11, 1), (16396, 2), (16396, 2)), 'GetInsertionPoints', None,LeftJut
			, Points, Directions)

	# Result is of type IMarkNodes
	# The method MarkNodes is actually a property, but must be used as a method to correctly pass the arguments
	def MarkNodes(self, Left=defaultNamedNotOptArg):
		' оллекци€  узлов марок Left = TRUE слева, Left = FALSE справа по направлению оси.'
		ret = self._oleobj_.InvokeTypes(5, LCID, 2, (9, 0), ((11, 1),),Left
			)
		if ret is not None:
			ret = Dispatch(ret, 'MarkNodes', '{EB8ACD77-8008-4F89-A311-2F4712462F72}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"DoubleMark": (2, 2, (11, 0), (), "DoubleMark", None),
		"MarkType": (1, 2, (3, 0), (), "MarkType", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"RefLength": (3, 2, (5, 0), (), "RefLength", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'Text' returns object of type 'IText'
		"Text": (4, 2, (9, 0), (), "Text", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"DoubleMark": ((2, LCID, 4, 0),()),
		"MarkType": ((1, LCID, 4, 0),()),
		"RefLength": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMarkNodes(DispatchBaseClass):
	' оллекци€  узлов дл€ вставки марки.'
	CLSID = IID('{EB8ACD77-8008-4F89-A311-2F4712462F72}')
	coclass_clsid = IID('{6681105E-35E0-4E76-9E64-0AB8B50E6149}')

	# Result is of type IMarkNode
	def Add(self, Type=defaultNamedNotOptArg, Index=defaultNamedNotOptArg):
		'ƒобавить узел в коллекцию.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 1, (9, 0), ((3, 1), (12, 1)),Type
			, Index)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{5AC48E97-80B1-459F-9709-1F3F374559BE}')
		return ret

	def Clear(self):
		'ќчистить коллекцию.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), (),)

	# Result is of type IMarkNode
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает узел по индексу или тексту марки.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{5AC48E97-80B1-459F-9709-1F3F374559BE}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает узел по индексу или тексту марки.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{5AC48E97-80B1-459F-9709-1F3F374559BE}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{5AC48E97-80B1-459F-9709-1F3F374559BE}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMarkOnLeader(DispatchBaseClass):
	'ћарка и позиционные обозначени€ (с линией-выноской).'
	CLSID = IID('{F3D7E6A6-26EA-4D68-AD58-4DE194C47B4E}')
	coclass_clsid = IID('{CF195C37-A915-48CA-9F6B-6B3845FED05B}')

	def AddBranch(self, Index=defaultNamedNotOptArg, Begin=defaultNamedNotOptArg, Points=defaultNamedNotOptArg):
		'ƒобавить ответвление.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), ((3, 1), (11, 1), (12, 1)),Index
			, Begin, Points)

	def AddBranchByPoint(self, Index=defaultNamedNotOptArg, Begin=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg):
		'ƒобавить пр€молинейное ответвление.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), ((3, 1), (11, 1), (5, 1), (5, 1)),Index
			, Begin, X, Y)

	# The method BranchBegin is actually a property, but must be used as a method to correctly pass the arguments
	def BranchBegin(self, Index=defaultNamedNotOptArg):
		'Ќачало ответвлени€: TRUE - от начала полки, FALSE - от конца полки.'
		return self._oleobj_.InvokeTypes(6, LCID, 2, (11, 0), ((3, 1),),Index
			)

	# The method BranchPoints is actually a property, but must be used as a method to correctly pass the arguments
	def BranchPoints(self, Index=defaultNamedNotOptArg):
		'ћассив SAFEARRAY координат точек ответвлени€.'
		return self._ApplyTypes_(5, 2, (12, 0), ((3, 1),), 'BranchPoints', None,Index
			)

	# The method BranchPointsCount is actually a property, but must be used as a method to correctly pass the arguments
	def BranchPointsCount(self, Index=defaultNamedNotOptArg):
		'„исло точек в ответвлении.'
		return self._oleobj_.InvokeTypes(9, LCID, 2, (3, 0), ((3, 1),),Index
			)

	# The method BranchX is actually a property, but must be used as a method to correctly pass the arguments
	def BranchX(self, Index=defaultNamedNotOptArg):
		' оордината конечной точки ответвлени€ по X.'
		return self._oleobj_.InvokeTypes(7, LCID, 2, (5, 0), ((3, 1),),Index
			)

	# The method BranchY is actually a property, but must be used as a method to correctly pass the arguments
	def BranchY(self, Index=defaultNamedNotOptArg):
		' оордината конечной точки ответвлени€ по Y.'
		return self._oleobj_.InvokeTypes(8, LCID, 2, (5, 0), ((3, 1),),Index
			)

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def DeleteBranch(self, Index=defaultNamedNotOptArg):
		'”далить ответвление.'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (11, 0), ((3, 1),),Index
			)

	# The method SetBranchBegin is actually a property, but must be used as a method to correctly pass the arguments
	def SetBranchBegin(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'Ќачало ответвлени€: TRUE - от начала полки, FALSE - от конца полки.'
		return self._oleobj_.InvokeTypes(6, LCID, 4, (24, 0), ((3, 1), (11, 1)),Index
			, arg1)

	# The method SetBranchPoints is actually a property, but must be used as a method to correctly pass the arguments
	def SetBranchPoints(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ћассив SAFEARRAY координат точек ответвлени€.'
		return self._oleobj_.InvokeTypes(5, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
			, arg1)

	# The method SetBranchX is actually a property, but must be used as a method to correctly pass the arguments
	def SetBranchX(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		' оордината конечной точки ответвлени€ по X.'
		return self._oleobj_.InvokeTypes(7, LCID, 4, (24, 0), ((3, 1), (5, 1)),Index
			, arg1)

	# The method SetBranchY is actually a property, but must be used as a method to correctly pass the arguments
	def SetBranchY(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		' оордината конечной точки ответвлени€ по Y.'
		return self._oleobj_.InvokeTypes(8, LCID, 4, (24, 0), ((3, 1), (5, 1)),Index
			, arg1)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ArrowType": (1, 2, (3, 0), (), "ArrowType", None),
		"AutoNumber": (2003, 2, (11, 0), (), "AutoNumber", None),
		"BranchCount": (4, 2, (3, 0), (), "BranchCount", None),
		"Comment": (2009, 2, (8, 0), (), "Comment", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Name' returns object of type 'IText'
		"Name": (2004, 2, (9, 0), (), "Name", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		# Method 'Number' returns object of type 'IText'
		"Number": (2005, 2, (9, 0), (), "Number", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		"ParallelBranch": (3, 2, (11, 0), (), "ParallelBranch", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"ShelfDirection": (2, 2, (3, 0), (), "ShelfDirection", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		# Method 'TextAfter' returns object of type 'IText'
		"TextAfter": (2007, 2, (9, 0), (), "TextAfter", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		# Method 'TextBefore' returns object of type 'IText'
		"TextBefore": (2006, 2, (9, 0), (), "TextBefore", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		# Method 'TextUnder' returns object of type 'IText'
		"TextUnder": (2008, 2, (9, 0), (), "TextUnder", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"X": (2001, 2, (5, 0), (), "X", None),
		"Y": (2002, 2, (5, 0), (), "Y", None),
	}
	_prop_map_put_ = {
		"ArrowType": ((1, LCID, 4, 0),()),
		"AutoNumber": ((2003, LCID, 4, 0),()),
		"Comment": ((2009, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"ParallelBranch": ((3, LCID, 4, 0),()),
		"ShelfDirection": ((2, LCID, 4, 0),()),
		"X": ((2001, LCID, 4, 0),()),
		"Y": ((2002, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMarkOnLine(DispatchBaseClass):
	'ћарка и позиционные обозначени€ (на линии).'
	CLSID = IID('{5A1540F9-7388-466F-A13C-EB1133423DD9}')
	coclass_clsid = IID('{84CAA3BB-3E7A-4185-82BC-85D4102D5DEF}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AutoNumber": (2003, 2, (11, 0), (), "AutoNumber", None),
		"Comment": (2009, 2, (8, 0), (), "Comment", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Line' returns object of type 'IDrawingObject'
		"Line": (2, 2, (9, 0), (), "Line", '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}'),
		# Method 'Name' returns object of type 'IText'
		"Name": (2004, 2, (9, 0), (), "Name", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		# Method 'Number' returns object of type 'IText'
		"Number": (2005, 2, (9, 0), (), "Number", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Position": (1, 2, (3, 0), (), "Position", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		# Method 'TextAfter' returns object of type 'IText'
		"TextAfter": (2007, 2, (9, 0), (), "TextAfter", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		# Method 'TextBefore' returns object of type 'IText'
		"TextBefore": (2006, 2, (9, 0), (), "TextBefore", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		# Method 'TextUnder' returns object of type 'IText'
		"TextUnder": (2008, 2, (9, 0), (), "TextUnder", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"X": (2001, 2, (5, 0), (), "X", None),
		"Y": (2002, 2, (5, 0), (), "Y", None),
	}
	_prop_map_put_ = {
		"AutoNumber": ((2003, LCID, 4, 0),()),
		"Comment": ((2009, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"Line": ((2, LCID, 4, 0),()),
		"Position": ((1, LCID, 4, 0),()),
		"X": ((2001, LCID, 4, 0),()),
		"Y": ((2002, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMarks(DispatchBaseClass):
	' оллекци€ марок (содержит марки всех типов).'
	CLSID = IID('{47585370-56BD-4419-82D9-DB7CBFB1A252}')
	coclass_clsid = IID('{C0DEA6BF-0AD5-4C55-AD3D-A3F145943E47}')

	# Result is of type IMark
	def Add(self, MarkType=defaultNamedNotOptArg):
		'—оздать марку.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((3, 1),),MarkType
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{B5D1A0BE-8F3C-4143-B9C5-66F0CF0FE74D}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	# Result is of type IMark
	# The method Mark is actually a property, but must be used as a method to correctly pass the arguments
	def Mark(self, Index=defaultNamedNotOptArg):
		'¬озвращает марку, заданную по индексу, ссылке или имени и номеру.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Mark', '{B5D1A0BE-8F3C-4143-B9C5-66F0CF0FE74D}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMassInertiaParam7(DispatchBaseClass):
	'»нтерфейс массо-центровочных характеристик.'
	CLSID = IID('{666C987F-2700-4C35-B8CE-DB8BFB5AAF02}')
	coclass_clsid = None

	def Calculate(self):
		'–асчитать ћ÷’.'
		return self._oleobj_.InvokeTypes(3017, LCID, 1, (11, 0), (),)

	def GetAxisX(self, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'¬ектора направлений главных центральных осей инерции.'
		return self._ApplyTypes_(3033, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2)), 'GetAxisX', None,X
			, Y, Z)

	def GetAxisY(self, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'¬ектора направлений главных центральных осей инерции.'
		return self._ApplyTypes_(3034, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2)), 'GetAxisY', None,X
			, Y, Z)

	def GetAxisZ(self, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'¬ектора направлений главных центральных осей инерции.'
		return self._ApplyTypes_(3035, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2)), 'GetAxisZ', None,X
			, Y, Z)

	def SetMaterial(self, Name=defaultNamedNotOptArg, Density=defaultNamedNotOptArg):
		'”становить материал.'
		return self._oleobj_.InvokeTypes(3039, LCID, 1, (11, 0), ((8, 1), (5, 1)),Name
			, Density)

	_prop_map_get_ = {
		"Actual": (3016, 2, (11, 0), (), "Actual", None),
		"Area": (3014, 2, (5, 0), (), "Area", None),
		"CalculateMass": (3008, 2, (5, 0), (), "CalculateMass", None),
		"Density": (3037, 2, (5, 0), (), "Density", None),
		"DensityMode": (3012, 2, (11, 0), (), "DensityMode", None),
		"HandBookDensity": (3011, 2, (5, 0), (), "HandBookDensity", None),
		"Jx": (3024, 2, (5, 0), (), "Jx", None),
		"Jx0": (3030, 2, (5, 0), (), "Jx0", None),
		"Jxy": (3027, 2, (5, 0), (), "Jxy", None),
		"Jxz": (3028, 2, (5, 0), (), "Jxz", None),
		"Jy": (3025, 2, (5, 0), (), "Jy", None),
		"Jy0": (3031, 2, (5, 0), (), "Jy0", None),
		"Jyz": (3029, 2, (5, 0), (), "Jyz", None),
		"Jz": (3026, 2, (5, 0), (), "Jz", None),
		"Jz0": (3032, 2, (5, 0), (), "Jz0", None),
		"LX": (3018, 2, (5, 0), (), "LX", None),
		"LY": (3019, 2, (5, 0), (), "LY", None),
		"LengthUnits": (3005, 2, (3, 0), (), "LengthUnits", None),
		"Lxy": (3021, 2, (5, 0), (), "Lxy", None),
		"Lxz": (3022, 2, (5, 0), (), "Lxz", None),
		"Lyz": (3023, 2, (5, 0), (), "Lyz", None),
		"Lz": (3020, 2, (5, 0), (), "Lz", None),
		"ManualMassCentre": (3004, 2, (11, 0), (), "ManualMassCentre", None),
		"Mass": (3036, 2, (5, 0), (), "Mass", None),
		"MassSettingMode": (3009, 2, (3, 0), (), "MassSettingMode", None),
		"MassUnits": (3006, 2, (3, 0), (), "MassUnits", None),
		"Material": (3038, 2, (8, 0), (), "Material", None),
		"MaterialLocation": (3040, 2, (8, 0), (), "MaterialLocation", None),
		"SourceData": (3015, 2, (11, 0), (), "SourceData", None),
		"Volume": (3013, 2, (5, 0), (), "Volume", None),
		"Xc": (3001, 2, (5, 0), (), "Xc", None),
		"Yc": (3002, 2, (5, 0), (), "Yc", None),
		"Zc": (3003, 2, (5, 0), (), "Zc", None),
	}
	_prop_map_put_ = {
		"DensityMode": ((3012, LCID, 4, 0),()),
		"LengthUnits": ((3005, LCID, 4, 0),()),
		"ManualDensity": ((3010, LCID, 4, 0),()),
		"ManualMass": ((3007, LCID, 4, 0),()),
		"ManualMassCentre": ((3004, LCID, 4, 0),()),
		"MassSettingMode": ((3009, LCID, 4, 0),()),
		"MassUnits": ((3006, LCID, 4, 0),()),
		"MaterialLocation": ((3040, LCID, 4, 0),()),
		"SourceData": ((3015, LCID, 4, 0),()),
		"Xc": ((3001, LCID, 4, 0),()),
		"Yc": ((3002, LCID, 4, 0),()),
		"Zc": ((3003, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMate3DByAngle(DispatchBaseClass):
	'—опр€жение под углом.'
	CLSID = IID('{527CCF94-B32B-413B-8B0B-4AFD3705CDDF}')
	coclass_clsid = IID('{2D4F2072-EBD6-4CB6-B1C2-535BBF097F40}')

	def GetMateParams(self, Index=defaultNamedNotOptArg, Params=pythoncom.Missing):
		'ѕолучить параметры математических обектов, участвующих в сопр€жении.'
		return self._ApplyTypes_(7, 1, (3, 0), ((3, 1), (16396, 2)), 'GetMateParams', None,Index
			, Params)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Alignment": (5, 2, (3, 0), (), "Alignment", None),
		"Angle3D": (201, 2, (11, 0), (), "Angle3D", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Axis' returns object of type 'IModelObject'
		"Axis": (202, 2, (9, 0), (), "Axis", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'BaseObject1' returns object of type 'IModelObject'
		"BaseObject1": (2, 2, (9, 0), (), "BaseObject1", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'BaseObject2' returns object of type 'IModelObject'
		"BaseObject2": (3, 2, (9, 0), (), "BaseObject2", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"ConstraintType": (1, 2, (3, 0), (), "ConstraintType", None),
		"Fixed": (4, 2, (3, 0), (), "Fixed", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		"ParamValue": (6, 2, (5, 0), (), "ParamValue", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Alignment": ((5, LCID, 4, 0),()),
		"Angle3D": ((201, LCID, 4, 0),()),
		"Axis": ((202, LCID, 4, 0),()),
		"BaseObject1": ((2, LCID, 4, 0),()),
		"BaseObject2": ((3, LCID, 4, 0),()),
		"Fixed": ((4, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"ParamValue": ((6, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMate3DByTangent(DispatchBaseClass):
	'—опр€жение по касательной.'
	CLSID = IID('{8D3897D5-A2D1-4CCB-B479-E629B50CF12F}')
	coclass_clsid = IID('{FBBD6A6C-65F3-492E-9095-15D6111A5EA1}')

	def GetMateParams(self, Index=defaultNamedNotOptArg, Params=pythoncom.Missing):
		'ѕолучить параметры математических обектов, участвующих в сопр€жении.'
		return self._ApplyTypes_(7, 1, (3, 0), ((3, 1), (16396, 2)), 'GetMateParams', None,Index
			, Params)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Alignment": (5, 2, (3, 0), (), "Alignment", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BaseObject1' returns object of type 'IModelObject'
		"BaseObject1": (2, 2, (9, 0), (), "BaseObject1", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'BaseObject2' returns object of type 'IModelObject'
		"BaseObject2": (3, 2, (9, 0), (), "BaseObject2", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"ConstraintType": (1, 2, (3, 0), (), "ConstraintType", None),
		"Fixed": (4, 2, (3, 0), (), "Fixed", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		"ParamValue": (6, 2, (5, 0), (), "ParamValue", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"TangentType": (201, 2, (3, 0), (), "TangentType", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Alignment": ((5, LCID, 4, 0),()),
		"BaseObject1": ((2, LCID, 4, 0),()),
		"BaseObject2": ((3, LCID, 4, 0),()),
		"Fixed": ((4, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"ParamValue": ((6, LCID, 4, 0),()),
		"TangentType": ((201, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMate3DCamGear(DispatchBaseClass):
	'—опр€жение двух компонентов - кулачковый механизм.  улачек - толкатель.'
	CLSID = IID('{68EF30FE-933C-4F3A-BB9E-098ADCC66368}')
	coclass_clsid = IID('{A7301502-52CA-4886-94FC-5B8002880FF4}')

	def GetMateParams(self, Index=defaultNamedNotOptArg, Params=pythoncom.Missing):
		'ѕолучить параметры математических обектов, участвующих в сопр€жении.'
		return self._ApplyTypes_(7, 1, (3, 0), ((3, 1), (16396, 2)), 'GetMateParams', None,Index
			, Params)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Alignment": (5, 2, (3, 0), (), "Alignment", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BaseObject1' returns object of type 'IModelObject'
		"BaseObject1": (2, 2, (9, 0), (), "BaseObject1", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'BaseObject2' returns object of type 'IModelObject'
		"BaseObject2": (3, 2, (9, 0), (), "BaseObject2", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"CamFaces": (201, 2, (12, 0), (), "CamFaces", None),
		"ConstraintType": (1, 2, (3, 0), (), "ConstraintType", None),
		"Fixed": (4, 2, (3, 0), (), "Fixed", None),
		# Method 'FollowerFace' returns object of type 'IModelObject'
		"FollowerFace": (203, 2, (9, 0), (), "FollowerFace", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		"ParamValue": (6, 2, (5, 0), (), "ParamValue", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'RotationAxis' returns object of type 'IModelObject'
		"RotationAxis": (202, 2, (9, 0), (), "RotationAxis", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'Trajectory' returns object of type 'IModelObject'
		"Trajectory": (204, 2, (9, 0), (), "Trajectory", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Alignment": ((5, LCID, 4, 0),()),
		"BaseObject1": ((2, LCID, 4, 0),()),
		"BaseObject2": ((3, LCID, 4, 0),()),
		"CamFaces": ((201, LCID, 4, 0),()),
		"Fixed": ((4, LCID, 4, 0),()),
		"FollowerFace": ((203, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"ParamValue": ((6, LCID, 4, 0),()),
		"RotationAxis": ((202, LCID, 4, 0),()),
		"Trajectory": ((204, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMate3DDependentPosition(DispatchBaseClass):
	'—опр€жение «ависимое положение.'
	CLSID = IID('{698A8F34-5759-4FEC-AFEF-C8B29D072E12}')
	coclass_clsid = IID('{8E8B8453-1695-477D-9A39-C957FFAD84FE}')

	def GetMateParams(self, Index=defaultNamedNotOptArg, Params=pythoncom.Missing):
		'ѕолучить параметры математических обектов, участвующих в сопр€жении.'
		return self._ApplyTypes_(7, 1, (3, 0), ((3, 1), (16396, 2)), 'GetMateParams', None,Index
			, Params)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Alignment": (5, 2, (3, 0), (), "Alignment", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BaseObject1' returns object of type 'IModelObject'
		"BaseObject1": (2, 2, (9, 0), (), "BaseObject1", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'BaseObject2' returns object of type 'IModelObject'
		"BaseObject2": (3, 2, (9, 0), (), "BaseObject2", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"BySample": (201, 2, (11, 0), (), "BySample", None),
		"ConstraintType": (1, 2, (3, 0), (), "ConstraintType", None),
		"Fixed": (4, 2, (3, 0), (), "Fixed", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		"ParamValue": (6, 2, (5, 0), (), "ParamValue", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'SampleObject1' returns object of type 'IPart7'
		"SampleObject1": (202, 2, (9, 0), (), "SampleObject1", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		# Method 'SampleObject2' returns object of type 'IPart7'
		"SampleObject2": (203, 2, (9, 0), (), "SampleObject2", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Alignment": ((5, LCID, 4, 0),()),
		"BaseObject1": ((2, LCID, 4, 0),()),
		"BaseObject2": ((3, LCID, 4, 0),()),
		"BySample": ((201, LCID, 4, 0),()),
		"Fixed": ((4, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"ParamValue": ((6, LCID, 4, 0),()),
		"SampleObject1": ((202, LCID, 4, 0),()),
		"SampleObject2": ((203, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMate3DSymmetry(DispatchBaseClass):
	'—опр€жение симметри€.'
	CLSID = IID('{B6CA167C-64A4-4F46-A2E2-CBC5BB019351}')
	coclass_clsid = IID('{80BC4FCE-18BA-42A7-8E62-563843274250}')

	def GetMateParams(self, Index=defaultNamedNotOptArg, Params=pythoncom.Missing):
		'ѕолучить параметры математических обектов, участвующих в сопр€жении.'
		return self._ApplyTypes_(7, 1, (3, 0), ((3, 1), (16396, 2)), 'GetMateParams', None,Index
			, Params)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Alignment": (5, 2, (3, 0), (), "Alignment", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BaseObject1' returns object of type 'IModelObject'
		"BaseObject1": (2, 2, (9, 0), (), "BaseObject1", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'BaseObject2' returns object of type 'IModelObject'
		"BaseObject2": (3, 2, (9, 0), (), "BaseObject2", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"ConstraintType": (1, 2, (3, 0), (), "ConstraintType", None),
		"Fixed": (4, 2, (3, 0), (), "Fixed", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		"ParamValue": (6, 2, (5, 0), (), "ParamValue", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		# Method 'Plane' returns object of type 'IModelObject'
		"Plane": (201, 2, (9, 0), (), "Plane", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Alignment": ((5, LCID, 4, 0),()),
		"BaseObject1": ((2, LCID, 4, 0),()),
		"BaseObject2": ((3, LCID, 4, 0),()),
		"Fixed": ((4, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"ParamValue": ((6, LCID, 4, 0),()),
		"Plane": ((201, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMate3DTransmission(DispatchBaseClass):
	'—опр€жение ћеханическа€ передача.'
	CLSID = IID('{52B90D96-D338-4A92-99D9-A90B9D2FF918}')
	coclass_clsid = IID('{FA6EE09A-E2C8-45B7-A4EC-B53F45B84652}')

	def GetMateParams(self, Index=defaultNamedNotOptArg, Params=pythoncom.Missing):
		'ѕолучить параметры математических обектов, участвующих в сопр€жении.'
		return self._ApplyTypes_(7, 1, (3, 0), ((3, 1), (16396, 2)), 'GetMateParams', None,Index
			, Params)

	def SetScale(self, Scale1=defaultNamedNotOptArg, Scale2=defaultNamedNotOptArg):
		'”становить коэффициенты соотношений компонентов.'
		return self._oleobj_.InvokeTypes(211, LCID, 1, (11, 0), ((5, 1), (5, 1)),Scale1
			, Scale2)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Alignment": (5, 2, (3, 0), (), "Alignment", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BaseObject1' returns object of type 'IModelObject'
		"BaseObject1": (2, 2, (9, 0), (), "BaseObject1", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'BaseObject2' returns object of type 'IModelObject'
		"BaseObject2": (3, 2, (9, 0), (), "BaseObject2", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"ConstraintType": (1, 2, (3, 0), (), "ConstraintType", None),
		"Direction1": (207, 2, (11, 0), (), "Direction1", None),
		"Direction2": (208, 2, (11, 0), (), "Direction2", None),
		"Fixed": (4, 2, (3, 0), (), "Fixed", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"MotionType1": (201, 2, (3, 0), (), "MotionType1", None),
		"MotionType2": (202, 2, (3, 0), (), "MotionType2", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		"ParamValue": (6, 2, (5, 0), (), "ParamValue", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'RotationAxis1' returns object of type 'IModelObject'
		"RotationAxis1": (203, 2, (9, 0), (), "RotationAxis1", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'RotationAxis2' returns object of type 'IModelObject'
		"RotationAxis2": (204, 2, (9, 0), (), "RotationAxis2", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Scale1": (209, 2, (5, 0), (), "Scale1", None),
		"Scale2": (210, 2, (5, 0), (), "Scale2", None),
		# Method 'Trajectory1' returns object of type 'IModelObject'
		"Trajectory1": (205, 2, (9, 0), (), "Trajectory1", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'Trajectory2' returns object of type 'IModelObject'
		"Trajectory2": (206, 2, (9, 0), (), "Trajectory2", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Alignment": ((5, LCID, 4, 0),()),
		"BaseObject1": ((2, LCID, 4, 0),()),
		"BaseObject2": ((3, LCID, 4, 0),()),
		"Direction1": ((207, LCID, 4, 0),()),
		"Direction2": ((208, LCID, 4, 0),()),
		"Fixed": ((4, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"MotionType1": ((201, LCID, 4, 0),()),
		"MotionType2": ((202, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"ParamValue": ((6, LCID, 4, 0),()),
		"RotationAxis1": ((203, LCID, 4, 0),()),
		"RotationAxis2": ((204, LCID, 4, 0),()),
		"Trajectory1": ((205, LCID, 4, 0),()),
		"Trajectory2": ((206, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMateConstraint3D(DispatchBaseClass):
	'—опр€жение 3D.'
	CLSID = IID('{9E37E1F5-F770-473A-B996-A6753EDA73A5}')
	coclass_clsid = IID('{8E8B8453-1695-477D-9A39-C957FFAD84FE}')

	def GetMateParams(self, Index=defaultNamedNotOptArg, Params=pythoncom.Missing):
		'ѕолучить параметры математических обектов, участвующих в сопр€жении.'
		return self._ApplyTypes_(7, 1, (3, 0), ((3, 1), (16396, 2)), 'GetMateParams', None,Index
			, Params)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Alignment": (5, 2, (3, 0), (), "Alignment", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BaseObject1' returns object of type 'IModelObject'
		"BaseObject1": (2, 2, (9, 0), (), "BaseObject1", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'BaseObject2' returns object of type 'IModelObject'
		"BaseObject2": (3, 2, (9, 0), (), "BaseObject2", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"ConstraintType": (1, 2, (3, 0), (), "ConstraintType", None),
		"Fixed": (4, 2, (3, 0), (), "Fixed", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		"ParamValue": (6, 2, (5, 0), (), "ParamValue", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Alignment": ((5, LCID, 4, 0),()),
		"BaseObject1": ((2, LCID, 4, 0),()),
		"BaseObject2": ((3, LCID, 4, 0),()),
		"Fixed": ((4, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"ParamValue": ((6, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMateConstraints3D(DispatchBaseClass):
	' оллекци€ сопр€жений 3D.'
	CLSID = IID('{95F316E1-0A18-4F42-8B70-1423250F244D}')
	coclass_clsid = None

	# Result is of type IMateConstraint3D
	def Add(self, Type=defaultNamedNotOptArg):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((3, 1),),Type
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{9E37E1F5-F770-473A-B996-A6753EDA73A5}')
		return ret

	# Result is of type IMateConstraint3D
	def AddUserMate(self, Type=defaultNamedNotOptArg):
		'—оздает новый пользовательский элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((3, 1),),Type
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddUserMate', '{9E37E1F5-F770-473A-B996-A6753EDA73A5}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type IMateConstraint3D
	# The method MateConstraint3D is actually a property, but must be used as a method to correctly pass the arguments
	def MateConstraint3D(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу или по имени.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'MateConstraint3D', '{9E37E1F5-F770-473A-B996-A6753EDA73A5}')
		return ret

	# The method ObjectConstraints is actually a property, but must be used as a method to correctly pass the arguments
	def ObjectConstraints(self, Object=defaultNamedNotOptArg):
		'¬озвращает массив сопр€жений св€занных с объектом.'
		return self._ApplyTypes_(3, 2, (12, 0), ((9, 1),), 'ObjectConstraints', None,Object
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMath2D(DispatchBaseClass):
	'ћатематика 2D.'
	CLSID = IID('{0409EC8F-88F7-4242-81E7-965ABEAE932C}')
	coclass_clsid = None

	# Result is of type ICurve2D
	def Arc(self, Xc=defaultNamedNotOptArg, Yc=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg, Angle1=defaultNamedNotOptArg
			, Angle2=defaultNamedNotOptArg, Direction=defaultNamedNotOptArg):
		'¬ременна€ математическа€ дуга.'
		ret = self._oleobj_.InvokeTypes(3, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (11, 1)),Xc
			, Yc, Radius, Angle1, Angle2, Direction
			)
		if ret is not None:
			ret = Dispatch(ret, 'Arc', '{65C82884-C41B-47A1-8C07-E8820D6718EA}')
		return ret

	# Result is of type ICurve2D
	def Bezier(self, Closed=defaultNamedNotOptArg, AllPoints=defaultNamedNotOptArg, Points=defaultNamedNotOptArg):
		'¬ременна€ математическа€ крива€ Bezer.'
		ret = self._oleobj_.InvokeTypes(8, LCID, 1, (9, 0), ((11, 1), (11, 1), (12, 1)),Closed
			, AllPoints, Points)
		if ret is not None:
			ret = Dispatch(ret, 'Bezier', '{65C82884-C41B-47A1-8C07-E8820D6718EA}')
		return ret

	# Result is of type ICurve2D
	def Circle(self, Xc=defaultNamedNotOptArg, Yc=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg):
		'¬ременна€ математическа€ окружность.'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1)),Xc
			, Yc, Radius)
		if ret is not None:
			ret = Dispatch(ret, 'Circle', '{65C82884-C41B-47A1-8C07-E8820D6718EA}')
		return ret

	# Result is of type ICurve2D
	def Ellipse(self, Xc=defaultNamedNotOptArg, Yc=defaultNamedNotOptArg, A=defaultNamedNotOptArg, B=defaultNamedNotOptArg
			, Angle=defaultNamedNotOptArg):
		'¬ременный математический эллипс.'
		ret = self._oleobj_.InvokeTypes(6, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1), (5, 1), (5, 1)),Xc
			, Yc, A, B, Angle)
		if ret is not None:
			ret = Dispatch(ret, 'Ellipse', '{65C82884-C41B-47A1-8C07-E8820D6718EA}')
		return ret

	# Result is of type ICurve2D
	def EllipseArc(self, Xc=defaultNamedNotOptArg, Yc=defaultNamedNotOptArg, A=defaultNamedNotOptArg, B=defaultNamedNotOptArg
			, Angle=defaultNamedNotOptArg, Angle1=defaultNamedNotOptArg, Angle2=defaultNamedNotOptArg, Direction=defaultNamedNotOptArg):
		'¬ременна€ математическа€ дуга эллипса.'
		ret = self._oleobj_.InvokeTypes(7, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (11, 1)),Xc
			, Yc, A, B, Angle, Angle1
			, Angle2, Direction)
		if ret is not None:
			ret = Dispatch(ret, 'EllipseArc', '{65C82884-C41B-47A1-8C07-E8820D6718EA}')
		return ret

	# Result is of type ICurve2D
	def Line(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Angle=defaultNamedNotOptArg):
		'¬ременна€ математическа€ пр€ма€.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1)),X
			, Y, Angle)
		if ret is not None:
			ret = Dispatch(ret, 'Line', '{65C82884-C41B-47A1-8C07-E8820D6718EA}')
		return ret

	# Result is of type ICurve2D
	def LineSeg(self, X1=defaultNamedNotOptArg, Y1=defaultNamedNotOptArg, X2=defaultNamedNotOptArg, Y2=defaultNamedNotOptArg):
		'¬ременный математический отрезок.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1), (5, 1)),X1
			, Y1, X2, Y2)
		if ret is not None:
			ret = Dispatch(ret, 'LineSeg', '{65C82884-C41B-47A1-8C07-E8820D6718EA}')
		return ret

	def MovePoint(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Angle=defaultNamedNotOptArg, Len=defaultNamedNotOptArg):
		'—местить точку.'
		return self._ApplyTypes_(12, 1, (11, 0), ((16389, 3), (16389, 3), (5, 1), (5, 1)), 'MovePoint', None,X
			, Y, Angle, Len)

	# Result is of type ICurve2D
	def Nurbs(self, Closed=defaultNamedNotOptArg, Degree=defaultNamedNotOptArg, Points=defaultNamedNotOptArg, Weights=defaultNamedNotOptArg
			, Knots=defaultNamedNotOptArg):
		'¬ременна€ математическа€ Nurbs-крива€.'
		ret = self._oleobj_.InvokeTypes(9, LCID, 1, (9, 0), ((11, 1), (3, 1), (12, 1), (12, 1), (12, 1)),Closed
			, Degree, Points, Weights, Knots)
		if ret is not None:
			ret = Dispatch(ret, 'Nurbs', '{65C82884-C41B-47A1-8C07-E8820D6718EA}')
		return ret

	# Result is of type ICurve2D
	def PolyLine(self, Points=defaultNamedNotOptArg, Closed=defaultNamedNotOptArg):
		'¬ременна€ математическа€ полилини€.'
		ret = self._oleobj_.InvokeTypes(5, LCID, 1, (9, 0), ((12, 1), (11, 1)),Points
			, Closed)
		if ret is not None:
			ret = Dispatch(ret, 'PolyLine', '{65C82884-C41B-47A1-8C07-E8820D6718EA}')
		return ret

	def Rotate(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Xc=defaultNamedNotOptArg, Yc=defaultNamedNotOptArg
			, Angle=defaultNamedNotOptArg):
		'ѕовернуть точку на угол.'
		return self._ApplyTypes_(11, 1, (11, 0), ((16389, 3), (16389, 3), (5, 1), (5, 1), (5, 1)), 'Rotate', None,X
			, Y, Xc, Yc, Angle)

	def Symmetry(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Curve=defaultNamedNotOptArg):
		'—имметри€ точки относительно оси.'
		return self._ApplyTypes_(10, 1, (11, 0), ((16389, 3), (16389, 3), (9, 1)), 'Symmetry', None,X
			, Y, Curve)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMathCurve3D(DispatchBaseClass):
	'ћатематическа€ крива€ в трехмерном пространстве.'
	CLSID = IID('{6D2112DD-F6E1-49CF-9678-89B0C6CC6ACA}')
	coclass_clsid = IID('{0BDEEF46-FCD5-4F3C-B9AE-5A073689BA91}')

	def CalculatePolygon(self, Step=defaultNamedNotOptArg):
		'ѕолучить полигон точек на кривой.'
		return self._ApplyTypes_(17, 1, (12, 0), ((5, 1),), 'CalculatePolygon', None,Step
			)

	def GetCentre(self, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'ѕолучить центр кривой.'
		return self._ApplyTypes_(18, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2)), 'GetCentre', None,X
			, Y, Z)

	def GetDerivativeT(self, ParamT=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'ѕолучить первую производную по T.'
		return self._ApplyTypes_(4, 1, (11, 0), ((5, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetDerivativeT', None,ParamT
			, X, Y, Z)

	def GetDerivativeTT(self, ParamT=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'ѕолучить вторую производную по T.'
		return self._ApplyTypes_(5, 1, (11, 0), ((5, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetDerivativeTT', None,ParamT
			, X, Y, Z)

	def GetDerivativeTTT(self, ParamT=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'ѕолучить третью производную по T.'
		return self._ApplyTypes_(6, 1, (11, 0), ((5, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetDerivativeTTT', None,ParamT
			, X, Y, Z)

	def GetGabarit(self, X1=pythoncom.Missing, Y1=pythoncom.Missing, Z1=pythoncom.Missing, X2=pythoncom.Missing
			, Y2=pythoncom.Missing, Z2=pythoncom.Missing):
		'¬ыдать габарит кривой.'
		return self._ApplyTypes_(12, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2)), 'GetGabarit', None,X1
			, Y1, Z1, X2, Y2, Z2
			)

	def GetLength(self, BitVector=defaultNamedNotOptArg):
		'ѕолучить длину кривой (ST_MIX_MM..ST_MIX_M единицы измерени€).'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (5, 0), ((3, 1),),BitVector
			)

	def GetMetricLength(self, StartParam=defaultNamedNotOptArg, EndParam=defaultNamedNotOptArg):
		'ћетрическа€ длина кривой.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (5, 0), ((5, 1), (5, 1)),StartParam
			, EndParam)

	def GetNormal(self, ParamT=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'ѕолучить нормаль.'
		return self._ApplyTypes_(3, 1, (11, 0), ((5, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetNormal', None,ParamT
			, X, Y, Z)

	def GetPoint(self, ParamT=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'ѕолучить точку на кривой.'
		return self._ApplyTypes_(1, 1, (11, 0), ((5, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetPoint', None,ParamT
			, X, Y, Z)

	def GetTangentVector(self, ParamT=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'ѕолучить тангенциальный вектор (нормализованный).'
		return self._ApplyTypes_(2, 1, (11, 0), ((5, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetTangentVector', None,ParamT
			, X, Y, Z)

	def GetWeightCentre(self, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'ѕолучить центр т€жести кривой.'
		return self._ApplyTypes_(19, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2)), 'GetWeightCentre', None,X
			, Y, Z)

	def NearPointProjection(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg, T=pythoncom.Missing
			, Ext=defaultNamedNotOptArg):
		'ѕолучить ближайшую проекцию точки на кривую.'
		return self._ApplyTypes_(16, 1, (11, 0), ((5, 1), (5, 1), (5, 1), (16389, 2), (11, 1)), 'NearPointProjection', None,X
			, Y, Z, T, Ext)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Closed": (9, 2, (11, 0), (), "Closed", None),
		"CurveType": (14, 2, (3, 0), (), "CurveType", None),
		"Degenerate": (13, 2, (11, 0), (), "Degenerate", None),
		"ParamMax": (8, 2, (5, 0), (), "ParamMax", None),
		"ParamMin": (7, 2, (5, 0), (), "ParamMin", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Periodic": (10, 2, (11, 0), (), "Periodic", None),
		"Radius": (20, 2, (5, 0), (), "Radius", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMathSurface3D(DispatchBaseClass):
	'ћатематическа€ поверхность в трехмерном пространстве.'
	CLSID = IID('{25675C2F-10FD-4CE7-9E73-D3915D3E894E}')
	coclass_clsid = IID('{D6DA79A3-CF5D-432B-900F-429403741DDD}')

	def GetArea(self, BitVector=defaultNamedNotOptArg):
		'ѕолучить площадь грани (ST_MIX_MM..ST_MIX_M еденицы измерени€).'
		return self._oleobj_.InvokeTypes(22, LCID, 1, (5, 0), ((3, 1),),BitVector
			)

	def GetBoundaryUVNurbs(self, UV=defaultNamedNotOptArg, Closed=defaultNamedNotOptArg, LoopIndex=defaultNamedNotOptArg, EdgeIndex=defaultNamedNotOptArg
			, Degree=pythoncom.Missing, Points=pythoncom.Missing, Weights=pythoncom.Missing, Knots=pythoncom.Missing, TMin=pythoncom.Missing
			, TMax=pythoncom.Missing):
		'ѕолучить параметры границы поверхности в UV NURBS-прадставлении.'
		return self._ApplyTypes_(24, 1, (11, 0), ((11, 1), (11, 1), (3, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2), (16396, 2), (16389, 2), (16389, 2)), 'GetBoundaryUVNurbs', None,UV
			, Closed, LoopIndex, EdgeIndex, Degree, Points
			, Weights, Knots, TMin, TMax)

	def GetDerivativeU(self, ParamU=defaultNamedNotOptArg, ParamV=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing
			, Z=pythoncom.Missing):
		'ѕолучить первую производную по U.'
		return self._ApplyTypes_(6, 1, (11, 0), ((5, 1), (5, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetDerivativeU', None,ParamU
			, ParamV, X, Y, Z)

	def GetDerivativeUU(self, ParamU=defaultNamedNotOptArg, ParamV=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing
			, Z=pythoncom.Missing):
		'ѕолучить вторую производную по UU.'
		return self._ApplyTypes_(8, 1, (11, 0), ((5, 1), (5, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetDerivativeUU', None,ParamU
			, ParamV, X, Y, Z)

	def GetDerivativeUUU(self, ParamU=defaultNamedNotOptArg, ParamV=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing
			, Z=pythoncom.Missing):
		'ѕолучить третью производную по UUU.'
		return self._ApplyTypes_(11, 1, (11, 0), ((5, 1), (5, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetDerivativeUUU', None,ParamU
			, ParamV, X, Y, Z)

	def GetDerivativeUUV(self, ParamU=defaultNamedNotOptArg, ParamV=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing
			, Z=pythoncom.Missing):
		'ѕолучить третью производную по UUV.'
		return self._ApplyTypes_(14, 1, (11, 0), ((5, 1), (5, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetDerivativeUUV', None,ParamU
			, ParamV, X, Y, Z)

	def GetDerivativeUV(self, ParamU=defaultNamedNotOptArg, ParamV=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing
			, Z=pythoncom.Missing):
		'ѕолучить вторую производную по UV.'
		return self._ApplyTypes_(10, 1, (11, 0), ((5, 1), (5, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetDerivativeUV', None,ParamU
			, ParamV, X, Y, Z)

	def GetDerivativeUVV(self, ParamU=defaultNamedNotOptArg, ParamV=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing
			, Z=pythoncom.Missing):
		'ѕолучить третью производную по UVV.'
		return self._ApplyTypes_(13, 1, (11, 0), ((5, 1), (5, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetDerivativeUVV', None,ParamU
			, ParamV, X, Y, Z)

	def GetDerivativeV(self, ParamU=defaultNamedNotOptArg, ParamV=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing
			, Z=pythoncom.Missing):
		'ѕолучить первую производную по V.'
		return self._ApplyTypes_(7, 1, (11, 0), ((5, 1), (5, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetDerivativeV', None,ParamU
			, ParamV, X, Y, Z)

	def GetDerivativeVV(self, ParamU=defaultNamedNotOptArg, ParamV=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing
			, Z=pythoncom.Missing):
		'ѕолучить вторую производную по VV.'
		return self._ApplyTypes_(9, 1, (11, 0), ((5, 1), (5, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetDerivativeVV', None,ParamU
			, ParamV, X, Y, Z)

	def GetDerivativeVVV(self, ParamU=defaultNamedNotOptArg, ParamV=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing
			, Z=pythoncom.Missing):
		'ѕолучить третью производную по VVV.'
		return self._ApplyTypes_(12, 1, (11, 0), ((5, 1), (5, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetDerivativeVVV', None,ParamU
			, ParamV, X, Y, Z)

	def GetEdgesCount(self, LoopIndex=defaultNamedNotOptArg):
		'ѕолучить количество ребер в границе.'
		return self._oleobj_.InvokeTypes(26, LCID, 1, (3, 0), ((3, 1),),LoopIndex
			)

	def GetGabarit(self, X1=pythoncom.Missing, Y1=pythoncom.Missing, Z1=pythoncom.Missing, X2=pythoncom.Missing
			, Y2=pythoncom.Missing, Z2=pythoncom.Missing):
		'ѕолучить габарит.'
		return self._ApplyTypes_(1, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2)), 'GetGabarit', None,X1
			, Y1, Z1, X2, Y2, Z2
			)

	def GetNormal(self, ParamU=defaultNamedNotOptArg, ParamV=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing
			, Z=pythoncom.Missing):
		'ѕолучить нормаль.'
		return self._ApplyTypes_(3, 1, (11, 0), ((5, 1), (5, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetNormal', None,ParamU
			, ParamV, X, Y, Z)

	def GetPoint(self, ParamU=defaultNamedNotOptArg, ParamV=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing
			, Z=pythoncom.Missing):
		'ѕолучить точку на поверхности.'
		return self._ApplyTypes_(2, 1, (11, 0), ((5, 1), (5, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetPoint', None,ParamU
			, ParamV, X, Y, Z)

	def GetTangentVectorU(self, ParamU=defaultNamedNotOptArg, ParamV=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing
			, Z=pythoncom.Missing):
		'ѕолучить касательный вектор по U.'
		return self._ApplyTypes_(4, 1, (11, 0), ((5, 1), (5, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetTangentVectorU', None,ParamU
			, ParamV, X, Y, Z)

	def GetTangentVectorV(self, ParamU=defaultNamedNotOptArg, ParamV=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing
			, Z=pythoncom.Missing):
		'ѕолучить касательный вектор по V.'
		return self._ApplyTypes_(5, 1, (11, 0), ((5, 1), (5, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetTangentVectorV', None,ParamU
			, ParamV, X, Y, Z)

	def NearPointProjection(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg, ParamU=pythoncom.Missing
			, ParamV=pythoncom.Missing, Ext=defaultNamedNotOptArg):
		'ѕолучить ближайшую проекцию точки на поверхность.'
		return self._ApplyTypes_(23, 1, (11, 0), ((5, 1), (5, 1), (5, 1), (16389, 2), (16389, 2), (11, 1)), 'NearPointProjection', None,X
			, Y, Z, ParamU, ParamV, Ext
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"BoundaryCount": (25, 2, (3, 0), (), "BoundaryCount", None),
		"ClosedU": (19, 2, (11, 0), (), "ClosedU", None),
		"ClosedV": (20, 2, (11, 0), (), "ClosedV", None),
		"ParamUMax": (16, 2, (5, 0), (), "ParamUMax", None),
		"ParamUMin": (15, 2, (5, 0), (), "ParamUMin", None),
		"ParamVMax": (18, 2, (5, 0), (), "ParamVMax", None),
		"ParamVMin": (17, 2, (5, 0), (), "ParamVMin", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Surface3DType": (21, 2, (3, 0), (), "Surface3DType", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMeasurementContainer(DispatchBaseClass):
	'»нтерфейс контейнера объектов измерений и диагностики.'
	CLSID = IID('{C84CB131-1565-4794-ABF5-E5BDDB9EE5DF}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'AreaMeasurements3D' returns object of type 'IAreaMeasurements3D'
		"AreaMeasurements3D": (18003, 2, (9, 0), (), "AreaMeasurements3D", '{12126558-EA51-46E0-BAED-07E523F4B7C6}'),
		# Method 'DistanceAngleMeasurements3D' returns object of type 'IDistanceAngleMeasurements3D'
		"DistanceAngleMeasurements3D": (18001, 2, (9, 0), (), "DistanceAngleMeasurements3D", '{F16C388F-16DC-4498-8875-EC8B300CE4A0}'),
		# Method 'EdgeLengthMeasurements3D' returns object of type 'IEdgeLengthMeasurements3D'
		"EdgeLengthMeasurements3D": (18002, 2, (9, 0), (), "EdgeLengthMeasurements3D", '{90749843-C25C-4E07-A432-F46201BEE90C}'),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMeshAroundPointParam(DispatchBaseClass):
	'ѕараметры сетки дл€ группы точек по поверхности вокруг точки.'
	CLSID = IID('{2CB26AB2-09B9-4B7F-A776-EF02AB25FB78}')
	coclass_clsid = None

	def GetOffsetPoint(self, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'ѕолучить точку смещени€.'
		return self._ApplyTypes_(4005, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2)), 'GetOffsetPoint', None,X
			, Y, Z)

	def SetOffsetPoint(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg):
		'«адать смещение по точке.'
		return self._oleobj_.InvokeTypes(4006, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1)),X
			, Y, Z)

	_prop_map_get_ = {
		# Method 'AssociationObject' returns object of type 'IModelObject'
		"AssociationObject": (4004, 2, (9, 0), (), "AssociationObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"MeshAngle": (4014, 2, (5, 0), (), "MeshAngle", None),
		"MeshType": (4001, 2, (3, 0), (), "MeshType", None),
		"OffsetU": (4002, 2, (5, 0), (), "OffsetU", None),
		"OffsetV": (4003, 2, (5, 0), (), "OffsetV", None),
		"RadialStep": (4013, 2, (5, 0), (), "RadialStep", None),
		"RayCount": (4012, 2, (3, 0), (), "RayCount", None),
		"Step": (4011, 2, (5, 0), (), "Step", None),
		"Step1": (4007, 2, (5, 0), (), "Step1", None),
		"Step2": (4008, 2, (5, 0), (), "Step2", None),
		"StepU": (4009, 2, (5, 0), (), "StepU", None),
		"StepV": (4010, 2, (5, 0), (), "StepV", None),
	}
	_prop_map_put_ = {
		"AssociationObject": ((4004, LCID, 4, 0),()),
		"MeshAngle": ((4014, LCID, 4, 0),()),
		"MeshType": ((4001, LCID, 4, 0),()),
		"OffsetU": ((4002, LCID, 4, 0),()),
		"OffsetV": ((4003, LCID, 4, 0),()),
		"RadialStep": ((4013, LCID, 4, 0),()),
		"RayCount": ((4012, LCID, 4, 0),()),
		"Step": ((4011, LCID, 4, 0),()),
		"Step1": ((4007, LCID, 4, 0),()),
		"Step2": ((4008, LCID, 4, 0),()),
		"StepU": ((4009, LCID, 4, 0),()),
		"StepV": ((4010, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMeshCopyObjectParam(DispatchBaseClass):
	'ѕараметры копировани€ объектов по сетке.'
	CLSID = IID('{592AB214-A8CF-462E-ACD5-528839113338}')
	coclass_clsid = IID('{FF54BE1B-3B35-4B01-985D-8D696086F7E7}')

	_prop_map_get_ = {
		"Angle": (6, 2, (5, 0), (), "Angle", None),
		"Angle1": (2001, 2, (5, 0), (), "Angle1", None),
		"Angle2": (2005, 2, (5, 0), (), "Angle2", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AttributeCopy": (7, 2, (11, 0), (), "AttributeCopy", None),
		"Count1": (2004, 2, (3, 0), (), "Count1", None),
		"Count2": (2008, 2, (3, 0), (), "Count2", None),
		"DimensionLineScale": (8, 2, (11, 0), (), "DimensionLineScale", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"SaveCentreCopy": (2010, 2, (11, 0), (), "SaveCentreCopy", None),
		"SaveCornersCopy": (2009, 2, (11, 0), (), "SaveCornersCopy", None),
		"Scale": (5, 2, (5, 0), (), "Scale", None),
		"SpecificationObjectCopy": (9, 2, (11, 0), (), "SpecificationObjectCopy", None),
		"Step1": (2002, 2, (5, 0), (), "Step1", None),
		"Step2": (2006, 2, (5, 0), (), "Step2", None),
		"StepFactor1": (2003, 2, (11, 0), (), "StepFactor1", None),
		"StepFactor2": (2007, 2, (11, 0), (), "StepFactor2", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"XNew": (3, 2, (5, 0), (), "XNew", None),
		"XOld": (1, 2, (5, 0), (), "XOld", None),
		"YNew": (4, 2, (5, 0), (), "YNew", None),
		"YOld": (2, 2, (5, 0), (), "YOld", None),
	}
	_prop_map_put_ = {
		"Angle": ((6, LCID, 4, 0),()),
		"Angle1": ((2001, LCID, 4, 0),()),
		"Angle2": ((2005, LCID, 4, 0),()),
		"AttributeCopy": ((7, LCID, 4, 0),()),
		"Count1": ((2004, LCID, 4, 0),()),
		"Count2": ((2008, LCID, 4, 0),()),
		"DimensionLineScale": ((8, LCID, 4, 0),()),
		"SaveCentreCopy": ((2010, LCID, 4, 0),()),
		"SaveCornersCopy": ((2009, LCID, 4, 0),()),
		"Scale": ((5, LCID, 4, 0),()),
		"SpecificationObjectCopy": ((9, LCID, 4, 0),()),
		"Step1": ((2002, LCID, 4, 0),()),
		"Step2": ((2006, LCID, 4, 0),()),
		"StepFactor1": ((2003, LCID, 4, 0),()),
		"StepFactor2": ((2007, LCID, 4, 0),()),
		"XNew": ((3, LCID, 4, 0),()),
		"XOld": ((1, LCID, 4, 0),()),
		"YNew": ((4, LCID, 4, 0),()),
		"YOld": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMeshObject3D(DispatchBaseClass):
	'ѕространсвенный полигональный объект.'
	CLSID = IID('{619A7499-13DA-4C43-AD1B-53ACAA4BA5B4}')
	coclass_clsid = IID('{6774DD56-8666-4B40-B22F-74B43299342D}')

	def InitByObjects(self, Objects=defaultNamedNotOptArg):
		'—оздать по объектам.'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (11, 0), ((12, 1),),Objects
			)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMeshPointsSurface(DispatchBaseClass):
	'ѕоверхность по сети точек.'
	CLSID = IID('{A1D85AB6-C3FD-415B-92DB-4EB4414CA78B}')
	coclass_clsid = IID('{1A73D002-0BD3-4A73-801E-CA6A322CE562}')

	# Result is of type IKompasAPIObject
	def AddPoint(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg, Weight=defaultNamedNotOptArg
			, PointType=defaultNamedNotOptArg, AssociationObject=defaultNamedNotOptArg):
		'ƒобавить точку в создаваемый р€д точек.'
		ret = self._oleobj_.InvokeTypes(10, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1), (5, 1), (3, 1), (9, 1)),X
			, Y, Z, Weight, PointType, AssociationObject
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddPoint', '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')
		return ret

	def AddPointsSeries(self, AddNewRow=defaultNamedNotOptArg, IndexAt=defaultNamedNotOptArg, Points=defaultNamedNotOptArg, Weights=defaultNamedNotOptArg):
		'ƒобавить р€д точек, AddNewRow = TRUE - добавление р€да по V, AddNewRow = FALSE добавление колонки - по U.'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (11, 0), ((11, 1), (3, 1), (12, 1), (12, 1)),AddNewRow
			, IndexAt, Points, Weights)

	# Result is of type IModelObject
	# The method AssociationObject is actually a property, but must be used as a method to correctly pass the arguments
	def AssociationObject(self, IRow=defaultNamedNotOptArg, ICol=defaultNamedNotOptArg):
		'”становить опорный объект дл€ вершины.'
		ret = self._oleobj_.InvokeTypes(22, LCID, 2, (9, 0), ((3, 1), (3, 1)),IRow
			, ICol)
		if ret is not None:
			ret = Dispatch(ret, 'AssociationObject', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def BeginPointsSeries(self, AddNewRow=defaultNamedNotOptArg, IndexAt=defaultNamedNotOptArg):
		'Ќачать добавление нового р€да точек, AddNewRow = TRUE - добавление р€да по V, AddNewRow = FALSE добавление колонки - по U.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), ((11, 1), (3, 1)),AddNewRow
			, IndexAt)

	def ClearPointsSeries(self):
		'ќчистить список р€дов точек.'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (11, 0), (),)

	def DeletePointsSeries(self, DeleteRow=defaultNamedNotOptArg, Index=defaultNamedNotOptArg):
		'”далить р€д точек, DeleteRow = TRUE - удал€етс€ р€д точек по V, DeleteRow = FALSE - удал€етс€ колонка по U.'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (11, 0), ((11, 1), (3, 1)),DeleteRow
			, Index)

	def EndPointsSeries(self):
		'«акрыть кривую.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def GetParams(self, ClosedV=pythoncom.Missing, ClosedU=pythoncom.Missing, DegreeV=pythoncom.Missing, DegreeU=pythoncom.Missing
			, RowsCount=pythoncom.Missing, ColumsCount=pythoncom.Missing, Points=pythoncom.Missing, Weights=pythoncom.Missing):
		'ѕолучить параметры поверхности.'
		return self._ApplyTypes_(2, 1, (11, 0), ((16395, 2), (16395, 2), (16387, 2), (16387, 2), (16387, 2), (16387, 2), (16396, 2), (16396, 2)), 'GetParams', None,ClosedV
			, ClosedU, DegreeV, DegreeU, RowsCount, ColumsCount
			, Points, Weights)

	def GetPoint(self, IRow=defaultNamedNotOptArg, ICol=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing
			, Z=pythoncom.Missing, Weight=pythoncom.Missing):
		'ѕараметры точки.'
		return self._ApplyTypes_(19, 1, (11, 0), ((3, 1), (3, 1), (16389, 2), (16389, 2), (16389, 2), (16389, 2)), 'GetPoint', None,IRow
			, ICol, X, Y, Z, Weight
			)

	def InitParamByFace(self, Face=defaultNamedNotOptArg):
		'—оздать по объекту.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((9, 1),),Face
			)

	# Result is of type IKompasAPIObject
	# The method PointParameters is actually a property, but must be used as a method to correctly pass the arguments
	def PointParameters(self, IRow=defaultNamedNotOptArg, ICol=defaultNamedNotOptArg):
		'»нтерфейс параметров точки поверхности.'
		ret = self._oleobj_.InvokeTypes(18, LCID, 2, (9, 0), ((3, 1), (3, 1)),IRow
			, ICol)
		if ret is not None:
			ret = Dispatch(ret, 'PointParameters', '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')
		return ret

	# The method PointType is actually a property, but must be used as a method to correctly pass the arguments
	def PointType(self, IRow=defaultNamedNotOptArg, ICol=defaultNamedNotOptArg):
		'“ип параметров построени€ точки поверхности.'
		return self._oleobj_.InvokeTypes(17, LCID, 2, (3, 0), ((3, 1), (3, 1)),IRow
			, ICol)

	# The method SetAssociationObject is actually a property, but must be used as a method to correctly pass the arguments
	def SetAssociationObject(self, IRow=defaultNamedNotOptArg, ICol=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		'”становить опорный объект дл€ вершины.'
		return self._oleobj_.InvokeTypes(22, LCID, 4, (24, 0), ((3, 1), (3, 1), (9, 1)),IRow
			, ICol, arg2)

	def SetParams(self, ClosedV=defaultNamedNotOptArg, ClosedU=defaultNamedNotOptArg, DegreeV=defaultNamedNotOptArg, DegreeU=defaultNamedNotOptArg
			, RowsCount=defaultNamedNotOptArg, ColumsCount=defaultNamedNotOptArg, Points=defaultNamedNotOptArg, Weights=defaultNamedNotOptArg):
		'”становить параметры поверхности.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), ((11, 1), (11, 1), (3, 1), (3, 1), (3, 1), (3, 1), (12, 1), (12, 1)),ClosedV
			, ClosedU, DegreeV, DegreeU, RowsCount, ColumsCount
			, Points, Weights)

	def SetPoint(self, IRow=defaultNamedNotOptArg, ICol=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg
			, Z=defaultNamedNotOptArg, Weight=defaultNamedNotOptArg):
		'ѕараметры точки.'
		return self._oleobj_.InvokeTypes(20, LCID, 1, (11, 0), ((3, 1), (3, 1), (5, 1), (5, 1), (5, 1), (5, 1)),IRow
			, ICol, X, Y, Z, Weight
			)

	# The method SetPointType is actually a property, but must be used as a method to correctly pass the arguments
	def SetPointType(self, IRow=defaultNamedNotOptArg, ICol=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		'“ип параметров построени€ точки поверхности.'
		return self._oleobj_.InvokeTypes(17, LCID, 4, (24, 0), ((3, 1), (3, 1), (3, 1)),IRow
			, ICol, arg2)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"BuildingType": (1, 2, (3, 0), (), "BuildingType", None),
		"CheckSelfIntersection": (21, 2, (11, 0), (), "CheckSelfIntersection", None),
		"ClosedU": (5, 2, (11, 0), (), "ClosedU", None),
		"ClosedV": (6, 2, (11, 0), (), "ClosedV", None),
		"ColumnsCount": (16, 2, (3, 0), (), "ColumnsCount", None),
		"DegreeU": (7, 2, (3, 0), (), "DegreeU", None),
		"DegreeV": (8, 2, (3, 0), (), "DegreeV", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"RowsCount": (15, 2, (3, 0), (), "RowsCount", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"BuildingType": ((1, LCID, 4, 0),()),
		"CheckSelfIntersection": ((21, LCID, 4, 0),()),
		"ClosedU": ((5, LCID, 4, 0),()),
		"ClosedV": ((6, LCID, 4, 0),()),
		"DegreeU": ((7, LCID, 4, 0),()),
		"DegreeV": ((8, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMeshPointsSurfaces(DispatchBaseClass):
	' оллекци€ поверхностей по сети точек.'
	CLSID = IID('{46AFC862-E2DA-432B-95A3-7971BFC82CB8}')
	coclass_clsid = IID('{372E58EE-C5AC-48B5-A535-BB490598D931}')

	# Result is of type IMeshPointsSurface
	def Add(self):
		'ƒобавить новый элемент.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{A1D85AB6-C3FD-415B-92DB-4EB4414CA78B}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type IMeshPointsSurface
	def Load(self, FileName=defaultNamedNotOptArg):
		'ѕрочитать из файла.'
		ret = self._oleobj_.InvokeTypes(3, LCID, 1, (9, 0), ((8, 1),),FileName
			)
		if ret is not None:
			ret = Dispatch(ret, 'Load', '{A1D85AB6-C3FD-415B-92DB-4EB4414CA78B}')
		return ret

	# Result is of type IMeshPointsSurface
	# The method MeshPointsSurface is actually a property, but must be used as a method to correctly pass the arguments
	def MeshPointsSurface(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'MeshPointsSurface', '{A1D85AB6-C3FD-415B-92DB-4EB4414CA78B}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMirrorPattern(DispatchBaseClass):
	'»нтерфейс зеркального массива.'
	CLSID = IID('{47C76E89-23C0-4A82-8DFC-F770F9F380C8}')
	coclass_clsid = IID('{26383273-9991-4D0D-908B-2627F225D625}')

	def AddInitialObjects(self, Objects=defaultNamedNotOptArg):
		'ƒобавить объекты в массив копируемых объектов.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), ((12, 1),),Objects
			)

	def Clear(self):
		'ќчистить список исходных объектов массива.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), (),)

	def Destroy(self):
		'–азрушить массив.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), (),)

	# Result is of type IModelObject
	# The method Exemplar is actually a property, but must be used as a method to correctly pass the arguments
	def Exemplar(self, Index1=defaultNamedNotOptArg, Index2=defaultNamedNotOptArg):
		'ѕолучить экземпл€р по индексу (или индексам).'
		ret = self._oleobj_.InvokeTypes(11, LCID, 2, (9, 0), ((3, 1), (3, 1)),Index1
			, Index2)
		if ret is not None:
			ret = Dispatch(ret, 'Exemplar', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def GetExemplarsCounts(self, Count1=pythoncom.Missing, Count2=pythoncom.Missing):
		'ѕолучить количество экземпл€ров.'
		return self._ApplyTypes_(12, 1, (11, 0), ((16387, 2), (16387, 2)), 'GetExemplarsCounts', None,Count1
			, Count2)

	def IsInitialObject(self, Object=defaultNamedNotOptArg):
		'ѕроверка - €вл€етс€ ли объект исходным дл€ массива.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((9, 1),),Object
			)

	def IsSuitableObject(self, Object=defaultNamedNotOptArg):
		'ѕроверка пригодности объекта дл€ операции.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), ((9, 1),),Object
			)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BasePoint' returns object of type 'IModelObject'
		"BasePoint": (10, 2, (9, 0), (), "BasePoint", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"BasePointType": (9, 2, (3, 0), (), "BasePointType", None),
		"GeometryPattern": (8, 2, (11, 0), (), "GeometryPattern", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"InitialObjects": (1, 2, (12, 0), (), "InitialObjects", None),
		"InstanceDeletedIndexes": (2, 2, (12, 0), (), "InstanceDeletedIndexes", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		# Method 'Plane' returns object of type 'IModelObject'
		"Plane": (101, 2, (9, 0), (), "Plane", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"SaveInitialObjects": (102, 2, (11, 0), (), "SaveInitialObjects", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"BasePoint": ((10, LCID, 4, 0),()),
		"BasePointType": ((9, LCID, 4, 0),()),
		"GeometryPattern": ((8, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"InitialObjects": ((1, LCID, 4, 0),()),
		"InstanceDeletedIndexes": ((2, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Plane": ((101, LCID, 4, 0),()),
		"SaveInitialObjects": ((102, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IModelContainer(DispatchBaseClass):
	'»нтерфейс контейнера объектов 3D.'
	CLSID = IID('{2C6E8A0F-EDC8-413C-9304-9278817B915B}')
	coclass_clsid = None

	# Result is of type IModelObject
	def AddObject(self, ObjectType=defaultNamedNotOptArg):
		'—оздает новый элемент 3D модели.'
		ret = self._oleobj_.InvokeTypes(10027, LCID, 1, (9, 0), ((3, 1),),ObjectType
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddObject', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# The method Objects is actually a property, but must be used as a method to correctly pass the arguments
	def Objects(self, ObjType=defaultNamedNotOptArg):
		'ћассив SAFEARRAY объектов, вход€щих в состав данного объекта.'
		return self._ApplyTypes_(10001, 2, (12, 0), ((12, 1),), 'Objects', None,ObjType
			)

	_prop_map_get_ = {
		# Method 'BilletsObsoletes' returns object of type 'IBilletsObsoletes'
		"BilletsObsoletes": (10009, 2, (9, 0), (), "BilletsObsoletes", '{140DE7B8-8291-4220-B7FB-9F3C4FDFB649}'),
		# Method 'BodyRepositions' returns object of type 'IBodyRepositions'
		"BodyRepositions": (10026, 2, (9, 0), (), "BodyRepositions", '{C42BE43C-5DE5-4293-9254-5AA7F3B2EC2B}'),
		# Method 'Booleans' returns object of type 'IBooleans'
		"Booleans": (10019, 2, (9, 0), (), "Booleans", '{1739583B-BFDA-4AD2-BFE3-14302133BB21}'),
		# Method 'Chamfers' returns object of type 'IChamfers'
		"Chamfers": (10014, 2, (9, 0), (), "Chamfers", '{5E232224-2445-430F-9324-2C75BACE1D0C}'),
		# Method 'CollectionsGeometry' returns object of type 'ICollectionsGeometry'
		"CollectionsGeometry": (10011, 2, (9, 0), (), "CollectionsGeometry", '{F1B04DDA-FAAC-4D51-9567-304CFE3EC094}'),
		# Method 'CopiesGeometry' returns object of type 'ICopiesGeometry'
		"CopiesGeometry": (10010, 2, (9, 0), (), "CopiesGeometry", '{6CC5E3B7-B509-4B8E-87D1-0B936010120C}'),
		# Method 'Cuts' returns object of type 'ICuts'
		"Cuts": (10020, 2, (9, 0), (), "Cuts", '{85B81047-11F3-46D3-869D-EFE37A6A8588}'),
		# Method 'Evolutions' returns object of type 'IEvolutions'
		"Evolutions": (10022, 2, (9, 0), (), "Evolutions", '{8D984124-C430-45B3-939A-B5264C5B1388}'),
		# Method 'Extrusions' returns object of type 'IExtrusions'
		"Extrusions": (10003, 2, (9, 0), (), "Extrusions", '{A160C032-CF96-4467-A682-CE2243DF76BD}'),
		# Method 'FeaturePatterns' returns object of type 'IFeaturePatterns'
		"FeaturePatterns": (10005, 2, (9, 0), (), "FeaturePatterns", '{5CD7AC22-D8C2-42C4-96E5-5D64E44046F7}'),
		# Method 'Fillets' returns object of type 'IFillets'
		"Fillets": (10015, 2, (9, 0), (), "Fillets", '{7A0672EF-4C38-4FD7-8D06-DADD256E1E38}'),
		# Method 'FullFillets' returns object of type 'IFullFillets'
		"FullFillets": (10028, 2, (9, 0), (), "FullFillets", '{F36E8FBA-F786-4E65-8782-3F6BC2F9D006}'),
		# Method 'Holes3D' returns object of type 'IHoles3D'
		"Holes3D": (10013, 2, (9, 0), (), "Holes3D", '{A018E8CE-26F6-4DAE-801B-378ED08A6314}'),
		# Method 'Inclines' returns object of type 'IInclines'
		"Inclines": (10016, 2, (9, 0), (), "Inclines", '{37E37D7D-58D1-4469-9B79-2254D2B9E112}'),
		# Method 'Lofts' returns object of type 'ILofts'
		"Lofts": (10021, 2, (9, 0), (), "Lofts", '{AF5F922F-8C32-4949-A29A-BB5EC7A99D00}'),
		# Method 'MacroObjects3D' returns object of type 'IMacroObjects3D'
		"MacroObjects3D": (10025, 2, (9, 0), (), "MacroObjects3D", '{B4C41D1D-02E2-4A05-A493-7D25CEEC797C}'),
		# Method 'MoldCavities' returns object of type 'IMoldCavities'
		"MoldCavities": (10024, 2, (9, 0), (), "MoldCavities", '{EF2EE8A8-BCC8-49BA-8FF5-3BBF627C1432}'),
		# Method 'Points3D' returns object of type 'IPoints3D'
		"Points3D": (10004, 2, (9, 0), (), "Points3D", '{81EBB128-3963-4759-9D4E-2829C3078B0F}'),
		# Method 'Ribs' returns object of type 'IRibs'
		"Ribs": (10017, 2, (9, 0), (), "Ribs", '{70FF934F-D7A2-4D91-AB55-27174E90648B}'),
		# Method 'Rotateds' returns object of type 'IRotateds'
		"Rotateds": (10007, 2, (9, 0), (), "Rotateds", '{A9B14309-92B3-46BA-8841-233293A60310}'),
		# Method 'Scalings3D' returns object of type 'IScalings3D'
		"Scalings3D": (10008, 2, (9, 0), (), "Scalings3D", '{B180FE26-ABEE-4F37-932F-24AAACF227A4}'),
		# Method 'Shells' returns object of type 'IShells'
		"Shells": (10018, 2, (9, 0), (), "Shells", '{0BA80020-AD0B-4442-B4C7-7AC75AA04CAC}'),
		# Method 'Sketchs' returns object of type 'ISketchs'
		"Sketchs": (10002, 2, (9, 0), (), "Sketchs", '{EE562963-395C-4748-9726-FCA9C531B1CA}'),
		# Method 'SurfaceThickenings' returns object of type 'ISurfaceThickenings'
		"SurfaceThickenings": (10006, 2, (9, 0), (), "SurfaceThickenings", '{7A9B6FCC-2156-48C8-BC95-597242EE1B9E}'),
		# Method 'UnionsComponents' returns object of type 'IUnionsComponents'
		"UnionsComponents": (10023, 2, (9, 0), (), "UnionsComponents", '{2A449EF6-1554-4C66-8A98-2734DAB88E97}'),
		# Method 'UserObjects' returns object of type 'IUserObjects3D'
		"UserObjects": (10012, 2, (9, 0), (), "UserObjects", '{1753E6BE-C57C-415E-931D-37EAD991D629}'),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IModelCurve3D(DispatchBaseClass):
	'ќбъект-крива€ 3D'
	CLSID = IID('{EB4AB3A9-8E01-4952-9119-F8D09D9572D5}')
	coclass_clsid = None

	def GetVerticesParams(self):
		'ѕолучить параметры вершин кривой.'
		return self._ApplyTypes_(1504, 1, (12, 0), (), 'GetVerticesParams', None,)

	_prop_map_get_ = {
		"EdgesStyle": (1503, 2, (3, 0), (), "EdgesStyle", None),
		"VertexStyle": (1502, 2, (3, 0), (), "VertexStyle", None),
		"VertexVisible": (1501, 2, (11, 0), (), "VertexVisible", None),
	}
	_prop_map_put_ = {
		"EdgesStyle": ((1503, LCID, 4, 0),()),
		"VertexStyle": ((1502, LCID, 4, 0),()),
		"VertexVisible": ((1501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IModelObject(DispatchBaseClass):
	'3D объект.'
	CLSID = IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	coclass_clsid = IID('{F2C7D9B1-C665-4C44-AEA8-BD2C6938E5A6}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IModelObject1(DispatchBaseClass):
	'3D объект.'
	CLSID = IID('{60DDC74B-8171-4BA6-ABD9-549FBA84E7B0}')
	coclass_clsid = None

	# The method Childrens is actually a property, but must be used as a method to correctly pass the arguments
	def Childrens(self, RelType=defaultNamedNotOptArg):
		'ѕотомки объекта.'
		return self._ApplyTypes_(509, 2, (12, 0), ((3, 1),), 'Childrens', None,RelType
			)

	def IsMyLink(self, RelType=defaultNamedNotOptArg, Primitive=defaultNamedNotOptArg):
		'явл€етс€ ли примитив опорным дл€ объекта.'
		return self._oleobj_.InvokeTypes(511, LCID, 1, (11, 0), ((3, 1), (9, 1)),RelType
			, Primitive)

	# The method Parents is actually a property, but must be used as a method to correctly pass the arguments
	def Parents(self, RelType=defaultNamedNotOptArg):
		'–одители объекта.'
		return self._ApplyTypes_(508, 2, (12, 0), ((3, 1),), 'Parents', None,RelType
			)

	def Reset(self):
		'—бросить заданные параметры.'
		return self._oleobj_.InvokeTypes(516, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"ConnectedWithInitialEmbodiment": (518, 2, (11, 0), (), "ConnectedWithInitialEmbodiment", None),
		"Editable": (515, 2, (3, 0), (), "Editable", None),
		"HiddenEx": (514, 2, (3, 0), (), "HiddenEx", None),
		"IsEditableObject": (519, 2, (11, 0), (), "IsEditableObject", None),
		"IsExternalObject": (520, 2, (11, 0), (), "IsExternalObject", None),
		"LayerNumber": (512, 2, (3, 0), (), "LayerNumber", None),
		"Links": (510, 2, (12, 0), (), "Links", None),
		# Method 'MathObject' returns object of type 'IKompasAPIObject'
		"MathObject": (517, 2, (9, 0), (), "MathObject", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Projected": (513, 2, (3, 0), (), "Projected", None),
	}
	_prop_map_put_ = {
		"ConnectedWithInitialEmbodiment": ((518, LCID, 4, 0),()),
		"Editable": ((515, LCID, 4, 0),()),
		"HiddenEx": ((514, LCID, 4, 0),()),
		"LayerNumber": ((512, LCID, 4, 0),()),
		"Projected": ((513, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IModelObjectNotifyResult(DispatchBaseClass):
	'»нтерфейс результатов редактировани€ 3d объекта.'
	CLSID = IID('{73653933-51B5-49D6-9EF2-6667639283CC}')
	coclass_clsid = None

	_prop_map_get_ = {
		"IsRedoMode": (4005, 2, (11, 0), (), "IsRedoMode", None),
		"IsUndoMode": (4004, 2, (11, 0), (), "IsUndoMode", None),
		"NotifyObjects": (4002, 2, (12, 0), (), "NotifyObjects", None),
		"NotifyType": (4001, 2, (3, 0), (), "NotifyType", None),
		"ProcessType": (4003, 2, (3, 0), (), "ProcessType", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IModelObjects(DispatchBaseClass):
	' оллекци€ 3D объектов.'
	CLSID = IID('{125CB096-639E-479F-98DE-F27FAB23838A}')
	coclass_clsid = IID('{F1603067-E7C1-43C2-9F8F-B83238D66454}')

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMoldCavities(DispatchBaseClass):
	' оллекци€ операций вычитани€ компонентов.'
	CLSID = IID('{EF2EE8A8-BCC8-49BA-8FF5-3BBF627C1432}')
	coclass_clsid = IID('{C334E4DD-61DC-402E-BB85-0DC7C89B9BC2}')

	# Result is of type IMoldCavity
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{C4B6D128-8013-4AF4-B4D5-40E25F2CDBD0}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type IMoldCavity
	# The method MoldCavity is actually a property, but must be used as a method to correctly pass the arguments
	def MoldCavity(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу или по имени.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'MoldCavity', '{C4B6D128-8013-4AF4-B4D5-40E25F2CDBD0}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMoldCavity(DispatchBaseClass):
	'ќперации вычитани€ компонентов.'
	CLSID = IID('{C4B6D128-8013-4AF4-B4D5-40E25F2CDBD0}')
	coclass_clsid = IID('{CFDD8BF4-0D38-49E7-A859-CA3BFFCDB799}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Parts": (1, 2, (12, 0), (), "Parts", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Scale": (2, 2, (5, 0), (), "Scale", None),
		# Method 'ScaleCentre' returns object of type 'IModelObject'
		"ScaleCentre": (3, 2, (9, 0), (), "ScaleCentre", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Parts": ((1, LCID, 4, 0),()),
		"Scale": ((2, LCID, 4, 0),()),
		"ScaleCentre": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMouseEnterLeaveParameters7(DispatchBaseClass):
	'ѕараметры отображени€ точки позвол€ющей определить место применени€ контрола.'
	CLSID = IID('{05B6026A-4B53-4015-A7CB-94298073F86C}')
	coclass_clsid = IID('{B05DF16E-5D90-4931-9197-815A2D1E365D}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Offset": (3, 2, (5, 0), (), "Offset", None),
		"OffsetAngle": (4, 2, (5, 0), (), "OffsetAngle", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Symbol": (5, 2, (3, 0), (), "Symbol", None),
		"SymbolColor": (7, 2, (3, 0), (), "SymbolColor", None),
		"SymbolFont": (6, 2, (8, 0), (), "SymbolFont", None),
		"SymbolScale": (8, 2, (5, 0), (), "SymbolScale", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"X": (1, 2, (5, 0), (), "X", None),
		"Y": (2, 2, (5, 0), (), "Y", None),
	}
	_prop_map_put_ = {
		"Offset": ((3, LCID, 4, 0),()),
		"OffsetAngle": ((4, LCID, 4, 0),()),
		"Symbol": ((5, LCID, 4, 0),()),
		"SymbolColor": ((7, LCID, 4, 0),()),
		"SymbolFont": ((6, LCID, 4, 0),()),
		"SymbolScale": ((8, LCID, 4, 0),()),
		"X": ((1, LCID, 4, 0),()),
		"Y": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMultiTextLeader(DispatchBaseClass):
	'¬ыносна€ надпись к многослойным конструкци€м.'
	CLSID = IID('{1BFC5D3F-1483-4569-B4B5-7A12163A4655}')
	coclass_clsid = IID('{123D60BB-0331-4726-9707-777615E9D354}')

	def AddBranch(self, Index=defaultNamedNotOptArg, Points=defaultNamedNotOptArg):
		'ƒобавить ответвление.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), ((3, 1), (12, 1)),Index
			, Points)

	def AddBranchByPoint(self, Index=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg):
		'ƒобавить пр€молинейное ответвление.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), ((3, 1), (5, 1), (5, 1)),Index
			, X, Y)

	# The method BranchPoints is actually a property, but must be used as a method to correctly pass the arguments
	def BranchPoints(self, Index=defaultNamedNotOptArg):
		'ћассив SAFEARRAY координат точек ответвлени€.'
		return self._ApplyTypes_(3, 2, (12, 0), ((3, 1),), 'BranchPoints', None,Index
			)

	# The method BranchPointsCount is actually a property, but must be used as a method to correctly pass the arguments
	def BranchPointsCount(self, Index=defaultNamedNotOptArg):
		'„исло точек в ответвлении.'
		return self._oleobj_.InvokeTypes(4, LCID, 2, (3, 0), ((3, 1),),Index
			)

	# The method BranchX is actually a property, but must be used as a method to correctly pass the arguments
	def BranchX(self, Index=defaultNamedNotOptArg):
		' оордината конечной точки ответвлени€ по X.'
		return self._oleobj_.InvokeTypes(5, LCID, 2, (5, 0), ((3, 1),),Index
			)

	# The method BranchY is actually a property, but must be used as a method to correctly pass the arguments
	def BranchY(self, Index=defaultNamedNotOptArg):
		' оордината конечной точки ответвлени€ по Y.'
		return self._oleobj_.InvokeTypes(6, LCID, 2, (5, 0), ((3, 1),),Index
			)

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def DeleteBranch(self, Index=defaultNamedNotOptArg):
		'”далить ответвление.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), ((3, 1),),Index
			)

	# The method SetBranchPoints is actually a property, but must be used as a method to correctly pass the arguments
	def SetBranchPoints(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ћассив SAFEARRAY координат точек ответвлени€.'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((3, 1), (12, 1)),Index
			, arg1)

	# The method SetBranchX is actually a property, but must be used as a method to correctly pass the arguments
	def SetBranchX(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		' оордината конечной точки ответвлени€ по X.'
		return self._oleobj_.InvokeTypes(5, LCID, 4, (24, 0), ((3, 1), (5, 1)),Index
			, arg1)

	# The method SetBranchY is actually a property, but must be used as a method to correctly pass the arguments
	def SetBranchY(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		' оордината конечной точки ответвлени€ по Y.'
		return self._oleobj_.InvokeTypes(6, LCID, 4, (24, 0), ((3, 1), (5, 1)),Index
			, arg1)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Align": (15, 2, (11, 0), (), "Align", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ArrowType": (1, 2, (3, 0), (), "ArrowType", None),
		"BranchCount": (2, 2, (3, 0), (), "BranchCount", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"Form": (14, 2, (11, 0), (), "Form", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"ShelfDirection": (12, 2, (3, 0), (), "ShelfDirection", None),
		"ShelfX": (10, 2, (5, 0), (), "ShelfX", None),
		"ShelfY": (11, 2, (5, 0), (), "ShelfY", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		# Method 'Text' returns object of type 'IText'
		"Text": (16, 2, (9, 0), (), "Text", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		"TextDirection": (13, 2, (11, 0), (), "TextDirection", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Align": ((15, LCID, 4, 0),()),
		"ArrowType": ((1, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"Form": ((14, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"ShelfDirection": ((12, LCID, 4, 0),()),
		"ShelfX": ((10, LCID, 4, 0),()),
		"ShelfY": ((11, LCID, 4, 0),()),
		"TextDirection": ((13, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMultiTextLeaders(DispatchBaseClass):
	' оллекци€ выносных надписей к многослойным конструкци€м.'
	CLSID = IID('{233B2298-7A45-4CE1-AEF2-30B063FDB63C}')
	coclass_clsid = IID('{AF30B851-0AE8-4F62-B7DB-1DF52D9316F2}')

	# Result is of type IMultiTextLeader
	def Add(self):
		'ƒобавить выносную надпись в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{1BFC5D3F-1483-4569-B4B5-7A12163A4655}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	# Result is of type IMultiTextLeader
	# The method MultiTextLeader is actually a property, but must be used as a method to correctly pass the arguments
	def MultiTextLeader(self, Index=defaultNamedNotOptArg):
		'ѕолучить выносную надпись по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'MultiTextLeader', '{1BFC5D3F-1483-4569-B4B5-7A12163A4655}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IMultiThicknessGroupsManager(DispatchBaseClass):
	'ћенеджер разнотолщинных групп.'
	CLSID = IID('{4FB26621-6A86-43FF-BB61-AF1B04AFD22B}')
	coclass_clsid = None

	def AddMultiThicknessGroup(self, Type=defaultNamedNotOptArg, Objects=defaultNamedNotOptArg, Thickness=defaultNamedNotOptArg):
		'ƒобавить группу объектов с заданной толщиной.'
		return self._oleobj_.InvokeTypes(7002, LCID, 1, (11, 0), ((3, 1), (12, 1), (5, 1)),Type
			, Objects, Thickness)

	def ClearMultiThicknessGroups(self):
		'”далить все группы толщин.'
		return self._oleobj_.InvokeTypes(7009, LCID, 1, (11, 0), (),)

	def DeleteMultiThicknessGroup(self, Type=defaultNamedNotOptArg, Index=defaultNamedNotOptArg):
		'”далить группу объектов с заданной толщиной.'
		return self._oleobj_.InvokeTypes(7006, LCID, 1, (11, 0), ((3, 1), (3, 1)),Type
			, Index)

	def DestroyMultiThicknessGroup(self, Type=defaultNamedNotOptArg, Index=defaultNamedNotOptArg):
		'–азрушить группу объектов с заданной толщиной.'
		return self._oleobj_.InvokeTypes(7007, LCID, 1, (11, 0), ((3, 1), (3, 1)),Type
			, Index)

	def ExcludeMultiThicknessGroupObjects(self, Objects=defaultNamedNotOptArg):
		'»сключить объекты из групп.'
		return self._oleobj_.InvokeTypes(7008, LCID, 1, (11, 0), ((12, 1),),Objects
			)

	# The method MultiThicknessGroupsCount is actually a property, but must be used as a method to correctly pass the arguments
	def MultiThicknessGroupsCount(self, Type=defaultNamedNotOptArg):
		' оличество групп параметров разных толщин.'
		return self._oleobj_.InvokeTypes(7003, LCID, 2, (3, 0), ((3, 1),),Type
			)

	# The method MultiThicknessGroupsObjects is actually a property, but must be used as a method to correctly pass the arguments
	def MultiThicknessGroupsObjects(self, Type=defaultNamedNotOptArg, Index=defaultNamedNotOptArg):
		'ќбъекты в группе.'
		return self._ApplyTypes_(7004, 2, (12, 0), ((3, 1), (3, 1)), 'MultiThicknessGroupsObjects', None,Type
			, Index)

	# The method MultiThicknessGroupsThickness is actually a property, but must be used as a method to correctly pass the arguments
	def MultiThicknessGroupsThickness(self, Type=defaultNamedNotOptArg, Index=defaultNamedNotOptArg):
		'“олщина заданна€ дл€ группы.'
		return self._oleobj_.InvokeTypes(7005, LCID, 2, (5, 0), ((3, 1), (3, 1)),Type
			, Index)

	# The method SetMultiThicknessGroupsObjects is actually a property, but must be used as a method to correctly pass the arguments
	def SetMultiThicknessGroupsObjects(self, Type=defaultNamedNotOptArg, Index=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		'ќбъекты в группе.'
		return self._oleobj_.InvokeTypes(7004, LCID, 4, (24, 0), ((3, 1), (3, 1), (12, 1)),Type
			, Index, arg2)

	# The method SetMultiThicknessGroupsThickness is actually a property, but must be used as a method to correctly pass the arguments
	def SetMultiThicknessGroupsThickness(self, Type=defaultNamedNotOptArg, Index=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		'“олщина заданна€ дл€ группы.'
		return self._oleobj_.InvokeTypes(7005, LCID, 4, (24, 0), ((3, 1), (3, 1), (5, 1)),Type
			, Index, arg2)

	_prop_map_get_ = {
		"MultiThick": (7001, 2, (11, 0), (), "MultiThick", None),
	}
	_prop_map_put_ = {
		"MultiThick": ((7001, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMultiline(DispatchBaseClass):
	'ћультилини€'
	CLSID = IID('{F6CCB098-5710-44E3-8198-8FAFD56C7A6F}')
	coclass_clsid = IID('{44A427DC-4604-43CA-9AF8-026C494CEC57}')

	def AddLine(self, Offset=defaultNamedNotOptArg, Style=defaultNamedNotOptArg):
		'ƒобавить линию.'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (11, 0), ((5, 1), (3, 1)),Offset
			, Style)

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def DeleteLine(self, LineIndex=defaultNamedNotOptArg):
		'”далить линию.'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (11, 0), ((3, 1),),LineIndex
			)

	# The method EndLimiter is actually a property, but must be used as a method to correctly pass the arguments
	def EndLimiter(self, First=defaultNamedNotOptArg):
		'“ипы ограничений на концах мультилинии.'
		return self._oleobj_.InvokeTypes(9, LCID, 2, (3, 0), ((11, 1),),First
			)

	# The method EndParameter is actually a property, but must be used as a method to correctly pass the arguments
	def EndParameter(self, First=defaultNamedNotOptArg):
		'ѕараметр законцовки в %(0-100).'
		return self._oleobj_.InvokeTypes(10, LCID, 2, (5, 0), ((11, 1),),First
			)

	# The method EndStyle is actually a property, but must be used as a method to correctly pass the arguments
	def EndStyle(self, First=defaultNamedNotOptArg):
		'Cтиль линии кривой в законцовке.'
		return self._oleobj_.InvokeTypes(11, LCID, 2, (3, 0), ((11, 1),),First
			)

	def FindLine(self, Offset=defaultNamedNotOptArg):
		'Ќайти индекс линии по смещению.'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (3, 0), ((5, 1),),Offset
			)

	# The method LineOffset is actually a property, but must be used as a method to correctly pass the arguments
	def LineOffset(self, LineIndex=defaultNamedNotOptArg):
		'—мещение линии.'
		return self._oleobj_.InvokeTypes(15, LCID, 2, (5, 0), ((3, 1),),LineIndex
			)

	# The method LineStyle is actually a property, but must be used as a method to correctly pass the arguments
	def LineStyle(self, LineIndex=defaultNamedNotOptArg):
		'Cтиль линии.'
		return self._oleobj_.InvokeTypes(16, LCID, 2, (3, 0), ((3, 1),),LineIndex
			)

	# The method SetEndLimiter is actually a property, but must be used as a method to correctly pass the arguments
	def SetEndLimiter(self, First=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'“ипы ограничений на концах мультилинии.'
		return self._oleobj_.InvokeTypes(9, LCID, 4, (24, 0), ((11, 1), (3, 1)),First
			, arg1)

	# The method SetEndParameter is actually a property, but must be used as a method to correctly pass the arguments
	def SetEndParameter(self, First=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ѕараметр законцовки в %(0-100).'
		return self._oleobj_.InvokeTypes(10, LCID, 4, (24, 0), ((11, 1), (5, 1)),First
			, arg1)

	# The method SetEndStyle is actually a property, but must be used as a method to correctly pass the arguments
	def SetEndStyle(self, First=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'Cтиль линии кривой в законцовке.'
		return self._oleobj_.InvokeTypes(11, LCID, 4, (24, 0), ((11, 1), (3, 1)),First
			, arg1)

	# The method SetLineOffset is actually a property, but must be used as a method to correctly pass the arguments
	def SetLineOffset(self, LineIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'—мещение линии.'
		return self._oleobj_.InvokeTypes(15, LCID, 4, (24, 0), ((3, 1), (5, 1)),LineIndex
			, arg1)

	# The method SetLineStyle is actually a property, but must be used as a method to correctly pass the arguments
	def SetLineStyle(self, LineIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'Cтиль линии.'
		return self._oleobj_.InvokeTypes(16, LCID, 4, (24, 0), ((3, 1), (3, 1)),LineIndex
			, arg1)

	# The method SetTrackingType is actually a property, but must be used as a method to correctly pass the arguments
	def SetTrackingType(self, VertexIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'“ип обхода вершины.'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((3, 1), (3, 1)),VertexIndex
			, arg1)

	# The method SetVertexDirection is actually a property, but must be used as a method to correctly pass the arguments
	def SetVertexDirection(self, VertexIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'Ќапрвление дуги в вершине true  - по часовой стрелке; false - против часовой стрелки.'
		return self._oleobj_.InvokeTypes(5, LCID, 4, (24, 0), ((3, 1), (11, 1)),VertexIndex
			, arg1)

	# The method SetVertexLimiter is actually a property, but must be used as a method to correctly pass the arguments
	def SetVertexLimiter(self, VertexIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'“ипы ограничений в вершинах мультилинии.'
		return self._oleobj_.InvokeTypes(4, LCID, 4, (24, 0), ((3, 1), (3, 1)),VertexIndex
			, arg1)

	# The method SetVertexRadius is actually a property, but must be used as a method to correctly pass the arguments
	def SetVertexRadius(self, VertexIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'–адиус дуги в вершине.'
		return self._oleobj_.InvokeTypes(6, LCID, 4, (24, 0), ((3, 1), (5, 1)),VertexIndex
			, arg1)

	# The method SetVertexStyle is actually a property, but must be used as a method to correctly pass the arguments
	def SetVertexStyle(self, VertexIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'Cтиль линии кривой в вершине.'
		return self._oleobj_.InvokeTypes(7, LCID, 4, (24, 0), ((3, 1), (3, 1)),VertexIndex
			, arg1)

	# The method TrackingType is actually a property, but must be used as a method to correctly pass the arguments
	def TrackingType(self, VertexIndex=defaultNamedNotOptArg):
		'“ип обхода вершины.'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (3, 0), ((3, 1),),VertexIndex
			)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	# The method VertexDirection is actually a property, but must be used as a method to correctly pass the arguments
	def VertexDirection(self, VertexIndex=defaultNamedNotOptArg):
		'Ќапрвление дуги в вершине true  - по часовой стрелке; false - против часовой стрелки.'
		return self._oleobj_.InvokeTypes(5, LCID, 2, (11, 0), ((3, 1),),VertexIndex
			)

	# The method VertexLimiter is actually a property, but must be used as a method to correctly pass the arguments
	def VertexLimiter(self, VertexIndex=defaultNamedNotOptArg):
		'“ипы ограничений в вершинах мультилинии.'
		return self._oleobj_.InvokeTypes(4, LCID, 2, (3, 0), ((3, 1),),VertexIndex
			)

	# The method VertexRadius is actually a property, but must be used as a method to correctly pass the arguments
	def VertexRadius(self, VertexIndex=defaultNamedNotOptArg):
		'–адиус дуги в вершине.'
		return self._oleobj_.InvokeTypes(6, LCID, 2, (5, 0), ((3, 1),),VertexIndex
			)

	# The method VertexStyle is actually a property, but must be used as a method to correctly pass the arguments
	def VertexStyle(self, VertexIndex=defaultNamedNotOptArg):
		'Cтиль линии кривой в вершине.'
		return self._oleobj_.InvokeTypes(7, LCID, 2, (3, 0), ((3, 1),),VertexIndex
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BaseContour' returns object of type 'IContour'
		"BaseContour": (2, 2, (9, 0), (), "BaseContour", '{E79F5A53-F456-4996-B620-16B725F134FB}'),
		"Closed": (1, 2, (11, 0), (), "Closed", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		"LineCount": (14, 2, (3, 0), (), "LineCount", None),
		"LineOffsets": (18, 2, (12, 0), (), "LineOffsets", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"VertexCount": (8, 2, (3, 0), (), "VertexCount", None),
	}
	_prop_map_put_ = {
		"Closed": ((1, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IMultilines(DispatchBaseClass):
	' оллекци€ мультилиний.'
	CLSID = IID('{968D7B84-2BC1-4354-AAFE-73192E405546}')
	coclass_clsid = IID('{20023299-3104-4AF3-AC55-6D2B368896BB}')

	# Result is of type IMultiline
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{F6CCB098-5710-44E3-8198-8FAFD56C7A6F}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	# Result is of type IMultiline
	# The method Multiline is actually a property, but must be used as a method to correctly pass the arguments
	def Multiline(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Multiline', '{F6CCB098-5710-44E3-8198-8FAFD56C7A6F}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class INewDocument3DSettings(DispatchBaseClass):
	'Ќастройки новых 3D документов.'
	CLSID = IID('{16777C2B-829D-4405-B5C7-71EAFCA17BFA}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'ColorParam' returns object of type 'IColorParam7'
		"ColorParam": (101, 2, (9, 0), (), "ColorParam", '{BE6A80EE-38FE-4432-8331-BF864830761C}'),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class INewPartDocumentSettings(DispatchBaseClass):
	'Ќастройки новых документов - деталей.'
	CLSID = IID('{7F3EEBF4-9277-4603-AD0A-C8DE1624F444}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Density": (2, 2, (5, 0), (), "Density", None),
		# Method 'HatchParam' returns object of type 'IHatchParam'
		"HatchParam": (4, 2, (9, 0), (), "HatchParam", '{437D6587-7649-4A0C-80BB-7A6E89661839}'),
		"Material": (1, 2, (8, 0), (), "Material", None),
		"MaterialLocation": (3, 2, (8, 0), (), "MaterialLocation", None),
	}
	_prop_map_put_ = {
		"Density": ((2, LCID, 4, 0),()),
		"Material": ((1, LCID, 4, 0),()),
		"MaterialLocation": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class INurbs(DispatchBaseClass):
	'NURBS-крива€.'
	CLSID = IID('{EE1AB9F4-B127-4303-A30D-C3509F6D10CD}')
	coclass_clsid = IID('{A71C349D-BAFC-498C-AC18-B372CB2FD4B1}')

	def AddPoint(self, Index=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Weight=defaultNamedNotOptArg):
		'ƒобавить точку.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), ((3, 1), (5, 1), (5, 1), (5, 1)),Index
			, X, Y, Weight)

	def Clear(self):
		'”далить все точки.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), (),)

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def DeletePoint(self, Index=defaultNamedNotOptArg):
		'”далить точку.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), ((3, 1),),Index
			)

	def GetNurbsParams(self, Points=pythoncom.Missing, Weight=pythoncom.Missing, Knots=pythoncom.Missing):
		'ѕолучить параметры NURBS-кривой в виде массивов SAFEARRAY | VT_R8.'
		return self._ApplyTypes_(6, 1, (11, 0), ((16396, 2), (16396, 2), (16396, 2)), 'GetNurbsParams', None,Points
			, Weight, Knots)

	def GetPoint(self, Index=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing, Weight=pythoncom.Missing):
		'ѕолучить параметры точки.'
		return self._ApplyTypes_(8, 1, (11, 0), ((3, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetPoint', None,Index
			, X, Y, Weight)

	def ReadFromFile(self, FileName=defaultNamedNotOptArg):
		'ѕрочитать файл с данными.'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (11, 0), ((8, 1),),FileName
			)

	def SetNurbsParams(self, Points=defaultNamedNotOptArg, Weight=defaultNamedNotOptArg, Knots=defaultNamedNotOptArg, Degree=defaultNamedNotOptArg
			, Closed=defaultNamedNotOptArg):
		'”становить параметры NURBS-кривой в виде массивов SAFEARRAY | VT_R8.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), ((12, 1), (12, 1), (12, 1), (3, 1), (11, 1)),Points
			, Weight, Knots, Degree, Closed)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	def WriteToFile(self, FileName=defaultNamedNotOptArg):
		'«аписать файл с данными.'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (11, 0), ((8, 1),),FileName
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Closed": (1, 2, (11, 0), (), "Closed", None),
		"Degree": (2, 2, (3, 0), (), "Degree", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Periodic": (3, 2, (11, 0), (), "Periodic", None),
		"PointsCount": (4, 2, (3, 0), (), "PointsCount", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Style": (11, 2, (3, 0), (), "Style", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Closed": ((1, LCID, 4, 0),()),
		"Degree": ((2, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"Style": ((11, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class INurbsByPoints(DispatchBaseClass):
	'NURBS-крива€ по точкам.'
	CLSID = IID('{7E553465-7C0D-4E35-B630-D7A54CD4FC2F}')
	coclass_clsid = None

	def AddPoint(self, Index=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Weight=defaultNamedNotOptArg):
		'ƒобавить точку.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), ((3, 1), (5, 1), (5, 1), (5, 1)),Index
			, X, Y, Weight)

	def AddPointByParam(self, Index=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, ConstraintsType=defaultNamedNotOptArg
			, DerivativeLenght=defaultNamedNotOptArg, DerivativeAngle=defaultNamedNotOptArg, Curvature=defaultNamedNotOptArg):
		'ƒобавить новую точку с параметрами.'
		return self._oleobj_.InvokeTypes(102, LCID, 1, (11, 0), ((3, 1), (5, 1), (5, 1), (3, 1), (16389, 1), (16389, 1), (16389, 1)),Index
			, X, Y, ConstraintsType, DerivativeLenght, DerivativeAngle
			, Curvature)

	def Clear(self):
		'”далить все точки.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), (),)

	# The method CurvatureInPoint is actually a property, but must be used as a method to correctly pass the arguments
	def CurvatureInPoint(self, PointIndex=defaultNamedNotOptArg):
		'¬еличина кривизны в указанной точке.'
		return self._oleobj_.InvokeTypes(107, LCID, 2, (5, 0), ((3, 1),),PointIndex
			)

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def DeletePoint(self, Index=defaultNamedNotOptArg):
		'”далить точку.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), ((3, 1),),Index
			)

	# The method DerivativeAngleInPoint is actually a property, but must be used as a method to correctly pass the arguments
	def DerivativeAngleInPoint(self, PointIndex=defaultNamedNotOptArg):
		'”гол вектора производной в указанной точке.'
		return self._oleobj_.InvokeTypes(106, LCID, 2, (5, 0), ((3, 1),),PointIndex
			)

	# The method DerivativeLenghtInPoint is actually a property, but must be used as a method to correctly pass the arguments
	def DerivativeLenghtInPoint(self, PointIndex=defaultNamedNotOptArg):
		'ƒлина вектора производной в указанной точке.'
		return self._oleobj_.InvokeTypes(105, LCID, 2, (5, 0), ((3, 1),),PointIndex
			)

	def GetNurbsParams(self, Points=pythoncom.Missing, Weight=pythoncom.Missing, Knots=pythoncom.Missing):
		'ѕолучить параметры NURBS-кривой в виде массивов SAFEARRAY | VT_R8.'
		return self._ApplyTypes_(6, 1, (11, 0), ((16396, 2), (16396, 2), (16396, 2)), 'GetNurbsParams', None,Points
			, Weight, Knots)

	def GetPoint(self, Index=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing, Weight=pythoncom.Missing):
		'ѕолучить параметры точки.'
		return self._ApplyTypes_(8, 1, (11, 0), ((3, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetPoint', None,Index
			, X, Y, Weight)

	def GetPointParam(self, Index=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing, ConstraintsType=pythoncom.Missing
			, DerivativeLenght=pythoncom.Missing, DerivativeAngle=pythoncom.Missing, Curvature=pythoncom.Missing):
		'ѕолучить параметры точек сплайна.'
		return self._ApplyTypes_(103, 1, (11, 0), ((3, 1), (16389, 2), (16389, 2), (16387, 2), (16389, 2), (16389, 2), (16389, 2)), 'GetPointParam', None,Index
			, X, Y, ConstraintsType, DerivativeLenght, DerivativeAngle
			, Curvature)

	# The method PointConstraints is actually a property, but must be used as a method to correctly pass the arguments
	def PointConstraints(self, PointIndex=defaultNamedNotOptArg):
		'¬ариант управлени€ точкой сплайна.'
		return self._oleobj_.InvokeTypes(104, LCID, 2, (3, 0), ((3, 1),),PointIndex
			)

	def ReadFromFile(self, FileName=defaultNamedNotOptArg):
		'ѕрочитать файл с данными.'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (11, 0), ((8, 1),),FileName
			)

	# The method SetCurvatureInPoint is actually a property, but must be used as a method to correctly pass the arguments
	def SetCurvatureInPoint(self, PointIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'¬еличина кривизны в указанной точке.'
		return self._oleobj_.InvokeTypes(107, LCID, 4, (24, 0), ((3, 1), (5, 1)),PointIndex
			, arg1)

	# The method SetDerivativeAngleInPoint is actually a property, but must be used as a method to correctly pass the arguments
	def SetDerivativeAngleInPoint(self, PointIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'”гол вектора производной в указанной точке.'
		return self._oleobj_.InvokeTypes(106, LCID, 4, (24, 0), ((3, 1), (5, 1)),PointIndex
			, arg1)

	# The method SetDerivativeLenghtInPoint is actually a property, but must be used as a method to correctly pass the arguments
	def SetDerivativeLenghtInPoint(self, PointIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ƒлина вектора производной в указанной точке.'
		return self._oleobj_.InvokeTypes(105, LCID, 4, (24, 0), ((3, 1), (5, 1)),PointIndex
			, arg1)

	def SetNurbsParams(self, Points=defaultNamedNotOptArg, Weight=defaultNamedNotOptArg, Knots=defaultNamedNotOptArg, Degree=defaultNamedNotOptArg
			, Closed=defaultNamedNotOptArg):
		'”становить параметры NURBS-кривой в виде массивов SAFEARRAY | VT_R8.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), ((12, 1), (12, 1), (12, 1), (3, 1), (11, 1)),Points
			, Weight, Knots, Degree, Closed)

	# The method SetPointConstraints is actually a property, but must be used as a method to correctly pass the arguments
	def SetPointConstraints(self, PointIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'¬ариант управлени€ точкой сплайна.'
		return self._oleobj_.InvokeTypes(104, LCID, 4, (24, 0), ((3, 1), (3, 1)),PointIndex
			, arg1)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	def WriteToFile(self, FileName=defaultNamedNotOptArg):
		'«аписать файл с данными.'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (11, 0), ((8, 1),),FileName
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Closed": (1, 2, (11, 0), (), "Closed", None),
		"Degree": (2, 2, (3, 0), (), "Degree", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Periodic": (3, 2, (11, 0), (), "Periodic", None),
		"PointsBuildingType": (101, 2, (3, 0), (), "PointsBuildingType", None),
		"PointsCount": (4, 2, (3, 0), (), "PointsCount", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Style": (11, 2, (3, 0), (), "Style", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Closed": ((1, LCID, 4, 0),()),
		"Degree": ((2, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"PointsBuildingType": ((101, LCID, 4, 0),()),
		"Style": ((11, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class INurbsSurface(DispatchBaseClass):
	'»нтерфейс NURBS-поверхности.'
	CLSID = IID('{5DAFC690-B3A7-4771-8E98-F83B5BF0D454}')
	coclass_clsid = IID('{D2D5BC88-7991-4245-9968-6222F3993F45}')

	def AddBoundary(self, UV=defaultNamedNotOptArg, Closed=defaultNamedNotOptArg, Degree=defaultNamedNotOptArg, Points=defaultNamedNotOptArg
			, Weights=defaultNamedNotOptArg, Knots=defaultNamedNotOptArg, TMin=defaultNamedNotOptArg, TMax=defaultNamedNotOptArg):
		'ƒобавить границу дл€ NURBS-повехности.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), ((11, 1), (11, 1), (3, 1), (12, 1), (12, 1), (12, 1), (5, 1), (5, 1)),UV
			, Closed, Degree, Points, Weights, Knots
			, TMin, TMax)

	def DeleteBoundary(self, BoundaryIndex=defaultNamedNotOptArg):
		'”далить границу.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), ((3, 1),),BoundaryIndex
			)

	def GetBoundary(self, UV=defaultNamedNotOptArg, Closed=defaultNamedNotOptArg, BoundaryIndex=defaultNamedNotOptArg, Degree=pythoncom.Missing
			, Points=pythoncom.Missing, Weights=pythoncom.Missing, Knots=pythoncom.Missing, TMin=pythoncom.Missing, TMax=pythoncom.Missing):
		'ѕолучить параметры NURBS-представлени€ границы.'
		return self._ApplyTypes_(8, 1, (11, 0), ((11, 1), (11, 1), (3, 1), (16387, 2), (16396, 2), (16396, 2), (16396, 2), (16389, 2), (16389, 2)), 'GetBoundary', None,UV
			, Closed, BoundaryIndex, Degree, Points, Weights
			, Knots, TMin, TMax)

	def GetNurbsParams(self, ClosedV=defaultNamedNotOptArg, ClosedU=defaultNamedNotOptArg, DegreeV=pythoncom.Missing, DegreeU=pythoncom.Missing
			, NPV=pythoncom.Missing, NPU=pythoncom.Missing, Points=pythoncom.Missing, Weights=pythoncom.Missing, KnotsV=pythoncom.Missing
			, KnotsU=pythoncom.Missing):
		'ѕолучить параметры NURBS-поверхности.'
		return self._ApplyTypes_(1, 1, (11, 0), ((11, 1), (11, 1), (16387, 2), (16387, 2), (16387, 2), (16387, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetNurbsParams', None,ClosedV
			, ClosedU, DegreeV, DegreeU, NPV, NPU
			, Points, Weights, KnotsV, KnotsU)

	def InitParamByFace(self, Face=defaultNamedNotOptArg):
		'—оздать по объекту.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), ((9, 1),),Face
			)

	def SetNurbsParams(self, ClosedV=defaultNamedNotOptArg, ClosedU=defaultNamedNotOptArg, DegreeV=defaultNamedNotOptArg, DegreeU=defaultNamedNotOptArg
			, NPV=defaultNamedNotOptArg, NPU=defaultNamedNotOptArg, Points=defaultNamedNotOptArg, Weights=defaultNamedNotOptArg, KnotsV=defaultNamedNotOptArg
			, KnotsU=defaultNamedNotOptArg):
		'”становить параметры NURBS-поверхности.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), ((11, 1), (11, 1), (3, 1), (3, 1), (3, 1), (3, 1), (12, 1), (12, 1), (12, 1), (12, 1)),ClosedV
			, ClosedU, DegreeV, DegreeU, NPV, NPU
			, Points, Weights, KnotsV, KnotsU)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"BoundaryCount": (6, 2, (3, 0), (), "BoundaryCount", None),
		"ClosedU": (4, 2, (11, 0), (), "ClosedU", None),
		"ClosedV": (5, 2, (11, 0), (), "ClosedV", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"ClosedU": ((4, LCID, 4, 0),()),
		"ClosedV": ((5, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class INurbsSurfaceByCurvesMesh(DispatchBaseClass):
	'—плайнова€ поверхность по сетке кривых.'
	CLSID = IID('{D06FC62C-A572-4E6B-9C85-0A7D0F971079}')
	coclass_clsid = IID('{53212E12-F293-4574-BB38-62967871A216}')

	# Result is of type IModelObject
	# The method ConnectSurface is actually a property, but must be used as a method to correctly pass the arguments
	def ConnectSurface(self, Index=defaultNamedNotOptArg):
		'ѕоверхность сопр€жени€.'
		ret = self._oleobj_.InvokeTypes(6, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'ConnectSurface', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# The method ConnectType is actually a property, but must be used as a method to correctly pass the arguments
	def ConnectType(self, Index=defaultNamedNotOptArg):
		'”словие сопр€жени€.'
		return self._oleobj_.InvokeTypes(7, LCID, 2, (3, 0), ((3, 1),),Index
			)

	# The method SetConnectSurface is actually a property, but must be used as a method to correctly pass the arguments
	def SetConnectSurface(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ѕоверхность сопр€жени€.'
		return self._oleobj_.InvokeTypes(6, LCID, 4, (24, 0), ((3, 1), (9, 1)),Index
			, arg1)

	# The method SetConnectType is actually a property, but must be used as a method to correctly pass the arguments
	def SetConnectType(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'”словие сопр€жени€.'
		return self._oleobj_.InvokeTypes(7, LCID, 4, (24, 0), ((3, 1), (3, 1)),Index
			, arg1)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"CheckSelfIntersection": (3, 2, (11, 0), (), "CheckSelfIntersection", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"UClosed": (4, 2, (11, 0), (), "UClosed", None),
		"UCurves": (1, 2, (12, 0), (), "UCurves", None),
		"VClosed": (5, 2, (11, 0), (), "VClosed", None),
		"VCurves": (2, 2, (12, 0), (), "VCurves", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"CheckSelfIntersection": ((3, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"UClosed": ((4, LCID, 4, 0),()),
		"UCurves": ((1, LCID, 4, 0),()),
		"VClosed": ((5, LCID, 4, 0),()),
		"VCurves": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class INurbsSurfaces(DispatchBaseClass):
	' оллекци€ NURBS-поверхностей.'
	CLSID = IID('{DB184867-6207-4FB7-9B3F-882BEAA16B4D}')
	coclass_clsid = IID('{FDCF85BA-4BB2-4A83-AF0D-73D967485BED}')

	# Result is of type INurbsSurface
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{5DAFC690-B3A7-4771-8E98-F83B5BF0D454}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type INurbsSurface
	# The method NurbsSurface is actually a property, but must be used as a method to correctly pass the arguments
	def NurbsSurface(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'NurbsSurface', '{5DAFC690-B3A7-4771-8E98-F83B5BF0D454}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class INurbsSurfacesByCurvesMeshs(DispatchBaseClass):
	' оллекци€ сплайновых поверхностей по сетке кривых.'
	CLSID = IID('{9CEEC1DF-A155-4702-AD18-0D851A4B85A8}')
	coclass_clsid = IID('{0BB4E6A3-0BA0-4839-9F06-53179930918E}')

	# Result is of type INurbsSurfaceByCurvesMesh
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{D06FC62C-A572-4E6B-9C85-0A7D0F971079}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type INurbsSurfaceByCurvesMesh
	# The method NurbsSurfaceByCurvesMesh is actually a property, but must be used as a method to correctly pass the arguments
	def NurbsSurfaceByCurvesMesh(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'NurbsSurfaceByCurvesMesh', '{D06FC62C-A572-4E6B-9C85-0A7D0F971079}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class INurbses(DispatchBaseClass):
	' оллекци€ NURBS-кривых.'
	CLSID = IID('{88ECED7C-181C-4D9F-84DE-44B2E360F278}')
	coclass_clsid = IID('{51E9EF87-E12D-48AF-9E0F-35A279878831}')

	# Result is of type INurbs
	def Add(self):
		'—оздать NURBS-кривую (добавить NURBS-кривую в коллекцию).'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{EE1AB9F4-B127-4303-A30D-C3509F6D10CD}')
		return ret

	# Result is of type INurbs
	def Convert(self, Curve=defaultNamedNotOptArg):
		'ѕреобразовать кривую в NURBS-кривую (добавить NURBS-кривую в коллекцию).'
		ret = self._oleobj_.InvokeTypes(3, LCID, 1, (9, 0), ((9, 1),),Curve
			)
		if ret is not None:
			ret = Dispatch(ret, 'Convert', '{EE1AB9F4-B127-4303-A30D-C3509F6D10CD}')
		return ret

	# Result is of type INurbs
	def ConvertEx(self, Curve=defaultNamedNotOptArg, AproximationType=defaultNamedNotOptArg, Step=defaultNamedNotOptArg):
		'ѕреобразовать кривую в NURBS-кривую (добавить NURBS-кривую в коллекцию).'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((9, 1), (3, 1), (5, 1)),Curve
			, AproximationType, Step)
		if ret is not None:
			ret = Dispatch(ret, 'ConvertEx', '{EE1AB9F4-B127-4303-A30D-C3509F6D10CD}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	# Result is of type INurbs
	# The method Nurbs is actually a property, but must be used as a method to correctly pass the arguments
	def Nurbs(self, Index=defaultNamedNotOptArg):
		'¬озвращает NURBS-кривую, заданную по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Nurbs', '{EE1AB9F4-B127-4303-A30D-C3509F6D10CD}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IOleDrawingObject(DispatchBaseClass):
	'OLE-объект.'
	CLSID = IID('{9A0ECE23-7B60-44E0-9728-C56CAAA455A2}')
	coclass_clsid = IID('{C5D9DA68-4574-40D5-B92A-838C235F1903}')

	def Close(self, Save=defaultNamedNotOptArg):
		'«авершить редактирование.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), ((11, 1),),Save
			)

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def DoVerb(self, iVerb=defaultNamedNotOptArg):
		'«апустить редактирование вставки Ole-объекта.'
		ret = self._oleobj_.InvokeTypes(8, LCID, 1, (9, 0), ((3, 1),),iVerb
			)
		if ret is not None:
			ret = Dispatch(ret, 'DoVerb', None)
		return ret

	def GetPlacement(self, X=pythoncom.Missing, Y=pythoncom.Missing, Angle=pythoncom.Missing, MirrorSymmetry=pythoncom.Missing):
		'ѕолучить местоположение объекта.'
		return self._ApplyTypes_(1, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2), (16395, 2)), 'GetPlacement', None,X
			, Y, Angle, MirrorSymmetry)

	def SetPlacement(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Angle=defaultNamedNotOptArg, MirrorSymmetry=defaultNamedNotOptArg):
		'”становить местоположение объекта.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1), (11, 1)),X
			, Y, Angle, MirrorSymmetry)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ClassId": (4, 2, (8, 0), (), "ClassId", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"FileName": (5, 2, (8, 0), (), "FileName", None),
		"InsertionType": (7, 2, (11, 0), (), "InsertionType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		"Link": (6, 2, (11, 0), (), "Link", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Scale": (3, 2, (5, 0), (), "Scale", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"ClassId": ((4, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"FileName": ((5, LCID, 4, 0),()),
		"InsertionType": ((7, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"Link": ((6, LCID, 4, 0),()),
		"Scale": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IOleDrawingObjects(DispatchBaseClass):
	' оллекци€ Ole объектов.'
	CLSID = IID('{E7A8DD07-CD6B-45A6-B6AF-155A674BC7E4}')
	coclass_clsid = IID('{41E89E17-2FB8-4E08-A01A-CF9BB524A6A2}')

	# Result is of type IOleDrawingObject
	def Add(self):
		'—оздать OLE-объект (добавить Ole объект в коллекцию).'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{9A0ECE23-7B60-44E0-9728-C56CAAA455A2}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	# Result is of type IOleDrawingObject
	# The method OleDrawingObject is actually a property, but must be used as a method to correctly pass the arguments
	def OleDrawingObject(self, Index=defaultNamedNotOptArg):
		'¬озвращает Ole объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'OleDrawingObject', '{9A0ECE23-7B60-44E0-9728-C56CAAA455A2}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IOpenDocumentParam(DispatchBaseClass):
	'»нтерфейс параметров открыти€ документа.'
	CLSID = IID('{FADCA157-95B1-4E3F-97AA-622E34DA3238}')
	coclass_clsid = IID('{FFBB62A8-CB09-4201-A85E-D22856D8BB8C}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ApplyingIndex": (3, 2, (3, 0), (), "ApplyingIndex", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"ReadOnly": (2, 2, (11, 0), (), "ReadOnly", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Visible": (1, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"ApplyingIndex": ((3, LCID, 4, 0),()),
		"Password": ((4, LCID, 4, 0),()),
		"ReadOnly": ((2, LCID, 4, 0),()),
		"Visible": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IOrientedEdge7(DispatchBaseClass):
	'ќриентированное ребро.'
	CLSID = IID('{8E62D0EF-3A22-40C7-B5EA-D85FA0C9F25E}')
	coclass_clsid = IID('{83ABCACD-F2CF-489C-BBE6-116069591839}')

	# Result is of type IFace
	# The method AdjacentFace is actually a property, but must be used as a method to correctly pass the arguments
	def AdjacentFace(self, FacePlus=defaultNamedNotOptArg):
		'ѕолучить грань, в которой ребро входит в цикл (TRUE - ориентаци€ плюс).'
		ret = self._oleobj_.InvokeTypes(5, LCID, 2, (9, 0), ((11, 1),),FacePlus
			)
		if ret is not None:
			ret = Dispatch(ret, 'AdjacentFace', '{299A549E-3F82-4F60-98A3-258D632AA635}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Edge' returns object of type 'IModelObject'
		"Edge": (3, 2, (9, 0), (), "Edge", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"IsPole": (8, 2, (11, 0), (), "IsPole", None),
		"IsSeam": (7, 2, (11, 0), (), "IsSeam", None),
		"IsStraight": (6, 2, (11, 0), (), "IsStraight", None),
		# Method 'Next' returns object of type 'IOrientedEdge7'
		"Next": (4, 2, (9, 0), (), "Next", '{8E62D0EF-3A22-40C7-B5EA-D85FA0C9F25E}'),
		"Orientation": (1, 2, (11, 0), (), "Orientation", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"SameSense": (2, 2, (11, 0), (), "SameSense", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPLMObject(DispatchBaseClass):
	'ќбъект системы версионировани€.'
	CLSID = IID('{BE4BA098-99B4-4C27-912B-3AD83A04E543}')
	coclass_clsid = None

	_prop_map_get_ = {
		"PLMChange": (30002, 2, (3, 0), (), "PLMChange", None),
		"PLMStatus": (30001, 2, (3, 0), (), "PLMStatus", None),
	}
	_prop_map_put_ = {
		"PLMChange": ((30002, LCID, 4, 0),()),
		"PLMStatus": ((30001, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPLMObjectsManager(DispatchBaseClass):
	'ћенеджер объектов системы версионировани€.'
	CLSID = IID('{95615543-48E9-4738-9B01-D8ABC2C9001B}')
	coclass_clsid = None

	# The method PLMChange is actually a property, but must be used as a method to correctly pass the arguments
	def PLMChange(self, FileName=defaultNamedNotOptArg):
		'ќтличие в системе версионировани€.'
		return self._oleobj_.InvokeTypes(30004, LCID, 2, (3, 0), ((8, 1),),FileName
			)

	# The method PLMStatus is actually a property, but must be used as a method to correctly pass the arguments
	def PLMStatus(self, FileName=defaultNamedNotOptArg):
		'—татус в системе версионировани€.'
		return self._oleobj_.InvokeTypes(30003, LCID, 2, (3, 0), ((8, 1),),FileName
			)

	# The method SetPLMChange is actually a property, but must be used as a method to correctly pass the arguments
	def SetPLMChange(self, FileName=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ќтличие в системе версионировани€.'
		return self._oleobj_.InvokeTypes(30004, LCID, 4, (24, 0), ((8, 1), (3, 1)),FileName
			, arg1)

	def SetPLMChangesAttrAvailability(self, Available=defaultNamedNotOptArg, Enabled=defaultNamedNotOptArg):
		"”становить доступность в настройках дерева документа  пункта меню 'Ћќ÷ћјЌ ќтличи€'."
		return self._oleobj_.InvokeTypes(30001, LCID, 1, (11, 0), ((11, 1), (11, 1)),Available
			, Enabled)

	# The method SetPLMStatus is actually a property, but must be used as a method to correctly pass the arguments
	def SetPLMStatus(self, FileName=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'—татус в системе версионировани€.'
		return self._oleobj_.InvokeTypes(30003, LCID, 4, (24, 0), ((8, 1), (3, 1)),FileName
			, arg1)

	def SetPLMStatusAttrAvailability(self, Available=defaultNamedNotOptArg, Enabled=defaultNamedNotOptArg):
		"”становить доступность в настройках дерева документа  пункта меню 'Ћќ÷ћјЌ —татус'."
		return self._oleobj_.InvokeTypes(30002, LCID, 1, (11, 0), ((11, 1), (11, 1)),Available
			, Enabled)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPaintObject(DispatchBaseClass):
	'¬спомогательные данные дл€ отрисовки документа'
	CLSID = IID('{4D14726D-0EC2-49CE-B02C-FEDAA6D65BBD}')
	coclass_clsid = None

	def GetDIBForOutput(self):
		'—оздать битмап с изображением документа в объект "проекци€ файла" дл€ дорисовки.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(3, LCID, 1, (8, 0), (),)

	def GetHWND(self):
		'ѕолучить Handle окна.'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (3, 0), (),)

	def GetTransformMatrix(self, A11=pythoncom.Missing, A12=pythoncom.Missing, A13=pythoncom.Missing, A14=pythoncom.Missing
			, A21=pythoncom.Missing, A22=pythoncom.Missing, A23=pythoncom.Missing, A24=pythoncom.Missing):
		'ѕолучить коэффициенты дл€ матрицы преобразовани€ координат.'
		return self._ApplyTypes_(2, 1, (24, 0), ((16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2)), 'GetTransformMatrix', None,A11
			, A12, A13, A14, A21, A22
			, A23, A24)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IParametriticConstraint(DispatchBaseClass):
	'ѕараметрическое ограничение.'
	CLSID = IID('{131069F4-A4E2-4DB4-A559-85EACCC74CE4}')
	coclass_clsid = IID('{7536F0BF-2857-4A01-ACFA-5DDF1C9840A8}')

	def Create(self):
		'—оздать ограничение в модели.'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (11, 0), (),)

	def Delete(self):
		'”далить ограничение.'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Axis' returns object of type 'IDrawingObject'
		"Axis": (15, 2, (9, 0), (), "Axis", '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}'),
		"AxisSegmentIndex": (19, 2, (3, 0), (), "AxisSegmentIndex", None),
		"BisectorVariant": (16, 2, (3, 0), (), "BisectorVariant", None),
		"Comment": (7, 2, (8, 0), (), "Comment", None),
		"ConstraintType": (1, 2, (3, 0), (), "ConstraintType", None),
		"Degrees": (9, 2, (3, 0), (), "Degrees", None),
		"Expression": (6, 2, (8, 0), (), "Expression", None),
		"Index": (2, 2, (3, 0), (), "Index", None),
		"Minutes": (10, 2, (3, 0), (), "Minutes", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Partner": (3, 2, (12, 0), (), "Partner", None),
		"PartnerIndex": (4, 2, (3, 0), (), "PartnerIndex", None),
		"PartnerSegmentIndex": (18, 2, (3, 0), (), "PartnerSegmentIndex", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Seconds": (11, 2, (5, 0), (), "Seconds", None),
		"SegmentIndex": (17, 2, (3, 0), (), "SegmentIndex", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (14, 2, (11, 0), (), "Valid", None),
		"Value": (5, 2, (5, 0), (), "Value", None),
		"Variable": (8, 2, (8, 0), (), "Variable", None),
	}
	_prop_map_put_ = {
		"Axis": ((15, LCID, 4, 0),()),
		"AxisSegmentIndex": ((19, LCID, 4, 0),()),
		"BisectorVariant": ((16, LCID, 4, 0),()),
		"Comment": ((7, LCID, 4, 0),()),
		"ConstraintType": ((1, LCID, 4, 0),()),
		"Degrees": ((9, LCID, 4, 0),()),
		"Expression": ((6, LCID, 4, 0),()),
		"Index": ((2, LCID, 4, 0),()),
		"Minutes": ((10, LCID, 4, 0),()),
		"Partner": ((3, LCID, 4, 0),()),
		"PartnerIndex": ((4, LCID, 4, 0),()),
		"PartnerSegmentIndex": ((18, LCID, 4, 0),()),
		"Seconds": ((11, LCID, 4, 0),()),
		"SegmentIndex": ((17, LCID, 4, 0),()),
		"Value": ((5, LCID, 4, 0),()),
		"Variable": ((8, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(5, 2, (5, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPart7(DispatchBaseClass):
	' омпонент 3D документа.'
	CLSID = IID('{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}')
	coclass_clsid = IID('{314057D1-5EFD-4980-8AB8-4E0CC3F7E756}')

	# Result is of type IVariable7
	def AddVariable(self, Name=defaultNamedNotOptArg, Value=defaultNamedNotOptArg, Note=defaultNamedNotOptArg):
		'—оздать переменную(добавить переменную в массив переменных и документ).'
		ret = self._oleobj_.InvokeTypes(21, LCID, 1, (9, 0), ((8, 1), (5, 1), (8, 1)),Name
			, Value, Note)
		if ret is not None:
			ret = Dispatch(ret, 'AddVariable', '{8BAB52D9-8EF6-43A6-A1B8-AF42D5961A94}')
		return ret

	# Result is of type IKompasDocument3D
	def BeginEdit(self, Param=defaultNamedNotOptArg):
		'¬ойти в режим редактировани€ компонента сборки.'
		ret = self._oleobj_.InvokeTypes(30, LCID, 1, (9, 0), ((9, 1),),Param
			)
		if ret is not None:
			ret = Dispatch(ret, 'BeginEdit', '{7B60E769-06C3-4FDC-9677-7B5EF5180308}')
		return ret

	def ChangeObjectLinks(self, SourceObjs=defaultNamedNotOptArg, DestObjs=defaultNamedNotOptArg, RebuildAll=defaultNamedNotOptArg):
		'«аменить ссылки на объекты по всем операци€м.'
		return self._oleobj_.InvokeTypes(35, LCID, 1, (11, 0), ((12, 1), (12, 1), (11, 1)),SourceObjs
			, DestObjs, RebuildAll)

	# Result is of type IModelObject
	# The method DefaultObject is actually a property, but must be used as a method to correctly pass the arguments
	def DefaultObject(self, Type=defaultNamedNotOptArg):
		'ѕолучить предопределенные элементы(плоскости ось и — ).'
		ret = self._oleobj_.InvokeTypes(19, LCID, 2, (9, 0), ((3, 1),),Type
			)
		if ret is not None:
			ret = Dispatch(ret, 'DefaultObject', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def DestroySubassembly(self):
		'–азрушить подсборку.'
		return self._oleobj_.InvokeTypes(43, LCID, 1, (11, 0), (),)

	def EndEdit(self, Rebuild=defaultNamedNotOptArg):
		'«авершить процесс редактировани€ компонента сборки.'
		return self._oleobj_.InvokeTypes(31, LCID, 1, (11, 0), ((11, 1),),Rebuild
			)

	# Result is of type IModelObject
	def FindObject(self, Obj=defaultNamedNotOptArg, SourcePart=defaultNamedNotOptArg):
		'Ќайти объект в текущем документе по объекту из другого документа.'
		ret = self._oleobj_.InvokeTypes(26, LCID, 1, (9, 0), ((9, 1), (9, 1)),Obj
			, SourcePart)
		if ret is not None:
			ret = Dispatch(ret, 'FindObject', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def FindObjectsByPoint(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg, FirstLevel=defaultNamedNotOptArg):
		'Ќайти объекты по точке.'
		return self._ApplyTypes_(32, 1, (12, 0), ((5, 1), (5, 1), (5, 1), (11, 1)), 'FindObjectsByPoint', None,X
			, Y, Z, FirstLevel)

	# Result is of type IBody7
	def GetBodyById(self, BodyId=defaultNamedNotOptArg):
		'¬озвращает тело заданное по идентификатору.'
		ret = self._oleobj_.InvokeTypes(46, LCID, 1, (9, 0), ((3, 1),),BodyId
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetBodyById', '{4F122E22-0AA6-46E1-841F-A2504B145995}')
		return ret

	def GetDummyEmbodimentMarking(self, MarkingType=defaultNamedNotOptArg, AddSystemDelimer=defaultNamedNotOptArg):
		'ќбозначение исполнени€ дл€ макета'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(54, LCID, 1, (8, 0), ((3, 1), (11, 1)),MarkingType
			, AddSystemDelimer)

	def GetMaxSag(self):
		'ћаксимально допустимый прогиб кривой или поверхности в соседних точках на рассто€нии шага.'
		return self._oleobj_.InvokeTypes(44, LCID, 1, (5, 0), (),)

	# Result is of type IOpenDocumentParam
	def GetOpenDocumentParam(self):
		'ѕолучить интерфейс параметров открыти€ документа дл€ редактировани€ компонента сборки.'
		ret = self._oleobj_.InvokeTypes(29, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'GetOpenDocumentParam', '{FADCA157-95B1-4E3F-97AA-622E34DA3238}')
		return ret

	# The method InstanceCount is actually a property, but must be used as a method to correctly pass the arguments
	def InstanceCount(self, Part=defaultNamedNotOptArg):
		' оличество вставок компонента.'
		return self._oleobj_.InvokeTypes(13, LCID, 2, (3, 0), ((9, 1),),Part
			)

	def IsVariableNameValid(self, Name=defaultNamedNotOptArg):
		'ѕроверить допустимость создани€ новой переменной с данным именем'
		return self._oleobj_.InvokeTypes(20, LCID, 1, (11, 0), ((8, 1),),Name
			)

	def Load(self, Full=defaultNamedNotOptArg):
		'«агрузить.'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (11, 0), ((11, 1),),Full
			)

	def MirroringPlacement(self, Axis=defaultNamedNotOptArg):
		'»зменить систему координат детали на зеркальную.'
		return self._oleobj_.InvokeTypes(42, LCID, 1, (11, 0), ((3, 1),),Axis
			)

	# Result is of type IKompasDocument3D
	def OpenSourceDocument(self, Param=defaultNamedNotOptArg):
		'ќткрытие документа-источника на редактирование.'
		ret = self._oleobj_.InvokeTypes(57, LCID, 1, (9, 0), ((9, 1),),Param
			)
		if ret is not None:
			ret = Dispatch(ret, 'OpenSourceDocument', '{7B60E769-06C3-4FDC-9677-7B5EF5180308}')
		return ret

	# The method PartsEx is actually a property, but must be used as a method to correctly pass the arguments
	def PartsEx(self, PartCollectionType=defaultNamedNotOptArg):
		'ћассив SAFEARRAY компонентов.'
		return self._ApplyTypes_(12, 2, (12, 0), ((12, 1),), 'PartsEx', None,PartCollectionType
			)

	def RebuildModel(self, Redraw=defaultNamedNotOptArg):
		'ѕерестроить модель.'
		return self._oleobj_.InvokeTypes(22, LCID, 1, (11, 0), ((11, 1),),Redraw
			)

	def SaveAs(self, PathName=defaultNamedNotOptArg):
		'—охранить файл компонента под другим именем.'
		return self._oleobj_.InvokeTypes(25, LCID, 1, (11, 0), ((8, 1),),PathName
			)

	def SelectByPoint(self, Objects=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg):
		'¬ыделить объекты содержащие точку.'
		return self._ApplyTypes_(14, 1, (12, 0), ((12, 1), (5, 1), (5, 1), (5, 1)), 'SelectByPoint', None,Objects
			, X, Y, Z)

	def SetDummyEmbodiment(self, Index=defaultNamedNotOptArg):
		'”становить текущее исполнение дл€ макета по имени или индексу.'
		return self._oleobj_.InvokeTypes(55, LCID, 1, (11, 0), ((12, 1),),Index
			)

	def SetMaterial(self, Name=defaultNamedNotOptArg, Density=defaultNamedNotOptArg):
		'”становить материал.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), ((8, 1), (5, 1)),Name
			, Density)

	# The method SetUniqueNum is actually a property, but must be used as a method to correctly pass the arguments
	def SetUniqueNum(self, OType=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'”никальный номер объекта типа.'
		return self._oleobj_.InvokeTypes(34, LCID, 4, (24, 0), ((3, 1), (3, 1)),OType
			, arg1)

	def TransferObjects(self, Objects=defaultNamedNotOptArg, Lcs=defaultNamedNotOptArg, HoldPosition=defaultNamedNotOptArg):
		'ѕеренести в — .'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (11, 0), ((12, 1), (9, 1), (11, 1)),Objects
			, Lcs, HoldPosition)

	# The method UniqueNum is actually a property, but must be used as a method to correctly pass the arguments
	def UniqueNum(self, OType=defaultNamedNotOptArg):
		'”никальный номер объекта типа.'
		return self._oleobj_.InvokeTypes(34, LCID, 2, (3, 0), ((3, 1),),OType
			)

	def Unload(self, Full=defaultNamedNotOptArg):
		'¬ыгрузить.'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (11, 0), ((11, 1),),Full
			)

	def UnloadEx(self, Type=defaultNamedNotOptArg):
		'¬ыгрузить.'
		return self._oleobj_.InvokeTypes(56, LCID, 1, (11, 0), ((3, 1),),Type
			)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	def UpdatePlacement(self, Redraw=defaultNamedNotOptArg):
		'”становить локальную систему координат детали.'
		return self._oleobj_.InvokeTypes(39, LCID, 1, (11, 0), ((11, 1),),Redraw
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"CreateSpcObjects": (27, 2, (11, 0), (), "CreateSpcObjects", None),
		"Density": (7, 2, (5, 0), (), "Density", None),
		"Detail": (5, 2, (11, 0), (), "Detail", None),
		"DummyEmbodimentIndex": (53, 2, (3, 0), (), "DummyEmbodimentIndex", None),
		"DummyFileName": (52, 2, (8, 0), (), "DummyFileName", None),
		"FileName": (2, 2, (8, 0), (), "FileName", None),
		"Fixed": (4, 2, (11, 0), (), "Fixed", None),
		# Method 'HatchParam' returns object of type 'IHatchParam'
		"HatchParam": (33, 2, (9, 0), (), "HatchParam", '{437D6587-7649-4A0C-80BB-7A6E89661839}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"InheritExclude": (59, 2, (11, 0), (), "InheritExclude", None),
		"IsBillet": (37, 2, (11, 0), (), "IsBillet", None),
		"IsLayoutGeometry": (36, 2, (11, 0), (), "IsLayoutGeometry", None),
		"IsLocal": (28, 2, (11, 0), (), "IsLocal", None),
		"LeftHandedCS": (41, 2, (11, 0), (), "LeftHandedCS", None),
		"LoadState": (18, 2, (3, 0), (), "LoadState", None),
		"Marking": (1, 2, (8, 0), (), "Marking", None),
		"Mass": (6, 2, (5, 0), (), "Mass", None),
		# Method 'MateConstraints' returns object of type 'IMateConstraints3D'
		"MateConstraints": (45, 2, (9, 0), (), "MateConstraints", '{95F316E1-0A18-4F42-8B70-1423250F244D}'),
		"Material": (8, 2, (8, 0), (), "Material", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		# Method 'Parts' returns object of type 'IParts7'
		"Parts": (10, 2, (9, 0), (), "Parts", '{42F8FCEF-E56F-466C-8814-BEBAC0719AE6}'),
		# Method 'Placement' returns object of type 'IPlacement3D'
		"Placement": (38, 2, (9, 0), (), "Placement", '{9C66DE49-529C-4678-9AF1-12710CB77804}'),
		"ReadOnly": (23, 2, (3, 0), (), "ReadOnly", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'SpecRough' returns object of type 'ISpecRough3D'
		"SpecRough": (40, 2, (9, 0), (), "SpecRough", '{AED8F9FC-E493-4CBD-9341-9D9E39E14FDC}'),
		"StaffVisible": (24, 2, (11, 0), (), "StaffVisible", None),
		"Standard": (3, 2, (11, 0), (), "Standard", None),
		"ToleranceRecalcType": (48, 2, (3, 0), (), "ToleranceRecalcType", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"UseDummy": (51, 2, (11, 0), (), "UseDummy", None),
		# Method 'UserFolders' returns object of type 'IUserFolders'
		"UserFolders": (47, 2, (9, 0), (), "UserFolders", '{0155AE59-92F4-4CEE-9633-8ADA943388CB}'),
		"UserToleranceRecalcId": (49, 2, (3, 0), (), "UserToleranceRecalcId", None),
		"UserToleranceRecalcName": (50, 2, (8, 0), (), "UserToleranceRecalcName", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
		# Method 'VariableTable' returns object of type 'IVariableTable'
		"VariableTable": (11, 2, (9, 0), (), "VariableTable", '{2B8B154E-ED76-4FF0-B3E4-FEE691D014A4}'),
		# Method 'ZonesManager' returns object of type 'IZonesManager'
		"ZonesManager": (58, 2, (9, 0), (), "ZonesManager", '{0B93D860-69EC-4D03-8A1D-EB0C936B1D45}'),
	}
	_prop_map_put_ = {
		"CreateSpcObjects": ((27, LCID, 4, 0),()),
		"DummyFileName": ((52, LCID, 4, 0),()),
		"FileName": ((2, LCID, 4, 0),()),
		"Fixed": ((4, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"InheritExclude": ((59, LCID, 4, 0),()),
		"IsBillet": ((37, LCID, 4, 0),()),
		"IsLayoutGeometry": ((36, LCID, 4, 0),()),
		"IsLocal": ((28, LCID, 4, 0),()),
		"LeftHandedCS": ((41, LCID, 4, 0),()),
		"Marking": ((1, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"ReadOnly": ((23, LCID, 4, 0),()),
		"StaffVisible": ((24, LCID, 4, 0),()),
		"Standard": ((3, LCID, 4, 0),()),
		"ToleranceRecalcType": ((48, LCID, 4, 0),()),
		"UseDummy": ((51, LCID, 4, 0),()),
		"UserToleranceRecalcId": ((49, LCID, 4, 0),()),
		"UserToleranceRecalcName": ((50, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPartDocument(DispatchBaseClass):
	'»нтерфейс детали.'
	CLSID = IID('{0075EA2A-5498-4E28-BDF3-0288EB168054}')
	coclass_clsid = IID('{427D2E6B-8D4E-4F9F-99AC-F9E0FB22D25C}')

	# The method AttributesEx is actually a property, but must be used as a method to correctly pass the arguments
	def AttributesEx(self, Key1=defaultNamedNotOptArg, Key2=defaultNamedNotOptArg, Key3=defaultNamedNotOptArg, Key4=defaultNamedNotOptArg
			, Numb=defaultNamedNotOptArg, Objects=defaultNamedNotOptArg, SourcePart=defaultNamedNotOptArg):
		'ћассив атрибутов документа в виде массива SAFEARRAY DISPATCH - VT_ARRAY | VT_DISPATCH.'
		return self._ApplyTypes_(5022, 2, (12, 0), ((3, 1), (3, 1), (3, 1), (3, 1), (5, 1), (12, 1), (9, 1)), 'AttributesEx', None,Key1
			, Key2, Key3, Key4, Numb, Objects
			, SourcePart)

	def Close(self, closeOptions=defaultNamedNotOptArg):
		'«акрыть документ. ≈сли SaveChanges = False, то система предложит пользователю сохранить имеющиес€ изменени€.'
		return self._oleobj_.InvokeTypes(3002, LCID, 1, (11, 0), ((3, 1),),closeOptions
			)

	# Result is of type IAttribute
	def CreateAttrEx(self, AttrID=defaultNamedNotOptArg, Libname=defaultNamedNotOptArg, Objects=defaultNamedNotOptArg, SourcePart=defaultNamedNotOptArg):
		'—оздать атрибут по номеру типа атрибута из библиотеки libname.'
		ret = self._oleobj_.InvokeTypes(5021, LCID, 1, (9, 0), ((5, 1), (8, 1), (12, 1), (9, 1)),AttrID
			, Libname, Objects, SourcePart)
		if ret is not None:
			ret = Dispatch(ret, 'CreateAttrEx', '{94F965B0-5ABB-4994-98C7-B08FA8515452}')
		return ret

	def DeleteHistory(self):
		'”далить историю построени€.'
		return self._oleobj_.InvokeTypes(5026, LCID, 1, (11, 0), (),)

	def RebuildDocument(self):
		'ѕерестроить документ.'
		return self._oleobj_.InvokeTypes(5023, LCID, 1, (11, 0), (),)

	def Save(self):
		'—охранить документ на диске.'
		return self._oleobj_.InvokeTypes(3003, LCID, 1, (24, 0), (),)

	def SaveAs(self, PathName=defaultNamedNotOptArg):
		'—охранить документ под другим именем.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (24, 0), ((8, 1),),PathName
			)

	_prop_map_get_ = {
		"Active": (3009, 2, (11, 0), (), "Active", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Changed": (3011, 2, (11, 0), (), "Changed", None),
		# Method 'ChooseManager' returns object of type 'IChooseManager'
		"ChooseManager": (5020, 2, (9, 0), (), "ChooseManager", '{E2D9EAA6-F88C-4ADB-AC32-854E32E9FEE1}'),
		"CreateObjectsInCurrentLocalCS": (5014, 2, (11, 0), (), "CreateObjectsInCurrentLocalCS", None),
		# Method 'DocumentFrames' returns object of type 'IDocumentFrames'
		"DocumentFrames": (3001, 2, (9, 0), (), "DocumentFrames", '{1D18C466-C085-4D68-A465-A85D0C8E3A0E}'),
		# Method 'DocumentSettings' returns object of type 'IDocumentSettings'
		"DocumentSettings": (3012, 2, (9, 0), (), "DocumentSettings", '{B35FF50E-2991-4630-8AB8-DC3153E7971A}'),
		"DocumentType": (3000, 2, (3, 0), (), "DocumentType", None),
		"DrawMode": (5012, 2, (3, 0), (), "DrawMode", None),
		"EnableUndo": (5024, 2, (11, 0), (), "EnableUndo", None),
		"HideAllAuxiliaryGeom": (5017, 2, (11, 0), (), "HideAllAuxiliaryGeom", None),
		"HideAllAxis": (5004, 2, (11, 0), (), "HideAllAxis", None),
		"HideAllControlPoints": (5010, 2, (11, 0), (), "HideAllControlPoints", None),
		"HideAllCurves": (5009, 2, (11, 0), (), "HideAllCurves", None),
		"HideAllDesignations": (5016, 2, (11, 0), (), "HideAllDesignations", None),
		"HideAllDimensions": (5015, 2, (11, 0), (), "HideAllDimensions", None),
		"HideAllPlaces": (5006, 2, (11, 0), (), "HideAllPlaces", None),
		"HideAllPlanes": (5003, 2, (11, 0), (), "HideAllPlanes", None),
		"HideAllSketches": (5005, 2, (11, 0), (), "HideAllSketches", None),
		"HideAllSurfaces": (5007, 2, (11, 0), (), "HideAllSurfaces", None),
		"HideAllThreads": (5008, 2, (11, 0), (), "HideAllThreads", None),
		"HideInComponentsMode": (5018, 2, (11, 0), (), "HideInComponentsMode", None),
		# Method 'LayoutSheets' returns object of type 'ILayoutSheets'
		"LayoutSheets": (3014, 2, (9, 0), (), "LayoutSheets", '{7AB54196-0B76-4B01-B769-7F47637173C4}'),
		"Name": (3005, 2, (8, 0), (), "Name", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Path": (3007, 2, (8, 0), (), "Path", None),
		"PathName": (3006, 2, (8, 0), (), "PathName", None),
		"Perspective": (5011, 2, (11, 0), (), "Perspective", None),
		"ReadOnly": (3010, 2, (11, 0), (), "ReadOnly", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'SelectionManager' returns object of type 'ISelectionManager'
		"SelectionManager": (5019, 2, (9, 0), (), "SelectionManager", '{E6DF688C-5B23-436B-A027-A96BFD5484CC}'),
		"ShadedWireframe": (5013, 2, (11, 0), (), "ShadedWireframe", None),
		# Method 'SpecificationDescriptions' returns object of type 'ISpecificationDescriptions'
		"SpecificationDescriptions": (3013, 2, (9, 0), (), "SpecificationDescriptions", '{B9632C5C-86E1-4BC9-83A5-A954E407246A}'),
		# Method 'TechnicalDemand3D' returns object of type 'ITechnicalDemand3D'
		"TechnicalDemand3D": (5027, 2, (9, 0), (), "TechnicalDemand3D", '{CD435B3D-175C-4E18-BAA0-81FDD7EB6A86}'),
		"ToleranceMode": (5028, 2, (11, 0), (), "ToleranceMode", None),
		# Method 'TopPart' returns object of type 'IPart7'
		"TopPart": (5002, 2, (9, 0), (), "TopPart", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"UndoContainer": (5025, 2, (11, 0), (), "UndoContainer", None),
		# Method 'UserDataStoragesMng' returns object of type 'IUserDataStoragesMng'
		"UserDataStoragesMng": (3015, 2, (9, 0), (), "UserDataStoragesMng", '{77A6D4CA-6418-4DEE-B59C-400BFD052375}'),
		"Visible": (3008, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Active": ((3009, LCID, 4, 0),()),
		"CreateObjectsInCurrentLocalCS": ((5014, LCID, 4, 0),()),
		"DrawMode": ((5012, LCID, 4, 0),()),
		"EnableUndo": ((5024, LCID, 4, 0),()),
		"HideAllAuxiliaryGeom": ((5017, LCID, 4, 0),()),
		"HideAllAxis": ((5004, LCID, 4, 0),()),
		"HideAllControlPoints": ((5010, LCID, 4, 0),()),
		"HideAllCurves": ((5009, LCID, 4, 0),()),
		"HideAllDesignations": ((5016, LCID, 4, 0),()),
		"HideAllDimensions": ((5015, LCID, 4, 0),()),
		"HideAllPlaces": ((5006, LCID, 4, 0),()),
		"HideAllPlanes": ((5003, LCID, 4, 0),()),
		"HideAllSketches": ((5005, LCID, 4, 0),()),
		"HideAllSurfaces": ((5007, LCID, 4, 0),()),
		"HideAllThreads": ((5008, LCID, 4, 0),()),
		"HideInComponentsMode": ((5018, LCID, 4, 0),()),
		"Perspective": ((5011, LCID, 4, 0),()),
		"ReadOnly": ((3010, LCID, 4, 0),()),
		"ShadedWireframe": ((5013, LCID, 4, 0),()),
		"ToleranceMode": ((5028, LCID, 4, 0),()),
		"UndoContainer": ((5025, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IParts7(DispatchBaseClass):
	' оллекци€ компонентов 3D документа.'
	CLSID = IID('{42F8FCEF-E56F-466C-8814-BEBAC0719AE6}')
	coclass_clsid = IID('{CB826C3D-9968-4546-BCD7-BA65F6B84902}')

	# Result is of type IPart7
	def Add(self, FileName=defaultNamedNotOptArg, Plane=defaultNamedNotOptArg):
		'—оздает новый компонент и добавл€ет его в документ и в коллекцию.'
		ret = self._oleobj_.InvokeTypes(3, LCID, 1, (9, 0), ((8, 1), (9, 1)),FileName
			, Plane)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}')
		return ret

	# Result is of type IPart7
	def AddFromFile(self, FileName=defaultNamedNotOptArg, ExternalFile=False, Redraw=True):
		'ƒобавл€ет существующий компонент из файла или из библиотеки моделей в документ и в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1), (11, 49), (11, 49)),FileName
			, ExternalFile, Redraw)
		if ret is not None:
			ret = Dispatch(ret, 'AddFromFile', '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}')
		return ret

	# Result is of type IPart7
	def CreateDocument(self, Type=defaultNamedNotOptArg, Local=True, Redraw=True):
		'—оздать локальную деталь и добавить в коллекцию.'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((3, 1), (11, 49), (11, 49)),Type
			, Local, Redraw)
		if ret is not None:
			ret = Dispatch(ret, 'CreateDocument', '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}')
		return ret

	# Result is of type IPart7
	def CreateDocumentEx(self, StartFileName=defaultNamedNotOptArg, Type=defaultNamedNotOptArg, Local=True, Redraw=True):
		'—оздать локальную деталь и добавить в коллекцию.'
		ret = self._oleobj_.InvokeTypes(5, LCID, 1, (9, 0), ((8, 1), (3, 1), (11, 49), (11, 49)),StartFileName
			, Type, Local, Redraw)
		if ret is not None:
			ret = Dispatch(ret, 'CreateDocumentEx', '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type IPart7
	# The method Part is actually a property, but must be used as a method to correctly pass the arguments
	def Part(self, Index=defaultNamedNotOptArg):
		'¬озвращает компонент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Part', '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IPathPattern(DispatchBaseClass):
	'ќпераци€ копировани€ вдоль кривой.'
	CLSID = IID('{B05FC37D-7D60-4291-BE81-E4A9E23D4740}')
	coclass_clsid = IID('{6A4F281E-23AB-49C0-A0A3-B34695AA8A3D}')

	def AddInitialObjects(self, Objects=defaultNamedNotOptArg):
		'ƒобавить объекты в массив копируемых объектов.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), ((12, 1),),Objects
			)

	def Clear(self):
		'ќчистить список исходных объектов массива.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), (),)

	def Destroy(self):
		'–азрушить массив.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), (),)

	# Result is of type IModelObject
	# The method Exemplar is actually a property, but must be used as a method to correctly pass the arguments
	def Exemplar(self, Index1=defaultNamedNotOptArg, Index2=defaultNamedNotOptArg):
		'ѕолучить экземпл€р по индексу (или индексам).'
		ret = self._oleobj_.InvokeTypes(11, LCID, 2, (9, 0), ((3, 1), (3, 1)),Index1
			, Index2)
		if ret is not None:
			ret = Dispatch(ret, 'Exemplar', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def GetExemplarsCounts(self, Count1=pythoncom.Missing, Count2=pythoncom.Missing):
		'ѕолучить количество экземпл€ров.'
		return self._ApplyTypes_(12, 1, (11, 0), ((16387, 2), (16387, 2)), 'GetExemplarsCounts', None,Count1
			, Count2)

	def IsInitialObject(self, Object=defaultNamedNotOptArg):
		'ѕроверка - €вл€етс€ ли объект исходным дл€ массива.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((9, 1),),Object
			)

	def IsSuitableObject(self, Object=defaultNamedNotOptArg):
		'ѕроверка пригодности объекта дл€ операции.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), ((9, 1),),Object
			)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BasePoint' returns object of type 'IModelObject'
		"BasePoint": (10, 2, (9, 0), (), "BasePoint", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"BasePointType": (9, 2, (3, 0), (), "BasePointType", None),
		"BoundaryInstancesStepFactor": (106, 2, (11, 0), (), "BoundaryInstancesStepFactor", None),
		"ByStep": (104, 2, (11, 0), (), "ByStep", None),
		"Count": (102, 2, (3, 0), (), "Count", None),
		"Curves": (101, 2, (12, 0), (), "Curves", None),
		"GeometryPattern": (8, 2, (11, 0), (), "GeometryPattern", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"InitialObjects": (1, 2, (12, 0), (), "InitialObjects", None),
		"InstanceDeletedIndexes": (2, 2, (12, 0), (), "InstanceDeletedIndexes", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"ReverseDirection": (108, 2, (11, 0), (), "ReverseDirection", None),
		"SaveInitialOrientation": (107, 2, (11, 0), (), "SaveInitialOrientation", None),
		# Method 'StartingPoint' returns object of type 'IModelObject'
		"StartingPoint": (103, 2, (9, 0), (), "StartingPoint", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Step": (105, 2, (5, 0), (), "Step", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"BasePoint": ((10, LCID, 4, 0),()),
		"BasePointType": ((9, LCID, 4, 0),()),
		"BoundaryInstancesStepFactor": ((106, LCID, 4, 0),()),
		"ByStep": ((104, LCID, 4, 0),()),
		"Count": ((102, LCID, 4, 0),()),
		"Curves": ((101, LCID, 4, 0),()),
		"GeometryPattern": ((8, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"InitialObjects": ((1, LCID, 4, 0),()),
		"InstanceDeletedIndexes": ((2, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"ReverseDirection": ((108, LCID, 4, 0),()),
		"SaveInitialOrientation": ((107, LCID, 4, 0),()),
		"StartingPoint": ((103, LCID, 4, 0),()),
		"Step": ((105, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(102, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IPhantom2D(DispatchBaseClass):
	'ѕараметры фантома 2D.'
	CLSID = IID('{A6E4F3B6-0554-4A67-A700-428090A6739A}')
	coclass_clsid = IID('{C08B3775-2631-4D34-83E0-F18DAF855848}')

	def Hide(self):
		'ѕогасить фантом.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), (),)

	def Show(self):
		'ѕоказать фантом.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновить фантом.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (4, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Horizontal": (7, 2, (11, 0), (), "Horizontal", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'PhantomGroup' returns object of type 'IDrawingGroup'
		"PhantomGroup": (6, 2, (9, 0), (), "PhantomGroup", '{2C96ACB2-4877-45D9-B62D-78BBAD704458}'),
		"PhantomType": (1, 2, (3, 0), (), "PhantomType", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Scale": (5, 2, (5, 0), (), "Scale", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"X": (2, 2, (5, 0), (), "X", None),
		"Y": (3, 2, (5, 0), (), "Y", None),
	}
	_prop_map_put_ = {
		"Angle": ((4, LCID, 4, 0),()),
		"Horizontal": ((7, LCID, 4, 0),()),
		"PhantomGroup": ((6, LCID, 4, 0),()),
		"PhantomType": ((1, LCID, 4, 0),()),
		"Scale": ((5, LCID, 4, 0),()),
		"X": ((2, LCID, 4, 0),()),
		"Y": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPlacement3D(DispatchBaseClass):
	'»нтерфейс локальной системы координат (положение объекта).'
	CLSID = IID('{9C66DE49-529C-4678-9AF1-12710CB77804}')
	coclass_clsid = IID('{D30E2696-B263-4283-BACA-04471DF8311E}')

	def GetMatrix3D(self):
		'ѕолучить матрицу системы координат в виде массива. SAFEARRAY double (VT_ARRAY | VT_R8).'
		return self._ApplyTypes_(6, 1, (12, 0), (), 'GetMatrix3D', None,)

	def GetOrigin(self, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'ѕолучить координаты начала локальной системы координат.'
		return self._ApplyTypes_(1, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2)), 'GetOrigin', None,X
			, Y, Z)

	def GetPoint3D(self, XIn=defaultNamedNotOptArg, YIn=defaultNamedNotOptArg, XOut=pythoncom.Missing, YOut=pythoncom.Missing
			, ZOut=pythoncom.Missing):
		'ѕолучить пространственную точку по точке на полоскости xy.'
		return self._ApplyTypes_(8, 1, (11, 0), ((5, 1), (5, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetPoint3D', None,XIn
			, YIn, XOut, YOut, ZOut)

	def GetPointProjectionToXY(self, XIn=defaultNamedNotOptArg, YIn=defaultNamedNotOptArg, ZIn=defaultNamedNotOptArg, XOut=pythoncom.Missing
			, YOut=pythoncom.Missing):
		'ѕроекци€ точки на полоскость xy.'
		return self._ApplyTypes_(7, 1, (11, 0), ((5, 1), (5, 1), (5, 1), (16389, 2), (16389, 2)), 'GetPointProjectionToXY', None,XIn
			, YIn, ZIn, XOut, YOut)

	def GetVector(self, Axis=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'ѕолучить вектор дл€ указанной оси.'
		return self._ApplyTypes_(3, 1, (11, 0), ((3, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetVector', None,Axis
			, X, Y, Z)

	def InitByMatrix3D(self, mtr=defaultNamedNotOptArg):
		'”становить систему координат по матрице. SAFEARRAY double (VT_ARRAY | VT_R8).'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), ((12, 1),),mtr
			)

	def Rotate(self, X0=defaultNamedNotOptArg, Y0=defaultNamedNotOptArg, Z0=defaultNamedNotOptArg, AxisZX=defaultNamedNotOptArg
			, AxisZXY=defaultNamedNotOptArg, AxisZZ=defaultNamedNotOptArg, Angle=defaultNamedNotOptArg):
		'ѕовернуть систему координат на угол вокруг оси.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1)),X0
			, Y0, Z0, AxisZX, AxisZXY, AxisZZ
			, Angle)

	def SetOrigin(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg):
		'ѕолучить координаты начала локальной системы координат.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1)),X
			, Y, Z)

	def SetVector(self, Axis=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg):
		'«адать вектор дл€ указанной оси.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((3, 1), (5, 1), (5, 1), (5, 1)),Axis
			, X, Y, Z)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPlacement3DManipulator(DispatchBaseClass):
	'ћанипул€тор системы координат.'
	CLSID = IID('{46597352-925C-4D1B-89E3-6868D54FAFE6}')
	coclass_clsid = IID('{575C0551-83D0-475C-B6A9-49E788A8EB41}')

	# The method PrimitiveDisabled is actually a property, but must be used as a method to correctly pass the arguments
	def PrimitiveDisabled(self, Primitive=defaultNamedNotOptArg):
		'«апрет изменени€.'
		return self._oleobj_.InvokeTypes(2002, LCID, 2, (11, 0), ((3, 1),),Primitive
			)

	# The method PrimitiveVisible is actually a property, but must be used as a method to correctly pass the arguments
	def PrimitiveVisible(self, Primitive=defaultNamedNotOptArg):
		'—войство видимости элементов манипул€тора.'
		return self._oleobj_.InvokeTypes(2001, LCID, 2, (11, 0), ((3, 1),),Primitive
			)

	# The method SetPrimitiveDisabled is actually a property, but must be used as a method to correctly pass the arguments
	def SetPrimitiveDisabled(self, Primitive=defaultNamedNotOptArg, arg1=False):
		'«апрет изменени€.'
		return self._oleobj_.InvokeTypes(2002, LCID, 4, (24, 0), ((3, 1), (11, 49)),Primitive
			, arg1)

	# The method SetPrimitiveVisible is actually a property, but must be used as a method to correctly pass the arguments
	def SetPrimitiveVisible(self, Primitive=defaultNamedNotOptArg, arg1=True):
		'—войство видимости элементов манипул€тора.'
		return self._oleobj_.InvokeTypes(2001, LCID, 4, (24, 0), ((3, 1), (11, 49)),Primitive
			, arg1)

	def SetRotateRange(self, Min=defaultNamedNotOptArg, Max=defaultNamedNotOptArg):
		'”становить диапазон дл€ поворота манипул€тора.'
		return self._oleobj_.InvokeTypes(2006, LCID, 1, (11, 0), ((5, 1), (5, 0)),Min
			, Max)

	def SetShiftRange(self, Min=defaultNamedNotOptArg, Max=defaultNamedNotOptArg):
		'”становить диапазон дл€ сдвиг манипул€тора.'
		return self._oleobj_.InvokeTypes(2007, LCID, 1, (11, 0), ((5, 1), (5, 0)),Min
			, Max)

	_prop_map_get_ = {
		"EditValue": (2010, 2, (5, 0), (), "EditValue", None),
		"IsEditCreated": (2011, 2, (11, 0), (), "IsEditCreated", None),
		"Mode": (2005, 2, (3, 0), (), "Mode", None),
		"PrimitiveSelected": (2003, 2, (3, 0), (), "PrimitiveSelected", None),
		"ReadOnly": (2004, 2, (11, 0), (), "ReadOnly", None),
		"RotateStep": (2008, 2, (5, 0), (), "RotateStep", None),
		"ShiftStep": (2009, 2, (5, 0), (), "ShiftStep", None),
	}
	_prop_map_put_ = {
		"EditValue": ((2010, LCID, 4, 0),()),
		"Mode": ((2005, LCID, 4, 0),()),
		"PrimitiveDisabled": ((2002, LCID, 4, 0),('False',)),
		"PrimitiveSelected": ((2003, LCID, 4, 0),()),
		"PrimitiveVisible": ((2001, LCID, 4, 0),('True',)),
		"ReadOnly": ((2004, LCID, 4, 0),()),
		"RotateStep": ((2008, LCID, 4, 0),()),
		"ShiftStep": ((2009, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPlane3D(DispatchBaseClass):
	'ѕлоскость 3D.'
	CLSID = IID('{D71C768D-89F1-4143-903A-AD2595FD8220}')
	coclass_clsid = IID('{A905B4F2-52D9-4E4C-B9BC-09A56035F751}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'Surface' returns object of type 'IMathSurface3D'
		"Surface": (1, 2, (9, 0), (), "Surface", '{25675C2F-10FD-4CE7-9E73-D3915D3E894E}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPlane3DBy2Edge(DispatchBaseClass):
	'ѕлоскость через ребро параллельно /перпендикул€рно другому ребру 3D.'
	CLSID = IID('{A4C4D3B7-0DAF-43AB-B2C2-BD3FCB6A5F8F}')
	coclass_clsid = IID('{C7DDD05C-D299-46E9-8CD6-3E167A060F21}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Edge1' returns object of type 'IModelObject'
		"Edge1": (101, 2, (9, 0), (), "Edge1", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'Edge2' returns object of type 'IModelObject'
		"Edge2": (102, 2, (9, 0), (), "Edge2", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		"Parallel": (103, 2, (11, 0), (), "Parallel", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'Surface' returns object of type 'IMathSurface3D'
		"Surface": (1, 2, (9, 0), (), "Surface", '{25675C2F-10FD-4CE7-9E73-D3915D3E894E}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Edge1": ((101, LCID, 4, 0),()),
		"Edge2": ((102, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Parallel": ((103, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPlane3DBy3Points(DispatchBaseClass):
	'ѕлоскость, проход€ща€ через три вершины.'
	CLSID = IID('{1A0E3DC8-F3F9-4C73-A3D6-87168B1E0DBD}')
	coclass_clsid = IID('{775B6240-2AD6-432F-8F65-A54F945F93F1}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		# Method 'Point1' returns object of type 'IModelObject'
		"Point1": (101, 2, (9, 0), (), "Point1", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'Point2' returns object of type 'IModelObject'
		"Point2": (102, 2, (9, 0), (), "Point2", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'Point3' returns object of type 'IModelObject'
		"Point3": (103, 2, (9, 0), (), "Point3", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'Surface' returns object of type 'IMathSurface3D'
		"Surface": (1, 2, (9, 0), (), "Surface", '{25675C2F-10FD-4CE7-9E73-D3915D3E894E}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Point1": ((101, LCID, 4, 0),()),
		"Point2": ((102, LCID, 4, 0),()),
		"Point3": ((103, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPlane3DByAngle(DispatchBaseClass):
	'ѕлоскость, под углом к другой плоскости.'
	CLSID = IID('{4AD8121E-95BB-4B0F-B1D8-E0394A72DEE2}')
	coclass_clsid = IID('{D0E15CC6-5630-42B3-8706-8B205C7E7D11}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (101, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BaseLine' returns object of type 'IModelObject'
		"BaseLine": (104, 2, (9, 0), (), "BaseLine", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'BasePlane' returns object of type 'IModelObject'
		"BasePlane": (103, 2, (9, 0), (), "BasePlane", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Direction": (102, 2, (11, 0), (), "Direction", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'Surface' returns object of type 'IMathSurface3D'
		"Surface": (1, 2, (9, 0), (), "Surface", '{25675C2F-10FD-4CE7-9E73-D3915D3E894E}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Angle": ((101, LCID, 4, 0),()),
		"BaseLine": ((104, LCID, 4, 0),()),
		"BasePlane": ((103, LCID, 4, 0),()),
		"Direction": ((102, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPlane3DByEdgeAndPlane(DispatchBaseClass):
	'ѕлоскость через ребро параллельно / перпендикул€рно грани 3D.'
	CLSID = IID('{EA6F2004-7996-4873-ABE4-8C88AC597ABC}')
	coclass_clsid = IID('{1DEE85E1-D2DE-4981-A605-2D0AE6393F61}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Edge' returns object of type 'IModelObject'
		"Edge": (102, 2, (9, 0), (), "Edge", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		"Parallel": (103, 2, (11, 0), (), "Parallel", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		# Method 'Plane' returns object of type 'IModelObject'
		"Plane": (101, 2, (9, 0), (), "Plane", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'Surface' returns object of type 'IMathSurface3D'
		"Surface": (1, 2, (9, 0), (), "Surface", '{25675C2F-10FD-4CE7-9E73-D3915D3E894E}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Edge": ((102, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Parallel": ((103, LCID, 4, 0),()),
		"Plane": ((101, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPlane3DByEdgeAndPoint(DispatchBaseClass):
	'ѕлоскость через ребро и вершину.'
	CLSID = IID('{5D170073-FAA3-4E00-A4B4-27E166556626}')
	coclass_clsid = IID('{F2373BF1-DC0F-4B94-B0AE-48265C028D19}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Edge' returns object of type 'IModelObject'
		"Edge": (102, 2, (9, 0), (), "Edge", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		# Method 'Point' returns object of type 'IModelObject'
		"Point": (101, 2, (9, 0), (), "Point", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'Surface' returns object of type 'IMathSurface3D'
		"Surface": (1, 2, (9, 0), (), "Surface", '{25675C2F-10FD-4CE7-9E73-D3915D3E894E}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Edge": ((102, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Point": ((101, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPlane3DByOffset(DispatchBaseClass):
	'—мещенна€ плоскость.'
	CLSID = IID('{5F5E0FA2-84D7-44D1-A946-018EBEB82926}')
	coclass_clsid = IID('{3D67D60E-A4CC-4714-8439-9EC6846E8934}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BasePlane' returns object of type 'IModelObject'
		"BasePlane": (103, 2, (9, 0), (), "BasePlane", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Direction": (102, 2, (11, 0), (), "Direction", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		"Offset": (101, 2, (5, 0), (), "Offset", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'Surface' returns object of type 'IMathSurface3D'
		"Surface": (1, 2, (9, 0), (), "Surface", '{25675C2F-10FD-4CE7-9E73-D3915D3E894E}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"BasePlane": ((103, LCID, 4, 0),()),
		"Direction": ((102, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Offset": ((101, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPlane3DByPlaneCurve(DispatchBaseClass):
	'ѕлоскость через плоскую кривую.'
	CLSID = IID('{B815E0A4-A837-48AB-9FD8-3E9CDD5A0AB0}')
	coclass_clsid = IID('{762D8288-0893-4B8D-A434-99E44405ADE2}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Curve' returns object of type 'IModelObject'
		"Curve": (101, 2, (9, 0), (), "Curve", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'Surface' returns object of type 'IMathSurface3D'
		"Surface": (1, 2, (9, 0), (), "Surface", '{25675C2F-10FD-4CE7-9E73-D3915D3E894E}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Curve": ((101, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPlane3DMiddle(DispatchBaseClass):
	'—редн€€ плоскость 3D.'
	CLSID = IID('{70190DEA-7DA4-4305-AD83-90D2637697BE}')
	coclass_clsid = IID('{A928037A-11D4-4DD7-93AF-491C9D5AD907}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Object1' returns object of type 'IModelObject'
		"Object1": (101, 2, (9, 0), (), "Object1", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'Object2' returns object of type 'IModelObject'
		"Object2": (102, 2, (9, 0), (), "Object2", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Oriention": (103, 2, (11, 0), (), "Oriention", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'Surface' returns object of type 'IMathSurface3D'
		"Surface": (1, 2, (9, 0), (), "Surface", '{25675C2F-10FD-4CE7-9E73-D3915D3E894E}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Object1": ((101, LCID, 4, 0),()),
		"Object2": ((102, LCID, 4, 0),()),
		"Oriention": ((103, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPlane3DNormalToSurface(DispatchBaseClass):
	'Ќормальна€ плоскость.'
	CLSID = IID('{054F3818-EABB-426A-B55A-867152CEF8BD}')
	coclass_clsid = IID('{7EEDFD78-29A9-40D6-87B8-ABD0DCA86774}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (101, 2, (5, 0), (), "Angle", None),
		"AngleDirection": (104, 2, (11, 0), (), "AngleDirection", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Face' returns object of type 'IModelObject'
		"Face": (103, 2, (9, 0), (), "Face", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		# Method 'Plane' returns object of type 'IModelObject'
		"Plane": (102, 2, (9, 0), (), "Plane", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'Surface' returns object of type 'IMathSurface3D'
		"Surface": (1, 2, (9, 0), (), "Surface", '{25675C2F-10FD-4CE7-9E73-D3915D3E894E}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Angle": ((101, LCID, 4, 0),()),
		"AngleDirection": ((104, LCID, 4, 0),()),
		"Face": ((103, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Plane": ((102, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPlane3DParallelByPoint(DispatchBaseClass):
	'ѕлоскость через вершину парраллельно другой плоскости 3D.'
	CLSID = IID('{B9FCC89D-D48C-4090-B092-B0F016B84D58}')
	coclass_clsid = IID('{451057BB-DD5E-44C5-8BC4-15F6A2D24CFC}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		# Method 'Plane' returns object of type 'IModelObject'
		"Plane": (102, 2, (9, 0), (), "Plane", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'Point' returns object of type 'IModelObject'
		"Point": (101, 2, (9, 0), (), "Point", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'Surface' returns object of type 'IMathSurface3D'
		"Surface": (1, 2, (9, 0), (), "Surface", '{25675C2F-10FD-4CE7-9E73-D3915D3E894E}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Plane": ((102, LCID, 4, 0),()),
		"Point": ((101, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPlane3DPerpendicularByEdge(DispatchBaseClass):
	'ѕлоскость, проход€ща€ через вершину перпендикул€рно ребру.'
	CLSID = IID('{972D817B-DEC8-41F7-9307-A6D368975F2F}')
	coclass_clsid = IID('{01A5298A-1472-4D90-9441-8E0591501D9C}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Edge' returns object of type 'IModelObject'
		"Edge": (102, 2, (9, 0), (), "Edge", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		# Method 'Point' returns object of type 'IModelObject'
		"Point": (101, 2, (9, 0), (), "Point", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'Surface' returns object of type 'IMathSurface3D'
		"Surface": (1, 2, (9, 0), (), "Surface", '{25675C2F-10FD-4CE7-9E73-D3915D3E894E}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
		# Method 'Vector3D' returns object of type 'IVector3D'
		"Vector3D": (103, 2, (9, 0), (), "Vector3D", '{D51A4DCF-627D-44F5-89BA-46EF2449A212}'),
	}
	_prop_map_put_ = {
		"Edge": ((102, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Point": ((101, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPlane3DTangentToFace(DispatchBaseClass):
	'ѕлоскость касательна€ к грани 3D.'
	CLSID = IID('{A9A97838-3B17-4903-AE8C-82543C91D272}')
	coclass_clsid = IID('{A905B4F2-52D9-4E4C-B9BC-09A56035F751}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (103, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Face' returns object of type 'IModelObject'
		"Face": (101, 2, (9, 0), (), "Face", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		"Orientation": (104, 2, (11, 0), (), "Orientation", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		# Method 'Plane' returns object of type 'IModelObject'
		"Plane": (102, 2, (9, 0), (), "Plane", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'Surface' returns object of type 'IMathSurface3D'
		"Surface": (1, 2, (9, 0), (), "Surface", '{25675C2F-10FD-4CE7-9E73-D3915D3E894E}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Angle": ((103, LCID, 4, 0),()),
		"Face": ((101, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Orientation": ((104, LCID, 4, 0),()),
		"Plane": ((102, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPlane3DTangentToFaceInPoint(DispatchBaseClass):
	'ѕлоскость касательна€ к грани в точке 3D.'
	CLSID = IID('{5EDE5E22-2D26-4AE2-A765-8CA314EAAD85}')
	coclass_clsid = IID('{5A341BD4-9A7F-4DC5-8721-88C544530F09}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Face' returns object of type 'IModelObject'
		"Face": (101, 2, (9, 0), (), "Face", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		"ParamU": (103, 2, (5, 0), (), "ParamU", None),
		"ParamV": (104, 2, (5, 0), (), "ParamV", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		# Method 'Point' returns object of type 'IModelObject'
		"Point": (102, 2, (9, 0), (), "Point", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'Surface' returns object of type 'IMathSurface3D'
		"Surface": (1, 2, (9, 0), (), "Surface", '{25675C2F-10FD-4CE7-9E73-D3915D3E894E}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Face": ((101, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"ParamU": ((103, LCID, 4, 0),()),
		"ParamV": ((104, LCID, 4, 0),()),
		"Point": ((102, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPlanes3D(DispatchBaseClass):
	' оллекци€ плоскостей.'
	CLSID = IID('{71B69C8B-FEAE-484F-BBDA-F7C71A94DDC7}')
	coclass_clsid = IID('{02943F10-AFC8-4BE9-86B0-ACE0929A2DCC}')

	# Result is of type IPlane3D
	def Add(self, PlaneType=defaultNamedNotOptArg):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((3, 1),),PlaneType
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{D71C768D-89F1-4143-903A-AD2595FD8220}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type IPlane3D
	# The method Plane3D is actually a property, but must be used as a method to correctly pass the arguments
	def Plane3D(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу или по имени.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Plane3D', '{D71C768D-89F1-4143-903A-AD2595FD8220}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IPoint(DispatchBaseClass):
	'2D точка.'
	CLSID = IID('{D0C19C87-14E7-401D-AEF5-A2E88E899F6E}')
	coclass_clsid = IID('{AF3188C2-CD4D-45F6-BCB2-5F44F30200D1}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (3, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Style": (4, 2, (3, 0), (), "Style", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"X": (1, 2, (5, 0), (), "X", None),
		"Y": (2, 2, (5, 0), (), "Y", None),
	}
	_prop_map_put_ = {
		"Angle": ((3, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"Style": ((4, LCID, 4, 0),()),
		"X": ((1, LCID, 4, 0),()),
		"Y": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPoint3D(DispatchBaseClass):
	'ѕространсвенна€ точка.'
	CLSID = IID('{D71AEDBE-01D4-4C7D-96DC-94981F2A1C37}')
	coclass_clsid = IID('{4A7A9FC8-85D7-4B62-99BB-7A303F1D6E98}')

	def SetAssociationObject(self, NewVal=defaultNamedNotOptArg):
		'”становить опорный объект.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((9, 1),),NewVal
			)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'AssociationObject' returns object of type 'IModelObject'
		"AssociationObject": (5, 2, (9, 0), (), "AssociationObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		"ParameterType": (7, 2, (3, 0), (), "ParameterType", None),
		# Method 'Parameters' returns object of type 'IKompasAPIObject'
		"Parameters": (8, 2, (9, 0), (), "Parameters", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Symbol": (6, 2, (3, 0), (), "Symbol", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
		"X": (1, 2, (5, 0), (), "X", None),
		"Y": (2, 2, (5, 0), (), "Y", None),
		"Z": (3, 2, (5, 0), (), "Z", None),
	}
	_prop_map_put_ = {
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"ParameterType": ((7, LCID, 4, 0),()),
		"Symbol": ((6, LCID, 4, 0),()),
		"X": ((1, LCID, 4, 0),()),
		"Y": ((2, LCID, 4, 0),()),
		"Z": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPoint3DParamByCylinder(DispatchBaseClass):
	'»нтерфейс параметров пространственной точки, заданной по цилиндрическим координатам.'
	CLSID = IID('{98D8AA95-B217-4CD7-8BB4-C419F9042ACF}')
	coclass_clsid = IID('{EC22584A-6FA6-4A66-B8DE-21605ED1D12B}')

	_prop_map_get_ = {
		"A": (2, 2, (5, 0), (), "A", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'AssociationObject' returns object of type 'IModelObject'
		"AssociationObject": (4, 2, (9, 0), (), "AssociationObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"R": (1, 2, (5, 0), (), "R", None),
		# Method 'RadiusObject' returns object of type 'IModelObject'
		"RadiusObject": (5, 2, (9, 0), (), "RadiusObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Z": (3, 2, (5, 0), (), "Z", None),
	}
	_prop_map_put_ = {
		"A": ((2, LCID, 4, 0),()),
		"AssociationObject": ((4, LCID, 4, 0),()),
		"R": ((1, LCID, 4, 0),()),
		"RadiusObject": ((5, LCID, 4, 0),()),
		"Z": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPoint3DParamBySphere(DispatchBaseClass):
	'»нтерфейс параметров пространственной точки, заданной по сферическим координатам.'
	CLSID = IID('{341EE39E-EC72-42A1-BA85-38F4AE2875CC}')
	coclass_clsid = IID('{CD7DA97A-87F8-4B2E-B5D4-750D6150291E}')

	_prop_map_get_ = {
		"A": (2, 2, (5, 0), (), "A", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'AssociationObject' returns object of type 'IModelObject'
		"AssociationObject": (4, 2, (9, 0), (), "AssociationObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"B": (3, 2, (5, 0), (), "B", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"R": (1, 2, (5, 0), (), "R", None),
		# Method 'RadiusObject' returns object of type 'IModelObject'
		"RadiusObject": (5, 2, (9, 0), (), "RadiusObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"A": ((2, LCID, 4, 0),()),
		"AssociationObject": ((4, LCID, 4, 0),()),
		"B": ((3, LCID, 4, 0),()),
		"R": ((1, LCID, 4, 0),()),
		"RadiusObject": ((5, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPoint3DParamCenter(DispatchBaseClass):
	'»нтерфейс параметров пространственной точки заданной в центре опорного объекта.'
	CLSID = IID('{A92F2938-F1D4-475E-AAB4-962FAA4A4366}')
	coclass_clsid = IID('{02DA512F-097F-4911-8E27-8C546ED4B22A}')

	def SetObject(self, NewVal=defaultNamedNotOptArg):
		'”становить объект.'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (11, 0), ((9, 1),),NewVal
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Object' returns object of type 'IModelObject'
		"Object": (2, 2, (9, 0), (), "Object", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPoint3DParamCurve(DispatchBaseClass):
	'»нтерфейс параметров пространственной точки заданной на кривой со смещением.'
	CLSID = IID('{06B6BDA5-1DC6-4321-8B28-AC065D87E060}')
	coclass_clsid = IID('{AAC9EE7F-C69F-48DD-9A38-8E38C38BAB28}')

	def SetCurveObject(self, NewVal=defaultNamedNotOptArg):
		'”становить кривую.'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (11, 0), ((9, 1),),NewVal
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'CurveObject' returns object of type 'IModelObject'
		"CurveObject": (2, 2, (9, 0), (), "CurveObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Direction": (5, 2, (11, 0), (), "Direction", None),
		"Offset": (4, 2, (5, 0), (), "Offset", None),
		"OffsetType": (3, 2, (3, 0), (), "OffsetType", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"Direction": ((5, LCID, 4, 0),()),
		"Offset": ((4, LCID, 4, 0),()),
		"OffsetType": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPoint3DParamDisplace(DispatchBaseClass):
	'»нтерфейс параметров пространственной точки заданной по смещению от опорного объекта.'
	CLSID = IID('{6D57994F-C170-4CED-968A-6AD69C1A2C7D}')
	coclass_clsid = IID('{7E00821A-E79B-412B-9A51-ADB9664C23A0}')

	def SetAssociationVertex(self, NewVal=defaultNamedNotOptArg):
		'”становить опорную точку.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((9, 1),),NewVal
			)

	def SetGuidingObject(self, NewVal=defaultNamedNotOptArg):
		'”становить направл€ющий объект.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), ((9, 1),),NewVal
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'AssociationVertex' returns object of type 'IModelObject'
		"AssociationVertex": (5, 2, (9, 0), (), "AssociationVertex", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"DX": (1, 2, (5, 0), (), "DX", None),
		"DY": (2, 2, (5, 0), (), "DY", None),
		"DZ": (3, 2, (5, 0), (), "DZ", None),
		"Distance": (8, 2, (5, 0), (), "Distance", None),
		# Method 'GuidingObject' returns object of type 'IModelObject'
		"GuidingObject": (7, 2, (9, 0), (), "GuidingObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		# Method 'Vector3D' returns object of type 'IVector3D'
		"Vector3D": (9, 2, (9, 0), (), "Vector3D", '{D51A4DCF-627D-44F5-89BA-46EF2449A212}'),
	}
	_prop_map_put_ = {
		"DX": ((1, LCID, 4, 0),()),
		"DY": ((2, LCID, 4, 0),()),
		"DZ": ((3, LCID, 4, 0),()),
		"Distance": ((8, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPoint3DParamIntersect(DispatchBaseClass):
	'»нтерфейс параметров пространственной точки заданной на пересечении опорных объектов.'
	CLSID = IID('{C009F9ED-ED8A-4B1E-A4CE-156F43C3F6F3}')
	coclass_clsid = IID('{DE8A8774-6705-4971-BA1F-F889E7E3752C}')

	def SetCurveObject(self, NewVal=defaultNamedNotOptArg):
		'”становить кривую.'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (11, 0), ((9, 1),),NewVal
			)

	def SetSurfaceObject(self, NewVal=defaultNamedNotOptArg):
		'”становить поверхность.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), ((9, 1),),NewVal
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"CartPointArray": (5, 2, (12, 0), (), "CartPointArray", None),
		# Method 'CurveObject' returns object of type 'IModelObject'
		"CurveObject": (2, 2, (9, 0), (), "CurveObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Index": (6, 2, (3, 0), (), "Index", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'SurfaceObject' returns object of type 'IModelObject'
		"SurfaceObject": (4, 2, (9, 0), (), "SurfaceObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"Index": ((6, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPoint3DParamProjection(DispatchBaseClass):
	'»нтерфейс параметров пространственной точки заданной проецированием.'
	CLSID = IID('{B5D353DD-5F26-42FD-87D3-01C97C44E1BF}')
	coclass_clsid = IID('{BD60E7D5-0E9E-4E00-A27B-08C11CFD41BD}')

	def SetAssociationVertex(self, NewVal=defaultNamedNotOptArg):
		'”становить опорную точку.'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (11, 0), ((9, 1),),NewVal
			)

	def SetGuidingObject(self, NewVal=defaultNamedNotOptArg):
		'”становить направл€ющий объект.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), ((9, 1),),NewVal
			)

	def SetSurfaceObject(self, NewVal=defaultNamedNotOptArg):
		'”становить поверхность.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), ((9, 1),),NewVal
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'AssociationVertex' returns object of type 'IModelObject'
		"AssociationVertex": (2, 2, (9, 0), (), "AssociationVertex", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'GuidingObject' returns object of type 'IModelObject'
		"GuidingObject": (6, 2, (9, 0), (), "GuidingObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'SurfaceObject' returns object of type 'IModelObject'
		"SurfaceObject": (4, 2, (9, 0), (), "SurfaceObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		# Method 'Vector3D' returns object of type 'IVector3D'
		"Vector3D": (7, 2, (9, 0), (), "Vector3D", '{D51A4DCF-627D-44F5-89BA-46EF2449A212}'),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPoint3DParamSurface(DispatchBaseClass):
	'»нтерфейс параметров пространственной точки заданной на поверхности.'
	CLSID = IID('{18CE6BBE-63FB-4C94-8998-E40BC5B5D1C6}')
	coclass_clsid = IID('{E5490B1D-49E8-4042-BEAA-C666952D3B1B}')

	def SetObject1(self, NewVal=defaultNamedNotOptArg):
		'”становить объект 1.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), ((9, 1),),NewVal
			)

	def SetObject2(self, NewVal=defaultNamedNotOptArg):
		'”становить объект 2.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), ((9, 1),),NewVal
			)

	def SetSurfaceObject(self, NewVal=defaultNamedNotOptArg):
		'”становить поверхность.'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (11, 0), ((9, 1),),NewVal
			)

	_prop_map_get_ = {
		"AllowBoundaries": (10, 2, (11, 0), (), "AllowBoundaries", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Object1' returns object of type 'IModelObject'
		"Object1": (7, 2, (9, 0), (), "Object1", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'Object2' returns object of type 'IModelObject'
		"Object2": (9, 2, (9, 0), (), "Object2", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Offset1": (4, 2, (5, 0), (), "Offset1", None),
		"Offset2": (5, 2, (5, 0), (), "Offset2", None),
		"OffsetType": (3, 2, (3, 0), (), "OffsetType", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'SurfaceObject' returns object of type 'IModelObject'
		"SurfaceObject": (2, 2, (9, 0), (), "SurfaceObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"AllowBoundaries": ((10, LCID, 4, 0),()),
		"Offset1": ((4, LCID, 4, 0),()),
		"Offset2": ((5, LCID, 4, 0),()),
		"OffsetType": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPointDrivenPattern(DispatchBaseClass):
	'ќпераци€ копировани€ по точкам.'
	CLSID = IID('{4CF250AC-878E-4E7B-94DE-F834CD13543F}')
	coclass_clsid = IID('{EC056028-53EA-48C2-9DE2-77CEF64F4C1C}')

	def AddInitialObjects(self, Objects=defaultNamedNotOptArg):
		'ƒобавить объекты в массив копируемых объектов.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), ((12, 1),),Objects
			)

	def Clear(self):
		'ќчистить список исходных объектов массива.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), (),)

	def ClearDrivenObjects(self):
		'ќчистить список управл€ющих объектов.'
		return self._oleobj_.InvokeTypes(103, LCID, 1, (11, 0), (),)

	def Destroy(self):
		'–азрушить массив.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), (),)

	# Result is of type IModelObject
	# The method Exemplar is actually a property, but must be used as a method to correctly pass the arguments
	def Exemplar(self, Index1=defaultNamedNotOptArg, Index2=defaultNamedNotOptArg):
		'ѕолучить экземпл€р по индексу (или индексам).'
		ret = self._oleobj_.InvokeTypes(11, LCID, 2, (9, 0), ((3, 1), (3, 1)),Index1
			, Index2)
		if ret is not None:
			ret = Dispatch(ret, 'Exemplar', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def GetExemplarsCounts(self, Count1=pythoncom.Missing, Count2=pythoncom.Missing):
		'ѕолучить количество экземпл€ров.'
		return self._ApplyTypes_(12, 1, (11, 0), ((16387, 2), (16387, 2)), 'GetExemplarsCounts', None,Count1
			, Count2)

	def IsInitialObject(self, Object=defaultNamedNotOptArg):
		'ѕроверка - €вл€етс€ ли объект исходным дл€ массива.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((9, 1),),Object
			)

	def IsSuitableDrivenObject(self, Object=defaultNamedNotOptArg):
		'ѕроверка пригодности управл€ющего объекта дл€ операции.'
		return self._oleobj_.InvokeTypes(102, LCID, 1, (11, 0), ((9, 1),),Object
			)

	def IsSuitableObject(self, Object=defaultNamedNotOptArg):
		'ѕроверка пригодности объекта дл€ операции.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), ((9, 1),),Object
			)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BasePoint' returns object of type 'IModelObject'
		"BasePoint": (10, 2, (9, 0), (), "BasePoint", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"BasePointType": (9, 2, (3, 0), (), "BasePointType", None),
		"DrivenObjects": (101, 2, (12, 0), (), "DrivenObjects", None),
		"GeometryPattern": (8, 2, (11, 0), (), "GeometryPattern", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"InitialObjects": (1, 2, (12, 0), (), "InitialObjects", None),
		"InstanceDeletedIndexes": (2, 2, (12, 0), (), "InstanceDeletedIndexes", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'OrientationObject' returns object of type 'IModelObject'
		"OrientationObject": (107, 2, (9, 0), (), "OrientationObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"OrientationType": (106, 2, (3, 0), (), "OrientationType", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"ProjectionPoints": (104, 2, (11, 0), (), "ProjectionPoints", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"SaveInitialOrientation": (105, 2, (11, 0), (), "SaveInitialOrientation", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"BasePoint": ((10, LCID, 4, 0),()),
		"BasePointType": ((9, LCID, 4, 0),()),
		"DrivenObjects": ((101, LCID, 4, 0),()),
		"GeometryPattern": ((8, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"InitialObjects": ((1, LCID, 4, 0),()),
		"InstanceDeletedIndexes": ((2, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"OrientationObject": ((107, LCID, 4, 0),()),
		"OrientationType": ((106, LCID, 4, 0),()),
		"ProjectionPoints": ((104, LCID, 4, 0),()),
		"SaveInitialOrientation": ((105, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPoints(DispatchBaseClass):
	' оллекци€ 2D точек.'
	CLSID = IID('{8C6846A4-EE3B-4C00-A708-5C0FD01E21B7}')
	coclass_clsid = IID('{4B8726C5-E743-48A5-9C5F-506F5D57DB7F}')

	# Result is of type IPoint
	def Add(self):
		'—оздать 2D точку (добавить точку в коллекцию).'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{D0C19C87-14E7-401D-AEF5-A2E88E899F6E}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	# Result is of type IPoint
	# The method Point is actually a property, but must be used as a method to correctly pass the arguments
	def Point(self, Index=defaultNamedNotOptArg):
		'¬озвращает 2D точку, заданную по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Point', '{D0C19C87-14E7-401D-AEF5-A2E88E899F6E}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IPoints3D(DispatchBaseClass):
	" оллекци€ элементов 'ѕространственна€ точка'."
	CLSID = IID('{81EBB128-3963-4759-9D4E-2829C3078B0F}')
	coclass_clsid = IID('{2B0C2912-59D7-4976-9E57-20D83CDA9038}')

	# Result is of type IPoint3D
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{D71AEDBE-01D4-4C7D-96DC-94981F2A1C37}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type IPoint3D
	# The method Point3D is actually a property, but must be used as a method to correctly pass the arguments
	def Point3D(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Point3D', '{D71AEDBE-01D4-4C7D-96DC-94981F2A1C37}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IPointsArrFromFile(DispatchBaseClass):
	'√руппа точек из файла.'
	CLSID = IID('{782932B2-8969-41E1-819C-2458EA6DC8C0}')
	coclass_clsid = IID('{02155ADC-2F79-497F-9E33-9E3496050C71}')

	def Destroy(self):
		'–азрушить массив.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), (),)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"FileName": (2, 2, (8, 0), (), "FileName", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"PointsType": (1, 2, (3, 0), (), "PointsType", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Symbol": (3, 2, (3, 0), (), "Symbol", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"FileName": ((2, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"PointsType": ((1, LCID, 4, 0),()),
		"Symbol": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPointsArrOnCurve(DispatchBaseClass):
	'√руппа точек по кривой.'
	CLSID = IID('{13783B5E-3591-4173-8DA1-6F3095B88DB4}')
	coclass_clsid = IID('{CE1A13CE-C56C-4BCA-94CE-45D2C36B7EAA}')

	def Destroy(self):
		'–азрушить массив.'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (11, 0), (),)

	# The method Offset is actually a property, but must be used as a method to correctly pass the arguments
	def Offset(self, FirstPoint=defaultNamedNotOptArg):
		'«начение отступа %.'
		return self._oleobj_.InvokeTypes(9, LCID, 2, (5, 0), ((11, 1),),FirstPoint
			)

	# The method OffsetDirection is actually a property, but must be used as a method to correctly pass the arguments
	def OffsetDirection(self, FirstPoint=defaultNamedNotOptArg):
		'Ќаправление границы.'
		return self._oleobj_.InvokeTypes(10, LCID, 2, (11, 0), ((11, 1),),FirstPoint
			)

	# The method OffsetType is actually a property, but must be used as a method to correctly pass the arguments
	def OffsetType(self, FirstPoint=defaultNamedNotOptArg):
		'ѕолучить способ задани€ границ.'
		return self._oleobj_.InvokeTypes(8, LCID, 2, (3, 0), ((11, 1),),FirstPoint
			)

	# The method SetOffset is actually a property, but must be used as a method to correctly pass the arguments
	def SetOffset(self, FirstPoint=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'«начение отступа %.'
		return self._oleobj_.InvokeTypes(9, LCID, 4, (24, 0), ((11, 1), (5, 1)),FirstPoint
			, arg1)

	# The method SetOffsetDirection is actually a property, but must be used as a method to correctly pass the arguments
	def SetOffsetDirection(self, FirstPoint=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'Ќаправление границы.'
		return self._oleobj_.InvokeTypes(10, LCID, 4, (24, 0), ((11, 1), (11, 1)),FirstPoint
			, arg1)

	# The method SetOffsetType is actually a property, but must be used as a method to correctly pass the arguments
	def SetOffsetType(self, FirstPoint=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ѕолучить способ задани€ границ.'
		return self._oleobj_.InvokeTypes(8, LCID, 4, (24, 0), ((11, 1), (3, 1)),FirstPoint
			, arg1)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"BuildingType": (2, 2, (3, 0), (), "BuildingType", None),
		"ByStep": (5, 2, (11, 0), (), "ByStep", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		# Method 'Curve' returns object of type 'IModelObject'
		"Curve": (1, 2, (9, 0), (), "Curve", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		"OnOffsets": (7, 2, (11, 0), (), "OnOffsets", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"ReverseDirection": (6, 2, (11, 0), (), "ReverseDirection", None),
		"Step": (4, 2, (5, 0), (), "Step", None),
		"Symbol": (11, 2, (3, 0), (), "Symbol", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"BuildingType": ((2, LCID, 4, 0),()),
		"ByStep": ((5, LCID, 4, 0),()),
		"Count": ((3, LCID, 4, 0),()),
		"Curve": ((1, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"OnOffsets": ((7, LCID, 4, 0),()),
		"ReverseDirection": ((6, LCID, 4, 0),()),
		"Step": ((4, LCID, 4, 0),()),
		"Symbol": ((11, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IPointsArrOnSurface(DispatchBaseClass):
	'√руппа точек по поверхности.'
	CLSID = IID('{D385FED6-763E-4B1B-B8E5-8B1926389550}')
	coclass_clsid = IID('{E70927B9-FAA5-4149-B751-946A1E0E0EFE}')

	def Destroy(self):
		'–азрушить массив.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), (),)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"AllowBoundaries": (7, 2, (11, 0), (), "AllowBoundaries", None),
		"AngularDeflection": (6, 2, (5, 0), (), "AngularDeflection", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"BuildingType": (2, 2, (3, 0), (), "BuildingType", None),
		# Method 'Face' returns object of type 'IModelObject'
		"Face": (1, 2, (9, 0), (), "Face", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"LinearDeflection": (5, 2, (5, 0), (), "LinearDeflection", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Symbol": (8, 2, (3, 0), (), "Symbol", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"UCount": (3, 2, (3, 0), (), "UCount", None),
		"VCount": (4, 2, (3, 0), (), "VCount", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"AllowBoundaries": ((7, LCID, 4, 0),()),
		"AngularDeflection": ((6, LCID, 4, 0),()),
		"BuildingType": ((2, LCID, 4, 0),()),
		"Face": ((1, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"LinearDeflection": ((5, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Symbol": ((8, LCID, 4, 0),()),
		"UCount": ((3, LCID, 4, 0),()),
		"VCount": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPointsArrsFromFiles(DispatchBaseClass):
	' оллекци€ групп точек из файла.'
	CLSID = IID('{7EA13B3A-7D45-4E40-A5C3-1920B53437A6}')
	coclass_clsid = IID('{6DAB2B49-9659-411B-ABEB-5EB049AA817C}')

	# Result is of type IPointsArrFromFile
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{782932B2-8969-41E1-819C-2458EA6DC8C0}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type IPointsArrFromFile
	# The method PointsArrFromFile is actually a property, but must be used as a method to correctly pass the arguments
	def PointsArrFromFile(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по ссылке или индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'PointsArrFromFile', '{782932B2-8969-41E1-819C-2458EA6DC8C0}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IPointsArrsOnCurves(DispatchBaseClass):
	' оллекци€ групп точек по кривым.'
	CLSID = IID('{1A156DEF-0854-4FBD-9DC6-A6B415385C25}')
	coclass_clsid = IID('{CFA80033-A78C-43EA-9CEA-B26D1A18FA80}')

	# Result is of type IPointsArrOnCurve
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{13783B5E-3591-4173-8DA1-6F3095B88DB4}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type IPointsArrOnCurve
	# The method PointsArrOnCurve is actually a property, but must be used as a method to correctly pass the arguments
	def PointsArrOnCurve(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по ссылке или индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'PointsArrOnCurve', '{13783B5E-3591-4173-8DA1-6F3095B88DB4}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IPointsArrsOnSurfaces(DispatchBaseClass):
	' оллекци€ групп точек по поверхност€м.'
	CLSID = IID('{5BD348D2-2E20-4A8D-87B7-C74EF22D0310}')
	coclass_clsid = IID('{B4E7DDF0-E62A-4957-B477-B3B5797BF85A}')

	# Result is of type IPointsArrOnSurface
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{D385FED6-763E-4B1B-B8E5-8B1926389550}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type IPointsArrOnSurface
	# The method PointsArrOnSurface is actually a property, but must be used as a method to correctly pass the arguments
	def PointsArrOnSurface(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по ссылке или индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'PointsArrOnSurface', '{D385FED6-763E-4B1B-B8E5-8B1926389550}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IPolyLine(DispatchBaseClass):
	'3D ломана€.'
	CLSID = IID('{6CE7843D-9AFA-48FF-B444-61CDF036D118}')
	coclass_clsid = IID('{1F490D96-2098-40E6-BB73-52DD0A71111A}')

	# Result is of type ICurveVertexParam
	def AddVertex(self, Index=defaultNamedNotOptArg):
		'—оздать новую вершину.'
		ret = self._oleobj_.InvokeTypes(8, LCID, 1, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddVertex', '{2AD2E4B4-B870-437A-8D57-5807729FCB05}')
		return ret

	def DeleteVertex(self, Index=defaultNamedNotOptArg):
		'”далить вершину.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), ((3, 1),),Index
			)

	def Flush(self):
		'ќчистить массив вершин.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), (),)

	def GetVertexCoordinatesArray(self, Coordinates=pythoncom.Missing, Radiuses=pythoncom.Missing):
		'ћассив координат и радиусов вершин в виде SAFEARRAY DISPATCH - VT_ARRAY | VT_R8.'
		return self._ApplyTypes_(12, 1, (11, 0), ((16396, 2), (16396, 2)), 'GetVertexCoordinatesArray', None,Coordinates
			, Radiuses)

	def ReadFromFile(self, FileName=defaultNamedNotOptArg):
		'ѕрочитать файл с данными.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), ((8, 1),),FileName
			)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	# Result is of type ICurveVertexParam
	# The method VertexParams is actually a property, but must be used as a method to correctly pass the arguments
	def VertexParams(self, Index=defaultNamedNotOptArg):
		'ѕолучить параметры вершины ломаной.'
		ret = self._oleobj_.InvokeTypes(5, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'VertexParams', '{2AD2E4B4-B870-437A-8D57-5807729FCB05}')
		return ret

	def WriteToFile(self, FileName=defaultNamedNotOptArg):
		'«аписать файл с данными.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), ((8, 1),),FileName
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Closed": (1, 2, (11, 0), (), "Closed", None),
		"Edges": (4, 2, (12, 0), (), "Edges", None),
		"ErrorIndexes": (13, 2, (12, 0), (), "ErrorIndexes", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
		"VertexCount": (3, 2, (3, 0), (), "VertexCount", None),
		"VertexParamsArray": (11, 2, (12, 0), (), "VertexParamsArray", None),
		"VertexVisible": (2, 2, (11, 0), (), "VertexVisible", None),
	}
	_prop_map_put_ = {
		"Closed": ((1, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"VertexVisible": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPolyLine2D(DispatchBaseClass):
	'ѕолилини€.'
	CLSID = IID('{4D0DA413-9507-4795-896F-E049FA6E44DD}')
	coclass_clsid = IID('{FFC3A04A-C9BD-44C2-9485-41F4A655653C}')

	def AddPoint(self, Index=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg):
		'ƒобавить точку.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((3, 1), (5, 1), (5, 1)),Index
			, X, Y)

	def Clear(self):
		'”далить все точки.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), (),)

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def DeletePoint(self, Index=defaultNamedNotOptArg):
		'”далить точку.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), ((3, 1),),Index
			)

	def GetPoint(self, Index=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing):
		'ѕолучить параметры точки.'
		return self._ApplyTypes_(5, 1, (11, 0), ((3, 1), (16389, 2), (16389, 2)), 'GetPoint', None,Index
			, X, Y)

	def ReadFromFile(self, FileName=defaultNamedNotOptArg):
		'ѕрочитать файл с данными.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), ((8, 1),),FileName
			)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	def WriteToFile(self, FileName=defaultNamedNotOptArg):
		'«аписать файл с данными.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), ((8, 1),),FileName
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Closed": (1, 2, (11, 0), (), "Closed", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Points": (3, 2, (12, 0), (), "Points", None),
		"PointsCount": (2, 2, (3, 0), (), "PointsCount", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Style": (8, 2, (3, 0), (), "Style", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Closed": ((1, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"Points": ((3, LCID, 4, 0),()),
		"Style": ((8, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPolyLines(DispatchBaseClass):
	" оллекци€ элементов 'ломана€'."
	CLSID = IID('{0CF9B989-29F8-495F-9DDA-8C2CAD840BB6}')
	coclass_clsid = IID('{1DC144A1-0F9F-4D93-98EC-53BFCCF795FE}')

	# Result is of type IPolyLine
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{6CE7843D-9AFA-48FF-B444-61CDF036D118}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type IPolyLine
	# The method PolyLine is actually a property, but must be used as a method to correctly pass the arguments
	def PolyLine(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'PolyLine', '{6CE7843D-9AFA-48FF-B444-61CDF036D118}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IPolyLines2D(DispatchBaseClass):
	' оллекци€ полилиний.'
	CLSID = IID('{D1A9CB2D-A259-4CCC-9CD4-FA006494BCA7}')
	coclass_clsid = IID('{6A3B4FB6-FB8D-40D2-B3CA-2DFE4FF725B5}')

	# Result is of type IPolyLine2D
	def Add(self):
		'—оздать полилинию (добавить полилинию в коллекцию).'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{4D0DA413-9507-4795-896F-E049FA6E44DD}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	# Result is of type IPolyLine2D
	# The method PolyLine2D is actually a property, but must be used as a method to correctly pass the arguments
	def PolyLine2D(self, Index=defaultNamedNotOptArg):
		'¬озвращает полилинию, заданную по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'PolyLine2D', '{4D0DA413-9507-4795-896F-E049FA6E44DD}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IPositionLeader(DispatchBaseClass):
	'Ћини€ выноски дл€ обозначени€ позиции.'
	CLSID = IID('{A8227628-4B9C-42C8-AE58-B3716A7EC1AF}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Form": (1504, 2, (3, 0), (), "Form", None),
		"Horizontally": (1507, 2, (11, 0), (), "Horizontally", None),
		# Method 'Positions' returns object of type 'IText'
		"Positions": (1505, 2, (9, 0), (), "Positions", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		"ShelfDirection": (1501, 2, (3, 0), (), "ShelfDirection", None),
		"ShelfVisible": (1502, 2, (11, 0), (), "ShelfVisible", None),
		"TextDirection": (1503, 2, (11, 0), (), "TextDirection", None),
		# Method 'UnderPositionText' returns object of type 'IText'
		"UnderPositionText": (1506, 2, (9, 0), (), "UnderPositionText", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
	}
	_prop_map_put_ = {
		"Form": ((1504, LCID, 4, 0),()),
		"Horizontally": ((1507, LCID, 4, 0),()),
		"ShelfDirection": ((1501, LCID, 4, 0),()),
		"ShelfVisible": ((1502, LCID, 4, 0),()),
		"TextDirection": ((1503, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPrintJob(DispatchBaseClass):
	'«адание на печать'
	CLSID = IID('{9D86880B-C004-475D-8221-B786FD5A228B}')
	coclass_clsid = IID('{87DAB0E6-B749-47FC-8E02-76DAC0439C81}')

	def AddSheets(self, FileName=defaultNamedNotOptArg, Sheets=defaultNamedNotOptArg, Range=defaultNamedNotOptArg):
		'ƒобавить листы указанного документа'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), ((8, 1), (12, 1), (3, 1)),FileName
			, Sheets, Range)

	def Clear(self):
		'ќчистить здание на печать и привести все настройки в умолчательное состо€ние.'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (11, 0), (),)

	def Execute(self, OutputFileName=defaultNamedNotOptArg):
		'ќтправить задание на печать на устройство печати.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), ((8, 1),),OutputFileName
			)

	def GetPageGabarites(self, Width=pythoncom.Missing, Height=pythoncom.Missing):
		'ѕолучить габариты страницы устройства печати.'
		return self._ApplyTypes_(11, 1, (11, 0), ((16389, 2), (16389, 2)), 'GetPageGabarites', None,Width
			, Height)

	def GetPagesMapGabarites(self, WPageCount=pythoncom.Missing, HPageCount=pythoncom.Missing):
		'ѕолучить размеры карты страниц - количество страниц по вертикали и горизонтали'
		return self._ApplyTypes_(12, 1, (11, 0), ((16387, 2), (16387, 2)), 'GetPagesMapGabarites', None,WPageCount
			, HPageCount)

	def Load(self, FileName=defaultNamedNotOptArg, Errors=pythoncom.Missing):
		'«агрузить задание на печать из файла.'
		return self._ApplyTypes_(3, 1, (11, 0), ((8, 1), (16396, 2)), 'Load', None,FileName
			, Errors)

	# The method PagePrintableFlag is actually a property, but must be used as a method to correctly pass the arguments
	def PagePrintableFlag(self, WPage=defaultNamedNotOptArg, HPage=defaultNamedNotOptArg):
		'ѕолучить признак печатаемости страницы по ее индексам'
		return self._oleobj_.InvokeTypes(13, LCID, 2, (11, 0), ((3, 1), (3, 1)),WPage
			, HPage)

	def RemoveSheets(self, Index=defaultNamedNotOptArg):
		'”далить лист из задани€, по индексу.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), ((12, 1),),Index
			)

	def Save(self, FileName=defaultNamedNotOptArg):
		'—охранить задание на печать  в файл.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((8, 1),),FileName
			)

	# The method SetPagePrintableFlag is actually a property, but must be used as a method to correctly pass the arguments
	def SetPagePrintableFlag(self, WPage=defaultNamedNotOptArg, HPage=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		'ѕолучить признак печатаемости страницы по ее индексам'
		return self._oleobj_.InvokeTypes(13, LCID, 4, (24, 0), ((3, 1), (3, 1), (11, 1)),WPage
			, HPage, arg2)

	# Result is of type IPrintJob_Sheet
	# The method Sheet is actually a property, but must be used as a method to correctly pass the arguments
	def Sheet(self, Index=defaultNamedNotOptArg):
		'»нтерфейс листа, по индексу.'
		ret = self._oleobj_.InvokeTypes(8, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Sheet', '{0EC985BC-81FC-498E-BF15-03DDC870AA33}')
		return ret

	def ShowPreviewWindow(self):
		'ѕоказать окно предварительного просмотра перед печатью.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), (),)

	def SpecialExecute(self, OutputFileName=defaultNamedNotOptArg):
		'ќтправить задание на специальную печать.'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (11, 0), ((8, 1),),OutputFileName
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"PagesCount": (10, 2, (3, 0), (), "PagesCount", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"SheetsCount": (7, 2, (3, 0), (), "SheetsCount", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPrintJob_OutputParameters(DispatchBaseClass):
	'«адание на печать::»нтерфейс параметров вывода'
	CLSID = IID('{CB083231-EE0D-4596-B04D-E6A020926557}')
	coclass_clsid = None

	_prop_map_get_ = {
		"AccuracyModelOutput": (2007, 2, (3, 0), (), "AccuracyModelOutput", None),
		"AlternativeFillingOutput": (2006, 2, (11, 0), (), "AlternativeFillingOutput", None),
		"AutoScale": (2010, 2, (11, 0), (), "AutoScale", None),
		"CatchSpacing": (2012, 2, (3, 0), (), "CatchSpacing", None),
		"CollateCopies": (2002, 2, (11, 0), (), "CollateCopies", None),
		"Color": (2004, 2, (3, 0), (), "Color", None),
		"DefaultScale": (2009, 2, (5, 0), (), "DefaultScale", None),
		"Hooking": (2014, 2, (3, 0), (), "Hooking", None),
		"NumberOfCopies": (2001, 2, (3, 0), (), "NumberOfCopies", None),
		"OnlyThinLines": (2005, 2, (11, 0), (), "OnlyThinLines", None),
		"PageOutputOrder": (2008, 2, (3, 0), (), "PageOutputOrder", None),
		"PlotToFile": (2003, 2, (11, 0), (), "PlotToFile", None),
		"UseCatchSpacing": (2011, 2, (11, 0), (), "UseCatchSpacing", None),
		"UseHooking": (2013, 2, (11, 0), (), "UseHooking", None),
	}
	_prop_map_put_ = {
		"AccuracyModelOutput": ((2007, LCID, 4, 0),()),
		"AlternativeFillingOutput": ((2006, LCID, 4, 0),()),
		"AutoScale": ((2010, LCID, 4, 0),()),
		"CatchSpacing": ((2012, LCID, 4, 0),()),
		"CollateCopies": ((2002, LCID, 4, 0),()),
		"Color": ((2004, LCID, 4, 0),()),
		"DefaultScale": ((2009, LCID, 4, 0),()),
		"Hooking": ((2014, LCID, 4, 0),()),
		"NumberOfCopies": ((2001, LCID, 4, 0),()),
		"OnlyThinLines": ((2005, LCID, 4, 0),()),
		"PageOutputOrder": ((2008, LCID, 4, 0),()),
		"PlotToFile": ((2003, LCID, 4, 0),()),
		"UseCatchSpacing": ((2011, LCID, 4, 0),()),
		"UseHooking": ((2013, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPrintJob_PrinterSettings(DispatchBaseClass):
	'«адание на печать::»нтерфейс настроек принтера'
	CLSID = IID('{095CE8C1-B2E7-4417-AB3D-CCE01480C08E}')
	coclass_clsid = None

	def InitPrinterSettings(self, DeviceName=defaultNamedNotOptArg, IsPortraitPage=defaultNamedNotOptArg, PaperSize=defaultNamedNotOptArg, PaperLength=defaultNamedNotOptArg
			, PaperWidth=defaultNamedNotOptArg, PaperSource=defaultNamedNotOptArg):
		'”становить настройки принтера.'
		return self._oleobj_.InvokeTypes(3001, LCID, 1, (11, 0), ((8, 1), (11, 1), (3, 1), (3, 1), (3, 1), (3, 1)),DeviceName
			, IsPortraitPage, PaperSize, PaperLength, PaperWidth, PaperSource
			)

	def LoadPrinterConfig(self, FileName=defaultNamedNotOptArg):
		'«агрузить конфигурацию принтера.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), ((8, 1),),FileName
			)

	def SavePrinterConfig(self, FileName=defaultNamedNotOptArg):
		'—охранить конфигурацию принтера.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), ((8, 1),),FileName
			)

	_prop_map_get_ = {
		"DeviceName": (3002, 2, (8, 0), (), "DeviceName", None),
		"IsPortraitPage": (3006, 2, (11, 0), (), "IsPortraitPage", None),
		"PaperLength": (3009, 2, (3, 0), (), "PaperLength", None),
		"PaperSize": (3007, 2, (3, 0), (), "PaperSize", None),
		"PaperSource": (3008, 2, (3, 0), (), "PaperSource", None),
		"PaperWidth": (3010, 2, (3, 0), (), "PaperWidth", None),
		"Port": (3003, 2, (8, 0), (), "Port", None),
		"PrinterType": (3011, 2, (3, 0), (), "PrinterType", None),
	}
	_prop_map_put_ = {
		"IsPortraitPage": ((3006, LCID, 4, 0),()),
		"PaperLength": ((3009, LCID, 4, 0),()),
		"PaperSize": ((3007, LCID, 4, 0),()),
		"PaperSource": ((3008, LCID, 4, 0),()),
		"PaperWidth": ((3010, LCID, 4, 0),()),
		"PrinterType": ((3011, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPrintJob_Sheet(DispatchBaseClass):
	'«адание на печать::»нтерфейс листа документа'
	CLSID = IID('{0EC985BC-81FC-498E-BF15-03DDC870AA33}')
	coclass_clsid = IID('{F035E79B-1F65-42C6-AB49-498C65CC2E1F}')

	def GetClipFrameGabarites(self, Left=pythoncom.Missing, Bottom=pythoncom.Missing, Right=pythoncom.Missing, Top=pythoncom.Missing):
		'ѕолучить выводимые на печать габариты листа.'
		return self._ApplyTypes_(9, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2), (16389, 2)), 'GetClipFrameGabarites', None,Left
			, Bottom, Right, Top)

	def GetGabarites(self, Width=pythoncom.Missing, Height=pythoncom.Missing):
		'ѕолучить габариты листа.'
		return self._ApplyTypes_(3, 1, (11, 0), ((16389, 2), (16389, 2)), 'GetGabarites', None,Width
			, Height)

	def SetClipFrameGabarites(self, Left=defaultNamedNotOptArg, Bottom=defaultNamedNotOptArg, Right=defaultNamedNotOptArg, Top=defaultNamedNotOptArg):
		'”становить выводимые на печать габариты листа.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1), (5, 1)),Left
			, Bottom, Right, Top)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ClipFlag": (8, 2, (11, 0), (), "ClipFlag", None),
		"DocumentName": (1, 2, (8, 0), (), "DocumentName", None),
		"Number": (2, 2, (3, 0), (), "Number", None),
		"Orientation": (4, 2, (3, 0), (), "Orientation", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Scale": (7, 2, (5, 0), (), "Scale", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"X": (5, 2, (5, 0), (), "X", None),
		"Y": (6, 2, (5, 0), (), "Y", None),
	}
	_prop_map_put_ = {
		"ClipFlag": ((8, LCID, 4, 0),()),
		"Orientation": ((4, LCID, 4, 0),()),
		"Scale": ((7, LCID, 4, 0),()),
		"X": ((5, LCID, 4, 0),()),
		"Y": ((6, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IProcedure(DispatchBaseClass):
	'ѕроцедура прикладной библиотеки  ќћѕј—.'
	CLSID = IID('{7BF9DF08-D14D-4DA9-ABC2-FB458E7122D0}')
	coclass_clsid = IID('{5D9929F6-3D65-4DAF-B146-A85FA98F2356}')

	def Execute(self, External=defaultNamedNotOptArg, Post=defaultNamedNotOptArg):
		'¬ыполн€ет команду.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((9, 1), (11, 1)),External
			, Post)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Id": (3, 2, (3, 0), (), "Id", None),
		"LibraryFolder": (2, 2, (8, 0), (), "LibraryFolder", None),
		"Name": (1, 2, (8, 0), (), "Name", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IProcedures(DispatchBaseClass):
	' оллекци€ процедур прикладной библиотеки  ќћѕј—.'
	CLSID = IID('{1A77F076-2295-40F9-B1AA-2838C4CA0887}')
	coclass_clsid = IID('{0EA0000E-9328-488D-B611-9F72EECCD92D}')

	# Result is of type IProcedure
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по имени или по индексу'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{7BF9DF08-D14D-4DA9-ABC2-FB458E7122D0}')
		return ret

	# Result is of type IProcedure
	# The method ItemByID is actually a property, but must be used as a method to correctly pass the arguments
	def ItemByID(self, Id=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по идентификатору команды.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((3, 1),),Id
			)
		if ret is not None:
			ret = Dispatch(ret, 'ItemByID', '{7BF9DF08-D14D-4DA9-ABC2-FB458E7122D0}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по имени или по индексу'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{7BF9DF08-D14D-4DA9-ABC2-FB458E7122D0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{7BF9DF08-D14D-4DA9-ABC2-FB458E7122D0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IProceduresLibraries(DispatchBaseClass):
	' оллекци€ прикладных библиотек  ќћѕј—.'
	CLSID = IID('{80F95B5B-DB8A-46B7-8C22-605A0AECD597}')
	coclass_clsid = IID('{DBC3AC55-2823-4661-9740-54843BA72B12}')

	# Result is of type IProceduresLibrary
	def Add(self, PathName=defaultNamedNotOptArg, LibManagerFolder=defaultNamedNotOptArg):
		'ƒобавл€ет элемент в коллекцию.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 1, (9, 0), ((8, 1), (8, 1)),PathName
			, LibManagerFolder)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{1AECE59E-DE4C-4FB9-B62B-7967573AD3B1}')
		return ret

	# Result is of type IProceduresLibrary
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает прикладную библиотеку, заданную по имени или по индексу'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{1AECE59E-DE4C-4FB9-B62B-7967573AD3B1}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает прикладную библиотеку, заданную по имени или по индексу'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{1AECE59E-DE4C-4FB9-B62B-7967573AD3B1}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{1AECE59E-DE4C-4FB9-B62B-7967573AD3B1}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IProceduresLibrary(DispatchBaseClass):
	'ѕрикладна€ библиотека  ќћѕј—.'
	CLSID = IID('{1AECE59E-DE4C-4FB9-B62B-7967573AD3B1}')
	coclass_clsid = IID('{E865B51E-8276-4F7E-A20B-509DC25679B1}')

	def Delete(self):
		'”далить описание библиотеки.'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (11, 0), (),)

	def Execute(self, Command=defaultNamedNotOptArg, External=defaultNamedNotOptArg, Post=defaultNamedNotOptArg):
		'¬ыполн€ет команду.'
		return self._oleobj_.InvokeTypes(2007, LCID, 1, (11, 0), ((3, 1), (9, 1), (11, 1)),Command
			, External, Post)

	def SystemControlStart(self, menuCommand=defaultNamedNotOptArg):
		'ѕередать управление системе из под библиотеки.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (3, 0), ((8, 1),),menuCommand
			)

	def SystemControlStop(self):
		'¬ернуть управление в библиотеку.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"AddIns": (8, 2, (11, 0), (), "AddIns", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Attach": (2002, 2, (11, 0), (), "Attach", None),
		"CurrentCommand": (3, 2, (3, 0), (), "CurrentCommand", None),
		"Enable": (2006, 2, (11, 0), (), "Enable", None),
		"Executable": (7, 2, (11, 0), (), "Executable", None),
		"ExternalInterface": (9, 2, (9, 0), (), "ExternalInterface", None),
		"IconsFont": (11, 2, (8, 0), (), "IconsFont", None),
		"LibraryManagerFolder": (2001, 2, (8, 0), (), "LibraryManagerFolder", None),
		"LibraryName": (10, 2, (8, 0), (), "LibraryName", None),
		"LibraryType": (2003, 2, (3, 0), (), "LibraryType", None),
		"Name": (2004, 2, (8, 0), (), "Name", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"PathName": (2005, 2, (8, 0), (), "PathName", None),
		# Method 'Procedures' returns object of type 'IProcedures'
		"Procedures": (2, 2, (9, 0), (), "Procedures", '{1A77F076-2295-40F9-B1AA-2838C4CA0887}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Style": (1, 2, (3, 0), (), "Style", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"UniqueId": (6, 2, (3, 0), (), "UniqueId", None),
	}
	_prop_map_put_ = {
		"Attach": ((2002, LCID, 4, 0),()),
		"Style": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IProcess(DispatchBaseClass):
	'»нтерфейс процесса'
	CLSID = IID('{3A7C6A0C-53DB-4043-9A77-6D3989175741}')
	coclass_clsid = IID('{172114B0-F8B7-4BED-A38B-62BFC490A3AF}')

	def Run(self, Modal=defaultNamedNotOptArg, PostMessage=defaultNamedNotOptArg):
		'«апустить процесс.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), ((11, 1), (11, 1)),Modal
			, PostMessage)

	def SetCursorText(self, PVal=defaultNamedNotOptArg):
		'”становить текст курсора.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), ((8, 1),),PVal
			)

	def Stop(self):
		'ќстановить процесс.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновить параметры процесса.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Caption": (3, 2, (8, 0), (), "Caption", None),
		"Critical": (12, 2, (11, 0), (), "Critical", None),
		"CursorId": (2, 2, (12, 0), (), "CursorId", None),
		"Dynamic": (7, 2, (11, 0), (), "Dynamic", None),
		"Menu": (5, 2, (12, 0), (), "Menu", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'ProcessParam' returns object of type 'IProcessParam'
		"ProcessParam": (1, 2, (9, 0), (), "ProcessParam", '{CB5FDBC8-4DAE-4C4B-87D5-6FD1F2705C38}'),
		"Prompt": (4, 2, (8, 0), (), "Prompt", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"ResModule": (6, 2, (12, 0), (), "ResModule", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"Caption": ((3, LCID, 4, 0),()),
		"Critical": ((12, LCID, 4, 0),()),
		"CursorId": ((2, LCID, 4, 0),()),
		"Dynamic": ((7, LCID, 4, 0),()),
		"Menu": ((5, LCID, 4, 0),()),
		"ProcessParam": ((1, LCID, 4, 0),()),
		"Prompt": ((4, LCID, 4, 0),()),
		"ResModule": ((6, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IProcess2D(DispatchBaseClass):
	'»нтерфейс процесса 2D'
	CLSID = IID('{C74D7419-0970-4904-907C-DCC5407C59B0}')
	coclass_clsid = IID('{A54A786D-FBBA-45F6-BAFB-18E6D2CE96FF}')

	_prop_map_get_ = {
		"Angle": (103, 2, (5, 0), (), "Angle", None),
		# Method 'Phantom2D' returns object of type 'IPhantom2D'
		"Phantom2D": (104, 2, (9, 0), (), "Phantom2D", '{A6E4F3B6-0554-4A67-A700-428090A6739A}'),
		"X": (101, 2, (5, 0), (), "X", None),
		"Y": (102, 2, (5, 0), (), "Y", None),
	}
	_prop_map_put_ = {
		"Angle": ((103, LCID, 4, 0),()),
		"X": ((101, LCID, 4, 0),()),
		"Y": ((102, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IProcess3D(DispatchBaseClass):
	'»нтерфейс процесса 3D'
	CLSID = IID('{77730022-3179-4674-AE49-604FABC0B6B1}')
	coclass_clsid = IID('{172114B0-F8B7-4BED-A38B-62BFC490A3AF}')

	# The method ObjectsFilter3D is actually a property, but must be used as a method to correctly pass the arguments
	def ObjectsFilter3D(self, Type=defaultNamedNotOptArg):
		'—пособ фильтрации 3D объектов.'
		return self._oleobj_.InvokeTypes(109, LCID, 2, (11, 0), ((3, 1),),Type
			)

	def RunTakeCreateObjectProcess(self, ProcessType=defaultNamedNotOptArg, TakeObject=defaultNamedNotOptArg, NeedCreateTakeObj=defaultNamedNotOptArg, LostTakeObj=defaultNamedNotOptArg):
		'«апустить подчиненный режим создани€ объектов.'
		return self._oleobj_.InvokeTypes(105, LCID, 1, (11, 0), ((3, 1), (9, 1), (11, 1), (11, 1)),ProcessType
			, TakeObject, NeedCreateTakeObj, LostTakeObj)

	# The method SetObjectsFilter3D is actually a property, but must be used as a method to correctly pass the arguments
	def SetObjectsFilter3D(self, Type=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'—пособ фильтрации 3D объектов.'
		return self._oleobj_.InvokeTypes(109, LCID, 4, (24, 0), ((3, 1), (11, 1)),Type
			, arg1)

	_prop_map_get_ = {
		"ClearProcessUndo": (110, 2, (11, 0), (), "ClearProcessUndo", None),
		# Method 'Manipulators' returns object of type 'IManipulators'
		"Manipulators": (107, 2, (9, 0), (), "Manipulators", '{5FBB9528-B629-46DE-8BA6-13C5872BDD15}'),
		# Method 'MateConstraints' returns object of type 'IMateConstraints3D'
		"MateConstraints": (104, 2, (9, 0), (), "MateConstraints", '{95F316E1-0A18-4F42-8B70-1423250F244D}'),
		"MateConstraintsObjects": (103, 2, (12, 0), (), "MateConstraintsObjects", None),
		# Method 'PhantomObject' returns object of type 'IModelObject'
		"PhantomObject": (102, 2, (9, 0), (), "PhantomObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'Placement' returns object of type 'IPlacement3D'
		"Placement": (101, 2, (9, 0), (), "Placement", '{9C66DE49-529C-4678-9AF1-12710CB77804}'),
		"SelectionBandMode": (108, 2, (3, 0), (), "SelectionBandMode", None),
		# Method 'TakeProcessObject' returns object of type 'IModelObject'
		"TakeProcessObject": (106, 2, (9, 0), (), "TakeProcessObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
	}
	_prop_map_put_ = {
		"ClearProcessUndo": ((110, LCID, 4, 0),()),
		"MateConstraintsObjects": ((103, LCID, 4, 0),()),
		"PhantomObject": ((102, LCID, 4, 0),()),
		"SelectionBandMode": ((108, LCID, 4, 0),()),
		"TakeProcessObject": ((106, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IProcessContextIconMenu(DispatchBaseClass):
	' онтекстное меню процесса с иконками.'
	CLSID = IID('{3F23FD10-1526-414D-93BC-AB273794F654}')
	coclass_clsid = None

	def AddMenuCommand(self, Id=defaultNamedNotOptArg, Title=defaultNamedNotOptArg, Icon=defaultNamedNotOptArg, IconFont=defaultNamedNotOptArg):
		'ƒобавить пункт меню.'
		return self._oleobj_.InvokeTypes(3001, LCID, 1, (11, 0), ((3, 1), (8, 1), (3, 1), (8, 1)),Id
			, Title, Icon, IconFont)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IProcessContextPanel(DispatchBaseClass):
	' онтекстна€ панель процесса.'
	CLSID = IID('{C97E7403-B375-4544-87DD-4D3EF36388E5}')
	coclass_clsid = None

	def AddAdditionalButtonsFromControl(self, PVal=defaultNamedNotOptArg, Title=defaultNamedNotOptArg):
		'ƒобавить группу дополнительных кнопок.'
		return self._oleobj_.InvokeTypes(2002, LCID, 1, (11, 0), ((9, 1), (8, 1)),PVal
			, Title)

	def AddControl(self, PVal=defaultNamedNotOptArg):
		'ƒобавить контрол.'
		return self._oleobj_.InvokeTypes(2001, LCID, 1, (11, 0), ((9, 1),),PVal
			)

	def AddGeomCalculatorCommands(self, PVal=defaultNamedNotOptArg):
		'ƒобавить команды меню геометрического калькул€тора.'
		return self._oleobj_.InvokeTypes(2004, LCID, 1, (11, 0), ((9, 1),),PVal
			)

	def AddGroupBegin(self, Title=defaultNamedNotOptArg):
		'ƒобавить начало подгруппы.'
		return self._oleobj_.InvokeTypes(2008, LCID, 1, (11, 0), ((8, 1),),Title
			)

	def AddGroupEnd(self):
		'ƒобавить конец подгруппы.'
		return self._oleobj_.InvokeTypes(2009, LCID, 1, (11, 0), (),)

	def AddLinkContentButton(self, PVal=defaultNamedNotOptArg, Title=defaultNamedNotOptArg):
		'ƒобавить кнопку ссылочного содержимого регистратора.'
		return self._oleobj_.InvokeTypes(2003, LCID, 1, (11, 0), ((9, 1), (8, 1)),PVal
			, Title)

	def AddNewSearchButton(self):
		'ƒобавить кнопку перебор объектов.'
		return self._oleobj_.InvokeTypes(2006, LCID, 1, (11, 0), (),)

	def AddSeparator(self):
		'ƒобавить разделитель.'
		return self._oleobj_.InvokeTypes(2005, LCID, 1, (11, 0), (),)

	def AddSnapCommands(self):
		'ƒобавить команды прив€зок.'
		return self._oleobj_.InvokeTypes(2007, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IProcessInfoWindow(DispatchBaseClass):
	'»нформационное окно процесса'
	CLSID = IID('{06F93FBF-C65A-49B1-83DB-C736BA33F0A5}')
	coclass_clsid = None

	_prop_map_get_ = {
		"CloseProcess": (503, 2, (11, 0), (), "CloseProcess", None),
		"CreateWindow": (501, 2, (11, 0), (), "CreateWindow", None),
		"HelpId": (506, 2, (3, 0), (), "HelpId", None),
		"Text": (505, 2, (8, 0), (), "Text", None),
		"Visible": (504, 2, (11, 0), (), "Visible", None),
		"WindowCaption": (502, 2, (8, 0), (), "WindowCaption", None),
	}
	_prop_map_put_ = {
		"CloseProcess": ((503, LCID, 4, 0),()),
		"CreateWindow": ((501, LCID, 4, 0),()),
		"HelpId": ((506, LCID, 4, 0),()),
		"Text": ((505, LCID, 4, 0),()),
		"Visible": ((504, LCID, 4, 0),()),
		"WindowCaption": ((502, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IProcessParam(DispatchBaseClass):
	'»нтерфейс параметров процесса'
	CLSID = IID('{CB5FDBC8-4DAE-4C4B-87D5-6FD1F2705C38}')
	coclass_clsid = IID('{4C33DE6E-FEAC-4C28-9EE0-32C37F8E7A48}')

	def AddSetupMenuCommand(self, Title=defaultNamedNotOptArg, Command=defaultNamedNotOptArg, Checable=defaultNamedNotOptArg):
		'ƒобавить пункт в меню настроек процесса.'
		return self._oleobj_.InvokeTypes(19, LCID, 1, (11, 0), ((8, 1), (3, 1), (11, 1)),Title
			, Command, Checable)

	def AddSpecToolbarButton(self, BtnID=defaultNamedNotOptArg, Bmp=defaultNamedNotOptArg, Tips=defaultNamedNotOptArg, IconFont=defaultNamedNotOptArg):
		'ƒобавить кнопку в спецпанель'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (11, 0), ((3, 1), (12, 1), (8, 1), (8, 1)),BtnID
			, Bmp, Tips, IconFont)

	# The method BmpBeginId is actually a property, but must be used as a method to correctly pass the arguments
	def BmpBeginId(self, Size=defaultNamedNotOptArg):
		'Ќачальный диапазон дл€ иконок специальной панели.'
		return self._oleobj_.InvokeTypes(8, LCID, 2, (3, 0), ((3, 1),),Size
			)

	def ClearSpecToolbar(self):
		'ќчистить спецпанель'
		return self._oleobj_.InvokeTypes(22, LCID, 1, (11, 0), (),)

	def GetGabaritRect(self, Left=pythoncom.Missing, Top=pythoncom.Missing, Right=pythoncom.Missing, Bottom=pythoncom.Missing):
		'ѕолучить габаритный пр€моугольник панели свойств.'
		return self._ApplyTypes_(11, 1, (24, 0), ((16387, 2), (16387, 2), (16387, 2), (16387, 2)), 'GetGabaritRect', None,Left
			, Top, Right, Bottom)

	def PopProcessName(self):
		'”брать им€ подпроцесса.'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (11, 0), (),)

	def PushProcessName(self, Name=defaultNamedNotOptArg):
		'”становить им€ подпроцесса.'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (11, 0), ((8, 1),),Name
			)

	# The method SetBmpBeginId is actually a property, but must be used as a method to correctly pass the arguments
	def SetBmpBeginId(self, Size=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'Ќачальный диапазон дл€ иконок специальной панели.'
		return self._oleobj_.InvokeTypes(8, LCID, 4, (24, 0), ((3, 1), (3, 1)),Size
			, arg1)

	def SetSetupMenuCommandState(self, Command=defaultNamedNotOptArg, Visible=defaultNamedNotOptArg, Enable=defaultNamedNotOptArg, Checked=defaultNamedNotOptArg):
		'”становить состо€ние команды меню настроек процесса.'
		return self._oleobj_.InvokeTypes(20, LCID, 1, (11, 0), ((3, 1), (11, 1), (11, 1), (11, 1)),Command
			, Visible, Enable, Checked)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AutoReduce": (4, 2, (11, 0), (), "AutoReduce", None),
		"Caption": (1, 2, (8, 0), (), "Caption", None),
		"DefaultControlFix": (5, 2, (3, 0), (), "DefaultControlFix", None),
		"EnableUndoRedo": (18, 2, (11, 0), (), "EnableUndoRedo", None),
		"EnterButtonIconType": (21, 2, (3, 0), (), "EnterButtonIconType", None),
		"Layout": (9, 2, (3, 0), (), "Layout", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'PropertyTabs' returns object of type 'IPropertyTabs'
		"PropertyTabs": (2, 2, (9, 0), (), "PropertyTabs", '{5BA6324E-E555-490F-A0E2-68D3C6C88D92}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"ResModule": (6, 2, (12, 0), (), "ResModule", None),
		"ShowCommandWindow": (14, 2, (11, 0), (), "ShowCommandWindow", None),
		"ShowContextMenuOfGeomCalculator": (13, 2, (11, 0), (), "ShowContextMenuOfGeomCalculator", None),
		"ShowContextMenuOfSnap": (12, 2, (11, 0), (), "ShowContextMenuOfSnap", None),
		"SpecToolbar": (3, 2, (3, 0), (), "SpecToolbar", None),
		"SpecToolbarEx": (7, 2, (3, 0), (), "SpecToolbarEx", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"AutoReduce": ((4, LCID, 4, 0),()),
		"Caption": ((1, LCID, 4, 0),()),
		"DefaultControlFix": ((5, LCID, 4, 0),()),
		"EnableUndoRedo": ((18, LCID, 4, 0),()),
		"EnterButtonIconType": ((21, LCID, 4, 0),()),
		"ResModule": ((6, LCID, 4, 0),()),
		"ShowCommandWindow": ((14, LCID, 4, 0),()),
		"ShowContextMenuOfGeomCalculator": ((13, LCID, 4, 0),()),
		"ShowContextMenuOfSnap": ((12, LCID, 4, 0),()),
		"SpecToolbar": ((3, LCID, 4, 0),()),
		"SpecToolbarEx": ((7, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IProductDataManager(DispatchBaseClass):
	'ћенеджер дерева —„».'
	CLSID = IID('{468578BC-BEAF-4053-AED9-4E10C48305C1}')
	coclass_clsid = None

	# Result is of type IPropertyKeeper
	def AddProductObject(self, Parent=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, ObjectType=defaultNamedNotOptArg):
		'ƒобавить объект дерева —„» по идентификатору.'
		ret = self._oleobj_.InvokeTypes(18003, LCID, 1, (9, 0), ((9, 1), (8, 1), (3, 1)),Parent
			, Name, ObjectType)
		if ret is not None:
			ret = Dispatch(ret, 'AddProductObject', '{AE7377CB-28C6-468E-B667-73117BCDC300}')
		return ret

	def AddReferenceData(self, ReferenceDataType=defaultNamedNotOptArg, ReferenceDataInfo=defaultNamedNotOptArg):
		'ƒобавить справочные данные.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(18012, LCID, 1, (8, 0), ((8, 1), (8, 1)),ReferenceDataType
			, ReferenceDataInfo)

	def DeleteProductObject(self, UniqueMetaObjectKey=defaultNamedNotOptArg):
		'”далить объект из дерева —„» по идентификатору.'
		return self._oleobj_.InvokeTypes(18004, LCID, 1, (11, 0), ((8, 1),),UniqueMetaObjectKey
			)

	def DeleteReferenceData(self, ReferenceDataType=defaultNamedNotOptArg, ReferenceDataId=defaultNamedNotOptArg):
		'”далить справочные данные.'
		return self._oleobj_.InvokeTypes(18013, LCID, 1, (11, 0), ((8, 1), (8, 1)),ReferenceDataType
			, ReferenceDataId)

	# The method Geometry is actually a property, but must be used as a method to correctly pass the arguments
	def Geometry(self, PropObject=defaultNamedNotOptArg):
		'—писок подключенных документов.'
		return self._ApplyTypes_(18005, 2, (12, 0), ((9, 1),), 'Geometry', None,PropObject
			)

	# The method ObjectAttachedDocuments is actually a property, but must be used as a method to correctly pass the arguments
	def ObjectAttachedDocuments(self, PropObject=defaultNamedNotOptArg):
		'—писок подключенных к объекту документов.'
		return self._ApplyTypes_(18006, 2, (12, 0), ((9, 1),), 'ObjectAttachedDocuments', None,PropObject
			)

	# The method ObjectMetaProductInfo is actually a property, but must be used as a method to correctly pass the arguments
	def ObjectMetaProductInfo(self, PropObject=defaultNamedNotOptArg):
		'ћетаданные объекта дерева —„».'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(18008, LCID, 2, (8, 0), ((9, 1),),PropObject
			)

	# Result is of type IPropertyKeeper
	# The method ProductObject is actually a property, but must be used as a method to correctly pass the arguments
	def ProductObject(self, UniqueMetaObjectKey=defaultNamedNotOptArg):
		'ѕолучить объект дерева —„» по идентификатору.'
		ret = self._oleobj_.InvokeTypes(18002, LCID, 2, (9, 0), ((8, 1),),UniqueMetaObjectKey
			)
		if ret is not None:
			ret = Dispatch(ret, 'ProductObject', '{AE7377CB-28C6-468E-B667-73117BCDC300}')
		return ret

	# The method ProductObjects is actually a property, but must be used as a method to correctly pass the arguments
	def ProductObjects(self, Filter=defaultNamedNotOptArg):
		'ѕолучить массив объектов дерева —„».'
		return self._ApplyTypes_(18001, 2, (12, 0), ((3, 1),), 'ProductObjects', None,Filter
			)

	# The method ReferenceDataIds is actually a property, but must be used as a method to correctly pass the arguments
	def ReferenceDataIds(self, ReferenceDataType=defaultNamedNotOptArg):
		'»дентификаторы справочных данных.'
		return self._ApplyTypes_(18010, 2, (12, 0), ((8, 1),), 'ReferenceDataIds', None,ReferenceDataType
			)

	# The method ReferenceDataInfo is actually a property, but must be used as a method to correctly pass the arguments
	def ReferenceDataInfo(self, ReferenceDataType=defaultNamedNotOptArg, ReferenceDataId=defaultNamedNotOptArg):
		'—правочные данные свойства.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(18011, LCID, 2, (8, 0), ((8, 1), (8, 1)),ReferenceDataType
			, ReferenceDataId)

	# The method SetGeometry is actually a property, but must be used as a method to correctly pass the arguments
	def SetGeometry(self, PropObject=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'—писок подключенных документов.'
		return self._oleobj_.InvokeTypes(18005, LCID, 4, (24, 0), ((9, 1), (12, 1)),PropObject
			, arg1)

	# The method SetObjectAttachedDocuments is actually a property, but must be used as a method to correctly pass the arguments
	def SetObjectAttachedDocuments(self, PropObject=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'—писок подключенных к объекту документов.'
		return self._oleobj_.InvokeTypes(18006, LCID, 4, (24, 0), ((9, 1), (12, 1)),PropObject
			, arg1)

	# The method SetObjectMetaProductInfo is actually a property, but must be used as a method to correctly pass the arguments
	def SetObjectMetaProductInfo(self, PropObject=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ћетаданные объекта дерева —„».'
		return self._oleobj_.InvokeTypes(18008, LCID, 4, (24, 0), ((9, 1), (8, 1)),PropObject
			, arg1)

	# The method SetReferenceDataInfo is actually a property, but must be used as a method to correctly pass the arguments
	def SetReferenceDataInfo(self, ReferenceDataType=defaultNamedNotOptArg, ReferenceDataId=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		'—правочные данные свойства.'
		return self._oleobj_.InvokeTypes(18011, LCID, 4, (24, 0), ((8, 1), (8, 1), (8, 1)),ReferenceDataType
			, ReferenceDataId, arg2)

	_prop_map_get_ = {
		"MetaProductInfo": (18007, 2, (8, 0), (), "MetaProductInfo", None),
		"ReferenceData": (18009, 2, (8, 0), (), "ReferenceData", None),
	}
	_prop_map_put_ = {
		"MetaProductInfo": ((18007, LCID, 4, 0),()),
		"ReferenceData": ((18009, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IProgressBarIndicator(DispatchBaseClass):
	'»ндикатор процесса.'
	CLSID = IID('{BE125ABA-EAB2-4A22-99D7-108C84B6DCC5}')
	coclass_clsid = IID('{9361276C-70A0-4000-82D2-90FB546C98D4}')

	def SetProgress(self, CurrentVal=defaultNamedNotOptArg, TextVal=defaultNamedNotOptArg, ResetVal=defaultNamedNotOptArg):
		'”становить значение индикатора.'
		return self._oleobj_.InvokeTypes(8002, LCID, 1, (24, 0), ((3, 1), (8, 1), (11, 1)),CurrentVal
			, TextVal, ResetVal)

	def SetText(self, TextVal=defaultNamedNotOptArg):
		'”становить текст сообщени€ в строке состо€ни€ индикатора.'
		return self._oleobj_.InvokeTypes(8003, LCID, 1, (24, 0), ((8, 1),),TextVal
			)

	def Start(self, MinVal=defaultNamedNotOptArg, MaxVal=defaultNamedNotOptArg, TextVal=defaultNamedNotOptArg, ResetVal=defaultNamedNotOptArg):
		'«апустить индикатор.'
		return self._oleobj_.InvokeTypes(8001, LCID, 1, (24, 0), ((3, 1), (3, 1), (8, 1), (11, 1)),MinVal
			, MaxVal, TextVal, ResetVal)

	def Stop(self, TextVal=defaultNamedNotOptArg, ResetVal=defaultNamedNotOptArg):
		'ќстановить индикатор.'
		return self._oleobj_.InvokeTypes(8004, LCID, 1, (24, 0), ((8, 1), (11, 1)),TextVal
			, ResetVal)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IProjectionCurve(DispatchBaseClass):
	'ѕроекционна€ крива€.'
	CLSID = IID('{535DD795-507F-41C8-AC1E-6EAF243A3792}')
	coclass_clsid = IID('{1C5024E9-8F3F-49D5-9B66-42E26A03614B}')

	# The method Edges is actually a property, but must be used as a method to correctly pass the arguments
	def Edges(self, Index=defaultNamedNotOptArg):
		'ѕолучить ребра созданных контуров по индексу. ¬озвращаетс€ массив ребер в виде массива VT_ARRAY | VT_DISPATCH.'
		return self._ApplyTypes_(9, 2, (12, 0), ((3, 1),), 'Edges', None,Index
			)

	# The method EdgesCheck is actually a property, but must be used as a method to correctly pass the arguments
	def EdgesCheck(self, ContourIndex=defaultNamedNotOptArg):
		'ѕризнак выбора контура по индексу.'
		return self._oleobj_.InvokeTypes(10, LCID, 2, (11, 0), ((3, 1),),ContourIndex
			)

	# The method SetEdgesCheck is actually a property, but must be used as a method to correctly pass the arguments
	def SetEdgesCheck(self, ContourIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ѕризнак выбора контура по индексу.'
		return self._oleobj_.InvokeTypes(10, LCID, 4, (24, 0), ((3, 1), (11, 1)),ContourIndex
			, arg1)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AutoCheck": (6, 2, (11, 0), (), "AutoCheck", None),
		"Curves": (2, 2, (12, 0), (), "Curves", None),
		"EdgesArraysCount": (8, 2, (3, 0), (), "EdgesArraysCount", None),
		"EdgesChecks": (7, 2, (12, 0), (), "EdgesChecks", None),
		"EdgesChecksCount": (11, 2, (3, 0), (), "EdgesChecksCount", None),
		"Faces": (1, 2, (12, 0), (), "Faces", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"ProjectionType": (3, 2, (3, 0), (), "ProjectionType", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"TruncationByBounds": (5, 2, (11, 0), (), "TruncationByBounds", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
		# Method 'Vector3D' returns object of type 'IVector3D'
		"Vector3D": (4, 2, (9, 0), (), "Vector3D", '{D51A4DCF-627D-44F5-89BA-46EF2449A212}'),
	}
	_prop_map_put_ = {
		"AutoCheck": ((6, LCID, 4, 0),()),
		"Curves": ((2, LCID, 4, 0),()),
		"EdgesChecks": ((7, LCID, 4, 0),()),
		"Faces": ((1, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"ProjectionType": ((3, LCID, 4, 0),()),
		"TruncationByBounds": ((5, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IProjectionCurves(DispatchBaseClass):
	' оллекци€ проекционных кривых.'
	CLSID = IID('{88819055-3211-47DD-908F-187B5826FE67}')
	coclass_clsid = IID('{31D3EACE-36E4-4C17-9E47-20555B0B7F07}')

	# Result is of type IProjectionCurve
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{535DD795-507F-41C8-AC1E-6EAF243A3792}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type IProjectionCurve
	# The method ProjectionCurve is actually a property, but must be used as a method to correctly pass the arguments
	def ProjectionCurve(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по ссылке или индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'ProjectionCurve', '{535DD795-507F-41C8-AC1E-6EAF243A3792}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IProperty(DispatchBaseClass):
	'—войство.'
	CLSID = IID('{C389F80D-228D-4FB1-B183-959AEA0B5906}')
	coclass_clsid = IID('{9699D02A-6FF3-4C25-8974-5EB527024315}')

	def Delete(self):
		'”далить свойство.'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (11, 0), (),)

	def SetValueRange(self, MinVal=defaultNamedNotOptArg, MaxVal=defaultNamedNotOptArg):
		'”становить новые ограничени€ на значение.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), ((12, 1), (12, 1)),MinVal
			, MaxVal)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (11, 0), (),)

	def ViewEdit(self, Parent=defaultNamedNotOptArg, ReadOnly=defaultNamedNotOptArg):
		'¬ыводитс€ диалог дл€ просмотра и редактировани€ свойства.'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (11, 0), ((3, 1), (11, 1)),Parent
			, ReadOnly)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Comment": (10, 2, (8, 0), (), "Comment", None),
		"DataType": (3, 2, (3, 0), (), "DataType", None),
		"Id": (2, 2, (5, 0), (), "Id", None),
		"IsAngular": (19, 2, (11, 0), (), "IsAngular", None),
		"IsVariable": (18, 2, (11, 0), (), "IsVariable", None),
		"ListVal": (17, 2, (12, 0), (), "ListVal", None),
		"MaxValue": (5, 2, (12, 0), (), "MaxValue", None),
		"MinValue": (4, 2, (12, 0), (), "MinValue", None),
		"Name": (1, 2, (8, 0), (), "Name", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"PropertyTypeId": (11, 2, (8, 0), (), "PropertyTypeId", None),
		"ReadOnly": (7, 2, (11, 0), (), "ReadOnly", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"SignificantDigitsCount": (8, 2, (3, 0), (), "SignificantDigitsCount", None),
		"SourceName": (9, 2, (8, 0), (), "SourceName", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"UnitId": (12, 2, (8, 0), (), "UnitId", None),
		"UseListVal": (16, 2, (11, 0), (), "UseListVal", None),
	}
	_prop_map_put_ = {
		"Comment": ((10, LCID, 4, 0),()),
		"DataType": ((3, LCID, 4, 0),()),
		"ListVal": ((17, LCID, 4, 0),()),
		"Name": ((1, LCID, 4, 0),()),
		"PropertyTypeId": ((11, LCID, 4, 0),()),
		"ReadOnly": ((7, LCID, 4, 0),()),
		"SignificantDigitsCount": ((8, LCID, 4, 0),()),
		"UnitId": ((12, LCID, 4, 0),()),
		"UseListVal": ((16, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPropertyAggregateControl(DispatchBaseClass):
	'—оставной контрол.'
	CLSID = IID('{8B2A259E-6819-4DDB-8EA3-C408F9F04054}')
	coclass_clsid = IID('{E3643E08-6371-413B-8E4A-99C56BD41D47}')

	def Add(self, Control=defaultNamedNotOptArg):
		'ƒобавить контрол в группу.'
		return self._oleobj_.InvokeTypes(101, LCID, 1, (11, 0), ((9, 1),),Control
			)

	# Result is of type IPropertyControl
	# The method PropertyControl is actually a property, but must be used as a method to correctly pass the arguments
	def PropertyControl(self, Index=defaultNamedNotOptArg):
		'ѕолучить контрол по индексу.'
		ret = self._oleobj_.InvokeTypes(102, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'PropertyControl', '{E35F8FF8-03C6-460C-A2F1-294A3A29A029}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ControlType": (3, 2, (3, 0), (), "ControlType", None),
		"Enable": (5, 2, (11, 0), (), "Enable", None),
		"Hint": (8, 2, (8, 0), (), "Hint", None),
		"Id": (4, 2, (3, 0), (), "Id", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"NameVisibility": (7, 2, (3, 0), (), "NameVisibility", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Tips": (9, 2, (8, 0), (), "Tips", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Value": (6, 2, (12, 0), (), "Value", None),
		"Visible": (1, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Enable": ((5, LCID, 4, 0),()),
		"Hint": ((8, LCID, 4, 0),()),
		"Id": ((4, LCID, 4, 0),()),
		"Name": ((2, LCID, 4, 0),()),
		"NameVisibility": ((7, LCID, 4, 0),()),
		"Tips": ((9, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((1, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPropertyBasePoint(DispatchBaseClass):
	'Ёлемент панели свойств - Ѕазова€ точка'
	CLSID = IID('{75E9D1C7-B766-4D53-BE99-A3088C249266}')
	coclass_clsid = IID('{0912865E-0DEB-4C6A-8AA0-70A512603E9E}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"CenterPointVisible": (102, 2, (11, 0), (), "CenterPointVisible", None),
		"ControlType": (3, 2, (3, 0), (), "ControlType", None),
		"Enable": (5, 2, (11, 0), (), "Enable", None),
		"Hint": (8, 2, (8, 0), (), "Hint", None),
		"Id": (4, 2, (3, 0), (), "Id", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"NameVisibility": (7, 2, (3, 0), (), "NameVisibility", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Tips": (9, 2, (8, 0), (), "Tips", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Value": (6, 2, (12, 0), (), "Value", None),
		"Visible": (1, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"CenterPointVisible": ((102, LCID, 4, 0),()),
		"Enable": ((5, LCID, 4, 0),()),
		"Hint": ((8, LCID, 4, 0),()),
		"Id": ((4, LCID, 4, 0),()),
		"Name": ((2, LCID, 4, 0),()),
		"NameVisibility": ((7, LCID, 4, 0),()),
		"Tips": ((9, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((1, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPropertyBmpList(DispatchBaseClass):
	'Ёлемент панели свойств -  омбобокс со строкой и битмапом'
	CLSID = IID('{D18D34F5-0028-4853-998C-25A48D141B43}')
	coclass_clsid = IID('{76A04B67-394F-4B63-BC9C-67C52A36F98A}')

	def Add(self, NewStr=defaultNamedNotOptArg, NewBmp=defaultNamedNotOptArg):
		'ƒобавить значение в список.'
		return self._oleobj_.InvokeTypes(101, LCID, 1, (24, 0), ((8, 1), (12, 1)),NewStr
			, NewBmp)

	def ClearList(self):
		'ќчистить список значений.'
		return self._oleobj_.InvokeTypes(103, LCID, 1, (24, 0), (),)

	def Find(self, Val=defaultNamedNotOptArg):
		'Ќайти индекс в списке по значению.'
		return self._oleobj_.InvokeTypes(104, LCID, 1, (3, 0), ((8, 1),),Val
			)

	# The method IconFont is actually a property, but must be used as a method to correctly pass the arguments
	def IconFont(self, Index=defaultNamedNotOptArg):
		'Ўрифт иконок списка.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(107, LCID, 2, (8, 0), ((3, 1),),Index
			)

	# The method SetIconFont is actually a property, but must be used as a method to correctly pass the arguments
	def SetIconFont(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'Ўрифт иконок списка.'
		return self._oleobj_.InvokeTypes(107, LCID, 4, (24, 0), ((3, 1), (8, 1)),Index
			, arg1)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ControlType": (3, 2, (3, 0), (), "ControlType", None),
		"Count": (102, 2, (3, 0), (), "Count", None),
		"CurrentIndex": (105, 2, (3, 0), (), "CurrentIndex", None),
		"Enable": (5, 2, (11, 0), (), "Enable", None),
		"Hint": (8, 2, (8, 0), (), "Hint", None),
		"Id": (4, 2, (3, 0), (), "Id", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"NameVisibility": (7, 2, (3, 0), (), "NameVisibility", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"ResModule": (106, 2, (12, 0), (), "ResModule", None),
		"Tips": (9, 2, (8, 0), (), "Tips", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Value": (6, 2, (12, 0), (), "Value", None),
		"Visible": (1, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"CurrentIndex": ((105, LCID, 4, 0),()),
		"Enable": ((5, LCID, 4, 0),()),
		"Hint": ((8, LCID, 4, 0),()),
		"Id": ((4, LCID, 4, 0),()),
		"Name": ((2, LCID, 4, 0),()),
		"NameVisibility": ((7, LCID, 4, 0),()),
		"ResModule": ((106, LCID, 4, 0),()),
		"Tips": ((9, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((1, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(102, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IPropertyCheckBox(DispatchBaseClass):
	'Ёлемент панели свойств - „екбокс'
	CLSID = IID('{9205277D-B480-4AF7-B660-CCDC653F6453}')
	coclass_clsid = IID('{8CF06399-B7EB-46EB-8B08-5603C589FE0F}')

	def SetCustomBitmaps(self, IdUnchecked=defaultNamedNotOptArg, IdChecked=defaultNamedNotOptArg, IdIndeterminate=defaultNamedNotOptArg, HInstance=defaultNamedNotOptArg):
		'”становить собственное изображение кнопки в разных состо€ни€х.'
		return self._oleobj_.InvokeTypes(101, LCID, 1, (24, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),IdUnchecked
			, IdChecked, IdIndeterminate, HInstance)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ControlType": (3, 2, (3, 0), (), "ControlType", None),
		"Enable": (5, 2, (11, 0), (), "Enable", None),
		"Hint": (8, 2, (8, 0), (), "Hint", None),
		"Id": (4, 2, (3, 0), (), "Id", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"NameVisibility": (7, 2, (3, 0), (), "NameVisibility", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Tips": (9, 2, (8, 0), (), "Tips", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Value": (6, 2, (12, 0), (), "Value", None),
		"Visible": (1, 2, (11, 0), (), "Visible", None),
		"VisualStyle": (102, 2, (3, 0), (), "VisualStyle", None),
	}
	_prop_map_put_ = {
		"Enable": ((5, LCID, 4, 0),()),
		"Hint": ((8, LCID, 4, 0),()),
		"Id": ((4, LCID, 4, 0),()),
		"Name": ((2, LCID, 4, 0),()),
		"NameVisibility": ((7, LCID, 4, 0),()),
		"Tips": ((9, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((1, LCID, 4, 0),()),
		"VisualStyle": ((102, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPropertyColor(DispatchBaseClass):
	'Ёлемент панели свойств - ¬ыбор цвета.'
	CLSID = IID('{FC5CDCFB-3F67-43A1-8FC4-1278B901CE0E}')
	coclass_clsid = IID('{77E6E019-A5A1-4318-B98E-CD970D248EA0}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ControlType": (3, 2, (3, 0), (), "ControlType", None),
		"DefaultButtonName": (104, 2, (8, 0), (), "DefaultButtonName", None),
		"DefaultColor": (103, 2, (3, 0), (), "DefaultColor", None),
		"Enable": (5, 2, (11, 0), (), "Enable", None),
		"EnableDefaultButton": (102, 2, (11, 0), (), "EnableDefaultButton", None),
		"Hint": (8, 2, (8, 0), (), "Hint", None),
		"Id": (4, 2, (3, 0), (), "Id", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"NameVisibility": (7, 2, (3, 0), (), "NameVisibility", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Tips": (9, 2, (8, 0), (), "Tips", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Value": (6, 2, (12, 0), (), "Value", None),
		"Visible": (1, 2, (11, 0), (), "Visible", None),
		"Width": (101, 2, (3, 0), (), "Width", None),
	}
	_prop_map_put_ = {
		"DefaultButtonName": ((104, LCID, 4, 0),()),
		"DefaultColor": ((103, LCID, 4, 0),()),
		"Enable": ((5, LCID, 4, 0),()),
		"EnableDefaultButton": ((102, LCID, 4, 0),()),
		"Hint": ((8, LCID, 4, 0),()),
		"Id": ((4, LCID, 4, 0),()),
		"Name": ((2, LCID, 4, 0),()),
		"NameVisibility": ((7, LCID, 4, 0),()),
		"Tips": ((9, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((1, LCID, 4, 0),()),
		"Width": ((101, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPropertyControl(DispatchBaseClass):
	'Ѕазовый интерфейс контрола панели свойств.'
	CLSID = IID('{E35F8FF8-03C6-460C-A2F1-294A3A29A029}')
	coclass_clsid = IID('{E4A732A0-3DA8-40E3-9E05-E65F22F080DA}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ControlType": (3, 2, (3, 0), (), "ControlType", None),
		"Enable": (5, 2, (11, 0), (), "Enable", None),
		"Hint": (8, 2, (8, 0), (), "Hint", None),
		"Id": (4, 2, (3, 0), (), "Id", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"NameVisibility": (7, 2, (3, 0), (), "NameVisibility", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Tips": (9, 2, (8, 0), (), "Tips", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Value": (6, 2, (12, 0), (), "Value", None),
		"Visible": (1, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Enable": ((5, LCID, 4, 0),()),
		"Hint": ((8, LCID, 4, 0),()),
		"Id": ((4, LCID, 4, 0),()),
		"Name": ((2, LCID, 4, 0),()),
		"NameVisibility": ((7, LCID, 4, 0),()),
		"Tips": ((9, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((1, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPropertyControl1(DispatchBaseClass):
	'ƒополнительный интерфейс дл€ контрола панели свойств.'
	CLSID = IID('{7D2A79FF-EC54-4480-B9F3-46F75293B558}')
	coclass_clsid = None

	def AddAdditionButton(self, BtnID=defaultNamedNotOptArg, Bmp=defaultNamedNotOptArg, Tips=defaultNamedNotOptArg, IconFont=defaultNamedNotOptArg):
		'ƒобавить дополнительную кнопку.'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (11, 0), ((3, 1), (12, 1), (8, 1), (8, 1)),BtnID
			, Bmp, Tips, IconFont)

	def AddAdditionCheckButton(self, BtnID=defaultNamedNotOptArg, BmpChecked=defaultNamedNotOptArg, BmpUnChecked=defaultNamedNotOptArg, BmpUndefine=defaultNamedNotOptArg
			, Tips=defaultNamedNotOptArg, IconFont=defaultNamedNotOptArg):
		'ƒобавить дополнительную кнопку.'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (11, 0), ((3, 1), (12, 1), (12, 1), (12, 1), (8, 1), (8, 1)),BtnID
			, BmpChecked, BmpUnChecked, BmpUndefine, Tips, IconFont
			)

	# The method AdditionButtonChecked is actually a property, but must be used as a method to correctly pass the arguments
	def AdditionButtonChecked(self, BtnID=defaultNamedNotOptArg):
		'—осто€ние дополнительной кнопки.'
		return self._oleobj_.InvokeTypes(18, LCID, 2, (11, 0), ((3, 1),),BtnID
			)

	# The method AdditionButtonEnable is actually a property, but must be used as a method to correctly pass the arguments
	def AdditionButtonEnable(self, BtnID=defaultNamedNotOptArg):
		'—осто€ние дополнительной кнопки.'
		return self._oleobj_.InvokeTypes(19, LCID, 2, (11, 0), ((3, 1),),BtnID
			)

	# The method AdditionButtonNeedMouseEnterLeaveMessages is actually a property, but must be used as a method to correctly pass the arguments
	def AdditionButtonNeedMouseEnterLeaveMessages(self, BtnID=defaultNamedNotOptArg):
		'Ќеобходимость получать сообщени€ о наведении/уходе курсора мыши на дополнительных кнопках от данного контрола.'
		return self._oleobj_.InvokeTypes(22, LCID, 2, (11, 0), ((3, 1),),BtnID
			)

	# The method AdditionButtonVisible is actually a property, but must be used as a method to correctly pass the arguments
	def AdditionButtonVisible(self, BtnID=defaultNamedNotOptArg):
		'¬идимость дополнительной кнопки.'
		return self._oleobj_.InvokeTypes(17, LCID, 2, (11, 0), ((3, 1),),BtnID
			)

	def GetHWND(self):
		'ѕолучить Handle окна.'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (3, 0), (),)

	# The method SetAdditionButtonChecked is actually a property, but must be used as a method to correctly pass the arguments
	def SetAdditionButtonChecked(self, BtnID=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'—осто€ние дополнительной кнопки.'
		return self._oleobj_.InvokeTypes(18, LCID, 4, (24, 0), ((3, 1), (11, 1)),BtnID
			, arg1)

	# The method SetAdditionButtonEnable is actually a property, but must be used as a method to correctly pass the arguments
	def SetAdditionButtonEnable(self, BtnID=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'—осто€ние дополнительной кнопки.'
		return self._oleobj_.InvokeTypes(19, LCID, 4, (24, 0), ((3, 1), (11, 1)),BtnID
			, arg1)

	# The method SetAdditionButtonNeedMouseEnterLeaveMessages is actually a property, but must be used as a method to correctly pass the arguments
	def SetAdditionButtonNeedMouseEnterLeaveMessages(self, BtnID=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'Ќеобходимость получать сообщени€ о наведении/уходе курсора мыши на дополнительных кнопках от данного контрола.'
		return self._oleobj_.InvokeTypes(22, LCID, 4, (24, 0), ((3, 1), (11, 1)),BtnID
			, arg1)

	# The method SetAdditionButtonVisible is actually a property, but must be used as a method to correctly pass the arguments
	def SetAdditionButtonVisible(self, BtnID=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'¬идимость дополнительной кнопки.'
		return self._oleobj_.InvokeTypes(17, LCID, 4, (24, 0), ((3, 1), (11, 1)),BtnID
			, arg1)

	_prop_map_get_ = {
		"HyperLinkNameStyle": (20, 2, (11, 0), (), "HyperLinkNameStyle", None),
		"Image": (13, 2, (12, 0), (), "Image", None),
		"NeedMouseEnterLeaveMessages": (21, 2, (11, 0), (), "NeedMouseEnterLeaveMessages", None),
		"PredefineNumber": (10, 2, (3, 0), (), "PredefineNumber", None),
		"ResModule": (12, 2, (12, 0), (), "ResModule", None),
		"UserMenu": (11, 2, (3, 0), (), "UserMenu", None),
	}
	_prop_map_put_ = {
		"HyperLinkNameStyle": ((20, LCID, 4, 0),()),
		"Image": ((13, LCID, 4, 0),()),
		"NeedMouseEnterLeaveMessages": ((21, LCID, 4, 0),()),
		"PredefineNumber": ((10, LCID, 4, 0),()),
		"ResModule": ((12, LCID, 4, 0),()),
		"UserMenu": ((11, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPropertyControls(DispatchBaseClass):
	' оллекци€ контролов панели свойств.'
	CLSID = IID('{548241BA-FDA8-4633-981E-94552BE38D6B}')
	coclass_clsid = IID('{74D54FDD-62D0-4544-89C9-999612EF6DEF}')

	# Result is of type IPropertyControl
	def Add(self, Type=defaultNamedNotOptArg):
		'—оздать контрол (добавл€ет контрол в коллекцию).'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((3, 1),),Type
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{E35F8FF8-03C6-460C-A2F1-294A3A29A029}')
		return ret

	def Delete(self, Index=defaultNamedNotOptArg):
		'”далить контрол.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), ((12, 1),),Index
			)

	# Result is of type IPropertyControl
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает контрол, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E35F8FF8-03C6-460C-A2F1-294A3A29A029}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает контрол, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E35F8FF8-03C6-460C-A2F1-294A3A29A029}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E35F8FF8-03C6-460C-A2F1-294A3A29A029}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IPropertyEdit(DispatchBaseClass):
	'Ёлемент панели свойств - –едактор'
	CLSID = IID('{1D238C4C-AAD7-4374-B372-013CF7FCEDB4}')
	coclass_clsid = IID('{E4AFCB78-574F-4960-9D92-B23888D700CD}')

	def SetValueRange(self, MinVal=defaultNamedNotOptArg, MaxVal=defaultNamedNotOptArg):
		'”становить новые ограничени€ на значение.'
		return self._oleobj_.InvokeTypes(103, LCID, 1, (11, 0), ((12, 1), (12, 1)),MinVal
			, MaxVal)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"CheckState": (105, 2, (3, 0), (), "CheckState", None),
		"ControlType": (3, 2, (3, 0), (), "ControlType", None),
		"Enable": (5, 2, (11, 0), (), "Enable", None),
		"Hint": (8, 2, (8, 0), (), "Hint", None),
		"Id": (4, 2, (3, 0), (), "Id", None),
		"MaxValue": (102, 2, (12, 0), (), "MaxValue", None),
		"MinValue": (101, 2, (12, 0), (), "MinValue", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"NameVisibility": (7, 2, (3, 0), (), "NameVisibility", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"ReadOnly": (106, 2, (11, 0), (), "ReadOnly", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Step": (108, 2, (5, 0), (), "Step", None),
		"Tips": (9, 2, (8, 0), (), "Tips", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Value": (6, 2, (12, 0), (), "Value", None),
		"Visible": (1, 2, (11, 0), (), "Visible", None),
		"Width": (107, 2, (3, 0), (), "Width", None),
		"WithCheck": (104, 2, (11, 0), (), "WithCheck", None),
	}
	_prop_map_put_ = {
		"CheckState": ((105, LCID, 4, 0),()),
		"Enable": ((5, LCID, 4, 0),()),
		"Hint": ((8, LCID, 4, 0),()),
		"Id": ((4, LCID, 4, 0),()),
		"Name": ((2, LCID, 4, 0),()),
		"NameVisibility": ((7, LCID, 4, 0),()),
		"ReadOnly": ((106, LCID, 4, 0),()),
		"Step": ((108, LCID, 4, 0),()),
		"Tips": ((9, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((1, LCID, 4, 0),()),
		"Width": ((107, LCID, 4, 0),()),
		"WithCheck": ((104, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPropertyEditCheckBox(DispatchBaseClass):
	'ѕоле c чекбоксом ввиде картинки.'
	CLSID = IID('{3FBF29AA-5691-4E7B-BE08-2025F29F018E}')
	coclass_clsid = None

	def SetCustomBitmaps(self, IdUnchecked=defaultNamedNotOptArg, IdChecked=defaultNamedNotOptArg, IdIndeterminate=defaultNamedNotOptArg, HInstance=defaultNamedNotOptArg):
		'”становить собственное изображение кнопки в разных состо€ни€х.'
		return self._oleobj_.InvokeTypes(203, LCID, 1, (24, 0), ((12, 1), (12, 1), (12, 1), (12, 1)),IdUnchecked
			, IdChecked, IdIndeterminate, HInstance)

	_prop_map_get_ = {
		"CheckButton": (201, 2, (11, 0), (), "CheckButton", None),
		"DefaultValue": (204, 2, (8, 0), (), "DefaultValue", None),
		"EnableCheckButton": (202, 2, (11, 0), (), "EnableCheckButton", None),
		"EnableDeleteValue": (206, 2, (11, 0), (), "EnableDeleteValue", None),
		"IsLinkValue": (207, 2, (11, 0), (), "IsLinkValue", None),
		"Missing": (205, 2, (11, 0), (), "Missing", None),
	}
	_prop_map_put_ = {
		"CheckButton": ((201, LCID, 4, 0),()),
		"DefaultValue": ((204, LCID, 4, 0),()),
		"EnableCheckButton": ((202, LCID, 4, 0),()),
		"EnableDeleteValue": ((206, LCID, 4, 0),()),
		"IsLinkValue": ((207, LCID, 4, 0),()),
		"Missing": ((205, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPropertyEditList(DispatchBaseClass):
	'Ёлемент панели свойств - —писок.'
	CLSID = IID('{FDB82760-7EA3-408E-8699-A8392ACFD810}')
	coclass_clsid = None

	def Add(self, NewVal=defaultNamedNotOptArg):
		'ƒобавить значение в список.'
		return self._oleobj_.InvokeTypes(107, LCID, 1, (24, 0), ((8, 1),),NewVal
			)

	def BeginEditItem(self, Index=defaultNamedNotOptArg):
		'«апустить редактирование значени€ в списке.'
		return self._oleobj_.InvokeTypes(114, LCID, 1, (11, 0), ((3, 1),),Index
			)

	def BringIntoView(self, Index=defaultNamedNotOptArg):
		'ѕодкрутка к строке.'
		return self._oleobj_.InvokeTypes(118, LCID, 1, (24, 0), ((3, 1),),Index
			)

	def ClearList(self):
		'ќчистить список значений.'
		return self._oleobj_.InvokeTypes(106, LCID, 1, (24, 0), (),)

	def Delete(self, Index=defaultNamedNotOptArg):
		'”далить элемент из списка по значению или индексу.'
		return self._oleobj_.InvokeTypes(108, LCID, 1, (24, 0), ((12, 1),),Index
			)

	def Find(self, Val=defaultNamedNotOptArg):
		'Ќайти индекс в списке по значению.'
		return self._oleobj_.InvokeTypes(111, LCID, 1, (3, 0), ((12, 1),),Val
			)

	# The method ItemChecked is actually a property, but must be used as a method to correctly pass the arguments
	def ItemChecked(self, Index=defaultNamedNotOptArg):
		'—осто€ние элемента списка.'
		return self._oleobj_.InvokeTypes(102, LCID, 2, (11, 0), ((3, 1),),Index
			)

	# The method ItemMissing is actually a property, but must be used as a method to correctly pass the arguments
	def ItemMissing(self, Index=defaultNamedNotOptArg):
		'ѕотер€нный объект.'
		return self._oleobj_.InvokeTypes(113, LCID, 2, (11, 0), ((3, 1),),Index
			)

	# The method ItemSelected is actually a property, but must be used as a method to correctly pass the arguments
	def ItemSelected(self, Index=defaultNamedNotOptArg):
		'—електированность элемента списка.'
		return self._oleobj_.InvokeTypes(104, LCID, 2, (11, 0), ((3, 1),),Index
			)

	# The method ItemValue is actually a property, but must be used as a method to correctly pass the arguments
	def ItemValue(self, Index=defaultNamedNotOptArg):
		'«начение элемента списка по индексу'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(110, LCID, 2, (8, 0), ((12, 1),),Index
			)

	# The method SetItemChecked is actually a property, but must be used as a method to correctly pass the arguments
	def SetItemChecked(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'—осто€ние элемента списка.'
		return self._oleobj_.InvokeTypes(102, LCID, 4, (24, 0), ((3, 1), (11, 1)),Index
			, arg1)

	# The method SetItemMissing is actually a property, but must be used as a method to correctly pass the arguments
	def SetItemMissing(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ѕотер€нный объект.'
		return self._oleobj_.InvokeTypes(113, LCID, 4, (24, 0), ((3, 1), (11, 1)),Index
			, arg1)

	# The method SetItemSelected is actually a property, but must be used as a method to correctly pass the arguments
	def SetItemSelected(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'—електированность элемента списка.'
		return self._oleobj_.InvokeTypes(104, LCID, 4, (24, 0), ((3, 1), (11, 1)),Index
			, arg1)

	# The method SetItemValue is actually a property, but must be used as a method to correctly pass the arguments
	def SetItemValue(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'«начение элемента списка по индексу'
		return self._oleobj_.InvokeTypes(110, LCID, 4, (24, 0), ((12, 1), (8, 1)),Index
			, arg1)

	_prop_map_get_ = {
		"AllowDelete": (116, 2, (11, 0), (), "AllowDelete", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"CheckState": (115, 2, (3, 0), (), "CheckState", None),
		"ComputeUniqueNames": (117, 2, (11, 0), (), "ComputeUniqueNames", None),
		"ControlType": (3, 2, (3, 0), (), "ControlType", None),
		"DefaultValue": (112, 2, (8, 0), (), "DefaultValue", None),
		"Enable": (5, 2, (11, 0), (), "Enable", None),
		"Hint": (8, 2, (8, 0), (), "Hint", None),
		"Id": (4, 2, (3, 0), (), "Id", None),
		"ItemsCount": (109, 2, (3, 0), (), "ItemsCount", None),
		"ListType": (101, 2, (3, 0), (), "ListType", None),
		"MultySelect": (103, 2, (11, 0), (), "MultySelect", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"NameVisibility": (7, 2, (3, 0), (), "NameVisibility", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Sort": (105, 2, (11, 0), (), "Sort", None),
		"Tips": (9, 2, (8, 0), (), "Tips", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Value": (6, 2, (12, 0), (), "Value", None),
		"Visible": (1, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"AllowDelete": ((116, LCID, 4, 0),()),
		"CheckState": ((115, LCID, 4, 0),()),
		"ComputeUniqueNames": ((117, LCID, 4, 0),()),
		"DefaultValue": ((112, LCID, 4, 0),()),
		"Enable": ((5, LCID, 4, 0),()),
		"Hint": ((8, LCID, 4, 0),()),
		"Id": ((4, LCID, 4, 0),()),
		"ListType": ((101, LCID, 4, 0),()),
		"MultySelect": ((103, LCID, 4, 0),()),
		"Name": ((2, LCID, 4, 0),()),
		"NameVisibility": ((7, LCID, 4, 0),()),
		"Sort": ((105, LCID, 4, 0),()),
		"Tips": ((9, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((1, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPropertyFileName(DispatchBaseClass):
	'Ёлемент панели свойств - ¬ыбор файла.'
	CLSID = IID('{DB1F3224-837E-437F-8944-6FB9703F528B}')
	coclass_clsid = IID('{BBB62BA6-AC05-4D05-BFF2-BC8579A2C5FC}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ControlType": (3, 2, (3, 0), (), "ControlType", None),
		"CreateOpenButton": (101, 2, (11, 0), (), "CreateOpenButton", None),
		"DefaultValue": (109, 2, (8, 0), (), "DefaultValue", None),
		"Enable": (5, 2, (11, 0), (), "Enable", None),
		"Extension": (103, 2, (8, 0), (), "Extension", None),
		"Filter": (104, 2, (8, 0), (), "Filter", None),
		"Hint": (8, 2, (8, 0), (), "Hint", None),
		"Id": (4, 2, (3, 0), (), "Id", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"NameVisibility": (7, 2, (3, 0), (), "NameVisibility", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Preview": (108, 2, (11, 0), (), "Preview", None),
		"ReadOnly": (106, 2, (11, 0), (), "ReadOnly", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"ResModule": (105, 2, (12, 0), (), "ResModule", None),
		"Tips": (9, 2, (8, 0), (), "Tips", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Value": (6, 2, (12, 0), (), "Value", None),
		"Visible": (1, 2, (11, 0), (), "Visible", None),
		"Width": (107, 2, (3, 0), (), "Width", None),
	}
	_prop_map_put_ = {
		"Bitmap": ((102, LCID, 4, 0),()),
		"CreateOpenButton": ((101, LCID, 4, 0),()),
		"DefaultValue": ((109, LCID, 4, 0),()),
		"Enable": ((5, LCID, 4, 0),()),
		"Extension": ((103, LCID, 4, 0),()),
		"Filter": ((104, LCID, 4, 0),()),
		"Hint": ((8, LCID, 4, 0),()),
		"Id": ((4, LCID, 4, 0),()),
		"Name": ((2, LCID, 4, 0),()),
		"NameVisibility": ((7, LCID, 4, 0),()),
		"Preview": ((108, LCID, 4, 0),()),
		"ReadOnly": ((106, LCID, 4, 0),()),
		"ResModule": ((105, LCID, 4, 0),()),
		"Tips": ((9, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((1, LCID, 4, 0),()),
		"Width": ((107, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPropertyGrid(DispatchBaseClass):
	'Ёлемент панели свойств - —етка.'
	CLSID = IID('{6682B70F-59DB-4BF0-AB01-45B65B1BDED1}')
	coclass_clsid = IID('{F0F9573F-BE07-4251-86E5-2AA24AA3D43A}')

	def BringIntoView(self, Index=defaultNamedNotOptArg):
		'ѕодкрутка к строке.'
		return self._oleobj_.InvokeTypes(119, LCID, 1, (24, 0), ((3, 1),),Index
			)

	# The method CellFormat is actually a property, but must be used as a method to correctly pass the arguments
	def CellFormat(self, NRow=defaultNamedNotOptArg, NCol=defaultNamedNotOptArg):
		'‘ормат вывода текста в €чейке.'
		return self._oleobj_.InvokeTypes(109, LCID, 2, (3, 0), ((3, 1), (3, 1)),NRow
			, NCol)

	# The method CellText is actually a property, but must be used as a method to correctly pass the arguments
	def CellText(self, NRow=defaultNamedNotOptArg, NCol=defaultNamedNotOptArg):
		'“екст в €чейке.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(108, LCID, 2, (8, 0), ((3, 1), (3, 1)),NRow
			, NCol)

	# The method ColumnVisible is actually a property, but must be used as a method to correctly pass the arguments
	def ColumnVisible(self, Index=defaultNamedNotOptArg):
		'¬идимость колонки.'
		return self._oleobj_.InvokeTypes(118, LCID, 2, (11, 0), ((3, 1),),Index
			)

	# The method ColumnWidth is actually a property, but must be used as a method to correctly pass the arguments
	def ColumnWidth(self, Index=defaultNamedNotOptArg):
		'Ўирина колонки.'
		return self._oleobj_.InvokeTypes(105, LCID, 2, (3, 0), ((3, 1),),Index
			)

	# The method EnableEdit is actually a property, but must be used as a method to correctly pass the arguments
	def EnableEdit(self, NRow=defaultNamedNotOptArg, NCol=defaultNamedNotOptArg):
		'«апрет редактировани€ €чеек.'
		return self._oleobj_.InvokeTypes(107, LCID, 2, (11, 0), ((3, 1), (3, 1)),NRow
			, NCol)

	# The method RowHeight is actually a property, but must be used as a method to correctly pass the arguments
	def RowHeight(self, Index=defaultNamedNotOptArg):
		'¬ысота строки.'
		return self._oleobj_.InvokeTypes(106, LCID, 2, (3, 0), ((3, 1),),Index
			)

	# The method SetCellFormat is actually a property, but must be used as a method to correctly pass the arguments
	def SetCellFormat(self, NRow=defaultNamedNotOptArg, NCol=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		'‘ормат вывода текста в €чейке.'
		return self._oleobj_.InvokeTypes(109, LCID, 4, (24, 0), ((3, 1), (3, 1), (3, 1)),NRow
			, NCol, arg2)

	# The method SetCellText is actually a property, but must be used as a method to correctly pass the arguments
	def SetCellText(self, NRow=defaultNamedNotOptArg, NCol=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		'“екст в €чейке.'
		return self._oleobj_.InvokeTypes(108, LCID, 4, (24, 0), ((3, 1), (3, 1), (8, 1)),NRow
			, NCol, arg2)

	# The method SetColumnVisible is actually a property, but must be used as a method to correctly pass the arguments
	def SetColumnVisible(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'¬идимость колонки.'
		return self._oleobj_.InvokeTypes(118, LCID, 4, (24, 0), ((3, 1), (11, 1)),Index
			, arg1)

	# The method SetColumnWidth is actually a property, but must be used as a method to correctly pass the arguments
	def SetColumnWidth(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'Ўирина колонки.'
		return self._oleobj_.InvokeTypes(105, LCID, 4, (24, 0), ((3, 1), (3, 1)),Index
			, arg1)

	# The method SetEnableEdit is actually a property, but must be used as a method to correctly pass the arguments
	def SetEnableEdit(self, NRow=defaultNamedNotOptArg, NCol=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		'«апрет редактировани€ €чеек.'
		return self._oleobj_.InvokeTypes(107, LCID, 4, (24, 0), ((3, 1), (3, 1), (11, 1)),NRow
			, NCol, arg2)

	# The method SetRowHeight is actually a property, but must be used as a method to correctly pass the arguments
	def SetRowHeight(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'¬ысота строки.'
		return self._oleobj_.InvokeTypes(106, LCID, 4, (24, 0), ((3, 1), (3, 1)),Index
			, arg1)

	def UpdateParam(self):
		'ќбновить параметры сетки'
		return self._oleobj_.InvokeTypes(114, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AutoSizeColumns": (113, 2, (11, 0), (), "AutoSizeColumns", None),
		"ColumnCount": (101, 2, (3, 0), (), "ColumnCount", None),
		"ControlType": (3, 2, (3, 0), (), "ControlType", None),
		"CurrentColumn": (115, 2, (3, 0), (), "CurrentColumn", None),
		"CurrentRow": (116, 2, (3, 0), (), "CurrentRow", None),
		"Enable": (5, 2, (11, 0), (), "Enable", None),
		"EnableDeleteRows": (117, 2, (11, 0), (), "EnableDeleteRows", None),
		"FixedColumnCount": (103, 2, (3, 0), (), "FixedColumnCount", None),
		"FixedRowCount": (104, 2, (3, 0), (), "FixedRowCount", None),
		"Height": (111, 2, (3, 0), (), "Height", None),
		"Hint": (8, 2, (8, 0), (), "Hint", None),
		"Id": (4, 2, (3, 0), (), "Id", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"NameVisibility": (7, 2, (3, 0), (), "NameVisibility", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"ReadOnly": (112, 2, (11, 0), (), "ReadOnly", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"RowCount": (102, 2, (3, 0), (), "RowCount", None),
		"Tips": (9, 2, (8, 0), (), "Tips", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Value": (6, 2, (12, 0), (), "Value", None),
		"Visible": (1, 2, (11, 0), (), "Visible", None),
		"Width": (110, 2, (3, 0), (), "Width", None),
	}
	_prop_map_put_ = {
		"AutoSizeColumns": ((113, LCID, 4, 0),()),
		"ColumnCount": ((101, LCID, 4, 0),()),
		"CurrentColumn": ((115, LCID, 4, 0),()),
		"CurrentRow": ((116, LCID, 4, 0),()),
		"Enable": ((5, LCID, 4, 0),()),
		"EnableDeleteRows": ((117, LCID, 4, 0),()),
		"FixedColumnCount": ((103, LCID, 4, 0),()),
		"FixedRowCount": ((104, LCID, 4, 0),()),
		"Height": ((111, LCID, 4, 0),()),
		"Hint": ((8, LCID, 4, 0),()),
		"Id": ((4, LCID, 4, 0),()),
		"Name": ((2, LCID, 4, 0),()),
		"NameVisibility": ((7, LCID, 4, 0),()),
		"ReadOnly": ((112, LCID, 4, 0),()),
		"RowCount": ((102, LCID, 4, 0),()),
		"Tips": ((9, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((1, LCID, 4, 0),()),
		"Width": ((110, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPropertyGroupBegin(DispatchBaseClass):
	'Ёлемент панели свойств - Ќачало группы контролов.'
	CLSID = IID('{5A247709-EA70-443C-968E-BFECC951E14F}')
	coclass_clsid = IID('{4591067E-C29A-4548-96B6-B455AF7006DC}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ControlType": (3, 2, (3, 0), (), "ControlType", None),
		"Enable": (5, 2, (11, 0), (), "Enable", None),
		"Expanded": (102, 2, (11, 0), (), "Expanded", None),
		"Expanding": (101, 2, (11, 0), (), "Expanding", None),
		"Hint": (8, 2, (8, 0), (), "Hint", None),
		"Id": (4, 2, (3, 0), (), "Id", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"NameVisibility": (7, 2, (3, 0), (), "NameVisibility", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Tips": (9, 2, (8, 0), (), "Tips", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Value": (6, 2, (12, 0), (), "Value", None),
		"Visible": (1, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Enable": ((5, LCID, 4, 0),()),
		"Expanded": ((102, LCID, 4, 0),()),
		"Expanding": ((101, LCID, 4, 0),()),
		"Hint": ((8, LCID, 4, 0),()),
		"Id": ((4, LCID, 4, 0),()),
		"Name": ((2, LCID, 4, 0),()),
		"NameVisibility": ((7, LCID, 4, 0),()),
		"Tips": ((9, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((1, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPropertyGroupEnd(DispatchBaseClass):
	'Ёлемент панели свойств -  онец группы контролов.'
	CLSID = IID('{6AFDDAC7-EB89-440C-8AD0-866AEEEAB7CC}')
	coclass_clsid = IID('{7B10BC9A-6A9A-4D5E-B896-294134FB680F}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ControlType": (3, 2, (3, 0), (), "ControlType", None),
		"Enable": (5, 2, (11, 0), (), "Enable", None),
		"Hint": (8, 2, (8, 0), (), "Hint", None),
		"Id": (4, 2, (3, 0), (), "Id", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"NameVisibility": (7, 2, (3, 0), (), "NameVisibility", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Tips": (9, 2, (8, 0), (), "Tips", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Value": (6, 2, (12, 0), (), "Value", None),
		"Visible": (1, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Enable": ((5, LCID, 4, 0),()),
		"Hint": ((8, LCID, 4, 0),()),
		"Id": ((4, LCID, 4, 0),()),
		"Name": ((2, LCID, 4, 0),()),
		"NameVisibility": ((7, LCID, 4, 0),()),
		"Tips": ((9, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((1, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPropertyKeeper(DispatchBaseClass):
	'»нтерфейс получени€/редактировани€ значени€ свойств.'
	CLSID = IID('{AE7377CB-28C6-468E-B667-73117BCDC300}')
	coclass_clsid = None

	def GetComplexPropertyValue(self, Property=defaultNamedNotOptArg, FromSource=pythoncom.Missing):
		'ѕолучить значение составного свойства.'
		return self._ApplyTypes_(16008, 1, (8, 0), ((9, 1), (16395, 2)), 'GetComplexPropertyValue', None,Property
			, FromSource)

	# Result is of type IUserDataStorage
	def GetPropertyAdditionalStorage(self, Property=defaultNamedNotOptArg, Create=defaultNamedNotOptArg, FromSource=pythoncom.Missing):
		'ѕолучить дополнительные данные св€занные со свойством.'
		return self._ApplyTypes_(16002, 1, (9, 0), ((9, 1), (11, 1), (16395, 2)), 'GetPropertyAdditionalStorage', '{DD2AF5C4-D5B9-420D-B658-F935F80A8586}',Property
			, Create, FromSource)

	def GetPropertyValue(self, Property=defaultNamedNotOptArg, Value=pythoncom.Missing, BaseUnit=defaultNamedNotOptArg, FromSource=pythoncom.Missing):
		'ѕолучить значение свойства.'
		return self._ApplyTypes_(16000, 1, (11, 0), ((9, 1), (16396, 2), (11, 1), (16395, 2)), 'GetPropertyValue', None,Property
			, Value, BaseUnit, FromSource)

	# Result is of type IUserDataStoragesMng
	def GetUserDataStoragesManager(self, FromSource=defaultNamedNotOptArg):
		'ћенеджер дл€ работы с пользовательским хранилищем данных.'
		ret = self._oleobj_.InvokeTypes(16003, LCID, 1, (9, 0), ((11, 1),),FromSource
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetUserDataStoragesManager', '{77A6D4CA-6418-4DEE-B59C-400BFD052375}')
		return ret

	def InsertHypertextReference(self, Property=defaultNamedNotOptArg, Object=defaultNamedNotOptArg, Type=defaultNamedNotOptArg, Brackets=defaultNamedNotOptArg
			, TextLineIndex=defaultNamedNotOptArg, Precision=defaultNamedNotOptArg, PropertyId=defaultNamedNotOptArg):
		'ƒобавить ссылку в свойство.'
		return self._oleobj_.InvokeTypes(16004, LCID, 1, (11, 0), ((9, 1), (9, 1), (3, 1), (11, 1), (3, 1), (3, 1), (5, 1)),Property
			, Object, Type, Brackets, TextLineIndex, Precision
			, PropertyId)

	def IsComplexPropertyValue(self, Property=defaultNamedNotOptArg):
		'ѕризнак комплексного значени€ свойства.'
		return self._oleobj_.InvokeTypes(16007, LCID, 1, (11, 0), ((9, 1),),Property
			)

	def SetComplexPropertyValue(self, Property=defaultNamedNotOptArg, Value=defaultNamedNotOptArg):
		'”становить значение составного свойства.'
		return self._oleobj_.InvokeTypes(16009, LCID, 1, (11, 0), ((9, 1), (8, 1)),Property
			, Value)

	def SetPropertyValue(self, Property=defaultNamedNotOptArg, Value=defaultNamedNotOptArg, BaseUnit=defaultNamedNotOptArg):
		'”становить значение свойства.'
		return self._oleobj_.InvokeTypes(16001, LCID, 1, (11, 0), ((9, 1), (12, 1), (11, 1)),Property
			, Value, BaseUnit)

	_prop_map_get_ = {
		"Properties": (16005, 2, (8, 0), (), "Properties", None),
		"UniqueMetaObjectKey": (16006, 2, (8, 0), (), "UniqueMetaObjectKey", None),
	}
	_prop_map_put_ = {
		"Properties": ((16005, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPropertyLibExplorer(DispatchBaseClass):
	'Ёлемент панели свойств - ќтображение библиотеки документов'
	CLSID = IID('{2A214701-0BCB-406C-B57F-6DFADD799A64}')
	coclass_clsid = IID('{F89065E8-D547-452F-8723-24DB2304BC29}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ControlType": (3, 2, (3, 0), (), "ControlType", None),
		"Enable": (5, 2, (11, 0), (), "Enable", None),
		"FileName": (101, 2, (8, 0), (), "FileName", None),
		"FileValue": (103, 2, (11, 0), (), "FileValue", None),
		"Hint": (8, 2, (8, 0), (), "Hint", None),
		"Id": (4, 2, (3, 0), (), "Id", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"NameVisibility": (7, 2, (3, 0), (), "NameVisibility", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"RootName": (102, 2, (8, 0), (), "RootName", None),
		"Tips": (9, 2, (8, 0), (), "Tips", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Value": (6, 2, (12, 0), (), "Value", None),
		"Visible": (1, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Enable": ((5, LCID, 4, 0),()),
		"FileName": ((101, LCID, 4, 0),()),
		"Hint": ((8, LCID, 4, 0),()),
		"Id": ((4, LCID, 4, 0),()),
		"Name": ((2, LCID, 4, 0),()),
		"NameVisibility": ((7, LCID, 4, 0),()),
		"RootName": ((102, LCID, 4, 0),()),
		"Tips": ((9, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((1, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPropertyLinkButton(DispatchBaseClass):
	'Ёлемент панели свойств - Ќабор кнопок ввиде ссылок.'
	CLSID = IID('{4BE1AC9D-61F2-4305-95D5-2ED6C2B21A6A}')
	coclass_clsid = IID('{24D51CCA-A3F0-4055-86A5-32077679DA60}')

	def AddButton(self, BtnID=defaultNamedNotOptArg, Lebel=defaultNamedNotOptArg):
		'ƒобавить кнопку.'
		return self._oleobj_.InvokeTypes(101, LCID, 1, (11, 0), ((3, 1), (8, 1)),BtnID
			, Lebel)

	# The method ButtonChecked is actually a property, but must be used as a method to correctly pass the arguments
	def ButtonChecked(self, BtnID=defaultNamedNotOptArg):
		'Ќажатие кнопки.'
		return self._oleobj_.InvokeTypes(102, LCID, 2, (11, 0), ((3, 1),),BtnID
			)

	# The method ButtonEnable is actually a property, but must be used as a method to correctly pass the arguments
	def ButtonEnable(self, BtnID=defaultNamedNotOptArg):
		'ƒоступность кнопки.'
		return self._oleobj_.InvokeTypes(103, LCID, 2, (11, 0), ((3, 1),),BtnID
			)

	# The method ButtonVisible is actually a property, but must be used as a method to correctly pass the arguments
	def ButtonVisible(self, BtnID=defaultNamedNotOptArg):
		'ќтображение кнопки.'
		return self._oleobj_.InvokeTypes(104, LCID, 2, (11, 0), ((3, 1),),BtnID
			)

	# The method SetButtonChecked is actually a property, but must be used as a method to correctly pass the arguments
	def SetButtonChecked(self, BtnID=defaultNamedNotOptArg, arg1=False):
		'Ќажатие кнопки.'
		return self._oleobj_.InvokeTypes(102, LCID, 4, (24, 0), ((3, 1), (11, 49)),BtnID
			, arg1)

	# The method SetButtonEnable is actually a property, but must be used as a method to correctly pass the arguments
	def SetButtonEnable(self, BtnID=defaultNamedNotOptArg, arg1=True):
		'ƒоступность кнопки.'
		return self._oleobj_.InvokeTypes(103, LCID, 4, (24, 0), ((3, 1), (11, 49)),BtnID
			, arg1)

	# The method SetButtonVisible is actually a property, but must be used as a method to correctly pass the arguments
	def SetButtonVisible(self, BtnID=defaultNamedNotOptArg, arg1=True):
		'ќтображение кнопки.'
		return self._oleobj_.InvokeTypes(104, LCID, 4, (24, 0), ((3, 1), (11, 49)),BtnID
			, arg1)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ControlType": (3, 2, (3, 0), (), "ControlType", None),
		"Enable": (5, 2, (11, 0), (), "Enable", None),
		"Hint": (8, 2, (8, 0), (), "Hint", None),
		"Id": (4, 2, (3, 0), (), "Id", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"NameVisibility": (7, 2, (3, 0), (), "NameVisibility", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Tips": (9, 2, (8, 0), (), "Tips", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Value": (6, 2, (12, 0), (), "Value", None),
		"Visible": (1, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"ButtonChecked": ((102, LCID, 4, 0),('False',)),
		"ButtonEnable": ((103, LCID, 4, 0),('True',)),
		"ButtonVisible": ((104, LCID, 4, 0),('True',)),
		"Enable": ((5, LCID, 4, 0),()),
		"Hint": ((8, LCID, 4, 0),()),
		"Id": ((4, LCID, 4, 0),()),
		"Name": ((2, LCID, 4, 0),()),
		"NameVisibility": ((7, LCID, 4, 0),()),
		"Tips": ((9, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((1, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPropertyList(DispatchBaseClass):
	'Ёлемент панели свойств -  омбобокс'
	CLSID = IID('{8F53E9D5-07AD-412E-8C2A-509BC633C4FF}')
	coclass_clsid = IID('{404CF845-9BF6-4AAD-97A1-B9A173ACF96D}')

	def Add(self, NewVal=defaultNamedNotOptArg):
		'ƒобавить значение в список.'
		return self._oleobj_.InvokeTypes(109, LCID, 1, (24, 0), ((12, 1),),NewVal
			)

	def ClearList(self):
		'ќчистить список значений.'
		return self._oleobj_.InvokeTypes(108, LCID, 1, (24, 0), (),)

	def Find(self, Val=defaultNamedNotOptArg):
		'Ќайти индекс в списке по значению.'
		return self._oleobj_.InvokeTypes(111, LCID, 1, (3, 0), ((12, 1),),Val
			)

	def SetCurrentByIndex(self, Val=defaultNamedNotOptArg):
		'”становить текущее значение в списке по индексу'
		return self._oleobj_.InvokeTypes(112, LCID, 1, (11, 0), ((3, 1),),Val
			)

	def SetValueRange(self, MinVal=defaultNamedNotOptArg, MaxVal=defaultNamedNotOptArg):
		'”становить новые ограничени€ на значение.'
		return self._oleobj_.InvokeTypes(103, LCID, 1, (11, 0), ((12, 1), (12, 1)),MinVal
			, MaxVal)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"CheckState": (105, 2, (3, 0), (), "CheckState", None),
		"ControlType": (3, 2, (3, 0), (), "ControlType", None),
		"Count": (114, 2, (3, 0), (), "Count", None),
		"Enable": (5, 2, (11, 0), (), "Enable", None),
		"Hint": (8, 2, (8, 0), (), "Hint", None),
		"Id": (4, 2, (3, 0), (), "Id", None),
		"MaxValue": (102, 2, (12, 0), (), "MaxValue", None),
		"MinValue": (101, 2, (12, 0), (), "MinValue", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"NameVisibility": (7, 2, (3, 0), (), "NameVisibility", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Precision": (113, 2, (5, 0), (), "Precision", None),
		"ReadOnly": (106, 2, (11, 0), (), "ReadOnly", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Sort": (110, 2, (11, 0), (), "Sort", None),
		"Step": (115, 2, (5, 0), (), "Step", None),
		"Tips": (9, 2, (8, 0), (), "Tips", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Value": (6, 2, (12, 0), (), "Value", None),
		"Visible": (1, 2, (11, 0), (), "Visible", None),
		"Width": (107, 2, (3, 0), (), "Width", None),
		"WithCheck": (104, 2, (11, 0), (), "WithCheck", None),
	}
	_prop_map_put_ = {
		"CheckState": ((105, LCID, 4, 0),()),
		"Enable": ((5, LCID, 4, 0),()),
		"Hint": ((8, LCID, 4, 0),()),
		"Id": ((4, LCID, 4, 0),()),
		"Name": ((2, LCID, 4, 0),()),
		"NameVisibility": ((7, LCID, 4, 0),()),
		"Precision": ((113, LCID, 4, 0),()),
		"ReadOnly": ((106, LCID, 4, 0),()),
		"Sort": ((110, LCID, 4, 0),()),
		"Step": ((115, LCID, 4, 0),()),
		"Tips": ((9, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((1, LCID, 4, 0),()),
		"Width": ((107, LCID, 4, 0),()),
		"WithCheck": ((104, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(114, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IPropertyManager(DispatchBaseClass):
	'»нтерфейс панели свойств.'
	CLSID = IID('{34196EC3-58B2-436C-A353-427703740874}')
	coclass_clsid = IID('{1B9CBAB1-99DA-433E-8D4E-6761D1AB9B8A}')

	def AddSetupMenuCommand(self, Title=defaultNamedNotOptArg, Command=defaultNamedNotOptArg, Checable=defaultNamedNotOptArg):
		'ƒобавить пункт в меню настроек процесса.'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (11, 0), ((8, 1), (3, 1), (11, 1)),Title
			, Command, Checable)

	def AddSpecToolbarButton(self, BtnID=defaultNamedNotOptArg, Bmp=defaultNamedNotOptArg, Tips=defaultNamedNotOptArg, IconFont=defaultNamedNotOptArg):
		'ƒобавить кнопку в спецпанель'
		return self._oleobj_.InvokeTypes(15, LCID, 1, (11, 0), ((3, 1), (12, 1), (8, 1), (8, 1)),BtnID
			, Bmp, Tips, IconFont)

	def ClearSpecToolbar(self):
		'ќчистить спецпанель'
		return self._oleobj_.InvokeTypes(21, LCID, 1, (11, 0), (),)

	def GetGabaritRect(self, Left=pythoncom.Missing, Top=pythoncom.Missing, Right=pythoncom.Missing, Bottom=pythoncom.Missing):
		'ѕолучить габаритный пр€моугольник панели свойств.'
		return self._ApplyTypes_(6, 1, (24, 0), ((16387, 2), (16387, 2), (16387, 2), (16387, 2)), 'GetGabaritRect', None,Left
			, Top, Right, Bottom)

	def HideTabs(self):
		'—крыть закладки и их содержимое на панели свойств.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), (),)

	def RepeatCommand(self):
		'ѕовторить команду(посылает повторно событие панели свойст).'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), (),)

	def SetGabaritRect(self, Left=defaultNamedNotOptArg, Top=defaultNamedNotOptArg, Right=defaultNamedNotOptArg, Bottom=defaultNamedNotOptArg):
		'”становить габаритный пр€моугольник панели свойств.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (24, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),Left
			, Top, Right, Bottom)

	def SetSetupMenuCommandState(self, Command=defaultNamedNotOptArg, Visible=defaultNamedNotOptArg, Enable=defaultNamedNotOptArg, Checked=defaultNamedNotOptArg):
		'”становить состо€ние команды меню настроек процесса.'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (11, 0), ((3, 1), (11, 1), (11, 1), (11, 1)),Command
			, Visible, Enable, Checked)

	def ShowTabs(self):
		'ќтобразить закладки и их содержимое на панели свойств.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), (),)

	def UpdateTabs(self):
		'ќбновить закладки и их содержимое на панели свойств.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AutoHideMode": (12, 2, (11, 0), (), "AutoHideMode", None),
		"Caption": (2, 2, (8, 0), (), "Caption", None),
		"EnterButtonIconType": (18, 2, (3, 0), (), "EnterButtonIconType", None),
		"Label": (20, 2, (8, 0), (), "Label", None),
		"Layout": (3, 2, (3, 0), (), "Layout", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'PropertyTabs' returns object of type 'IPropertyTabs'
		"PropertyTabs": (4, 2, (9, 0), (), "PropertyTabs", '{5BA6324E-E555-490F-A0E2-68D3C6C88D92}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"ResModule": (13, 2, (12, 0), (), "ResModule", None),
		"SpecToolbar": (10, 2, (3, 0), (), "SpecToolbar", None),
		"SpecToolbarEx": (14, 2, (3, 0), (), "SpecToolbarEx", None),
		"StatusMessage": (19, 2, (8, 0), (), "StatusMessage", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Visible": (1, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"AutoHideMode": ((12, LCID, 4, 0),()),
		"Caption": ((2, LCID, 4, 0),()),
		"EnterButtonIconType": ((18, LCID, 4, 0),()),
		"Label": ((20, LCID, 4, 0),()),
		"Layout": ((3, LCID, 4, 0),()),
		"ResModule": ((13, LCID, 4, 0),()),
		"SpecToolbar": ((10, LCID, 4, 0),()),
		"SpecToolbarEx": ((14, LCID, 4, 0),()),
		"StatusMessage": ((19, LCID, 4, 0),()),
		"Visible": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPropertyMarking(DispatchBaseClass):
	'Ёлемент панели свойств - ќбозначение.'
	CLSID = IID('{2F69F0E3-89DA-4B0C-8ABE-A6E996F39AD1}')
	coclass_clsid = IID('{E4A732A0-3DA8-40E3-9E05-E65F22F080DA}')

	def GetMarking(self, MarkingType=defaultNamedNotOptArg, AddSystemDelimer=defaultNamedNotOptArg):
		'ќбозначение исполнени€'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(101, LCID, 1, (8, 0), ((3, 1), (11, 1)),MarkingType
			, AddSystemDelimer)

	# The method MarkingVisible is actually a property, but must be used as a method to correctly pass the arguments
	def MarkingVisible(self, MarkingType=defaultNamedNotOptArg):
		'ѕризнак отображение части обозначени€.'
		return self._oleobj_.InvokeTypes(103, LCID, 2, (11, 0), ((3, 1),),MarkingType
			)

	def SetMarking(self, MarkingType=defaultNamedNotOptArg, Marking=defaultNamedNotOptArg):
		'ќбозначение исполнени€'
		return self._oleobj_.InvokeTypes(102, LCID, 1, (11, 0), ((3, 1), (8, 1)),MarkingType
			, Marking)

	# The method SetMarkingVisible is actually a property, but must be used as a method to correctly pass the arguments
	def SetMarkingVisible(self, MarkingType=defaultNamedNotOptArg, arg1=True):
		'ѕризнак отображение части обозначени€.'
		return self._oleobj_.InvokeTypes(103, LCID, 4, (24, 0), ((3, 1), (11, 49)),MarkingType
			, arg1)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ControlType": (3, 2, (3, 0), (), "ControlType", None),
		"Enable": (5, 2, (11, 0), (), "Enable", None),
		"Hint": (8, 2, (8, 0), (), "Hint", None),
		"Id": (4, 2, (3, 0), (), "Id", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"NameVisibility": (7, 2, (3, 0), (), "NameVisibility", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"ReadOnly": (104, 2, (11, 0), (), "ReadOnly", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Tips": (9, 2, (8, 0), (), "Tips", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Value": (6, 2, (12, 0), (), "Value", None),
		"Visible": (1, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Enable": ((5, LCID, 4, 0),()),
		"Hint": ((8, LCID, 4, 0),()),
		"Id": ((4, LCID, 4, 0),()),
		"MarkingVisible": ((103, LCID, 4, 0),('True',)),
		"Name": ((2, LCID, 4, 0),()),
		"NameVisibility": ((7, LCID, 4, 0),()),
		"ReadOnly": ((104, LCID, 4, 0),()),
		"Tips": ((9, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((1, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPropertyMng(DispatchBaseClass):
	'ћенеджер свойств'
	CLSID = IID('{FD515235-4DBA-4F81-8D5C-6FE87C834562}')
	coclass_clsid = None

	# Result is of type IProperty
	def AddProperty(self, Libname=defaultNamedNotOptArg, Val=defaultNamedNotOptArg):
		'ƒобавить свойство.'
		ret = self._oleobj_.InvokeTypes(1503, LCID, 1, (9, 0), ((12, 1), (12, 1)),Libname
			, Val)
		if ret is not None:
			ret = Dispatch(ret, 'AddProperty', '{C389F80D-228D-4FB1-B183-959AEA0B5906}')
		return ret

	def GetProperties(self, Libname=defaultNamedNotOptArg):
		'¬озвращает массив свойств, наход€щихс€ в заданной библиотеке.'
		return self._ApplyTypes_(1502, 1, (12, 0), ((12, 1),), 'GetProperties', None,Libname
			)

	# Result is of type IProperty
	def GetProperty(self, Libname=defaultNamedNotOptArg, Index=defaultNamedNotOptArg):
		'ѕолучить свойство из библиотеки libname.'
		ret = self._oleobj_.InvokeTypes(1501, LCID, 1, (9, 0), ((12, 1), (12, 1)),Libname
			, Index)
		if ret is not None:
			ret = Dispatch(ret, 'GetProperty', '{C389F80D-228D-4FB1-B183-959AEA0B5906}')
		return ret

	# Result is of type IReport
	def GetReport(self, Document=defaultNamedNotOptArg, Type=defaultNamedNotOptArg):
		'ѕолучить интерфейс таблицы отчета по имени файла или указателю на документ.'
		ret = self._oleobj_.InvokeTypes(1505, LCID, 1, (9, 0), ((12, 1), (3, 0)),Document
			, Type)
		if ret is not None:
			ret = Dispatch(ret, 'GetReport', '{37FD3C77-6032-4459-95E9-C8DFC43B85FF}')
		return ret

	# The method PropertyCount is actually a property, but must be used as a method to correctly pass the arguments
	def PropertyCount(self, Libname=defaultNamedNotOptArg):
		' оличество свойств.'
		return self._oleobj_.InvokeTypes(1500, LCID, 2, (3, 0), ((12, 1),),Libname
			)

	def RemoveProperty(self, Libname=defaultNamedNotOptArg, Val=defaultNamedNotOptArg):
		'”далить свойство.'
		return self._oleobj_.InvokeTypes(1504, LCID, 1, (11, 0), ((12, 1), (12, 1)),Libname
			, Val)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPropertyMultiButton(DispatchBaseClass):
	'Ёлемент панели свойств - Ќабор кнопок.'
	CLSID = IID('{3920A0BE-0628-47D5-B0F1-1DFEB77964BC}')
	coclass_clsid = IID('{B734CA6E-CA21-4CCD-AEE8-94BC8F9D4986}')

	def AddButton(self, BtnID=defaultNamedNotOptArg, Bmp=defaultNamedNotOptArg, InsertAt=-1):
		'ƒобавить кнопку.'
		return self._oleobj_.InvokeTypes(104, LCID, 1, (24, 0), ((3, 1), (12, 1), (3, 49)),BtnID
			, Bmp, InsertAt)

	# The method ButtonChecked is actually a property, but must be used as a method to correctly pass the arguments
	def ButtonChecked(self, BtnID=defaultNamedNotOptArg):
		'Ќажатие кнопки.'
		return self._oleobj_.InvokeTypes(102, LCID, 2, (11, 0), ((3, 1),),BtnID
			)

	# The method ButtonEnable is actually a property, but must be used as a method to correctly pass the arguments
	def ButtonEnable(self, BtnID=defaultNamedNotOptArg):
		'ƒоступность кнопки.'
		return self._oleobj_.InvokeTypes(103, LCID, 2, (11, 0), ((3, 1),),BtnID
			)

	# The method ButtonHint is actually a property, but must be used as a method to correctly pass the arguments
	def ButtonHint(self, BtnID=defaultNamedNotOptArg):
		'—трока подсказки дл€ кнопки.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(107, LCID, 2, (8, 0), ((3, 1),),BtnID
			)

	# The method ButtonIconFont is actually a property, but must be used as a method to correctly pass the arguments
	def ButtonIconFont(self, BtnID=defaultNamedNotOptArg):
		'Ўрифт дл€ кнопок.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(110, LCID, 2, (8, 0), ((3, 1),),BtnID
			)

	# The method ButtonTips is actually a property, but must be used as a method to correctly pass the arguments
	def ButtonTips(self, BtnID=defaultNamedNotOptArg):
		'—трока подсказки дл€ кнопки.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(106, LCID, 2, (8, 0), ((3, 1),),BtnID
			)

	# The method ButtonVisible is actually a property, but must be used as a method to correctly pass the arguments
	def ButtonVisible(self, BtnID=defaultNamedNotOptArg):
		'ќтображение кнопки.'
		return self._oleobj_.InvokeTypes(109, LCID, 2, (11, 0), ((3, 1),),BtnID
			)

	# The method SetButtonChecked is actually a property, but must be used as a method to correctly pass the arguments
	def SetButtonChecked(self, BtnID=defaultNamedNotOptArg, arg1=False):
		'Ќажатие кнопки.'
		return self._oleobj_.InvokeTypes(102, LCID, 4, (24, 0), ((3, 1), (11, 49)),BtnID
			, arg1)

	# The method SetButtonEnable is actually a property, but must be used as a method to correctly pass the arguments
	def SetButtonEnable(self, BtnID=defaultNamedNotOptArg, arg1=True):
		'ƒоступность кнопки.'
		return self._oleobj_.InvokeTypes(103, LCID, 4, (24, 0), ((3, 1), (11, 49)),BtnID
			, arg1)

	# The method SetButtonHint is actually a property, but must be used as a method to correctly pass the arguments
	def SetButtonHint(self, BtnID=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'—трока подсказки дл€ кнопки.'
		return self._oleobj_.InvokeTypes(107, LCID, 4, (24, 0), ((3, 1), (8, 1)),BtnID
			, arg1)

	# The method SetButtonIconFont is actually a property, but must be used as a method to correctly pass the arguments
	def SetButtonIconFont(self, BtnID=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'Ўрифт дл€ кнопок.'
		return self._oleobj_.InvokeTypes(110, LCID, 4, (24, 0), ((3, 1), (8, 1)),BtnID
			, arg1)

	# The method SetButtonTips is actually a property, but must be used as a method to correctly pass the arguments
	def SetButtonTips(self, BtnID=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'—трока подсказки дл€ кнопки.'
		return self._oleobj_.InvokeTypes(106, LCID, 4, (24, 0), ((3, 1), (8, 1)),BtnID
			, arg1)

	# The method SetButtonVisible is actually a property, but must be used as a method to correctly pass the arguments
	def SetButtonVisible(self, BtnID=defaultNamedNotOptArg, arg1=True):
		'ќтображение кнопки.'
		return self._oleobj_.InvokeTypes(109, LCID, 4, (24, 0), ((3, 1), (11, 49)),BtnID
			, arg1)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ButtonsType": (101, 2, (3, 0), (), "ButtonsType", None),
		"ControlType": (3, 2, (3, 0), (), "ControlType", None),
		"Enable": (5, 2, (11, 0), (), "Enable", None),
		"Hint": (8, 2, (8, 0), (), "Hint", None),
		"Id": (4, 2, (3, 0), (), "Id", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"NameVisibility": (7, 2, (3, 0), (), "NameVisibility", None),
		"NextCommand": (108, 2, (11, 0), (), "NextCommand", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"ResModule": (105, 2, (12, 0), (), "ResModule", None),
		"Tips": (9, 2, (8, 0), (), "Tips", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Value": (6, 2, (12, 0), (), "Value", None),
		"Visible": (1, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"ButtonChecked": ((102, LCID, 4, 0),('False',)),
		"ButtonEnable": ((103, LCID, 4, 0),('True',)),
		"ButtonVisible": ((109, LCID, 4, 0),('True',)),
		"ButtonsType": ((101, LCID, 4, 0),()),
		"Enable": ((5, LCID, 4, 0),()),
		"Hint": ((8, LCID, 4, 0),()),
		"Id": ((4, LCID, 4, 0),()),
		"Name": ((2, LCID, 4, 0),()),
		"NameVisibility": ((7, LCID, 4, 0),()),
		"NextCommand": ((108, LCID, 4, 0),()),
		"ResModule": ((105, LCID, 4, 0),()),
		"Tips": ((9, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((1, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPropertyOpticalProps(DispatchBaseClass):
	'Ёлемент панели свойств -  онтрол оптических свойств'
	CLSID = IID('{E1AC2948-6191-4240-85F4-5A32321E9D46}')
	coclass_clsid = IID('{83ED9022-AF06-4E7C-A77B-E95B325DBC43}')

	def Init(self, PVal=defaultNamedNotOptArg):
		'»нициализировать контрол по параметрам.'
		return self._oleobj_.InvokeTypes(102, LCID, 1, (11, 0), ((9, 1),),PVal
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'ColorParam' returns object of type 'IColorParam7'
		"ColorParam": (101, 2, (9, 0), (), "ColorParam", '{BE6A80EE-38FE-4432-8331-BF864830761C}'),
		"ControlType": (3, 2, (3, 0), (), "ControlType", None),
		"Enable": (5, 2, (11, 0), (), "Enable", None),
		"EnableAmbient": (103, 2, (11, 0), (), "EnableAmbient", None),
		"EnableDiffuse": (104, 2, (11, 0), (), "EnableDiffuse", None),
		"EnableEmission": (108, 2, (11, 0), (), "EnableEmission", None),
		"EnableShininess": (106, 2, (11, 0), (), "EnableShininess", None),
		"EnableSpecularity": (105, 2, (11, 0), (), "EnableSpecularity", None),
		"EnableTransparency": (107, 2, (11, 0), (), "EnableTransparency", None),
		"Hint": (8, 2, (8, 0), (), "Hint", None),
		"Id": (4, 2, (3, 0), (), "Id", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"NameVisibility": (7, 2, (3, 0), (), "NameVisibility", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Tips": (9, 2, (8, 0), (), "Tips", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Value": (6, 2, (12, 0), (), "Value", None),
		"Visible": (1, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Enable": ((5, LCID, 4, 0),()),
		"EnableAmbient": ((103, LCID, 4, 0),()),
		"EnableDiffuse": ((104, LCID, 4, 0),()),
		"EnableEmission": ((108, LCID, 4, 0),()),
		"EnableShininess": ((106, LCID, 4, 0),()),
		"EnableSpecularity": ((105, LCID, 4, 0),()),
		"EnableTransparency": ((107, LCID, 4, 0),()),
		"Hint": ((8, LCID, 4, 0),()),
		"Id": ((4, LCID, 4, 0),()),
		"Name": ((2, LCID, 4, 0),()),
		"NameVisibility": ((7, LCID, 4, 0),()),
		"Tips": ((9, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((1, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPropertyPoint3D(DispatchBaseClass):
	'Ёлемент панели свойств - “очка 3D'
	CLSID = IID('{64725D44-155C-412C-B0F5-F5203F5F75FD}')
	coclass_clsid = IID('{E32A2D46-75F5-4DA8-A40E-03EC806F20D1}')

	# Result is of type IPropertyEdit
	# The method Coordinate is actually a property, but must be used as a method to correctly pass the arguments
	def Coordinate(self, Index=defaultNamedNotOptArg):
		'ѕараметры координаты.'
		ret = self._oleobj_.InvokeTypes(104, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Coordinate', '{1D238C4C-AAD7-4374-B372-013CF7FCEDB4}')
		return ret

	# The method CoordinateState is actually a property, but must be used as a method to correctly pass the arguments
	def CoordinateState(self, Index=defaultNamedNotOptArg):
		'—осто€ние координаты по индексу.'
		return self._oleobj_.InvokeTypes(103, LCID, 2, (3, 0), ((3, 1),),Index
			)

	# The method CoordinateValue is actually a property, but must be used as a method to correctly pass the arguments
	def CoordinateValue(self, Index=defaultNamedNotOptArg):
		'«начение координаты по индексу.'
		return self._oleobj_.InvokeTypes(102, LCID, 2, (5, 0), ((3, 1),),Index
			)

	# The method SetCoordinateState is actually a property, but must be used as a method to correctly pass the arguments
	def SetCoordinateState(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'—осто€ние координаты по индексу.'
		return self._oleobj_.InvokeTypes(103, LCID, 4, (24, 0), ((3, 1), (3, 1)),Index
			, arg1)

	# The method SetCoordinateValue is actually a property, but must be used as a method to correctly pass the arguments
	def SetCoordinateValue(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'«начение координаты по индексу.'
		return self._oleobj_.InvokeTypes(102, LCID, 4, (24, 0), ((3, 1), (5, 1)),Index
			, arg1)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ControlType": (3, 2, (3, 0), (), "ControlType", None),
		"Enable": (5, 2, (11, 0), (), "Enable", None),
		"Hint": (8, 2, (8, 0), (), "Hint", None),
		"Id": (4, 2, (3, 0), (), "Id", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"NameVisibility": (7, 2, (3, 0), (), "NameVisibility", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Point3DType": (101, 2, (3, 0), (), "Point3DType", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Tips": (9, 2, (8, 0), (), "Tips", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Value": (6, 2, (12, 0), (), "Value", None),
		"Visible": (1, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Enable": ((5, LCID, 4, 0),()),
		"Hint": ((8, LCID, 4, 0),()),
		"Id": ((4, LCID, 4, 0),()),
		"Name": ((2, LCID, 4, 0),()),
		"NameVisibility": ((7, LCID, 4, 0),()),
		"Point3DType": ((101, LCID, 4, 0),()),
		"Tips": ((9, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((1, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPropertyPreviewText(DispatchBaseClass):
	'Ёлемент панели свойств - ѕредпросмотр текста'
	CLSID = IID('{8576D0C2-3147-4CFF-AA39-FA9EF9B799E3}')
	coclass_clsid = IID('{7F6A75B2-8C3D-46B1-8125-07BEB64B6BBB}')

	def UpdateParam(self):
		'ќбновить параметры '
		return self._oleobj_.InvokeTypes(102, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ControlType": (3, 2, (3, 0), (), "ControlType", None),
		"DoubleSize": (103, 2, (11, 0), (), "DoubleSize", None),
		"Enable": (5, 2, (11, 0), (), "Enable", None),
		"Hint": (8, 2, (8, 0), (), "Hint", None),
		"Id": (4, 2, (3, 0), (), "Id", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"NameVisibility": (7, 2, (3, 0), (), "NameVisibility", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'PreviewText' returns object of type 'IText'
		"PreviewText": (101, 2, (9, 0), (), "PreviewText", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Tips": (9, 2, (8, 0), (), "Tips", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Value": (6, 2, (12, 0), (), "Value", None),
		"Visible": (1, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"DoubleSize": ((103, LCID, 4, 0),()),
		"Enable": ((5, LCID, 4, 0),()),
		"Hint": ((8, LCID, 4, 0),()),
		"Id": ((4, LCID, 4, 0),()),
		"Name": ((2, LCID, 4, 0),()),
		"NameVisibility": ((7, LCID, 4, 0),()),
		"Tips": ((9, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((1, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPropertySeparator(DispatchBaseClass):
	'Ёлемент панели свойств - разделитель (сепаратор).'
	CLSID = IID('{4504EFA0-D059-4FD4-B725-FA264D190869}')
	coclass_clsid = IID('{59DA09ED-130F-43AF-86B8-EAC8E0C7D0A2}')

	def SetImage(self, IdBmp=defaultNamedNotOptArg, HInstance=defaultNamedNotOptArg):
		'”становить изображение.'
		return self._oleobj_.InvokeTypes(102, LCID, 1, (11, 0), ((12, 1), (12, 1)),IdBmp
			, HInstance)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ControlType": (3, 2, (3, 0), (), "ControlType", None),
		"Enable": (5, 2, (11, 0), (), "Enable", None),
		"Hint": (8, 2, (8, 0), (), "Hint", None),
		"Id": (4, 2, (3, 0), (), "Id", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"NameVisibility": (7, 2, (3, 0), (), "NameVisibility", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"SeparatorType": (101, 2, (3, 0), (), "SeparatorType", None),
		"Tips": (9, 2, (8, 0), (), "Tips", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Value": (6, 2, (12, 0), (), "Value", None),
		"Visible": (1, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Enable": ((5, LCID, 4, 0),()),
		"Hint": ((8, LCID, 4, 0),()),
		"Id": ((4, LCID, 4, 0),()),
		"Name": ((2, LCID, 4, 0),()),
		"NameVisibility": ((7, LCID, 4, 0),()),
		"SeparatorType": ((101, LCID, 4, 0),()),
		"Tips": ((9, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((1, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPropertySlideBox(DispatchBaseClass):
	'Ёлемент панели свойств - ќкно отображени€ слайда, битмапа, группы или файла документа  ќћѕј—.'
	CLSID = IID('{E1DB38CD-A6D5-44B8-9AD0-0056B87924DD}')
	coclass_clsid = IID('{9988AC8D-657B-4B2A-8338-EC315CBBA70E}')

	def UpdateParam(self):
		'ќбновить параметры '
		return self._oleobj_.InvokeTypes(107, LCID, 1, (24, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"CheckBoxVisibility": (106, 2, (11, 0), (), "CheckBoxVisibility", None),
		"ControlType": (3, 2, (3, 0), (), "ControlType", None),
		"DrawingSlide": (103, 2, (12, 0), (), "DrawingSlide", None),
		"Enable": (5, 2, (11, 0), (), "Enable", None),
		"Height": (105, 2, (3, 0), (), "Height", None),
		"Hint": (8, 2, (8, 0), (), "Hint", None),
		"Id": (4, 2, (3, 0), (), "Id", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"NameVisibility": (7, 2, (3, 0), (), "NameVisibility", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"ResModule": (101, 2, (12, 0), (), "ResModule", None),
		"SlideType": (102, 2, (3, 0), (), "SlideType", None),
		"Tips": (9, 2, (8, 0), (), "Tips", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Value": (6, 2, (12, 0), (), "Value", None),
		"Visible": (1, 2, (11, 0), (), "Visible", None),
		"Width": (104, 2, (3, 0), (), "Width", None),
	}
	_prop_map_put_ = {
		"CheckBoxVisibility": ((106, LCID, 4, 0),()),
		"DrawingSlide": ((103, LCID, 4, 0),()),
		"Enable": ((5, LCID, 4, 0),()),
		"Height": ((105, LCID, 4, 0),()),
		"Hint": ((8, LCID, 4, 0),()),
		"Id": ((4, LCID, 4, 0),()),
		"Name": ((2, LCID, 4, 0),()),
		"NameVisibility": ((7, LCID, 4, 0),()),
		"ResModule": ((101, LCID, 4, 0),()),
		"SlideType": ((102, LCID, 4, 0),()),
		"Tips": ((9, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((1, LCID, 4, 0),()),
		"Width": ((104, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPropertySpinEdit(DispatchBaseClass):
	'Ёлемент панели свойств - —пин c редактором.'
	CLSID = IID('{F214A46D-2BA9-40AD-A32D-E696EF9C895A}')
	coclass_clsid = IID('{F4710743-A53B-4256-A450-16D0D40C87AA}')

	def SetValueRange(self, MinVal=defaultNamedNotOptArg, MaxVal=defaultNamedNotOptArg):
		'”становить новые ограничени€ на значение.'
		return self._oleobj_.InvokeTypes(103, LCID, 1, (11, 0), ((12, 1), (12, 1)),MinVal
			, MaxVal)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"CheckState": (105, 2, (3, 0), (), "CheckState", None),
		"ControlType": (3, 2, (3, 0), (), "ControlType", None),
		"Enable": (5, 2, (11, 0), (), "Enable", None),
		"Hint": (8, 2, (8, 0), (), "Hint", None),
		"Id": (4, 2, (3, 0), (), "Id", None),
		"MaxValue": (102, 2, (12, 0), (), "MaxValue", None),
		"MinValue": (101, 2, (12, 0), (), "MinValue", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"NameVisibility": (7, 2, (3, 0), (), "NameVisibility", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"ReadOnly": (106, 2, (11, 0), (), "ReadOnly", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Step": (108, 2, (5, 0), (), "Step", None),
		"Tips": (9, 2, (8, 0), (), "Tips", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Value": (6, 2, (12, 0), (), "Value", None),
		"Visible": (1, 2, (11, 0), (), "Visible", None),
		"Width": (107, 2, (3, 0), (), "Width", None),
		"WithCheck": (104, 2, (11, 0), (), "WithCheck", None),
	}
	_prop_map_put_ = {
		"CheckState": ((105, LCID, 4, 0),()),
		"Enable": ((5, LCID, 4, 0),()),
		"Hint": ((8, LCID, 4, 0),()),
		"Id": ((4, LCID, 4, 0),()),
		"Name": ((2, LCID, 4, 0),()),
		"NameVisibility": ((7, LCID, 4, 0),()),
		"ReadOnly": ((106, LCID, 4, 0),()),
		"Step": ((108, LCID, 4, 0),()),
		"Tips": ((9, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((1, LCID, 4, 0),()),
		"Width": ((107, LCID, 4, 0),()),
		"WithCheck": ((104, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPropertyStyleList(DispatchBaseClass):
	'Ёлемент панели свойств -  омбобокс со стилем'
	CLSID = IID('{B2431C46-9A35-494B-A958-D9098F82C3FA}')
	coclass_clsid = IID('{C2792BEE-4F86-4610-908E-8E4B31B603FC}')

	def Add(self, Styles=defaultNamedNotOptArg):
		'ƒобавить массив стилей в список. “ип данных (VT_ARRAY | VT_I4)'
		return self._oleobj_.InvokeTypes(101, LCID, 1, (11, 0), ((12, 1),),Styles
			)

	def ClearList(self):
		'ќчистить список.'
		return self._oleobj_.InvokeTypes(103, LCID, 1, (11, 0), (),)

	def Find(self, Val=defaultNamedNotOptArg):
		'Ќайти индекс стил€ по значению.'
		return self._oleobj_.InvokeTypes(104, LCID, 1, (3, 0), ((3, 1),),Val
			)

	_prop_map_get_ = {
		"AnotherStyleBtnEnable": (106, 2, (11, 0), (), "AnotherStyleBtnEnable", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ControlType": (3, 2, (3, 0), (), "ControlType", None),
		"Count": (102, 2, (3, 0), (), "Count", None),
		"CurrentIndex": (105, 2, (3, 0), (), "CurrentIndex", None),
		"Enable": (5, 2, (11, 0), (), "Enable", None),
		"Hint": (8, 2, (8, 0), (), "Hint", None),
		"Id": (4, 2, (3, 0), (), "Id", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"NameVisibility": (7, 2, (3, 0), (), "NameVisibility", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Tips": (9, 2, (8, 0), (), "Tips", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Value": (6, 2, (12, 0), (), "Value", None),
		"Visible": (1, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"AnotherStyleBtnEnable": ((106, LCID, 4, 0),()),
		"CurrentIndex": ((105, LCID, 4, 0),()),
		"Enable": ((5, LCID, 4, 0),()),
		"Hint": ((8, LCID, 4, 0),()),
		"Id": ((4, LCID, 4, 0),()),
		"Name": ((2, LCID, 4, 0),()),
		"NameVisibility": ((7, LCID, 4, 0),()),
		"Tips": ((9, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((1, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(102, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IPropertyTab(DispatchBaseClass):
	'»нтерфейс закладки панели свойств.'
	CLSID = IID('{45DE8E5B-BC2B-4584-8BA7-D3014D3A2397}')
	coclass_clsid = IID('{1C2A5766-B80A-4752-8509-217574965BF3}')

	_prop_map_get_ = {
		"Active": (3, 2, (11, 0), (), "Active", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Caption": (2, 2, (8, 0), (), "Caption", None),
		"Expanded": (7, 2, (11, 0), (), "Expanded", None),
		"Image": (6, 2, (12, 0), (), "Image", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'PropertyControls' returns object of type 'IPropertyControls'
		"PropertyControls": (4, 2, (9, 0), (), "PropertyControls", '{548241BA-FDA8-4633-981E-94552BE38D6B}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"ResModule": (5, 2, (12, 0), (), "ResModule", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Visible": (1, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Active": ((3, LCID, 4, 0),()),
		"Caption": ((2, LCID, 4, 0),()),
		"Expanded": ((7, LCID, 4, 0),()),
		"Image": ((6, LCID, 4, 0),()),
		"ResModule": ((5, LCID, 4, 0),()),
		"Visible": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPropertyTabs(DispatchBaseClass):
	' оллекци€ закладок панели свойств.'
	CLSID = IID('{5BA6324E-E555-490F-A0E2-68D3C6C88D92}')
	coclass_clsid = IID('{52110F5F-7BF2-4079-B3AE-A7B716A7EB1E}')

	# Result is of type IPropertyTab
	def Add(self, Caption=defaultNamedNotOptArg):
		'—оздать закладку панели свойств (добавл€ет закладку панели свойств в коллекцию).'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((8, 1),),Caption
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{45DE8E5B-BC2B-4584-8BA7-D3014D3A2397}')
		return ret

	def Delete(self, Index=defaultNamedNotOptArg):
		'”далить закладку панели свойств, заданную по индексу или по имени.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), ((12, 1),),Index
			)

	# Result is of type IPropertyTab
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает закладку, заданную по индексу или по имени.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{45DE8E5B-BC2B-4584-8BA7-D3014D3A2397}')
		return ret

	_prop_map_get_ = {
		# Method 'Active' returns object of type 'IPropertyTab'
		"Active": (4, 2, (9, 0), (), "Active", '{45DE8E5B-BC2B-4584-8BA7-D3014D3A2397}'),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'SystemTab' returns object of type 'IPropertyTab'
		"SystemTab": (5, 2, (9, 0), (), "SystemTab", '{45DE8E5B-BC2B-4584-8BA7-D3014D3A2397}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает закладку, заданную по индексу или по имени.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{45DE8E5B-BC2B-4584-8BA7-D3014D3A2397}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{45DE8E5B-BC2B-4584-8BA7-D3014D3A2397}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IPropertyTextButton(DispatchBaseClass):
	'Ёлемент панели свойств -  нопка с текстом.'
	CLSID = IID('{3CDFE85F-643D-4008-AE32-379C0EB3FB7F}')
	coclass_clsid = IID('{D4F68E4E-2092-436A-B6FB-B8A335A671FD}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ControlType": (3, 2, (3, 0), (), "ControlType", None),
		"Enable": (5, 2, (11, 0), (), "Enable", None),
		"Hint": (8, 2, (8, 0), (), "Hint", None),
		"Id": (4, 2, (3, 0), (), "Id", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"NameVisibility": (7, 2, (3, 0), (), "NameVisibility", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Tips": (9, 2, (8, 0), (), "Tips", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Value": (6, 2, (12, 0), (), "Value", None),
		"Visible": (1, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Enable": ((5, LCID, 4, 0),()),
		"Hint": ((8, LCID, 4, 0),()),
		"Id": ((4, LCID, 4, 0),()),
		"Name": ((2, LCID, 4, 0),()),
		"NameVisibility": ((7, LCID, 4, 0),()),
		"Tips": ((9, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((1, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPropertyToolBar(DispatchBaseClass):
	'Ёлемент панели свойств - Ќабор команд элемента управлени€.'
	CLSID = IID('{C2523B7E-EB4B-45DB-8E3B-9D6CCED99333}')
	coclass_clsid = None

	def AddButton(self, BtnID=defaultNamedNotOptArg, Bmp=defaultNamedNotOptArg, InsertAt=-1):
		'ƒобавить кнопку.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (24, 0), ((3, 1), (12, 1), (3, 49)),BtnID
			, Bmp, InsertAt)

	# The method ButtonChecked is actually a property, but must be used as a method to correctly pass the arguments
	def ButtonChecked(self, BtnID=defaultNamedNotOptArg):
		'Ќажатие кнопки.'
		return self._oleobj_.InvokeTypes(501, LCID, 2, (11, 0), ((3, 1),),BtnID
			)

	# The method ButtonEnable is actually a property, but must be used as a method to correctly pass the arguments
	def ButtonEnable(self, BtnID=defaultNamedNotOptArg):
		'ƒоступность кнопки.'
		return self._oleobj_.InvokeTypes(502, LCID, 2, (11, 0), ((3, 1),),BtnID
			)

	# The method ButtonHint is actually a property, but must be used as a method to correctly pass the arguments
	def ButtonHint(self, BtnID=defaultNamedNotOptArg):
		'—трока подсказки дл€ кнопки.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(506, LCID, 2, (8, 0), ((3, 1),),BtnID
			)

	# The method ButtonIconFont is actually a property, but must be used as a method to correctly pass the arguments
	def ButtonIconFont(self, BtnID=defaultNamedNotOptArg):
		'Ўрифт дл€ кнопок.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(110, LCID, 2, (8, 0), ((3, 1),),BtnID
			)

	# The method ButtonTips is actually a property, but must be used as a method to correctly pass the arguments
	def ButtonTips(self, BtnID=defaultNamedNotOptArg):
		'—трока подсказки дл€ кнопки.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(505, LCID, 2, (8, 0), ((3, 1),),BtnID
			)

	# The method ButtonType is actually a property, but must be used as a method to correctly pass the arguments
	def ButtonType(self, BtnID=defaultNamedNotOptArg):
		'“ип кнопки.'
		return self._oleobj_.InvokeTypes(507, LCID, 2, (3, 0), ((3, 1),),BtnID
			)

	# The method ButtonVisible is actually a property, but must be used as a method to correctly pass the arguments
	def ButtonVisible(self, BtnID=defaultNamedNotOptArg):
		'ќтображение кнопки.'
		return self._oleobj_.InvokeTypes(508, LCID, 2, (11, 0), ((3, 1),),BtnID
			)

	# The method SetButtonChecked is actually a property, but must be used as a method to correctly pass the arguments
	def SetButtonChecked(self, BtnID=defaultNamedNotOptArg, arg1=False):
		'Ќажатие кнопки.'
		return self._oleobj_.InvokeTypes(501, LCID, 4, (24, 0), ((3, 1), (11, 49)),BtnID
			, arg1)

	# The method SetButtonEnable is actually a property, but must be used as a method to correctly pass the arguments
	def SetButtonEnable(self, BtnID=defaultNamedNotOptArg, arg1=True):
		'ƒоступность кнопки.'
		return self._oleobj_.InvokeTypes(502, LCID, 4, (24, 0), ((3, 1), (11, 49)),BtnID
			, arg1)

	# The method SetButtonHint is actually a property, but must be used as a method to correctly pass the arguments
	def SetButtonHint(self, BtnID=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'—трока подсказки дл€ кнопки.'
		return self._oleobj_.InvokeTypes(506, LCID, 4, (24, 0), ((3, 1), (8, 1)),BtnID
			, arg1)

	# The method SetButtonIconFont is actually a property, but must be used as a method to correctly pass the arguments
	def SetButtonIconFont(self, BtnID=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'Ўрифт дл€ кнопок.'
		return self._oleobj_.InvokeTypes(110, LCID, 4, (24, 0), ((3, 1), (8, 1)),BtnID
			, arg1)

	# The method SetButtonTips is actually a property, but must be used as a method to correctly pass the arguments
	def SetButtonTips(self, BtnID=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'—трока подсказки дл€ кнопки.'
		return self._oleobj_.InvokeTypes(505, LCID, 4, (24, 0), ((3, 1), (8, 1)),BtnID
			, arg1)

	# The method SetButtonType is actually a property, but must be used as a method to correctly pass the arguments
	def SetButtonType(self, BtnID=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'“ип кнопки.'
		return self._oleobj_.InvokeTypes(507, LCID, 4, (24, 0), ((3, 1), (3, 1)),BtnID
			, arg1)

	# The method SetButtonVisible is actually a property, but must be used as a method to correctly pass the arguments
	def SetButtonVisible(self, BtnID=defaultNamedNotOptArg, arg1=True):
		'ќтображение кнопки.'
		return self._oleobj_.InvokeTypes(508, LCID, 4, (24, 0), ((3, 1), (11, 49)),BtnID
			, arg1)

	_prop_map_get_ = {
		"ResModule": (504, 2, (12, 0), (), "ResModule", None),
	}
	_prop_map_put_ = {
		"ButtonChecked": ((501, LCID, 4, 0),('False',)),
		"ButtonEnable": ((502, LCID, 4, 0),('True',)),
		"ButtonVisible": ((508, LCID, 4, 0),('True',)),
		"ResModule": ((504, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPropertyTwinSwitcher(DispatchBaseClass):
	'Ёлемент панели свойств - переключатель.'
	CLSID = IID('{74191892-71FC-4820-B8A4-CB264A9E9E8E}')
	coclass_clsid = IID('{67D6F78E-4F92-4809-9894-6FA7DA814EFA}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ControlType": (3, 2, (3, 0), (), "ControlType", None),
		"Enable": (5, 2, (11, 0), (), "Enable", None),
		"Hint": (8, 2, (8, 0), (), "Hint", None),
		"Id": (4, 2, (3, 0), (), "Id", None),
		"Label2": (101, 2, (8, 0), (), "Label2", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"NameVisibility": (7, 2, (3, 0), (), "NameVisibility", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Tips": (9, 2, (8, 0), (), "Tips", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Value": (6, 2, (12, 0), (), "Value", None),
		"Visible": (1, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Enable": ((5, LCID, 4, 0),()),
		"Hint": ((8, LCID, 4, 0),()),
		"Id": ((4, LCID, 4, 0),()),
		"Label2": ((101, LCID, 4, 0),()),
		"Name": ((2, LCID, 4, 0),()),
		"NameVisibility": ((7, LCID, 4, 0),()),
		"Tips": ((9, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((1, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IPropertyUserControl(DispatchBaseClass):
	'Ёлемент панели свойств - ѕользовательский элемент управлени€.'
	CLSID = IID('{5A902C6C-A030-4F37-A089-91505BAEE466}')
	coclass_clsid = IID('{725A98DC-9987-4A79-BDA2-F5024E2D0FF3}')

	def SetOCXControl(self, ProgID=defaultNamedNotOptArg):
		'”становить progID OCX котрола.'
		return self._oleobj_.InvokeTypes(103, LCID, 1, (24, 0), ((8, 1),),ProgID
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AutoSize": (106, 2, (11, 0), (), "AutoSize", None),
		"ControlType": (3, 2, (3, 0), (), "ControlType", None),
		"Enable": (5, 2, (11, 0), (), "Enable", None),
		"FixHeight": (104, 2, (11, 0), (), "FixHeight", None),
		"FixWidth": (105, 2, (11, 0), (), "FixWidth", None),
		"Height": (102, 2, (3, 0), (), "Height", None),
		"Hint": (8, 2, (8, 0), (), "Hint", None),
		"Id": (4, 2, (3, 0), (), "Id", None),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"NameVisibility": (7, 2, (3, 0), (), "NameVisibility", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Tips": (9, 2, (8, 0), (), "Tips", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Value": (6, 2, (12, 0), (), "Value", None),
		"Visible": (1, 2, (11, 0), (), "Visible", None),
		"Width": (101, 2, (3, 0), (), "Width", None),
	}
	_prop_map_put_ = {
		"AutoSize": ((106, LCID, 4, 0),()),
		"Enable": ((5, LCID, 4, 0),()),
		"FixHeight": ((104, LCID, 4, 0),()),
		"FixWidth": ((105, LCID, 4, 0),()),
		"Height": ((102, LCID, 4, 0),()),
		"Hint": ((8, LCID, 4, 0),()),
		"Id": ((4, LCID, 4, 0),()),
		"Name": ((2, LCID, 4, 0),()),
		"NameVisibility": ((7, LCID, 4, 0),()),
		"Tips": ((9, LCID, 4, 0),()),
		"Value": ((6, LCID, 4, 0),()),
		"Visible": ((1, LCID, 4, 0),()),
		"Width": ((101, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(6, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IRadialDimension(DispatchBaseClass):
	'–адиальный размер.'
	CLSID = IID('{712A9437-D772-4EAE-AF83-ABC9C22EB281}')
	coclass_clsid = IID('{F6910669-B8FC-4F05-872E-BA10DE0964A4}')

	def AddBranch(self, BranchBegin=defaultNamedNotOptArg, BranchObject=defaultNamedNotOptArg):
		'ƒобавить ответвление дл€ объекта.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), ((11, 1), (9, 1)),BranchBegin
			, BranchObject)

	def AddBranchByArcParam(self, BranchBegin=defaultNamedNotOptArg, Xc=defaultNamedNotOptArg, Yc=defaultNamedNotOptArg, Radius=defaultNamedNotOptArg
			, Angle1=defaultNamedNotOptArg, Angle2=defaultNamedNotOptArg, Direction=defaultNamedNotOptArg):
		'ƒобавить ответвление по параметрам дуги.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), ((11, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (11, 1)),BranchBegin
			, Xc, Yc, Radius, Angle1, Angle2
			, Direction)

	# The method BranchBegin is actually a property, but must be used as a method to correctly pass the arguments
	def BranchBegin(self, Index=defaultNamedNotOptArg):
		'Ќачало ответвлени€.'
		return self._oleobj_.InvokeTypes(14, LCID, 2, (11, 0), ((3, 1),),Index
			)

	# Result is of type IDrawingObject
	# The method BranchObject is actually a property, but must be used as a method to correctly pass the arguments
	def BranchObject(self, Index=defaultNamedNotOptArg):
		'ќпорный объект дл€ дополнительного ответвлени€.'
		ret = self._oleobj_.InvokeTypes(10, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'BranchObject', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def DeleteBranch(self, Index=defaultNamedNotOptArg):
		'”далить дополнительное ответвление.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), ((3, 1),),Index
			)

	def GetBranchParam(self, Index=defaultNamedNotOptArg, Xc=pythoncom.Missing, Yc=pythoncom.Missing, Angle1=pythoncom.Missing
			, Angle2=pythoncom.Missing, Direction=pythoncom.Missing):
		'ѕолучить параметры ответвлени€ дл€ объекта.'
		return self._ApplyTypes_(12, 1, (11, 0), ((3, 1), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16395, 2)), 'GetBranchParam', None,Index
			, Xc, Yc, Angle1, Angle2, Direction
			)

	# The method SetBranchBegin is actually a property, but must be used as a method to correctly pass the arguments
	def SetBranchBegin(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'Ќачало ответвлени€.'
		return self._oleobj_.InvokeTypes(14, LCID, 4, (24, 0), ((3, 1), (11, 1)),Index
			, arg1)

	# The method SetBranchObject is actually a property, but must be used as a method to correctly pass the arguments
	def SetBranchObject(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ќпорный объект дл€ дополнительного ответвлени€.'
		return self._oleobj_.InvokeTypes(10, LCID, 4, (24, 0), ((3, 1), (9, 1)),Index
			, arg1)

	def SetBranchParam(self, Index=defaultNamedNotOptArg, Xc=defaultNamedNotOptArg, Yc=defaultNamedNotOptArg, Angle1=defaultNamedNotOptArg
			, Angle2=defaultNamedNotOptArg, Direction=defaultNamedNotOptArg):
		'”становить параметры ответвлени€ дл€ объекта.'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (11, 0), ((3, 1), (5, 1), (5, 1), (5, 1), (5, 1), (11, 1)),Index
			, Xc, Yc, Angle1, Angle2, Direction
			)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (6, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BaseObject' returns object of type 'IDrawingObject'
		"BaseObject": (5, 2, (9, 0), (), "BaseObject", '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}'),
		"BranchsCount": (9, 2, (3, 0), (), "BranchsCount", None),
		"DimensionType": (4, 2, (11, 0), (), "DimensionType", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Radius": (3, 2, (5, 0), (), "Radius", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"ShelfX": (15, 2, (5, 0), (), "ShelfX", None),
		"ShelfY": (16, 2, (5, 0), (), "ShelfY", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"Xc": (1, 2, (5, 0), (), "Xc", None),
		"Yc": (2, 2, (5, 0), (), "Yc", None),
	}
	_prop_map_put_ = {
		"Angle": ((6, LCID, 4, 0),()),
		"BaseObject": ((5, LCID, 4, 0),()),
		"DimensionType": ((4, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"Radius": ((3, LCID, 4, 0),()),
		"ShelfX": ((15, LCID, 4, 0),()),
		"ShelfY": ((16, LCID, 4, 0),()),
		"Xc": ((1, LCID, 4, 0),()),
		"Yc": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IRadialDimension3D(DispatchBaseClass):
	'–адиальный размер 3D.'
	CLSID = IID('{5711B871-1FAE-425C-898E-583442D851CD}')
	coclass_clsid = IID('{1072B7E5-9C4B-44F2-A8F0-1A60C59D4909}')

	def GetCenterPoint(self, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		' оординаты центра.'
		return self._ApplyTypes_(7, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2)), 'GetCenterPoint', None,X
			, Y, Z)

	def GetSurfacePoint(self, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'“очка пересечени€ размера с поверхностью или ребром.'
		return self._ApplyTypes_(5, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2)), 'GetSurfacePoint', None,X
			, Y, Z)

	def SetCenterPoint(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg):
		' оординаты центра.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1)),X
			, Y, Z)

	def SetSurfacePoint(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg):
		'“очка пересечени€ размера с поверхностью или ребром.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1)),X
			, Y, Z)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (4, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"DimensionType": (3, 2, (11, 0), (), "DimensionType", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Object1' returns object of type 'IModelObject'
		"Object1": (1, 2, (9, 0), (), "Object1", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		# Method 'PlaneObject' returns object of type 'IModelObject'
		"PlaneObject": (2, 2, (9, 0), (), "PlaneObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Angle": ((4, LCID, 4, 0),()),
		"DimensionType": ((3, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Object1": ((1, LCID, 4, 0),()),
		"PlaneObject": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IRadialDimensions(DispatchBaseClass):
	' оллекци€ радиальных размеров.'
	CLSID = IID('{12D26993-449E-42E2-A909-B047AFD6E27D}')
	coclass_clsid = IID('{BD3D6D8C-C5D8-42F0-926D-FD995EE6D232}')

	# Result is of type IRadialDimension
	def Add(self):
		'ƒобавить радиальный размер в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{712A9437-D772-4EAE-AF83-ABC9C22EB281}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	# Result is of type IRadialDimension
	# The method RadialDimension is actually a property, but must be used as a method to correctly pass the arguments
	def RadialDimension(self, Index=defaultNamedNotOptArg):
		'ѕолучить радиальный размер, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'RadialDimension', '{712A9437-D772-4EAE-AF83-ABC9C22EB281}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IRadialDimensions3D(DispatchBaseClass):
	' оллекци€ радиальных размеров 3D.'
	CLSID = IID('{153924CD-E046-4334-8798-46A6D6663DE4}')
	coclass_clsid = IID('{7245F71F-E655-4102-8C2C-B4E6D2FA26D8}')

	# Result is of type IRadialDimension3D
	def Add(self):
		'ƒобавить радиальный размер в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{5711B871-1FAE-425C-898E-583442D851CD}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type IRadialDimension3D
	# The method RadialDimension3D is actually a property, but must be used as a method to correctly pass the arguments
	def RadialDimension3D(self, Index=defaultNamedNotOptArg):
		'ѕолучить радиальный размер, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'RadialDimension3D', '{5711B871-1FAE-425C-898E-583442D851CD}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IRaster(DispatchBaseClass):
	'–астровый объект.'
	CLSID = IID('{DEED8D7B-404B-4F17-B42A-2F5E64818D0A}')
	coclass_clsid = IID('{ACAB7ABA-EC2F-4E2B-A742-19BB5BC4441A}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def GetPlacement(self, X=pythoncom.Missing, Y=pythoncom.Missing, Angle=pythoncom.Missing, MirrorSymmetry=pythoncom.Missing):
		'ѕолучить местоположение растрового объекта.'
		return self._ApplyTypes_(1, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2), (16395, 2)), 'GetPlacement', None,X
			, Y, Angle, MirrorSymmetry)

	def SetPlacement(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Angle=defaultNamedNotOptArg, MirrorSymmetry=defaultNamedNotOptArg):
		'”становить местоположение растрового объекта.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1), (11, 1)),X
			, Y, Angle, MirrorSymmetry)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"DisplayModePartial": (7, 2, (11, 0), (), "DisplayModePartial", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"FileName": (4, 2, (8, 0), (), "FileName", None),
		"Height": (8, 2, (5, 0), (), "Height", None),
		"InsertionType": (5, 2, (11, 0), (), "InsertionType", None),
		"IsCutBoundarySet": (14, 2, (11, 0), (), "IsCutBoundarySet", None),
		"IsEnableChangeResolution": (13, 2, (11, 0), (), "IsEnableChangeResolution", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		"Palette": (12, 2, (3, 0), (), "Palette", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Resolution": (6, 2, (5, 0), (), "Resolution", None),
		"Scale": (3, 2, (5, 0), (), "Scale", None),
		"SourceHeight": (10, 2, (5, 0), (), "SourceHeight", None),
		"SourceWidth": (11, 2, (5, 0), (), "SourceWidth", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"Width": (9, 2, (5, 0), (), "Width", None),
	}
	_prop_map_put_ = {
		"DisplayModePartial": ((7, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"FileName": ((4, LCID, 4, 0),()),
		"Height": ((8, LCID, 4, 0),()),
		"InsertionType": ((5, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"Resolution": ((6, LCID, 4, 0),()),
		"Scale": ((3, LCID, 4, 0),()),
		"Width": ((9, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IRasters(DispatchBaseClass):
	' оллекци€ растровых объектов.'
	CLSID = IID('{C6E4E32D-E077-4B14-B9DE-041BD628C38C}')
	coclass_clsid = IID('{F90677D1-9ED2-4BDF-8C68-6B241B2A09F2}')

	# Result is of type IRaster
	def Add(self):
		'—оздать растровый объект (добавить растровый объект в коллекцию).'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{DEED8D7B-404B-4F17-B42A-2F5E64818D0A}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	# Result is of type IRaster
	# The method Raster is actually a property, but must be used as a method to correctly pass the arguments
	def Raster(self, Index=defaultNamedNotOptArg):
		'¬озвращает растровый объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Raster', '{DEED8D7B-404B-4F17-B42A-2F5E64818D0A}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IRectangle(DispatchBaseClass):
	'ѕр€моугольник.'
	CLSID = IID('{42F9FC58-FEA0-4E52-A604-1A00985AB772}')
	coclass_clsid = IID('{28C7998F-BB9D-4EDC-90EF-D810F40481B7}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def GetCorner(self, Index=defaultNamedNotOptArg, Type=pythoncom.Missing, L1=pythoncom.Missing, L2=pythoncom.Missing):
		'ѕолучить параметры скруглени€/усечени€ угла.'
		return self._ApplyTypes_(7, 1, (11, 0), ((3, 1), (16387, 2), (16389, 2), (16389, 2)), 'GetCorner', None,Index
			, Type, L1, L2)

	def SetCorner(self, Index=defaultNamedNotOptArg, Type=defaultNamedNotOptArg, L1=defaultNamedNotOptArg, L2=defaultNamedNotOptArg):
		'”становить параметры скруглени€/усечени€ угла.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), ((3, 1), (3, 1), (5, 1), (5, 1)),Index
			, Type, L1, L2)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (3, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ContourSegmentsPoints": (9, 2, (12, 0), (), "ContourSegmentsPoints", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"Height": (4, 2, (5, 0), (), "Height", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Style": (6, 2, (3, 0), (), "Style", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"Width": (5, 2, (5, 0), (), "Width", None),
		"X": (1, 2, (5, 0), (), "X", None),
		"Y": (2, 2, (5, 0), (), "Y", None),
	}
	_prop_map_put_ = {
		"Angle": ((3, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"Height": ((4, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"Style": ((6, LCID, 4, 0),()),
		"Width": ((5, LCID, 4, 0),()),
		"X": ((1, LCID, 4, 0),()),
		"Y": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IRectangles(DispatchBaseClass):
	' оллекци€ пр€моугольников.'
	CLSID = IID('{D6BC2EE9-249F-4961-89A7-88DA854F35FE}')
	coclass_clsid = IID('{FB692157-2A44-4313-BE9B-5C7AD70DB633}')

	# Result is of type IRectangle
	def Add(self):
		'—оздать пр€моугольник (добавить пр€моугольник в коллекцию).'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{42F9FC58-FEA0-4E52-A604-1A00985AB772}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	# Result is of type IRectangle
	# The method Rectangle is actually a property, but must be used as a method to correctly pass the arguments
	def Rectangle(self, Index=defaultNamedNotOptArg):
		'¬озвращает пр€моугольник, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Rectangle', '{42F9FC58-FEA0-4E52-A604-1A00985AB772}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IRegularPolygon(DispatchBaseClass):
	'ћногоугольник.'
	CLSID = IID('{51968648-F264-4904-A07F-653676AE1D35}')
	coclass_clsid = IID('{11D9782E-11E1-471B-82D1-8635B0861339}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def GetCorner(self, Index=defaultNamedNotOptArg, Type=pythoncom.Missing, L1=pythoncom.Missing, L2=pythoncom.Missing):
		'ѕолучить параметры скруглени€/усечени€ угла.'
		return self._ApplyTypes_(8, 1, (11, 0), ((3, 1), (16387, 2), (16389, 2), (16389, 2)), 'GetCorner', None,Index
			, Type, L1, L2)

	def SetCorner(self, Index=defaultNamedNotOptArg, Type=defaultNamedNotOptArg, L1=defaultNamedNotOptArg, L2=defaultNamedNotOptArg):
		'”становить параметры скруглени€/усечени€ угла.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), ((3, 1), (3, 1), (5, 1), (5, 1)),Index
			, Type, L1, L2)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (4, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ContourSegmentsPoints": (10, 2, (12, 0), (), "ContourSegmentsPoints", None),
		"Count": (1, 2, (3, 0), (), "Count", None),
		"Describe": (6, 2, (11, 0), (), "Describe", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Radius": (5, 2, (5, 0), (), "Radius", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Style": (7, 2, (3, 0), (), "Style", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"Xc": (2, 2, (5, 0), (), "Xc", None),
		"Yc": (3, 2, (5, 0), (), "Yc", None),
	}
	_prop_map_put_ = {
		"Angle": ((4, LCID, 4, 0),()),
		"Count": ((1, LCID, 4, 0),()),
		"Describe": ((6, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"Radius": ((5, LCID, 4, 0),()),
		"Style": ((7, LCID, 4, 0),()),
		"Xc": ((2, LCID, 4, 0),()),
		"Yc": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(1, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IRegularPolygons(DispatchBaseClass):
	' оллекци€ многоугольников.'
	CLSID = IID('{80377CB2-073E-4C38-8532-C42A078BA719}')
	coclass_clsid = IID('{C9204FDB-09B4-443E-9029-FE617CEE9106}')

	# Result is of type IRegularPolygon
	def Add(self):
		'—оздать многоугольник (добавить многоугольник в коллекцию).'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{51968648-F264-4904-A07F-653676AE1D35}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	# Result is of type IRegularPolygon
	# The method RegularPolygon is actually a property, but must be used as a method to correctly pass the arguments
	def RegularPolygon(self, Index=defaultNamedNotOptArg):
		'¬озвращает многоугольник, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'RegularPolygon', '{51968648-F264-4904-A07F-653676AE1D35}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IRemoteElement(DispatchBaseClass):
	'¬ыносной элемент.'
	CLSID = IID('{A9D96CE2-9FE4-494E-87B2-20122EAC2AE4}')
	coclass_clsid = IID('{79A4CAF1-F75C-47D5-A3AF-65D8B95AD17A}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'AdditionalText' returns object of type 'IText'
		"AdditionalText": (2004, 2, (9, 0), (), "AdditionalText", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AutoSheet": (2002, 2, (11, 0), (), "AutoSheet", None),
		"AutoSorted": (2001, 2, (11, 0), (), "AutoSorted", None),
		"AutoZone": (2003, 2, (11, 0), (), "AutoZone", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"FilletRadius": (12, 2, (5, 0), (), "FilletRadius", None),
		"Form": (9, 2, (3, 0), (), "Form", None),
		"Height": (4, 2, (5, 0), (), "Height", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Radius": (3, 2, (5, 0), (), "Radius", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"ShelfDirection": (6, 2, (3, 0), (), "ShelfDirection", None),
		"ShelfX": (7, 2, (5, 0), (), "ShelfX", None),
		"ShelfY": (8, 2, (5, 0), (), "ShelfY", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		# Method 'TextDown' returns object of type 'IText'
		"TextDown": (11, 2, (9, 0), (), "TextDown", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		# Method 'TextUp' returns object of type 'IText'
		"TextUp": (10, 2, (9, 0), (), "TextUp", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"Width": (5, 2, (5, 0), (), "Width", None),
		"Xc": (1, 2, (5, 0), (), "Xc", None),
		"Yc": (2, 2, (5, 0), (), "Yc", None),
	}
	_prop_map_put_ = {
		"AutoSheet": ((2002, LCID, 4, 0),()),
		"AutoSorted": ((2001, LCID, 4, 0),()),
		"AutoZone": ((2003, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"FilletRadius": ((12, LCID, 4, 0),()),
		"Form": ((9, LCID, 4, 0),()),
		"Height": ((4, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"Radius": ((3, LCID, 4, 0),()),
		"ShelfDirection": ((6, LCID, 4, 0),()),
		"ShelfX": ((7, LCID, 4, 0),()),
		"ShelfY": ((8, LCID, 4, 0),()),
		"Width": ((5, LCID, 4, 0),()),
		"Xc": ((1, LCID, 4, 0),()),
		"Yc": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IRemoteElements(DispatchBaseClass):
	' оллекци€ выносных элементов.'
	CLSID = IID('{88427A6B-00AF-46E2-9B95-BC8348C2162A}')
	coclass_clsid = IID('{8B0949ED-637A-49BE-96D4-95CD37A80FCC}')

	# Result is of type IRemoteElement
	def Add(self):
		'—оздать выносной элемент (добавить выносной элемент в коллекцию).'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{A9D96CE2-9FE4-494E-87B2-20122EAC2AE4}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	# Result is of type IRemoteElement
	# The method RemoteElement is actually a property, but must be used as a method to correctly pass the arguments
	def RemoteElement(self, Index=defaultNamedNotOptArg):
		'¬озвращает выносной элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'RemoteElement', '{A9D96CE2-9FE4-494E-87B2-20122EAC2AE4}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IReport(DispatchBaseClass):
	'»нтерфейс таблицы отчетов.'
	CLSID = IID('{37FD3C77-6032-4459-95E9-C8DFC43B85FF}')
	coclass_clsid = IID('{C3E4216D-283E-40B6-8DF9-AF5C81B3CF2E}')

	# Result is of type IReportStyle
	def AddStyle(self, FileName=defaultNamedNotOptArg, Id=defaultNamedNotOptArg):
		'ƒобавить новый стиль.'
		ret = self._oleobj_.InvokeTypes(2006, LCID, 1, (9, 0), ((8, 1), (5, 1)),FileName
			, Id)
		if ret is not None:
			ret = Dispatch(ret, 'AddStyle', '{5C65F11D-75C8-4130-951C-5EBE0ABA4F44}')
		return ret

	# Result is of type IKompasDocument
	def LoadSourceDocument(self, Visible=defaultNamedNotOptArg, ReadOnly=defaultNamedNotOptArg):
		'ƒокумент.'
		ret = self._oleobj_.InvokeTypes(2010, LCID, 1, (9, 0), ((11, 1), (11, 1)),Visible
			, ReadOnly)
		if ret is not None:
			ret = Dispatch(ret, 'LoadSourceDocument', '{5C6E318D-BD6E-4AFA-8A13-977EAA0845EF}')
		return ret

	def Rebuild(self):
		'ѕерестроить отчет.'
		return self._oleobj_.InvokeTypes(2008, LCID, 1, (11, 0), (),)

	# Result is of type IReportStyle
	# The method ReportStyle is actually a property, but must be used as a method to correctly pass the arguments
	def ReportStyle(self, Index=defaultNamedNotOptArg):
		'Cтиль отчета по индексу.'
		ret = self._oleobj_.InvokeTypes(2005, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'ReportStyle', '{5C65F11D-75C8-4130-951C-5EBE0ABA4F44}')
		return ret

	def SaveAs(self, FileName=defaultNamedNotOptArg):
		'ќтчет сохранить как.'
		return self._oleobj_.InvokeTypes(2013, LCID, 1, (11, 0), ((12, 1),),FileName
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'CurrentReportStyle' returns object of type 'IReportStyle'
		"CurrentReportStyle": (2003, 2, (9, 0), (), "CurrentReportStyle", '{5C65F11D-75C8-4130-951C-5EBE0ABA4F44}'),
		"CurrentStyleIndex": (2007, 2, (3, 0), (), "CurrentStyleIndex", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'ReportFilter' returns object of type 'IReportFilter'
		"ReportFilter": (2012, 2, (9, 0), (), "ReportFilter", '{9D111C31-1629-4A0B-89E5-8461CDFA2157}'),
		"ReportType": (2001, 2, (3, 0), (), "ReportType", None),
		"ShowAllObjects": (2002, 2, (11, 0), (), "ShowAllObjects", None),
		"SourceFileName": (2009, 2, (8, 0), (), "SourceFileName", None),
		"StylesCount": (2004, 2, (3, 0), (), "StylesCount", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"UseReportFilter": (2011, 2, (11, 0), (), "UseReportFilter", None),
	}
	_prop_map_put_ = {
		"CurrentStyleIndex": ((2007, LCID, 4, 0),()),
		"ShowAllObjects": ((2002, LCID, 4, 0),()),
		"UseReportFilter": ((2011, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IReportFilter(DispatchBaseClass):
	'»нтерфейс дл€ управлени€ фильтрами в процессе —оздать отчет'
	CLSID = IID('{9D111C31-1629-4A0B-89E5-8461CDFA2157}')
	coclass_clsid = None

	def Clear(self):
		'”далить все услови€ фильтра.'
		return self._oleobj_.InvokeTypes(104, LCID, 1, (11, 0), (),)

	def GetCondition(self, Index=defaultNamedNotOptArg, UniqId=pythoncom.Missing, Type=pythoncom.Missing, Val=pythoncom.Missing):
		'ѕолучить услови€ фильтра по индексу.'
		return self._ApplyTypes_(101, 1, (11, 0), ((3, 1), (16396, 2), (16387, 2), (16396, 2)), 'GetCondition', None,Index
			, UniqId, Type, Val)

	def RemoveCondition(self, Index=defaultNamedNotOptArg):
		'”далить услови€ фильтра по индексу.'
		return self._oleobj_.InvokeTypes(103, LCID, 1, (11, 0), ((3, 1),),Index
			)

	def SetCondition(self, Index=defaultNamedNotOptArg, UniqId=defaultNamedNotOptArg, Type=defaultNamedNotOptArg, Val=defaultNamedNotOptArg):
		'”становить услови€ фильтра по индексу.-1 - ƒобавить в конец'
		return self._oleobj_.InvokeTypes(102, LCID, 1, (11, 0), ((3, 1), (12, 1), (3, 1), (12, 1)),Index
			, UniqId, Type, Val)

	_prop_map_get_ = {
		"ConditionCount": (100, 2, (3, 0), (), "ConditionCount", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IReportObjectsFilter(DispatchBaseClass):
	'»нтерфейс фильтра объектов при создании отчета.'
	CLSID = IID('{88803908-B243-47B0-A388-9E059CFA8E54}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Bodies": (4007, 2, (11, 0), (), "Bodies", None),
		"InsertionFragments": (4003, 2, (11, 0), (), "InsertionFragments", None),
		"InsertionViews": (4002, 2, (11, 0), (), "InsertionViews", None),
		"LocalParts": (4006, 2, (11, 0), (), "LocalParts", None),
		"MacroObjects2D": (4004, 2, (11, 0), (), "MacroObjects2D", None),
		"ModelObjects": (4001, 2, (11, 0), (), "ModelObjects", None),
		"Parts": (4005, 2, (11, 0), (), "Parts", None),
		"Views": (4008, 2, (11, 0), (), "Views", None),
	}
	_prop_map_put_ = {
		"Bodies": ((4007, LCID, 4, 0),()),
		"InsertionFragments": ((4003, LCID, 4, 0),()),
		"InsertionViews": ((4002, LCID, 4, 0),()),
		"LocalParts": ((4006, LCID, 4, 0),()),
		"MacroObjects2D": ((4004, LCID, 4, 0),()),
		"ModelObjects": ((4001, LCID, 4, 0),()),
		"Parts": ((4005, LCID, 4, 0),()),
		"Views": ((4008, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IReportParam(DispatchBaseClass):
	'»нтерфейс параметров отчета.'
	CLSID = IID('{A1AF048D-93C0-4C21-9064-D437A71D7D53}')
	coclass_clsid = IID('{11B32E53-A4EB-427A-873A-5651330AFC17}')

	_prop_map_get_ = {
		"BuildingType": (3001, 2, (3, 0), (), "BuildingType", None),
		"LevelsCount": (3002, 2, (3, 0), (), "LevelsCount", None),
		"PageLayoutType": (3003, 2, (3, 0), (), "PageLayoutType", None),
		"PagesColumnsCount": (3005, 2, (3, 0), (), "PagesColumnsCount", None),
		"PagesRowsCount": (3004, 2, (3, 0), (), "PagesRowsCount", None),
		"PagesSpace": (3006, 2, (5, 0), (), "PagesSpace", None),
		"UseHyperText": (3007, 2, (11, 0), (), "UseHyperText", None),
	}
	_prop_map_put_ = {
		"BuildingType": ((3001, LCID, 4, 0),()),
		"LevelsCount": ((3002, LCID, 4, 0),()),
		"PageLayoutType": ((3003, LCID, 4, 0),()),
		"PagesColumnsCount": ((3005, LCID, 4, 0),()),
		"PagesRowsCount": ((3004, LCID, 4, 0),()),
		"PagesSpace": ((3006, LCID, 4, 0),()),
		"UseHyperText": ((3007, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IReportProcess(DispatchBaseClass):
	'»нтерфейс дл€ управлени€ процессом —оздать отчет'
	CLSID = IID('{29BBF2B8-A2E2-4E7D-BF04-0BB79C89EF35}')
	coclass_clsid = IID('{2A2F00CE-536E-462D-B554-5809CDE31095}')

	_prop_map_get_ = {
		"ActiveStyleIndex": (2, 2, (12, 0), (), "ActiveStyleIndex", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'ReportFilter' returns object of type 'IReportFilter'
		"ReportFilter": (3, 2, (9, 0), (), "ReportFilter", '{9D111C31-1629-4A0B-89E5-8461CDFA2157}'),
		"ReportFilterUse": (4, 2, (11, 0), (), "ReportFilterUse", None),
		"StylesCount": (1, 2, (3, 0), (), "StylesCount", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"ActiveStyleIndex": ((2, LCID, 4, 0),()),
		"ReportFilterUse": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IReportStyle(DispatchBaseClass):
	'Cтиль отчета.'
	CLSID = IID('{5C65F11D-75C8-4130-951C-5EBE0ABA4F44}')
	coclass_clsid = IID('{6611F953-12F2-41EF-889D-B17E643D80E2}')

	# Result is of type IReportStyleColumn
	def AddColumn(self, IndexAt=defaultNamedNotOptArg, Name=defaultNamedNotOptArg, Property=defaultNamedNotOptArg):
		'ƒобавить колонку.'
		ret = self._oleobj_.InvokeTypes(3, LCID, 1, (9, 0), ((3, 1), (8, 1), (9, 1)),IndexAt
			, Name, Property)
		if ret is not None:
			ret = Dispatch(ret, 'AddColumn', '{DD114FC3-EB24-4FBD-B9E9-B01A893AA3B0}')
		return ret

	def Clear(self):
		'ќчистить стиль.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), (),)

	def ClearSortParameters(self):
		'ќчистить параметры сортировки.'
		return self._oleobj_.InvokeTypes(20, LCID, 1, (11, 0), (),)

	# Result is of type IReportStyleColumn
	# The method Column is actually a property, but must be used as a method to correctly pass the arguments
	def Column(self, Index=defaultNamedNotOptArg):
		' олонка отчета.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Column', '{DD114FC3-EB24-4FBD-B9E9-B01A893AA3B0}')
		return ret

	def DeleteColumn(self, Index=defaultNamedNotOptArg):
		'”далить колонку.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), ((12, 1),),Index
			)

	def GetSortParameters(self, Level=defaultNamedNotOptArg, ColumnNumber=pythoncom.Missing, SortType=pythoncom.Missing):
		'ѕараметры сортировки.'
		return self._ApplyTypes_(18, 1, (11, 0), ((3, 1), (16387, 2), (16387, 2)), 'GetSortParameters', None,Level
			, ColumnNumber, SortType)

	def Init(self, Type=defaultNamedNotOptArg):
		'»нициализаци€ стил€ параметрами по умолчанию.'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (11, 0), ((3, 1),),Type
			)

	def SetSortParameters(self, Level=defaultNamedNotOptArg, ColumnNumber=defaultNamedNotOptArg, SortType=defaultNamedNotOptArg):
		'ѕараметры сортировки.'
		return self._oleobj_.InvokeTypes(19, LCID, 1, (11, 0), ((3, 1), (3, 1), (3, 1)),Level
			, ColumnNumber, SortType)

	def SwapColumn(self, Index1=defaultNamedNotOptArg, Index2=defaultNamedNotOptArg):
		'ѕомен€ть колонки местами.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((3, 1), (3, 1)),Index1
			, Index2)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ColumnNumberingInitVal": (15, 2, (3, 0), (), "ColumnNumberingInitVal", None),
		"ColumnNumberingType": (14, 2, (3, 0), (), "ColumnNumberingType", None),
		"ColumnsCount": (1, 2, (3, 0), (), "ColumnsCount", None),
		"DivideIntoPage": (8, 2, (11, 0), (), "DivideIntoPage", None),
		"DrawBottom": (16, 2, (11, 0), (), "DrawBottom", None),
		"Id": (22, 2, (5, 0), (), "Id", None),
		"Name": (21, 2, (8, 0), (), "Name", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"RowHeight": (10, 2, (3, 0), (), "RowHeight", None),
		"RowsCount": (7, 2, (3, 0), (), "RowsCount", None),
		"RowsNumberingType": (13, 2, (3, 0), (), "RowsNumberingType", None),
		"ShowEmptyRows": (11, 2, (11, 0), (), "ShowEmptyRows", None),
		"ShowTitle": (12, 2, (11, 0), (), "ShowTitle", None),
		"TitleHeight": (9, 2, (3, 0), (), "TitleHeight", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"ColumnNumberingInitVal": ((15, LCID, 4, 0),()),
		"ColumnNumberingType": ((14, LCID, 4, 0),()),
		"DivideIntoPage": ((8, LCID, 4, 0),()),
		"DrawBottom": ((16, LCID, 4, 0),()),
		"Name": ((21, LCID, 4, 0),()),
		"RowHeight": ((10, LCID, 4, 0),()),
		"RowsCount": ((7, LCID, 4, 0),()),
		"RowsNumberingType": ((13, LCID, 4, 0),()),
		"ShowEmptyRows": ((11, LCID, 4, 0),()),
		"ShowTitle": ((12, LCID, 4, 0),()),
		"TitleHeight": ((9, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IReportStyleColumn(DispatchBaseClass):
	' олонка стил€ отчета.'
	CLSID = IID('{DD114FC3-EB24-4FBD-B9E9-B01A893AA3B0}')
	coclass_clsid = IID('{748767B1-4A6F-4270-8EED-9810313DE348}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"CombineCells": (10, 2, (11, 0), (), "CombineCells", None),
		"GroupeType": (6, 2, (3, 0), (), "GroupeType", None),
		"Header": (1, 2, (8, 0), (), "Header", None),
		"Id": (2, 2, (5, 0), (), "Id", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Property' returns object of type 'IProperty'
		"Property": (4, 2, (9, 0), (), "Property", '{C389F80D-228D-4FB1-B183-959AEA0B5906}'),
		"PropertyLevel": (12, 2, (12, 0), (), "PropertyLevel", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"TextAlign": (9, 2, (3, 0), (), "TextAlign", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"UserColumn": (3, 2, (11, 0), (), "UserColumn", None),
		"ValueFormat": (11, 2, (3, 0), (), "ValueFormat", None),
		"Visible": (7, 2, (11, 0), (), "Visible", None),
		"Width": (5, 2, (5, 0), (), "Width", None),
		"WordWrap": (8, 2, (11, 0), (), "WordWrap", None),
	}
	_prop_map_put_ = {
		"CombineCells": ((10, LCID, 4, 0),()),
		"GroupeType": ((6, LCID, 4, 0),()),
		"Header": ((1, LCID, 4, 0),()),
		"Property": ((4, LCID, 4, 0),()),
		"PropertyLevel": ((12, LCID, 4, 0),()),
		"TextAlign": ((9, LCID, 4, 0),()),
		"ValueFormat": ((11, LCID, 4, 0),()),
		"Visible": ((7, LCID, 4, 0),()),
		"Width": ((5, LCID, 4, 0),()),
		"WordWrap": ((8, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IReportTable(DispatchBaseClass):
	'»нтерфейс таблицы данных'
	CLSID = IID('{F7E44485-B4EB-4897-A263-BE3BC1A08789}')
	coclass_clsid = None

	# The method CellValue is actually a property, but must be used as a method to correctly pass the arguments
	def CellValue(self, NRow=defaultNamedNotOptArg, NCol=defaultNamedNotOptArg):
		'«начение в €чейке.'
		return self._ApplyTypes_(5004, 2, (12, 0), ((3, 1), (3, 1)), 'CellValue', None,NRow
			, NCol)

	# The method FormatCellValue is actually a property, but must be used as a method to correctly pass the arguments
	def FormatCellValue(self, NRow=defaultNamedNotOptArg, NCol=defaultNamedNotOptArg):
		'форматированное значение в €чейке.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(5005, LCID, 2, (8, 0), ((3, 1), (3, 1)),NRow
			, NCol)

	# Result is of type IPropertyKeeper
	# The method PropertyKeeper is actually a property, but must be used as a method to correctly pass the arguments
	def PropertyKeeper(self, RowIndex=defaultNamedNotOptArg):
		'ќбъект отчета.'
		ret = self._oleobj_.InvokeTypes(5008, LCID, 2, (9, 0), ((3, 1),),RowIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'PropertyKeeper', '{AE7377CB-28C6-468E-B667-73117BCDC300}')
		return ret

	# The method SetCellValue is actually a property, but must be used as a method to correctly pass the arguments
	def SetCellValue(self, NRow=defaultNamedNotOptArg, NCol=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		'«начение в €чейке.'
		return self._oleobj_.InvokeTypes(5004, LCID, 4, (24, 0), ((3, 1), (3, 1), (12, 1)),NRow
			, NCol, arg2)

	# Result is of type IReportStyleColumn
	# The method StyleColumn is actually a property, but must be used as a method to correctly pass the arguments
	def StyleColumn(self, NCol=defaultNamedNotOptArg):
		'ѕараметры отображаемой в отчете колонки.'
		ret = self._oleobj_.InvokeTypes(5007, LCID, 2, (9, 0), ((3, 1),),NCol
			)
		if ret is not None:
			ret = Dispatch(ret, 'StyleColumn', '{DD114FC3-EB24-4FBD-B9E9-B01A893AA3B0}')
		return ret

	# Result is of type IText
	# The method Text is actually a property, but must be used as a method to correctly pass the arguments
	def Text(self, NRow=defaultNamedNotOptArg, NCol=defaultNamedNotOptArg):
		'“екст в €чейке.'
		ret = self._oleobj_.InvokeTypes(5006, LCID, 2, (9, 0), ((3, 1), (3, 1)),NRow
			, NCol)
		if ret is not None:
			ret = Dispatch(ret, 'Text', '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')
		return ret

	_prop_map_get_ = {
		"ColumnsCount": (5003, 2, (3, 0), (), "ColumnsCount", None),
		"DisplayMode": (5001, 2, (11, 0), (), "DisplayMode", None),
		"RowsCount": (5002, 2, (3, 0), (), "RowsCount", None),
	}
	_prop_map_put_ = {
		"DisplayMode": ((5001, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IRestoredSurface(DispatchBaseClass):
	'¬осстановленна€ поверхность.'
	CLSID = IID('{EC25AF95-4117-4FB6-A952-1FC72BE32E60}')
	coclass_clsid = IID('{F2C7D9B1-C665-4C44-AEA8-BD2C6938E5A6}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Face' returns object of type 'IModelObject'
		"Face": (1, 2, (9, 0), (), "Face", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Face": ((1, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IRestoredSurfaces(DispatchBaseClass):
	' оллекци€ операций восстановленна€ поверхность.'
	CLSID = IID('{CF84B430-2579-49CA-B937-02354EB1F8A7}')
	coclass_clsid = IID('{F1603067-E7C1-43C2-9F8F-B83238D66454}')

	# Result is of type IRestoredSurface
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{EC25AF95-4117-4FB6-A952-1FC72BE32E60}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type IRestoredSurface
	# The method RestoredSurface is actually a property, but must be used as a method to correctly pass the arguments
	def RestoredSurface(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'RestoredSurface', '{EC25AF95-4117-4FB6-A952-1FC72BE32E60}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IRib(DispatchBaseClass):
	'–ебро жесткости.'
	CLSID = IID('{2D8E1F2B-1610-4AA5-8F7F-ED489C4EDEDC}')
	coclass_clsid = IID('{474FF0BA-E909-468C-BD6C-9A455B420350}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (3, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Body' returns object of type 'IKompasAPIObject'
		"Body": (5, 2, (9, 0), (), "Body", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"SegmentIndex": (4, 2, (3, 0), (), "SegmentIndex", None),
		"Side": (2, 2, (3, 0), (), "Side", None),
		# Method 'Sketch' returns object of type 'ISketch'
		"Sketch": (1, 2, (9, 0), (), "Sketch", '{E6BBF50D-8401-4FB3-A6B6-153D3F447255}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Angle": ((3, LCID, 4, 0),()),
		"Body": ((5, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"SegmentIndex": ((4, LCID, 4, 0),()),
		"Side": ((2, LCID, 4, 0),()),
		"Sketch": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IRibs(DispatchBaseClass):
	' оллекци€ ребер жесткости.'
	CLSID = IID('{70FF934F-D7A2-4D91-AB55-27174E90648B}')
	coclass_clsid = IID('{7E0D8D58-3BF2-4437-BC0D-236261C706CC}')

	# Result is of type IRib
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{2D8E1F2B-1610-4AA5-8F7F-ED489C4EDEDC}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type IRib
	# The method Rib is actually a property, but must be used as a method to correctly pass the arguments
	def Rib(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Rib', '{2D8E1F2B-1610-4AA5-8F7F-ED489C4EDEDC}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IRotated(DispatchBaseClass):
	'Ёлемент вращени€.'
	CLSID = IID('{7BB28AD1-CCAE-449C-9086-A97470543089}')
	coclass_clsid = IID('{9F594D5A-30B5-415A-ACE6-D568F186D144}')

	# The method Angle is actually a property, but must be used as a method to correctly pass the arguments
	def Angle(self, Normal=defaultNamedNotOptArg):
		'”гол вращени€.'
		return self._oleobj_.InvokeTypes(6, LCID, 2, (5, 0), ((11, 1),),Normal
			)

	# Result is of type IModelObject
	# The method AngleObject is actually a property, but must be used as a method to correctly pass the arguments
	def AngleObject(self, Normal=defaultNamedNotOptArg):
		'ќбъект, задающий угол вращени€.'
		ret = self._oleobj_.InvokeTypes(7, LCID, 2, (9, 0), ((11, 1),),Normal
			)
		if ret is not None:
			ret = Dispatch(ret, 'AngleObject', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# The method CutOffByPoint is actually a property, but must be used as a method to correctly pass the arguments
	def CutOffByPoint(self, Normal=defaultNamedNotOptArg):
		'‘лаг отсекать дл€ способа до точки.'
		return self._oleobj_.InvokeTypes(8, LCID, 2, (11, 0), ((11, 1),),Normal
			)

	# The method RotatedType is actually a property, but must be used as a method to correctly pass the arguments
	def RotatedType(self, Normal=defaultNamedNotOptArg):
		'—пособ построени€ угла вращени€.'
		return self._oleobj_.InvokeTypes(5, LCID, 2, (3, 0), ((11, 1),),Normal
			)

	# The method SetAngle is actually a property, but must be used as a method to correctly pass the arguments
	def SetAngle(self, Normal=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'”гол вращени€.'
		return self._oleobj_.InvokeTypes(6, LCID, 4, (24, 0), ((11, 1), (5, 1)),Normal
			, arg1)

	# The method SetAngleObject is actually a property, but must be used as a method to correctly pass the arguments
	def SetAngleObject(self, Normal=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ќбъект, задающий угол вращени€.'
		return self._oleobj_.InvokeTypes(7, LCID, 4, (24, 0), ((11, 1), (9, 1)),Normal
			, arg1)

	# The method SetCutOffByPoint is actually a property, but must be used as a method to correctly pass the arguments
	def SetCutOffByPoint(self, Normal=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'‘лаг отсекать дл€ способа до точки.'
		return self._oleobj_.InvokeTypes(8, LCID, 4, (24, 0), ((11, 1), (11, 1)),Normal
			, arg1)

	# The method SetRotatedType is actually a property, but must be used as a method to correctly pass the arguments
	def SetRotatedType(self, Normal=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'—пособ построени€ угла вращени€.'
		return self._oleobj_.InvokeTypes(5, LCID, 4, (24, 0), ((11, 1), (3, 1)),Normal
			, arg1)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Axis' returns object of type 'IModelObject'
		"Axis": (2, 2, (9, 0), (), "Axis", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Direction": (3, 2, (3, 0), (), "Direction", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		# Method 'Profile' returns object of type 'IModelObject'
		"Profile": (1, 2, (9, 0), (), "Profile", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"ToroidShapeType": (4, 2, (11, 0), (), "ToroidShapeType", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Axis": ((2, LCID, 4, 0),()),
		"Direction": ((3, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Profile": ((1, LCID, 4, 0),()),
		"ToroidShapeType": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IRotated1(DispatchBaseClass):
	'ќпераци€ вращени€.'
	CLSID = IID('{094D83C7-70C3-45EA-AA20-14E55EFA52B8}')
	coclass_clsid = None

	_prop_map_get_ = {
		"OperationResult": (9, 2, (3, 0), (), "OperationResult", None),
	}
	_prop_map_put_ = {
		"OperationResult": ((9, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IRotatedSurface(DispatchBaseClass):
	'Ёлемент поверхность вращени€.'
	CLSID = IID('{3191CEBB-584C-4F58-82C1-A3771F73BE12}')
	coclass_clsid = IID('{9F594D5A-30B5-415A-ACE6-D568F186D144}')

	# The method Angle is actually a property, but must be used as a method to correctly pass the arguments
	def Angle(self, Normal=defaultNamedNotOptArg):
		'”гол вращени€.'
		return self._oleobj_.InvokeTypes(6, LCID, 2, (5, 0), ((11, 1),),Normal
			)

	# Result is of type IModelObject
	# The method AngleObject is actually a property, but must be used as a method to correctly pass the arguments
	def AngleObject(self, Normal=defaultNamedNotOptArg):
		'ќбъект, задающий угол вращени€.'
		ret = self._oleobj_.InvokeTypes(7, LCID, 2, (9, 0), ((11, 1),),Normal
			)
		if ret is not None:
			ret = Dispatch(ret, 'AngleObject', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# The method CutOffByPoint is actually a property, but must be used as a method to correctly pass the arguments
	def CutOffByPoint(self, Normal=defaultNamedNotOptArg):
		'‘лаг отсекать дл€ способа до точки.'
		return self._oleobj_.InvokeTypes(8, LCID, 2, (11, 0), ((11, 1),),Normal
			)

	# The method RotatedType is actually a property, but must be used as a method to correctly pass the arguments
	def RotatedType(self, Normal=defaultNamedNotOptArg):
		'—пособ построени€ угла вращени€.'
		return self._oleobj_.InvokeTypes(5, LCID, 2, (3, 0), ((11, 1),),Normal
			)

	# The method SetAngle is actually a property, but must be used as a method to correctly pass the arguments
	def SetAngle(self, Normal=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'”гол вращени€.'
		return self._oleobj_.InvokeTypes(6, LCID, 4, (24, 0), ((11, 1), (5, 1)),Normal
			, arg1)

	# The method SetAngleObject is actually a property, but must be used as a method to correctly pass the arguments
	def SetAngleObject(self, Normal=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ќбъект, задающий угол вращени€.'
		return self._oleobj_.InvokeTypes(7, LCID, 4, (24, 0), ((11, 1), (9, 1)),Normal
			, arg1)

	# The method SetCutOffByPoint is actually a property, but must be used as a method to correctly pass the arguments
	def SetCutOffByPoint(self, Normal=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'‘лаг отсекать дл€ способа до точки.'
		return self._oleobj_.InvokeTypes(8, LCID, 4, (24, 0), ((11, 1), (11, 1)),Normal
			, arg1)

	# The method SetRotatedType is actually a property, but must be used as a method to correctly pass the arguments
	def SetRotatedType(self, Normal=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'—пособ построени€ угла вращени€.'
		return self._oleobj_.InvokeTypes(5, LCID, 4, (24, 0), ((11, 1), (3, 1)),Normal
			, arg1)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Axis' returns object of type 'IModelObject'
		"Axis": (2, 2, (9, 0), (), "Axis", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"ClosedShell": (301, 2, (11, 0), (), "ClosedShell", None),
		"Direction": (3, 2, (3, 0), (), "Direction", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		# Method 'Profile' returns object of type 'IModelObject'
		"Profile": (1, 2, (9, 0), (), "Profile", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"ToroidShapeType": (4, 2, (11, 0), (), "ToroidShapeType", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Axis": ((2, LCID, 4, 0),()),
		"ClosedShell": ((301, LCID, 4, 0),()),
		"Direction": ((3, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Profile": ((1, LCID, 4, 0),()),
		"ToroidShapeType": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IRotateds(DispatchBaseClass):
	' оллекци€ элементов вращени€.'
	CLSID = IID('{A9B14309-92B3-46BA-8841-233293A60310}')
	coclass_clsid = IID('{5298A662-3440-4253-B15B-2580CEE7C618}')

	# Result is of type IRotated
	def Add(self, RotatedType=defaultNamedNotOptArg):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((3, 1),),RotatedType
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{7BB28AD1-CCAE-449C-9086-A97470543089}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type IRotated
	# The method Rotated is actually a property, but must be used as a method to correctly pass the arguments
	def Rotated(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Rotated', '{7BB28AD1-CCAE-449C-9086-A97470543089}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IRough(DispatchBaseClass):
	'ќбозначение шероховатости.'
	CLSID = IID('{0A192AC5-D8BC-43E9-8FC7-ACF32578DDB4}')
	coclass_clsid = IID('{1237C011-5D75-4EBF-B53A-744AA16D7EC7}')

	# The method BranchArrowInside is actually a property, but must be used as a method to correctly pass the arguments
	def BranchArrowInside(self, Index=defaultNamedNotOptArg):
		'–асположение стрелки линии-выноски(TRUE- внутри, FALSE- снаружи).'
		return self._oleobj_.InvokeTypes(7, LCID, 2, (11, 0), ((3, 1),),Index
			)

	# The method BranchArrowType is actually a property, but must be used as a method to correctly pass the arguments
	def BranchArrowType(self, Index=defaultNamedNotOptArg):
		'“ип значка на ответвлении.'
		return self._oleobj_.InvokeTypes(6, LCID, 2, (3, 0), ((3, 1),),Index
			)

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	# The method SetBranchArrowInside is actually a property, but must be used as a method to correctly pass the arguments
	def SetBranchArrowInside(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'–асположение стрелки линии-выноски(TRUE- внутри, FALSE- снаружи).'
		return self._oleobj_.InvokeTypes(7, LCID, 4, (24, 0), ((3, 1), (11, 1)),Index
			, arg1)

	# The method SetBranchArrowType is actually a property, but must be used as a method to correctly pass the arguments
	def SetBranchArrowType(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'“ип значка на ответвлении.'
		return self._oleobj_.InvokeTypes(6, LCID, 4, (24, 0), ((3, 1), (3, 1)),Index
			, arg1)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BaseObject' returns object of type 'IDrawingObject'
		"BaseObject": (1, 2, (9, 0), (), "BaseObject", '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}'),
		"BranchX0": (2, 2, (5, 0), (), "BranchX0", None),
		"BranchY0": (3, 2, (5, 0), (), "BranchY0", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"ShelfX": (4, 2, (5, 0), (), "ShelfX", None),
		"ShelfY": (5, 2, (5, 0), (), "ShelfY", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"BaseObject": ((1, LCID, 4, 0),()),
		"BranchX0": ((2, LCID, 4, 0),()),
		"BranchY0": ((3, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"ShelfX": ((4, LCID, 4, 0),()),
		"ShelfY": ((5, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IRough3D(DispatchBaseClass):
	'ќбозначение 3D шероховатости.'
	CLSID = IID('{083A4984-199E-4591-8FC3-CB8A9D7D4303}')
	coclass_clsid = IID('{48398FC6-D508-4F69-A292-840AC4C7DB69}')

	def GetBasePosition(self, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'“очка начала выносной линии или прив€зки знака.'
		return self._ApplyTypes_(6, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2)), 'GetBasePosition', None,X
			, Y, Z)

	def GetPosition(self, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'“очка задающа€ положение объекта.'
		return self._ApplyTypes_(3, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2)), 'GetPosition', None,X
			, Y, Z)

	def GetShelfPosition(self, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'“очка начала полки.'
		return self._ApplyTypes_(8, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2)), 'GetShelfPosition', None,X
			, Y, Z)

	def SetBasePosition(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg, Object=defaultNamedNotOptArg):
		'“очка начала выносной линии или прив€зки знака.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1), (9, 1)),X
			, Y, Z, Object)

	def SetPosition(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg):
		'“очка задающа€ положение объекта.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1)),X
			, Y, Z)

	def SetShelfPosition(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg):
		'“очка начала полки.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1)),X
			, Y, Z)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BaseObject' returns object of type 'IModelObject'
		"BaseObject": (5, 2, (9, 0), (), "BaseObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"BasePlane": (1, 2, (3, 0), (), "BasePlane", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		# Method 'PositionObject' returns object of type 'IModelObject'
		"PositionObject": (2, 2, (9, 0), (), "PositionObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"BasePlane": ((1, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"PositionObject": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IRoughParams(DispatchBaseClass):
	'ѕараметры шероховаиости.'
	CLSID = IID('{6C1943CE-8FDB-47D2-9B2F-95F7B851BE3D}')
	coclass_clsid = None

	_prop_map_get_ = {
		"ArrowInside": (1511, 2, (11, 0), (), "ArrowInside", None),
		"ArrowType": (1510, 2, (3, 0), (), "ArrowType", None),
		# Method 'BaseLengthText' returns object of type 'IText'
		"BaseLengthText": (1504, 2, (9, 0), (), "BaseLengthText", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		"LeaderAngle": (1509, 2, (5, 0), (), "LeaderAngle", None),
		"LeaderLength": (1508, 2, (5, 0), (), "LeaderLength", None),
		# Method 'ProcessText' returns object of type 'IText'
		"ProcessText": (1503, 2, (9, 0), (), "ProcessText", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		"ProcessingByContour": (1506, 2, (11, 0), (), "ProcessingByContour", None),
		# Method 'RoughParamText' returns object of type 'IText'
		"RoughParamText": (1502, 2, (9, 0), (), "RoughParamText", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		"ShelfDirection": (1507, 2, (3, 0), (), "ShelfDirection", None),
		"SignType": (1501, 2, (3, 0), (), "SignType", None),
		# Method 'TrendText' returns object of type 'IText'
		"TrendText": (1505, 2, (9, 0), (), "TrendText", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
	}
	_prop_map_put_ = {
		"ArrowInside": ((1511, LCID, 4, 0),()),
		"ArrowType": ((1510, LCID, 4, 0),()),
		"LeaderAngle": ((1509, LCID, 4, 0),()),
		"LeaderLength": ((1508, LCID, 4, 0),()),
		"ProcessingByContour": ((1506, LCID, 4, 0),()),
		"ShelfDirection": ((1507, LCID, 4, 0),()),
		"SignType": ((1501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IRoughs(DispatchBaseClass):
	' оллекци€ обозначений шероховатости.'
	CLSID = IID('{ACC42B32-27F3-4F74-B4A5-C97D4C7B289D}')
	coclass_clsid = IID('{55912A9B-6387-4946-80B9-C30D1DD30D07}')

	# Result is of type IRough
	def Add(self):
		'ƒобавить обозначение шероховатости в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{0A192AC5-D8BC-43E9-8FC7-ACF32578DDB4}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	# Result is of type IRough
	# The method Rough is actually a property, but must be used as a method to correctly pass the arguments
	def Rough(self, Index=defaultNamedNotOptArg):
		'ѕолучить обозначение шероховатости по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Rough', '{0A192AC5-D8BC-43E9-8FC7-ACF32578DDB4}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IRoughs3D(DispatchBaseClass):
	' оллекци€ 3D обозначений шероховатости.'
	CLSID = IID('{8533772B-1C43-4FDD-9F0E-BC92F15862C9}')
	coclass_clsid = IID('{D2ED0BEB-1705-4D5F-B8C4-F0D88B49AB2D}')

	# Result is of type IRough3D
	def Add(self):
		'ƒобавить 3D обозначение шероховатости в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{083A4984-199E-4591-8FC3-CB8A9D7D4303}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type IRough3D
	# The method Rough3D is actually a property, but must be used as a method to correctly pass the arguments
	def Rough3D(self, Index=defaultNamedNotOptArg):
		'ѕолучить 3D обозначение шероховатости по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Rough3D', '{083A4984-199E-4591-8FC3-CB8A9D7D4303}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IRuledSurface(DispatchBaseClass):
	'Ћинейчата€ поверхность.'
	CLSID = IID('{95681235-7522-4A84-B01C-E76A27393552}')
	coclass_clsid = IID('{76921B78-7B2A-4E77-8647-6C4B26A1CE4C}')

	def AddNewEdge(self, IndexAt=defaultNamedNotOptArg):
		'ƒобавление ребра после указанного индексом.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), ((3, 1),),IndexAt
			)

	def DeleteEdge(self, Index=defaultNamedNotOptArg):
		'”даление ребра.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), ((3, 1),),Index
			)

	def GetEdgePointParam(self, EdgeIndex=defaultNamedNotOptArg, StartPoint=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing
			, Z=pythoncom.Missing, T=pythoncom.Missing, Segment=pythoncom.Missing, AssociateVertex=pythoncom.Missing):
		'ѕолучение параметров точки ребра.'
		return self._ApplyTypes_(9, 1, (11, 0), ((3, 1), (11, 1), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16393, 2), (16393, 2)), 'GetEdgePointParam', None,EdgeIndex
			, StartPoint, X, Y, Z, T
			, Segment, AssociateVertex)

	def GetEdgePointParams(self, Points1=pythoncom.Missing, T1=pythoncom.Missing, Segments1=pythoncom.Missing, AssociateVertexes1=pythoncom.Missing
			, Points2=pythoncom.Missing, T2=pythoncom.Missing, Segments2=pythoncom.Missing, AssociateVertexes2=pythoncom.Missing):
		'ѕолучение параметров ребер.'
		return self._ApplyTypes_(10, 1, (11, 0), ((16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetEdgePointParams', None,Points1
			, T1, Segments1, AssociateVertexes1, Points2, T2
			, Segments2, AssociateVertexes2)

	def SetEdgePointParam(self, EdgeIndex=defaultNamedNotOptArg, StartPoint=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg
			, Z=defaultNamedNotOptArg, T=defaultNamedNotOptArg, Segment=defaultNamedNotOptArg, AssociateVertex=defaultNamedNotOptArg):
		'»зменение положени€ точки ребра.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), ((3, 1), (11, 1), (5, 1), (5, 1), (5, 1), (16389, 1), (9, 1), (9, 1)),EdgeIndex
			, StartPoint, X, Y, Z, T
			, Segment, AssociateVertex)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AutoSegmentation": (4, 2, (11, 0), (), "AutoSegmentation", None),
		"CheckSelfIntersection": (3, 2, (11, 0), (), "CheckSelfIntersection", None),
		"ConsiderComplianceVertices": (11, 2, (11, 0), (), "ConsiderComplianceVertices", None),
		"Curves1": (1, 2, (12, 0), (), "Curves1", None),
		"Curves2": (2, 2, (12, 0), (), "Curves2", None),
		"EdgesCount": (7, 2, (3, 0), (), "EdgesCount", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"AutoSegmentation": ((4, LCID, 4, 0),()),
		"CheckSelfIntersection": ((3, LCID, 4, 0),()),
		"ConsiderComplianceVertices": ((11, LCID, 4, 0),()),
		"Curves1": ((1, LCID, 4, 0),()),
		"Curves2": ((2, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IRuledSurfaces(DispatchBaseClass):
	' оллекци€ операций создани€ линейчатой поверхности.'
	CLSID = IID('{3F3EFC1C-A0A7-4B06-BF7A-384BAB27B07F}')
	coclass_clsid = IID('{F74E75C2-F5F9-482F-A30E-9B0DBFC7F426}')

	# Result is of type IRuledSurface
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{95681235-7522-4A84-B01C-E76A27393552}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type IRuledSurface
	# The method RuledSurface is actually a property, but must be used as a method to correctly pass the arguments
	def RuledSurface(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'RuledSurface', '{95681235-7522-4A84-B01C-E76A27393552}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISaveToPreviusParam7(DispatchBaseClass):
	'ѕараметры конвертации при сохранении в предыдущую версию.'
	CLSID = IID('{AB64A064-53E7-4ADC-BF40-3BFC04D93963}')
	coclass_clsid = None

	def AddOption(self, UniqueId=defaultNamedNotOptArg, OptionName=defaultNamedNotOptArg, Options=defaultNamedNotOptArg, DefaultValue=defaultNamedNotOptArg):
		'ƒобавить настройку конвертации с возможностью выбора вырианта конвертации.'
		return self._oleobj_.InvokeTypes(2002, LCID, 1, (11, 0), ((8, 1), (8, 1), (12, 1), (8, 1)),UniqueId
			, OptionName, Options, DefaultValue)

	def AddWarning(self, UniqueId=defaultNamedNotOptArg, OptionName=defaultNamedNotOptArg, Text=defaultNamedNotOptArg):
		'ƒобавить предупреждение.'
		return self._oleobj_.InvokeTypes(2001, LCID, 1, (11, 0), ((8, 1), (8, 1), (8, 1)),UniqueId
			, OptionName, Text)

	def GetCurrentOptionValue(self, UniqueId=defaultNamedNotOptArg):
		'ѕолучить текущее значение выбранное в диалоге параметров конвертации.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(2003, LCID, 1, (8, 0), ((8, 1),),UniqueId
			)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IScaling3D(DispatchBaseClass):
	'ќпераци€ масштабировани€.'
	CLSID = IID('{A37EE5F1-C852-467B-B72A-00C05310174D}')
	coclass_clsid = IID('{3D5B953B-4EFD-4C55-9433-7205028F38D6}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BasePoint' returns object of type 'IModelObject'
		"BasePoint": (3, 2, (9, 0), (), "BasePoint", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Scale": (2, 2, (5, 0), (), "Scale", None),
		# Method 'Shell' returns object of type 'IKompasAPIObject'
		"Shell": (1, 2, (9, 0), (), "Shell", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"BasePoint": ((3, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Scale": ((2, LCID, 4, 0),()),
		"Shell": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IScalings3D(DispatchBaseClass):
	' оллекци€ операций масштабировани€.'
	CLSID = IID('{B180FE26-ABEE-4F37-932F-24AAACF227A4}')
	coclass_clsid = IID('{0B02FD29-1FB4-4C7B-9C0B-B63F6415C960}')

	# Result is of type IScaling3D
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{A37EE5F1-C852-467B-B72A-00C05310174D}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type IScaling3D
	# The method Scaling3D is actually a property, but must be used as a method to correctly pass the arguments
	def Scaling3D(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Scaling3D', '{A37EE5F1-C852-467B-B72A-00C05310174D}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISelectionManager(DispatchBaseClass):
	'»нтерфейс менеджера селектированных объектов.'
	CLSID = IID('{E6DF688C-5B23-436B-A027-A96BFD5484CC}')
	coclass_clsid = IID('{45615DBB-7842-436C-9B84-063A13C061E8}')

	def IsSelected(self, Object=defaultNamedNotOptArg):
		'—електирован ли обьект.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((9, 1),),Object
			)

	def Select(self, Objects=defaultNamedNotOptArg):
		'—електировать объект.'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (11, 0), ((12, 1),),Objects
			)

	def Unselect(self, Objects=defaultNamedNotOptArg):
		'—н€ть селектирование объекта.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), ((12, 1),),Objects
			)

	def UnselectAll(self):
		'—н€ть селектирование.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"SelectedObjects": (5, 2, (12, 0), (), "SelectedObjects", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISerializer(DispatchBaseClass):
	'»нтерфейс сериализации.'
	CLSID = IID('{040C027E-D385-4A7A-96BD-296DF0B9E70E}')
	coclass_clsid = IID('{7979B891-59D0-44BB-A643-16C340259E77}')

	_prop_map_get_ = {
		"XML": (9001, 2, (8, 0), (), "XML", None),
	}
	_prop_map_put_ = {
		"XML": ((9001, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISheetFormat(DispatchBaseClass):
	'‘ормат листа.'
	CLSID = IID('{B9CDE694-4C33-4375-A6F6-AE94DC759510}')
	coclass_clsid = IID('{B872A3A8-C21F-487B-A44D-B168398E014A}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Format": (1, 2, (3, 0), (), "Format", None),
		"FormatHeight": (5, 2, (5, 0), (), "FormatHeight", None),
		"FormatMultiplicity": (2, 2, (3, 0), (), "FormatMultiplicity", None),
		"FormatWidth": (4, 2, (5, 0), (), "FormatWidth", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"VerticalOrientation": (3, 2, (11, 0), (), "VerticalOrientation", None),
	}
	_prop_map_put_ = {
		"Format": ((1, LCID, 4, 0),()),
		"FormatHeight": ((5, LCID, 4, 0),()),
		"FormatMultiplicity": ((2, LCID, 4, 0),()),
		"FormatWidth": ((4, LCID, 4, 0),()),
		"VerticalOrientation": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISheetMetalBend(DispatchBaseClass):
	"Ёлемент листового тела '—гиб'."
	CLSID = IID('{B631D95F-C487-41D6-9726-C65E9F5A4505}')
	coclass_clsid = IID('{C84C5989-2AE1-4E61-9C29-88028C8873A2}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (8, 2, (5, 0), (), "Angle", None),
		"AngleType": (7, 2, (11, 0), (), "AngleType", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"BendCoefficient": (33, 2, (5, 0), (), "BendCoefficient", None),
		# Method 'BendObject' returns object of type 'IModelObject'
		"BendObject": (29, 2, (9, 0), (), "BendObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"BendObjects": (50, 2, (12, 0), (), "BendObjects", None),
		"BendReduction": (35, 2, (5, 0), (), "BendReduction", None),
		"BendRelease": (25, 2, (3, 0), (), "BendRelease", None),
		"BendTablePath": (36, 2, (8, 0), (), "BendTablePath", None),
		"BendValue": (34, 2, (5, 0), (), "BendValue", None),
		"DeviationLeftSide": (15, 2, (5, 0), (), "DeviationLeftSide", None),
		"DeviationRightSide": (20, 2, (5, 0), (), "DeviationRightSide", None),
		"Direction": (1, 2, (11, 0), (), "Direction", None),
		"DismissalAngleType": (28, 2, (3, 0), (), "DismissalAngleType", None),
		"DismissalDepth": (27, 2, (5, 0), (), "DismissalDepth", None),
		"DismissalWidth": (26, 2, (5, 0), (), "DismissalWidth", None),
		"DismissalWithWidth": (24, 2, (11, 0), (), "DismissalWithWidth", None),
		"Disposal": (2, 2, (3, 0), (), "Disposal", None),
		"DistanceLeftSide": (13, 2, (5, 0), (), "DistanceLeftSide", None),
		"DistanceRightSide": (18, 2, (5, 0), (), "DistanceRightSide", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"InternalLength": (5, 2, (11, 0), (), "InternalLength", None),
		"InternalRadius": (30, 2, (11, 0), (), "InternalRadius", None),
		"LeftSideAngle": (14, 2, (5, 0), (), "LeftSideAngle", None),
		"LeftSideType": (12, 2, (3, 0), (), "LeftSideType", None),
		"Length": (6, 2, (5, 0), (), "Length", None),
		"Length1": (38, 2, (5, 0), (), "Length1", None),
		"Length2": (39, 2, (5, 0), (), "Length2", None),
		"LengthBuildingType1": (43, 2, (3, 0), (), "LengthBuildingType1", None),
		"LengthBuildingType2": (48, 2, (3, 0), (), "LengthBuildingType2", None),
		"LengthBy2Sides": (37, 2, (11, 0), (), "LengthBy2Sides", None),
		# Method 'LengthObject1' returns object of type 'IModelObject'
		"LengthObject1": (40, 2, (9, 0), (), "LengthObject1", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'LengthObject2' returns object of type 'IModelObject'
		"LengthObject2": (45, 2, (9, 0), (), "LengthObject2", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"LengthType": (4, 2, (3, 0), (), "LengthType", None),
		"LengthType1": (44, 2, (3, 0), (), "LengthType1", None),
		"LengthType2": (49, 2, (3, 0), (), "LengthType2", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		"Offset": (10, 2, (5, 0), (), "Offset", None),
		"OffsetDirection1": (42, 2, (3, 0), (), "OffsetDirection1", None),
		"OffsetDirection2": (47, 2, (3, 0), (), "OffsetDirection2", None),
		"OffsetFromLengthObject1": (41, 2, (5, 0), (), "OffsetFromLengthObject1", None),
		"OffsetFromLengthObject2": (46, 2, (5, 0), (), "OffsetFromLengthObject2", None),
		"OffsetType": (9, 2, (3, 0), (), "OffsetType", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Radius": (31, 2, (5, 0), (), "Radius", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"RightSideAngle": (19, 2, (5, 0), (), "RightSideAngle", None),
		"RightSideType": (17, 2, (3, 0), (), "RightSideType", None),
		"Straighten": (11, 2, (11, 0), (), "Straighten", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"UnfoldType": (32, 2, (3, 0), (), "UnfoldType", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
		"WideningLeftSide": (16, 2, (5, 0), (), "WideningLeftSide", None),
		"WideningRightSide": (21, 2, (5, 0), (), "WideningRightSide", None),
		"Width": (3, 2, (5, 0), (), "Width", None),
		"WithoutAngleRelease": (22, 2, (11, 0), (), "WithoutAngleRelease", None),
		"WithoutBendRelease": (23, 2, (11, 0), (), "WithoutBendRelease", None),
	}
	_prop_map_put_ = {
		"Angle": ((8, LCID, 4, 0),()),
		"AngleType": ((7, LCID, 4, 0),()),
		"BendCoefficient": ((33, LCID, 4, 0),()),
		"BendObject": ((29, LCID, 4, 0),()),
		"BendObjects": ((50, LCID, 4, 0),()),
		"BendReduction": ((35, LCID, 4, 0),()),
		"BendRelease": ((25, LCID, 4, 0),()),
		"BendValue": ((34, LCID, 4, 0),()),
		"DeviationLeftSide": ((15, LCID, 4, 0),()),
		"DeviationRightSide": ((20, LCID, 4, 0),()),
		"Direction": ((1, LCID, 4, 0),()),
		"DismissalAngleType": ((28, LCID, 4, 0),()),
		"DismissalDepth": ((27, LCID, 4, 0),()),
		"DismissalWidth": ((26, LCID, 4, 0),()),
		"DismissalWithWidth": ((24, LCID, 4, 0),()),
		"Disposal": ((2, LCID, 4, 0),()),
		"DistanceLeftSide": ((13, LCID, 4, 0),()),
		"DistanceRightSide": ((18, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"InternalLength": ((5, LCID, 4, 0),()),
		"InternalRadius": ((30, LCID, 4, 0),()),
		"LeftSideAngle": ((14, LCID, 4, 0),()),
		"LeftSideType": ((12, LCID, 4, 0),()),
		"Length": ((6, LCID, 4, 0),()),
		"Length1": ((38, LCID, 4, 0),()),
		"Length2": ((39, LCID, 4, 0),()),
		"LengthBuildingType1": ((43, LCID, 4, 0),()),
		"LengthBuildingType2": ((48, LCID, 4, 0),()),
		"LengthBy2Sides": ((37, LCID, 4, 0),()),
		"LengthObject1": ((40, LCID, 4, 0),()),
		"LengthObject2": ((45, LCID, 4, 0),()),
		"LengthType": ((4, LCID, 4, 0),()),
		"LengthType1": ((44, LCID, 4, 0),()),
		"LengthType2": ((49, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Offset": ((10, LCID, 4, 0),()),
		"OffsetDirection1": ((42, LCID, 4, 0),()),
		"OffsetDirection2": ((47, LCID, 4, 0),()),
		"OffsetFromLengthObject1": ((41, LCID, 4, 0),()),
		"OffsetFromLengthObject2": ((46, LCID, 4, 0),()),
		"OffsetType": ((9, LCID, 4, 0),()),
		"Radius": ((31, LCID, 4, 0),()),
		"RightSideAngle": ((19, LCID, 4, 0),()),
		"RightSideType": ((17, LCID, 4, 0),()),
		"Straighten": ((11, LCID, 4, 0),()),
		"UnfoldType": ((32, LCID, 4, 0),()),
		"WideningLeftSide": ((16, LCID, 4, 0),()),
		"WideningRightSide": ((21, LCID, 4, 0),()),
		"Width": ((3, LCID, 4, 0),()),
		"WithoutAngleRelease": ((22, LCID, 4, 0),()),
		"WithoutBendRelease": ((23, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISheetMetalBendUnfoldParameters(DispatchBaseClass):
	'ѕараметры развертки листового тела.'
	CLSID = IID('{BC21145E-5520-4871-AA24-52E19EF82211}')
	coclass_clsid = None

	def DeleteParam(self):
		'”далить параметры развертки.'
		return self._oleobj_.InvokeTypes(4507, LCID, 1, (11, 0), (),)

	def UpdateParam(self):
		'”становить измененные параметры развертки.'
		return self._oleobj_.InvokeTypes(4506, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"ExcludedBendObjects": (4503, 2, (12, 0), (), "ExcludedBendObjects", None),
		"FixedFaces": (4502, 2, (12, 0), (), "FixedFaces", None),
		"IsCreated": (4505, 2, (11, 0), (), "IsCreated", None),
		"Unfold": (4504, 2, (11, 0), (), "Unfold", None),
		# Method 'UnfoldPlane' returns object of type 'IModelObject'
		"UnfoldPlane": (4501, 2, (9, 0), (), "UnfoldPlane", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
	}
	_prop_map_put_ = {
		"ExcludedBendObjects": ((4503, LCID, 4, 0),()),
		"FixedFaces": ((4502, LCID, 4, 0),()),
		"Unfold": ((4504, LCID, 4, 0),()),
		"UnfoldPlane": ((4501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISheetMetalBendedStraighten(DispatchBaseClass):
	'—огнуть/–азогнуть.'
	CLSID = IID('{194F5AF1-1B37-4FF7-9C7A-B939CB556F3A}')
	coclass_clsid = IID('{81ABF9FE-165D-4975-AAEA-59AE4989885B}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"BendObjects": (2, 2, (12, 0), (), "BendObjects", None),
		# Method 'FixedFace' returns object of type 'IModelObject'
		"FixedFace": (1, 2, (9, 0), (), "FixedFace", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"FoldLinesEnabled": (3, 2, (11, 0), (), "FoldLinesEnabled", None),
		"FoldLinesStyle": (4, 2, (3, 0), (), "FoldLinesStyle", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"BendObjects": ((2, LCID, 4, 0),()),
		"FixedFace": ((1, LCID, 4, 0),()),
		"FoldLinesEnabled": ((3, LCID, 4, 0),()),
		"FoldLinesStyle": ((4, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISheetMetalBendedStraightens(DispatchBaseClass):
	' оллекци€ элементов —огнуть/–азогнуть .'
	CLSID = IID('{B19D00A4-1B8E-43FA-9DA7-EBE37EC67B67}')
	coclass_clsid = IID('{2A0B422F-D150-4A4B-BE25-2AE2F97068EF}')

	# Result is of type ISheetMetalBendedStraighten
	def Add(self, Type=defaultNamedNotOptArg):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((3, 1),),Type
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{194F5AF1-1B37-4FF7-9C7A-B939CB556F3A}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type ISheetMetalBendedStraighten
	# The method SheetMetalBendedStraighten is actually a property, but must be used as a method to correctly pass the arguments
	def SheetMetalBendedStraighten(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'SheetMetalBendedStraighten', '{194F5AF1-1B37-4FF7-9C7A-B939CB556F3A}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISheetMetalBends(DispatchBaseClass):
	" оллекци€ элементов 'сгиб'."
	CLSID = IID('{6826CFD6-6A48-4EB1-8C89-7DB4E36702B4}')
	coclass_clsid = IID('{E82B9381-1BA1-4CD8-8F0A-0F7AAB0777CE}')

	# Result is of type ISheetMetalBend
	def Add(self):
		"—оздает новый элемент 'сгиб' и добавл€ет его в коллекцию."
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{B631D95F-C487-41D6-9726-C65E9F5A4505}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type ISheetMetalBend
	# The method SheetMetalBend is actually a property, but must be used as a method to correctly pass the arguments
	def SheetMetalBend(self, Index=defaultNamedNotOptArg):
		"¬озвращает 'сгиб', заданный по индексу."
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'SheetMetalBend', '{B631D95F-C487-41D6-9726-C65E9F5A4505}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISheetMetalBodies(DispatchBaseClass):
	" оллекци€ элементов 'листовое тело'."
	CLSID = IID('{F56DBE72-48CC-48AD-9DA4-10D972C903EE}')
	coclass_clsid = IID('{DC4C565F-935D-4F7A-97A5-DB4D252F6B91}')

	# Result is of type ISheetMetalBody
	def Add(self):
		"—оздает новый элемент 'листовое тело' и добавл€ет его в коллекцию."
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{2DC533DC-829E-4EFF-A905-541E9220A12D}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type ISheetMetalBody
	# The method SheetMetalBody is actually a property, but must be used as a method to correctly pass the arguments
	def SheetMetalBody(self, Index=defaultNamedNotOptArg):
		"¬озвращает элемент 'листовое тело', заданный по индексу."
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'SheetMetalBody', '{2DC533DC-829E-4EFF-A905-541E9220A12D}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISheetMetalBody(DispatchBaseClass):
	"Ёлемент 'Ћистовое тело'."
	CLSID = IID('{2DC533DC-829E-4EFF-A905-541E9220A12D}')
	coclass_clsid = IID('{1301DC0F-CDF1-4EB1-90B4-D06EA2610F0B}')

	# The method Depth is actually a property, but must be used as a method to correctly pass the arguments
	def Depth(self, Normal=defaultNamedNotOptArg):
		'√лубина выдавливани€.'
		return self._oleobj_.InvokeTypes(13, LCID, 2, (5, 0), ((11, 1),),Normal
			)

	# Result is of type IModelObject
	# The method DepthObject is actually a property, but must be used as a method to correctly pass the arguments
	def DepthObject(self, Normal=defaultNamedNotOptArg):
		'ќбъект, задающий глубину выдавливани€'
		ret = self._oleobj_.InvokeTypes(14, LCID, 2, (9, 0), ((11, 1),),Normal
			)
		if ret is not None:
			ret = Dispatch(ret, 'DepthObject', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# The method ExtrusionType is actually a property, but must be used as a method to correctly pass the arguments
	def ExtrusionType(self, Normal=defaultNamedNotOptArg):
		'“ип выдавливани€.'
		return self._oleobj_.InvokeTypes(12, LCID, 2, (3, 0), ((11, 1),),Normal
			)

	def GetSideParameters(self, Normal=defaultNamedNotOptArg, ExtrusionType=pythoncom.Missing, Depth=pythoncom.Missing, DepthObject=pythoncom.Missing):
		'ѕолучить параметры выдавливани€ в одном направлении.'
		return self._ApplyTypes_(15, 1, (11, 0), ((11, 1), (16387, 2), (16389, 2), (16393, 2)), 'GetSideParameters', None,Normal
			, ExtrusionType, Depth, DepthObject)

	# The method SetDepth is actually a property, but must be used as a method to correctly pass the arguments
	def SetDepth(self, Normal=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'√лубина выдавливани€.'
		return self._oleobj_.InvokeTypes(13, LCID, 4, (24, 0), ((11, 1), (5, 1)),Normal
			, arg1)

	# The method SetDepthObject is actually a property, but must be used as a method to correctly pass the arguments
	def SetDepthObject(self, Normal=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ќбъект, задающий глубину выдавливани€'
		return self._oleobj_.InvokeTypes(14, LCID, 4, (24, 0), ((11, 1), (9, 1)),Normal
			, arg1)

	# The method SetExtrusionType is actually a property, but must be used as a method to correctly pass the arguments
	def SetExtrusionType(self, Normal=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'“ип выдавливани€.'
		return self._oleobj_.InvokeTypes(12, LCID, 4, (24, 0), ((11, 1), (3, 1)),Normal
			, arg1)

	def SetSideParameters(self, Normal=defaultNamedNotOptArg, ExtrusionType=defaultNamedNotOptArg, Depth=defaultNamedNotOptArg, DepthObject=defaultNamedNotOptArg):
		'”становить параметры выдавливани€ в одном направлении.'
		return self._oleobj_.InvokeTypes(16, LCID, 1, (11, 0), ((11, 1), (3, 1), (5, 1), (9, 1)),Normal
			, ExtrusionType, Depth, DepthObject)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"BendCoefficient": (6, 2, (5, 0), (), "BendCoefficient", None),
		"BendReduction": (8, 2, (5, 0), (), "BendReduction", None),
		"BendTablePath": (9, 2, (8, 0), (), "BendTablePath", None),
		"BendValue": (7, 2, (5, 0), (), "BendValue", None),
		"Direction": (11, 2, (3, 0), (), "Direction", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Radius": (4, 2, (5, 0), (), "Radius", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'Sketch' returns object of type 'ISketch'
		"Sketch": (10, 2, (9, 0), (), "Sketch", '{E6BBF50D-8401-4FB3-A6B6-153D3F447255}'),
		"Straighten": (3, 2, (11, 0), (), "Straighten", None),
		"Thickness": (2, 2, (5, 0), (), "Thickness", None),
		"ThicknessDirection": (1, 2, (11, 0), (), "ThicknessDirection", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"UnfoldType": (5, 2, (3, 0), (), "UnfoldType", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"BendCoefficient": ((6, LCID, 4, 0),()),
		"BendReduction": ((8, LCID, 4, 0),()),
		"BendTablePath": ((9, LCID, 4, 0),()),
		"BendValue": ((7, LCID, 4, 0),()),
		"Direction": ((11, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Radius": ((4, LCID, 4, 0),()),
		"Sketch": ((10, LCID, 4, 0),()),
		"Straighten": ((3, LCID, 4, 0),()),
		"Thickness": ((2, LCID, 4, 0),()),
		"ThicknessDirection": ((1, LCID, 4, 0),()),
		"UnfoldType": ((5, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISheetMetalClosedCorner(DispatchBaseClass):
	'«амыкание углов.'
	CLSID = IID('{995BEE65-54D2-443E-9423-88B4323308A7}')
	coclass_clsid = IID('{D3FA6C9C-DAC5-4E55-A1B0-5A47AD9F5B40}')

	def AddCornerObject(self, NewVal=defaultNamedNotOptArg):
		'ƒобавить угол.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((9, 1),),NewVal
			)

	def ClearCornerObjects(self):
		'”далить все уголы.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), (),)

	# The method ClosingClosedType is actually a property, but must be used as a method to correctly pass the arguments
	def ClosingClosedType(self, Index=defaultNamedNotOptArg):
		'—пособ замыкании углов.'
		return self._oleobj_.InvokeTypes(8, LCID, 2, (3, 0), ((3, 1),),Index
			)

	# The method ClosingContinue is actually a property, but must be used as a method to correctly pass the arguments
	def ClosingContinue(self, Index=defaultNamedNotOptArg):
		'ѕродолжать замыкание прилегающих парных сгибов.'
		return self._oleobj_.InvokeTypes(14, LCID, 2, (11, 0), ((3, 1),),Index
			)

	# The method ClosingCorneringType is actually a property, but must be used as a method to correctly pass the arguments
	def ClosingCorneringType(self, Index=defaultNamedNotOptArg):
		'ќбработка угла при замыкании.'
		return self._oleobj_.InvokeTypes(9, LCID, 2, (3, 0), ((3, 1),),Index
			)

	# The method ClosingDirection is actually a property, but must be used as a method to correctly pass the arguments
	def ClosingDirection(self, Index=defaultNamedNotOptArg):
		'Ќаправление. ѕереставить сторону.'
		return self._oleobj_.InvokeTypes(15, LCID, 2, (11, 0), ((3, 1),),Index
			)

	# The method ClosingGapValue is actually a property, but must be used as a method to correctly pass the arguments
	def ClosingGapValue(self, Index=defaultNamedNotOptArg):
		'«начение зазора при замыкании углов.'
		return self._oleobj_.InvokeTypes(10, LCID, 2, (5, 0), ((3, 1),),Index
			)

	# The method ClosingHoleDiameter is actually a property, but must be used as a method to correctly pass the arguments
	def ClosingHoleDiameter(self, Index=defaultNamedNotOptArg):
		'ƒиаметр отверсти€ при замыкании угла.'
		return self._oleobj_.InvokeTypes(12, LCID, 2, (5, 0), ((3, 1),),Index
			)

	# The method ClosingHoleOffset is actually a property, but must be used as a method to correctly pass the arguments
	def ClosingHoleOffset(self, Index=defaultNamedNotOptArg):
		'—мещение отверсти€ при замыкании угла.'
		return self._oleobj_.InvokeTypes(13, LCID, 2, (5, 0), ((3, 1),),Index
			)

	# The method ClosingHolePlacement is actually a property, but must be used as a method to correctly pass the arguments
	def ClosingHolePlacement(self, Index=defaultNamedNotOptArg):
		'–азмещение отверсти€ при круговой обработке угла.'
		return self._oleobj_.InvokeTypes(11, LCID, 2, (3, 0), ((3, 1),),Index
			)

	# Result is of type IModelObject
	# The method CornerObject is actually a property, but must be used as a method to correctly pass the arguments
	def CornerObject(self, Index=defaultNamedNotOptArg):
		'”гол. ќбъект (ребро или грань) задающий угол листового тела.'
		ret = self._oleobj_.InvokeTypes(3, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'CornerObject', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def DeleteCornerObject(self, Index=defaultNamedNotOptArg):
		'”далить угол.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), ((3, 1),),Index
			)

	# The method SetClosingClosedType is actually a property, but must be used as a method to correctly pass the arguments
	def SetClosingClosedType(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'—пособ замыкании углов.'
		return self._oleobj_.InvokeTypes(8, LCID, 4, (24, 0), ((3, 1), (3, 1)),Index
			, arg1)

	# The method SetClosingContinue is actually a property, but must be used as a method to correctly pass the arguments
	def SetClosingContinue(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ѕродолжать замыкание прилегающих парных сгибов.'
		return self._oleobj_.InvokeTypes(14, LCID, 4, (24, 0), ((3, 1), (11, 1)),Index
			, arg1)

	# The method SetClosingCorneringType is actually a property, but must be used as a method to correctly pass the arguments
	def SetClosingCorneringType(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ќбработка угла при замыкании.'
		return self._oleobj_.InvokeTypes(9, LCID, 4, (24, 0), ((3, 1), (3, 1)),Index
			, arg1)

	# The method SetClosingDirection is actually a property, but must be used as a method to correctly pass the arguments
	def SetClosingDirection(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'Ќаправление. ѕереставить сторону.'
		return self._oleobj_.InvokeTypes(15, LCID, 4, (24, 0), ((3, 1), (11, 1)),Index
			, arg1)

	# The method SetClosingGapValue is actually a property, but must be used as a method to correctly pass the arguments
	def SetClosingGapValue(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'«начение зазора при замыкании углов.'
		return self._oleobj_.InvokeTypes(10, LCID, 4, (24, 0), ((3, 1), (5, 1)),Index
			, arg1)

	# The method SetClosingHoleDiameter is actually a property, but must be used as a method to correctly pass the arguments
	def SetClosingHoleDiameter(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ƒиаметр отверсти€ при замыкании угла.'
		return self._oleobj_.InvokeTypes(12, LCID, 4, (24, 0), ((3, 1), (5, 1)),Index
			, arg1)

	# The method SetClosingHoleOffset is actually a property, but must be used as a method to correctly pass the arguments
	def SetClosingHoleOffset(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'—мещение отверсти€ при замыкании угла.'
		return self._oleobj_.InvokeTypes(13, LCID, 4, (24, 0), ((3, 1), (5, 1)),Index
			, arg1)

	# The method SetClosingHolePlacement is actually a property, but must be used as a method to correctly pass the arguments
	def SetClosingHolePlacement(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'–азмещение отверсти€ при круговой обработке угла.'
		return self._oleobj_.InvokeTypes(11, LCID, 4, (24, 0), ((3, 1), (3, 1)),Index
			, arg1)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"CornersCount": (2, 2, (3, 0), (), "CornersCount", None),
		"CornersObjects": (1, 2, (12, 0), (), "CornersObjects", None),
		"DefailtParametersIndex": (7, 2, (3, 0), (), "DefailtParametersIndex", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"CornersObjects": ((1, LCID, 4, 0),()),
		"DefailtParametersIndex": ((7, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISheetMetalClosedCorners(DispatchBaseClass):
	' оллекци€ элементов «амыканике углов.'
	CLSID = IID('{67037D06-603A-41DA-8513-45088FEA98A8}')
	coclass_clsid = IID('{2371BFB4-D216-4BAB-8DA8-F050BDAC0554}')

	# Result is of type ISheetMetalClosedCorner
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{995BEE65-54D2-443E-9423-88B4323308A7}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type ISheetMetalClosedCorner
	# The method SheetMetalClosedCorner is actually a property, but must be used as a method to correctly pass the arguments
	def SheetMetalClosedCorner(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'SheetMetalClosedCorner', '{995BEE65-54D2-443E-9423-88B4323308A7}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISheetMetalContainer(DispatchBaseClass):
	'»нтерфейс контейнера объектов гибки.'
	CLSID = IID('{77A4895D-9B09-4C63-A3FF-6857F4340840}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'SheetMetalBendUnfoldParameters' returns object of type 'ISheetMetalBendUnfoldParameters'
		"SheetMetalBendUnfoldParameters": (11011, 2, (9, 0), (), "SheetMetalBendUnfoldParameters", '{BC21145E-5520-4871-AA24-52E19EF82211}'),
		# Method 'SheetMetalBendedStraightens' returns object of type 'ISheetMetalBendedStraightens'
		"SheetMetalBendedStraightens": (11010, 2, (9, 0), (), "SheetMetalBendedStraightens", '{B19D00A4-1B8E-43FA-9DA7-EBE37EC67B67}'),
		# Method 'SheetMetalBends' returns object of type 'ISheetMetalBends'
		"SheetMetalBends": (11002, 2, (9, 0), (), "SheetMetalBends", '{6826CFD6-6A48-4EB1-8C89-7DB4E36702B4}'),
		# Method 'SheetMetalBodies' returns object of type 'ISheetMetalBodies'
		"SheetMetalBodies": (11001, 2, (9, 0), (), "SheetMetalBodies", '{F56DBE72-48CC-48AD-9DA4-10D972C903EE}'),
		# Method 'SheetMetalClosedCorners' returns object of type 'ISheetMetalClosedCorners'
		"SheetMetalClosedCorners": (11007, 2, (9, 0), (), "SheetMetalClosedCorners", '{67037D06-603A-41DA-8513-45088FEA98A8}'),
		# Method 'SheetMetalCuts' returns object of type 'ISheetMetalCuts'
		"SheetMetalCuts": (11005, 2, (9, 0), (), "SheetMetalCuts", '{9515E4BB-7C60-4C3A-AF7A-847861E67B55}'),
		# Method 'SheetMetalHoles' returns object of type 'ISheetMetalHoles'
		"SheetMetalHoles": (11004, 2, (9, 0), (), "SheetMetalHoles", '{E117BDF9-5133-4672-9B8F-06046F6B9BF3}'),
		# Method 'SheetMetalJalousies' returns object of type 'ISheetMetalJalousies'
		"SheetMetalJalousies": (11014, 2, (9, 0), (), "SheetMetalJalousies", '{914D5295-8831-4166-994C-D19C5DF149E7}'),
		# Method 'SheetMetalLineBends' returns object of type 'ISheetMetalLineBends'
		"SheetMetalLineBends": (11003, 2, (9, 0), (), "SheetMetalLineBends", '{AF8B8310-AF82-4B02-8733-783FFAFD4DBD}'),
		# Method 'SheetMetalLinearRuledShells' returns object of type 'ISheetMetalBodies'
		"SheetMetalLinearRuledShells": (11017, 2, (9, 0), (), "SheetMetalLinearRuledShells", '{F56DBE72-48CC-48AD-9DA4-10D972C903EE}'),
		# Method 'SheetMetalPlates' returns object of type 'ISheetMetalPlates'
		"SheetMetalPlates": (11008, 2, (9, 0), (), "SheetMetalPlates", '{A1AD042D-A57F-4079-8F7A-CE4AAB5D9DAF}'),
		# Method 'SheetMetalPressFormings' returns object of type 'ISheetMetalPressFormings'
		"SheetMetalPressFormings": (11012, 2, (9, 0), (), "SheetMetalPressFormings", '{0541BEE1-9273-4611-9F26-B3408C51580F}'),
		# Method 'SheetMetalRibs' returns object of type 'ISheetMetalRibs'
		"SheetMetalRibs": (11015, 2, (9, 0), (), "SheetMetalRibs", '{B72CC78F-D630-463F-8911-ED9BD58BBA1C}'),
		# Method 'SheetMetalRuledShells' returns object of type 'ISheetMetalBodies'
		"SheetMetalRuledShells": (11016, 2, (9, 0), (), "SheetMetalRuledShells", '{F56DBE72-48CC-48AD-9DA4-10D972C903EE}'),
		# Method 'SheetMetalShoulders' returns object of type 'ISheetMetalShoulders'
		"SheetMetalShoulders": (11013, 2, (9, 0), (), "SheetMetalShoulders", '{AC0F620E-229A-42BE-8C5B-1786C54474C0}'),
		# Method 'SheetMetalSketchBends' returns object of type 'ISheetMetalSketchBends'
		"SheetMetalSketchBends": (11006, 2, (9, 0), (), "SheetMetalSketchBends", '{247539A2-BB15-4D8A-9121-67BDE48A989A}'),
		# Method 'SheetMetalUndercuts' returns object of type 'ISheetMetalLineBends'
		"SheetMetalUndercuts": (11009, 2, (9, 0), (), "SheetMetalUndercuts", '{AF8B8310-AF82-4B02-8733-783FFAFD4DBD}'),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISheetMetalCut(DispatchBaseClass):
	"Ёлемент листового тела '¬ырез'."
	CLSID = IID('{B50B1730-BACF-46F2-B10A-6CCDF4E4A2B1}')
	coclass_clsid = IID('{17CDFC21-A515-4011-BCC6-A3420219E19D}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Body' returns object of type 'IKompasAPIObject'
		"Body": (6, 2, (9, 0), (), "Body", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Cut": (5, 2, (11, 0), (), "Cut", None),
		"CutType": (2, 2, (3, 0), (), "CutType", None),
		"Depth": (3, 2, (5, 0), (), "Depth", None),
		# Method 'DepthObject' returns object of type 'IModelObject'
		"DepthObject": (4, 2, (9, 0), (), "DepthObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'Sketch' returns object of type 'ISketch'
		"Sketch": (1, 2, (9, 0), (), "Sketch", '{E6BBF50D-8401-4FB3-A6B6-153D3F447255}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Body": ((6, LCID, 4, 0),()),
		"Cut": ((5, LCID, 4, 0),()),
		"CutType": ((2, LCID, 4, 0),()),
		"Depth": ((3, LCID, 4, 0),()),
		"DepthObject": ((4, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Sketch": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISheetMetalCuts(DispatchBaseClass):
	" оллекци€ элементов '¬ырез'."
	CLSID = IID('{9515E4BB-7C60-4C3A-AF7A-847861E67B55}')
	coclass_clsid = IID('{A0C32567-9107-4695-A9B0-4D991B58689E}')

	# Result is of type ISheetMetalCut
	def Add(self):
		"—оздает новый элемент '¬ырез' и добавл€ет его в коллекцию."
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{B50B1730-BACF-46F2-B10A-6CCDF4E4A2B1}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type ISheetMetalCut
	# The method SheetMetalCut is actually a property, but must be used as a method to correctly pass the arguments
	def SheetMetalCut(self, Index=defaultNamedNotOptArg):
		"¬озвращает элемент '¬ырез', заданный по индексу."
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'SheetMetalCut', '{B50B1730-BACF-46F2-B10A-6CCDF4E4A2B1}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISheetMetalHole(DispatchBaseClass):
	"Ёлемент листового тела 'ќтверстие'."
	CLSID = IID('{3490B8B8-00D7-4BCF-AAD8-9487BF271084}')
	coclass_clsid = IID('{6D725058-9A30-49B2-8BA6-466F2807E232}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'AssociationVertex' returns object of type 'IModelObject'
		"AssociationVertex": (11, 2, (9, 0), (), "AssociationVertex", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Axis": (12, 2, (11, 0), (), "Axis", None),
		# Method 'BasePlane' returns object of type 'IModelObject'
		"BasePlane": (6, 2, (9, 0), (), "BasePlane", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'Body' returns object of type 'IKompasAPIObject'
		"Body": (9, 2, (9, 0), (), "Body", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"CutType": (3, 2, (3, 0), (), "CutType", None),
		"Depth": (5, 2, (5, 0), (), "Depth", None),
		# Method 'DepthObject' returns object of type 'IModelObject'
		"DepthObject": (7, 2, (9, 0), (), "DepthObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Diameter": (4, 2, (5, 0), (), "Diameter", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		# Method 'Point3DParamSurface' returns object of type 'IKompasAPIObject'
		"Point3DParamSurface": (10, 2, (9, 0), (), "Point3DParamSurface", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'Sketch' returns object of type 'ISketch'
		"Sketch": (8, 2, (9, 0), (), "Sketch", '{E6BBF50D-8401-4FB3-A6B6-153D3F447255}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
		"X": (1, 2, (5, 0), (), "X", None),
		"Y": (2, 2, (5, 0), (), "Y", None),
	}
	_prop_map_put_ = {
		"AssociationVertex": ((11, LCID, 4, 0),()),
		"Axis": ((12, LCID, 4, 0),()),
		"BasePlane": ((6, LCID, 4, 0),()),
		"Body": ((9, LCID, 4, 0),()),
		"CutType": ((3, LCID, 4, 0),()),
		"Depth": ((5, LCID, 4, 0),()),
		"DepthObject": ((7, LCID, 4, 0),()),
		"Diameter": ((4, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"X": ((1, LCID, 4, 0),()),
		"Y": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISheetMetalHoles(DispatchBaseClass):
	" оллекци€ элементов 'ќтверстие'."
	CLSID = IID('{E117BDF9-5133-4672-9B8F-06046F6B9BF3}')
	coclass_clsid = IID('{D11BBACB-3A8A-4B3F-9DEC-C17CC9989083}')

	# Result is of type ISheetMetalHole
	def Add(self):
		"—оздает новый элемент 'ќтверстие' и добавл€ет его в коллекцию."
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{3490B8B8-00D7-4BCF-AAD8-9487BF271084}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type ISheetMetalHole
	# The method SheetMetalHole is actually a property, but must be used as a method to correctly pass the arguments
	def SheetMetalHole(self, Index=defaultNamedNotOptArg):
		"¬озвращает элемент 'ќтверстие', заданный по индексу."
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'SheetMetalHole', '{3490B8B8-00D7-4BCF-AAD8-9487BF271084}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISheetMetalJalousie(DispatchBaseClass):
	'∆алюзи.'
	CLSID = IID('{13501739-CD1F-4401-8A48-B2093E974CC1}')
	coclass_clsid = IID('{0F80305A-F369-4406-9519-8EC17AAA8FD6}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"BuildingType": (2, 2, (3, 0), (), "BuildingType", None),
		"Direction": (6, 2, (11, 0), (), "Direction", None),
		"FormEnd": (3, 2, (3, 0), (), "FormEnd", None),
		"Height": (5, 2, (5, 0), (), "Height", None),
		"HeightType": (4, 2, (3, 0), (), "HeightType", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Radius": (10, 2, (5, 0), (), "Radius", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Round": (9, 2, (11, 0), (), "Round", None),
		"Side": (8, 2, (11, 0), (), "Side", None),
		# Method 'Sketch' returns object of type 'IModelObject'
		"Sketch": (1, 2, (9, 0), (), "Sketch", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
		"Width": (7, 2, (5, 0), (), "Width", None),
	}
	_prop_map_put_ = {
		"BuildingType": ((2, LCID, 4, 0),()),
		"Direction": ((6, LCID, 4, 0),()),
		"FormEnd": ((3, LCID, 4, 0),()),
		"Height": ((5, LCID, 4, 0),()),
		"HeightType": ((4, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Radius": ((10, LCID, 4, 0),()),
		"Round": ((9, LCID, 4, 0),()),
		"Side": ((8, LCID, 4, 0),()),
		"Sketch": ((1, LCID, 4, 0),()),
		"Width": ((7, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISheetMetalJalousies(DispatchBaseClass):
	' оллекци€ элементов ∆алюзи.'
	CLSID = IID('{914D5295-8831-4166-994C-D19C5DF149E7}')
	coclass_clsid = IID('{64EDA2CF-1A52-4766-AABF-DD451EF185CB}')

	# Result is of type ISheetMetalJalousie
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{13501739-CD1F-4401-8A48-B2093E974CC1}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type ISheetMetalJalousie
	# The method SheetMetalJalousie is actually a property, but must be used as a method to correctly pass the arguments
	def SheetMetalJalousie(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'SheetMetalJalousie', '{13501739-CD1F-4401-8A48-B2093E974CC1}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISheetMetalLineBend(DispatchBaseClass):
	"Ёлемент листового тела '—гиб по линии'."
	CLSID = IID('{E13EF07A-B1E8-41FD-9C85-C17F01E52A03}')
	coclass_clsid = IID('{DCA09F8B-187B-400B-AFFA-D1EC84251EC2}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (4, 2, (5, 0), (), "Angle", None),
		"AngleType": (3, 2, (11, 0), (), "AngleType", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"BendCoefficient": (11, 2, (5, 0), (), "BendCoefficient", None),
		"BendLeftSideFixed": (2, 2, (11, 0), (), "BendLeftSideFixed", None),
		"BendReduction": (13, 2, (5, 0), (), "BendReduction", None),
		"BendTablePath": (14, 2, (8, 0), (), "BendTablePath", None),
		"BendType": (5, 2, (3, 0), (), "BendType", None),
		"BendValue": (12, 2, (5, 0), (), "BendValue", None),
		"Direction": (1, 2, (11, 0), (), "Direction", None),
		"DismissalAngleType": (7, 2, (3, 0), (), "DismissalAngleType", None),
		"Faces": (15, 2, (12, 0), (), "Faces", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"InternalRadius": (8, 2, (11, 0), (), "InternalRadius", None),
		# Method 'Line' returns object of type 'IModelObject'
		"Line": (16, 2, (9, 0), (), "Line", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Radius": (9, 2, (5, 0), (), "Radius", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Straighten": (6, 2, (11, 0), (), "Straighten", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"UnfoldType": (10, 2, (3, 0), (), "UnfoldType", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Angle": ((4, LCID, 4, 0),()),
		"AngleType": ((3, LCID, 4, 0),()),
		"BendCoefficient": ((11, LCID, 4, 0),()),
		"BendLeftSideFixed": ((2, LCID, 4, 0),()),
		"BendReduction": ((13, LCID, 4, 0),()),
		"BendType": ((5, LCID, 4, 0),()),
		"BendValue": ((12, LCID, 4, 0),()),
		"Direction": ((1, LCID, 4, 0),()),
		"DismissalAngleType": ((7, LCID, 4, 0),()),
		"Faces": ((15, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"InternalRadius": ((8, LCID, 4, 0),()),
		"Line": ((16, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Radius": ((9, LCID, 4, 0),()),
		"Straighten": ((6, LCID, 4, 0),()),
		"UnfoldType": ((10, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISheetMetalLineBends(DispatchBaseClass):
	" оллекци€ элементов '—гиб по линии'."
	CLSID = IID('{AF8B8310-AF82-4B02-8733-783FFAFD4DBD}')
	coclass_clsid = IID('{C7DF1AFE-A3EF-427A-B732-70DEFDDB351D}')

	# Result is of type ISheetMetalLineBend
	def Add(self):
		"—оздает новый элемент '—гиб по линии ' и добавл€ет его в коллекцию."
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{E13EF07A-B1E8-41FD-9C85-C17F01E52A03}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type ISheetMetalLineBend
	# The method SheetMetalLineBend is actually a property, but must be used as a method to correctly pass the arguments
	def SheetMetalLineBend(self, Index=defaultNamedNotOptArg):
		"¬озвращает элемент '—гиб по линии', заданный по индексу."
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'SheetMetalLineBend', '{E13EF07A-B1E8-41FD-9C85-C17F01E52A03}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISheetMetalLinearRuledShell(DispatchBaseClass):
	'Ћинейчата€ обечайка.'
	CLSID = IID('{934BCC92-BC49-4A46-9A88-70FD2E74537D}')
	coclass_clsid = None

	def AddNewEdge(self, IndexAt=defaultNamedNotOptArg):
		'ƒобавление ребра после указанного индексом.'
		return self._oleobj_.InvokeTypes(5008, LCID, 1, (11, 0), ((3, 1),),IndexAt
			)

	# The method CurveSegmentationMethod is actually a property, but must be used as a method to correctly pass the arguments
	def CurveSegmentationMethod(self, CurveIndex=defaultNamedNotOptArg):
		'—пособ сегментации эскиза.'
		return self._oleobj_.InvokeTypes(5005, LCID, 2, (3, 0), ((3, 1),),CurveIndex
			)

	# The method CurveSegmentationSplitValue is actually a property, but must be used as a method to correctly pass the arguments
	def CurveSegmentationSplitValue(self, CurveIndex=defaultNamedNotOptArg):
		'¬еличина, определ€юща€ разбиени€, интерпретаци€ зависит от типа разбиени€: это либо количество сегментов, либо длина сегмента.'
		return self._oleobj_.InvokeTypes(5006, LCID, 2, (5, 0), ((3, 1),),CurveIndex
			)

	# The method CurveUseSegmentation is actually a property, but must be used as a method to correctly pass the arguments
	def CurveUseSegmentation(self, CurveIndex=defaultNamedNotOptArg):
		'—егментаци€.'
		return self._oleobj_.InvokeTypes(5004, LCID, 2, (11, 0), ((3, 1),),CurveIndex
			)

	def DeleteEdge(self, Index=defaultNamedNotOptArg):
		'”даление ребра.'
		return self._oleobj_.InvokeTypes(5009, LCID, 1, (11, 0), ((3, 1),),Index
			)

	def GetEdgePointParam(self, EdgeIndex=defaultNamedNotOptArg, StartPoint=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing
			, Z=pythoncom.Missing, T=pythoncom.Missing, AssociateVertex=pythoncom.Missing):
		'ѕолучение параметров точки ребра.'
		return self._ApplyTypes_(5012, 1, (11, 0), ((3, 1), (11, 1), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16393, 2)), 'GetEdgePointParam', None,EdgeIndex
			, StartPoint, X, Y, Z, T
			, AssociateVertex)

	def GetEdgePointParams(self, Points1=pythoncom.Missing, T1=pythoncom.Missing, AssociateVertexes1=pythoncom.Missing, Points2=pythoncom.Missing
			, T2=pythoncom.Missing, AssociateVertexes2=pythoncom.Missing):
		'ѕолучение параметров ребер.'
		return self._ApplyTypes_(5013, 1, (11, 0), ((16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2), (16396, 2)), 'GetEdgePointParams', None,Points1
			, T1, AssociateVertexes1, Points2, T2, AssociateVertexes2
			)

	# The method SetCurveSegmentationMethod is actually a property, but must be used as a method to correctly pass the arguments
	def SetCurveSegmentationMethod(self, CurveIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'—пособ сегментации эскиза.'
		return self._oleobj_.InvokeTypes(5005, LCID, 4, (24, 0), ((3, 1), (3, 1)),CurveIndex
			, arg1)

	# The method SetCurveSegmentationSplitValue is actually a property, but must be used as a method to correctly pass the arguments
	def SetCurveSegmentationSplitValue(self, CurveIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'¬еличина, определ€юща€ разбиени€, интерпретаци€ зависит от типа разбиени€: это либо количество сегментов, либо длина сегмента.'
		return self._oleobj_.InvokeTypes(5006, LCID, 4, (24, 0), ((3, 1), (5, 1)),CurveIndex
			, arg1)

	# The method SetCurveUseSegmentation is actually a property, but must be used as a method to correctly pass the arguments
	def SetCurveUseSegmentation(self, CurveIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'—егментаци€.'
		return self._oleobj_.InvokeTypes(5004, LCID, 4, (24, 0), ((3, 1), (11, 1)),CurveIndex
			, arg1)

	def SetEdgePointParam(self, EdgeIndex=defaultNamedNotOptArg, StartPoint=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg
			, Z=defaultNamedNotOptArg, T=defaultNamedNotOptArg, AssociateVertex=defaultNamedNotOptArg):
		'»зменение положени€ точки ребра.'
		return self._oleobj_.InvokeTypes(5011, LCID, 1, (11, 0), ((3, 1), (11, 1), (5, 1), (5, 1), (5, 1), (16389, 1), (9, 1)),EdgeIndex
			, StartPoint, X, Y, Z, T
			, AssociateVertex)

	_prop_map_get_ = {
		"AutoSegmentation": (5007, 2, (11, 0), (), "AutoSegmentation", None),
		"CurvesCount": (5003, 2, (3, 0), (), "CurvesCount", None),
		"EdgesCount": (5010, 2, (3, 0), (), "EdgesCount", None),
		# Method 'Sketch2' returns object of type 'ISketch'
		"Sketch2": (5001, 2, (9, 0), (), "Sketch2", '{E6BBF50D-8401-4FB3-A6B6-153D3F447255}'),
		"UseCommonSegmentationParameters": (5002, 2, (11, 0), (), "UseCommonSegmentationParameters", None),
	}
	_prop_map_put_ = {
		"AutoSegmentation": ((5007, LCID, 4, 0),()),
		"Sketch2": ((5001, LCID, 4, 0),()),
		"UseCommonSegmentationParameters": ((5002, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISheetMetalPlate(DispatchBaseClass):
	'ѕластина.'
	CLSID = IID('{DC733340-DCA5-4253-8AB1-045AD169E06E}')
	coclass_clsid = IID('{0D764BEA-4BA1-440B-8930-62E675DFBB84}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"IsUserThickness": (3, 2, (11, 0), (), "IsUserThickness", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'Sketch' returns object of type 'IModelObject'
		"Sketch": (1, 2, (9, 0), (), "Sketch", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Thickness": (4, 2, (5, 0), (), "Thickness", None),
		# Method 'ThicknessObject' returns object of type 'IModelObject'
		"ThicknessObject": (2, 2, (9, 0), (), "ThicknessObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Hidden": ((502, LCID, 4, 0),()),
		"IsUserThickness": ((3, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Sketch": ((1, LCID, 4, 0),()),
		"Thickness": ((4, LCID, 4, 0),()),
		"ThicknessObject": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISheetMetalPlates(DispatchBaseClass):
	' оллекци€ элементов ѕластина.'
	CLSID = IID('{A1AD042D-A57F-4079-8F7A-CE4AAB5D9DAF}')
	coclass_clsid = IID('{76D215CE-F548-488C-ABD0-FDFE794F505F}')

	# Result is of type ISheetMetalPlate
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{DC733340-DCA5-4253-8AB1-045AD169E06E}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type ISheetMetalPlate
	# The method SheetMetalPlate is actually a property, but must be used as a method to correctly pass the arguments
	def SheetMetalPlate(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'SheetMetalPlate', '{DC733340-DCA5-4253-8AB1-045AD169E06E}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISheetMetalPressForming(DispatchBaseClass):
	'ќткрыта€ или закрыта€ штамповка.'
	CLSID = IID('{BDB9FB08-C8C8-4446-9821-BE1BA9306602}')
	coclass_clsid = IID('{4757F80E-8981-4ED5-ADF9-BCF14E592B6F}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (7, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Direction": (4, 2, (11, 0), (), "Direction", None),
		"Height": (3, 2, (5, 0), (), "Height", None),
		"HeightType": (2, 2, (3, 0), (), "HeightType", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Radius1": (9, 2, (5, 0), (), "Radius1", None),
		"Radius2": (11, 2, (5, 0), (), "Radius2", None),
		"Radius3": (13, 2, (5, 0), (), "Radius3", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Round": (10, 2, (11, 0), (), "Round", None),
		"RoundBottom": (12, 2, (11, 0), (), "RoundBottom", None),
		"RoundEdges": (8, 2, (11, 0), (), "RoundEdges", None),
		"Side": (6, 2, (11, 0), (), "Side", None),
		# Method 'Sketch' returns object of type 'IModelObject'
		"Sketch": (1, 2, (9, 0), (), "Sketch", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"ThicknessDirection": (5, 2, (11, 0), (), "ThicknessDirection", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Angle": ((7, LCID, 4, 0),()),
		"Direction": ((4, LCID, 4, 0),()),
		"Height": ((3, LCID, 4, 0),()),
		"HeightType": ((2, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Radius1": ((9, LCID, 4, 0),()),
		"Radius2": ((11, LCID, 4, 0),()),
		"Radius3": ((13, LCID, 4, 0),()),
		"Round": ((10, LCID, 4, 0),()),
		"RoundBottom": ((12, LCID, 4, 0),()),
		"RoundEdges": ((8, LCID, 4, 0),()),
		"Side": ((6, LCID, 4, 0),()),
		"Sketch": ((1, LCID, 4, 0),()),
		"ThicknessDirection": ((5, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISheetMetalPressFormings(DispatchBaseClass):
	' оллекци€ элементов ќткрыта€ или закрыта€ штамповка.'
	CLSID = IID('{0541BEE1-9273-4611-9F26-B3408C51580F}')
	coclass_clsid = IID('{C974E025-46FB-4EED-9456-78876DDCC4FB}')

	# Result is of type ISheetMetalPressForming
	def Add(self, Type=defaultNamedNotOptArg):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((3, 1),),Type
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{BDB9FB08-C8C8-4446-9821-BE1BA9306602}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type ISheetMetalPressForming
	# The method SheetMetalPressForming is actually a property, but must be used as a method to correctly pass the arguments
	def SheetMetalPressForming(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'SheetMetalPressForming', '{BDB9FB08-C8C8-4446-9821-BE1BA9306602}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISheetMetalRib(DispatchBaseClass):
	'–ебро усилени€.'
	CLSID = IID('{ACA9C96E-5DBE-44C8-ABF5-15230282AB05}')
	coclass_clsid = IID('{9DC3E672-5B83-459B-AA24-052E1C8F138A}')

	def AutoInitBendObjects(self, InitObject=defaultNamedNotOptArg):
		'јвтоматическа€ инициализаци€ объектов сгиба.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), ((9, 1),),InitObject
			)

	def CalculateOptimalParams(self):
		'¬ычислить оптимальные параметры профил€ по сгибу.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), (),)

	def InitBendObjects(self, BendObject=defaultNamedNotOptArg, BendFace=defaultNamedNotOptArg, BendEdge=defaultNamedNotOptArg):
		'»нициализаци€ объектов сгиба.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((9, 1), (9, 1), (9, 1)),BendObject
			, BendFace, BendEdge)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle1": (14, 2, (5, 0), (), "Angle1", None),
		"Angle2": (16, 2, (5, 0), (), "Angle2", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ArchCoefficient": (21, 2, (5, 0), (), "ArchCoefficient", None),
		"ArchCreate": (20, 2, (11, 0), (), "ArchCreate", None),
		"ArchLength": (24, 2, (5, 0), (), "ArchLength", None),
		"ArchMeasure": (23, 2, (3, 0), (), "ArchMeasure", None),
		"ArchRadius": (22, 2, (5, 0), (), "ArchRadius", None),
		# Method 'BendEdge' returns object of type 'IModelObject'
		"BendEdge": (3, 2, (9, 0), (), "BendEdge", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'BendFace' returns object of type 'IModelObject'
		"BendFace": (2, 2, (9, 0), (), "BendFace", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'BendObject' returns object of type 'IModelObject'
		"BendObject": (1, 2, (9, 0), (), "BendObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"BuildingType": (10, 2, (3, 0), (), "BuildingType", None),
		"CutingType": (11, 2, (3, 0), (), "CutingType", None),
		"Direction": (9, 2, (11, 0), (), "Direction", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"Lenght1": (12, 2, (5, 0), (), "Lenght1", None),
		"Lenght2": (13, 2, (5, 0), (), "Lenght2", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		"Offset": (8, 2, (5, 0), (), "Offset", None),
		"OffsetType": (7, 2, (3, 0), (), "OffsetType", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Radius1": (15, 2, (5, 0), (), "Radius1", None),
		"Radius2": (19, 2, (5, 0), (), "Radius2", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Round": (18, 2, (11, 0), (), "Round", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
		"Width": (17, 2, (5, 0), (), "Width", None),
	}
	_prop_map_put_ = {
		"Angle1": ((14, LCID, 4, 0),()),
		"Angle2": ((16, LCID, 4, 0),()),
		"ArchCoefficient": ((21, LCID, 4, 0),()),
		"ArchCreate": ((20, LCID, 4, 0),()),
		"ArchLength": ((24, LCID, 4, 0),()),
		"ArchMeasure": ((23, LCID, 4, 0),()),
		"ArchRadius": ((22, LCID, 4, 0),()),
		"BuildingType": ((10, LCID, 4, 0),()),
		"CutingType": ((11, LCID, 4, 0),()),
		"Direction": ((9, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Lenght1": ((12, LCID, 4, 0),()),
		"Lenght2": ((13, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Offset": ((8, LCID, 4, 0),()),
		"OffsetType": ((7, LCID, 4, 0),()),
		"Radius1": ((15, LCID, 4, 0),()),
		"Radius2": ((19, LCID, 4, 0),()),
		"Round": ((18, LCID, 4, 0),()),
		"Width": ((17, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISheetMetalRibs(DispatchBaseClass):
	' оллекци€ элементов –ебро усилени€.'
	CLSID = IID('{B72CC78F-D630-463F-8911-ED9BD58BBA1C}')
	coclass_clsid = IID('{E7C8CA4E-0110-45EF-B5CF-3A3D85ABCFE3}')

	# Result is of type ISheetMetalRib
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{ACA9C96E-5DBE-44C8-ABF5-15230282AB05}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type ISheetMetalRib
	# The method SheetMetalRib is actually a property, but must be used as a method to correctly pass the arguments
	def SheetMetalRib(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'SheetMetalRib', '{ACA9C96E-5DBE-44C8-ABF5-15230282AB05}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISheetMetalRuledShell(DispatchBaseClass):
	'ќбечайка.'
	CLSID = IID('{D92A7102-79CB-46D8-B18A-1804D71F5416}')
	coclass_clsid = None

	# The method DraftOutward is actually a property, but must be used as a method to correctly pass the arguments
	def DraftOutward(self, Normal=defaultNamedNotOptArg):
		'ѕризнак уклона наружу.'
		return self._oleobj_.InvokeTypes(4002, LCID, 2, (11, 0), ((11, 1),),Normal
			)

	# The method DraftValue is actually a property, but must be used as a method to correctly pass the arguments
	def DraftValue(self, Normal=defaultNamedNotOptArg):
		'”гол уклона.'
		return self._oleobj_.InvokeTypes(4001, LCID, 2, (5, 0), ((11, 1),),Normal
			)

	# The method SetDraftOutward is actually a property, but must be used as a method to correctly pass the arguments
	def SetDraftOutward(self, Normal=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ѕризнак уклона наружу.'
		return self._oleobj_.InvokeTypes(4002, LCID, 4, (24, 0), ((11, 1), (11, 1)),Normal
			, arg1)

	# The method SetDraftValue is actually a property, but must be used as a method to correctly pass the arguments
	def SetDraftValue(self, Normal=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'”гол уклона.'
		return self._oleobj_.InvokeTypes(4001, LCID, 4, (24, 0), ((11, 1), (5, 1)),Normal
			, arg1)

	_prop_map_get_ = {
		"GapDraftPosition": (4010, 2, (5, 0), (), "GapDraftPosition", None),
		"GapOffsetLength": (4009, 2, (5, 0), (), "GapOffsetLength", None),
		"GapOffsetU": (4008, 2, (5, 0), (), "GapOffsetU", None),
		"GapValue": (4006, 2, (5, 0), (), "GapValue", None),
		"KeepRadius": (4003, 2, (11, 0), (), "KeepRadius", None),
		"OffsetGapType": (4007, 2, (3, 0), (), "OffsetGapType", None),
		"RuledBorder": (4004, 2, (3, 0), (), "RuledBorder", None),
		"RuledJoint": (4005, 2, (3, 0), (), "RuledJoint", None),
		"SegmentationMethod": (4012, 2, (3, 0), (), "SegmentationMethod", None),
		"SegmentationSplitValue": (4013, 2, (5, 0), (), "SegmentationSplitValue", None),
		"UseSegmentation": (4011, 2, (11, 0), (), "UseSegmentation", None),
	}
	_prop_map_put_ = {
		"GapDraftPosition": ((4010, LCID, 4, 0),()),
		"GapOffsetLength": ((4009, LCID, 4, 0),()),
		"GapOffsetU": ((4008, LCID, 4, 0),()),
		"GapValue": ((4006, LCID, 4, 0),()),
		"KeepRadius": ((4003, LCID, 4, 0),()),
		"OffsetGapType": ((4007, LCID, 4, 0),()),
		"RuledBorder": ((4004, LCID, 4, 0),()),
		"RuledJoint": ((4005, LCID, 4, 0),()),
		"SegmentationMethod": ((4012, LCID, 4, 0),()),
		"SegmentationSplitValue": ((4013, LCID, 4, 0),()),
		"UseSegmentation": ((4011, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISheetMetalShoulder(DispatchBaseClass):
	'Ѕуртик.'
	CLSID = IID('{75024BD8-6D1C-4963-9733-326EFB3CB28D}')
	coclass_clsid = IID('{5F2DC19A-C995-40DC-A6C5-BF5CA453E1EB}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"BuildingType": (4, 2, (3, 0), (), "BuildingType", None),
		"CutingType": (3, 2, (3, 0), (), "CutingType", None),
		"Direction": (6, 2, (11, 0), (), "Direction", None),
		"GapValue": (12, 2, (5, 0), (), "GapValue", None),
		"Height": (5, 2, (5, 0), (), "Height", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Radius1": (9, 2, (5, 0), (), "Radius1", None),
		"Radius2": (11, 2, (5, 0), (), "Radius2", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Round": (10, 2, (11, 0), (), "Round", None),
		"ShoulderType": (2, 2, (3, 0), (), "ShoulderType", None),
		# Method 'Sketch' returns object of type 'IModelObject'
		"Sketch": (1, 2, (9, 0), (), "Sketch", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
		"Width1": (7, 2, (5, 0), (), "Width1", None),
		"Width2": (8, 2, (5, 0), (), "Width2", None),
	}
	_prop_map_put_ = {
		"BuildingType": ((4, LCID, 4, 0),()),
		"CutingType": ((3, LCID, 4, 0),()),
		"Direction": ((6, LCID, 4, 0),()),
		"GapValue": ((12, LCID, 4, 0),()),
		"Height": ((5, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Radius1": ((9, LCID, 4, 0),()),
		"Radius2": ((11, LCID, 4, 0),()),
		"Round": ((10, LCID, 4, 0),()),
		"ShoulderType": ((2, LCID, 4, 0),()),
		"Sketch": ((1, LCID, 4, 0),()),
		"Width1": ((7, LCID, 4, 0),()),
		"Width2": ((8, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISheetMetalShoulders(DispatchBaseClass):
	' оллекци€ элементов Ѕуртик.'
	CLSID = IID('{AC0F620E-229A-42BE-8C5B-1786C54474C0}')
	coclass_clsid = IID('{FABB909B-C4BC-4632-8566-B7F358FD3FE0}')

	# Result is of type ISheetMetalShoulder
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{75024BD8-6D1C-4963-9733-326EFB3CB28D}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type ISheetMetalShoulder
	# The method SheetMetalShoulder is actually a property, but must be used as a method to correctly pass the arguments
	def SheetMetalShoulder(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'SheetMetalShoulder', '{75024BD8-6D1C-4963-9733-326EFB3CB28D}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISheetMetalSketchBend(DispatchBaseClass):
	'—гиб по эскизу.'
	CLSID = IID('{4E4F3CB3-5596-445B-9A18-0AF559E545C5}')
	coclass_clsid = IID('{4A2700F2-2A3F-443B-9140-E631AEE572DA}')

	# The method ClosingAngle is actually a property, but must be used as a method to correctly pass the arguments
	def ClosingAngle(self, Type=defaultNamedNotOptArg):
		'”гол при замыкании углов.'
		return self._oleobj_.InvokeTypes(25, LCID, 2, (5, 0), ((3, 1),),Type
			)

	# The method ClosingClosedType is actually a property, but must be used as a method to correctly pass the arguments
	def ClosingClosedType(self, Type=defaultNamedNotOptArg):
		'—пособ замыкании углов.'
		return self._oleobj_.InvokeTypes(23, LCID, 2, (3, 0), ((3, 1),),Type
			)

	# The method ClosingCorneringType is actually a property, but must be used as a method to correctly pass the arguments
	def ClosingCorneringType(self, Type=defaultNamedNotOptArg):
		'ќбработка угла при замыкании.'
		return self._oleobj_.InvokeTypes(24, LCID, 2, (3, 0), ((3, 1),),Type
			)

	# The method ClosingEnable is actually a property, but must be used as a method to correctly pass the arguments
	def ClosingEnable(self, Type=defaultNamedNotOptArg):
		'¬ключить замыкание углов.'
		return self._oleobj_.InvokeTypes(22, LCID, 2, (11, 0), ((3, 1),),Type
			)

	# The method ClosingGapValue is actually a property, but must be used as a method to correctly pass the arguments
	def ClosingGapValue(self, Type=defaultNamedNotOptArg):
		'«начение зазора при замыкании углов.'
		return self._oleobj_.InvokeTypes(26, LCID, 2, (5, 0), ((3, 1),),Type
			)

	# The method SetClosingAngle is actually a property, but must be used as a method to correctly pass the arguments
	def SetClosingAngle(self, Type=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'”гол при замыкании углов.'
		return self._oleobj_.InvokeTypes(25, LCID, 4, (24, 0), ((3, 1), (5, 1)),Type
			, arg1)

	# The method SetClosingClosedType is actually a property, but must be used as a method to correctly pass the arguments
	def SetClosingClosedType(self, Type=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'—пособ замыкании углов.'
		return self._oleobj_.InvokeTypes(23, LCID, 4, (24, 0), ((3, 1), (3, 1)),Type
			, arg1)

	# The method SetClosingCorneringType is actually a property, but must be used as a method to correctly pass the arguments
	def SetClosingCorneringType(self, Type=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ќбработка угла при замыкании.'
		return self._oleobj_.InvokeTypes(24, LCID, 4, (24, 0), ((3, 1), (3, 1)),Type
			, arg1)

	# The method SetClosingEnable is actually a property, but must be used as a method to correctly pass the arguments
	def SetClosingEnable(self, Type=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'¬ключить замыкание углов.'
		return self._oleobj_.InvokeTypes(22, LCID, 4, (24, 0), ((3, 1), (11, 1)),Type
			, arg1)

	# The method SetClosingGapValue is actually a property, but must be used as a method to correctly pass the arguments
	def SetClosingGapValue(self, Type=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'«начение зазора при замыкании углов.'
		return self._oleobj_.InvokeTypes(26, LCID, 4, (24, 0), ((3, 1), (5, 1)),Type
			, arg1)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"BendCoefficient": (11, 2, (5, 0), (), "BendCoefficient", None),
		"BendReduction": (13, 2, (5, 0), (), "BendReduction", None),
		"BendRelease": (18, 2, (3, 0), (), "BendRelease", None),
		"BendTablePath": (14, 2, (8, 0), (), "BendTablePath", None),
		"BendValue": (12, 2, (5, 0), (), "BendValue", None),
		"BuildingType": (4, 2, (3, 0), (), "BuildingType", None),
		"ClosingHoleDiameter": (28, 2, (5, 0), (), "ClosingHoleDiameter", None),
		"ClosingHoleOffset": (29, 2, (5, 0), (), "ClosingHoleOffset", None),
		"ClosingHolePlacement": (27, 2, (3, 0), (), "ClosingHolePlacement", None),
		"Direction": (7, 2, (3, 0), (), "Direction", None),
		"DismissalAngleType": (21, 2, (3, 0), (), "DismissalAngleType", None),
		"DismissalDepth": (20, 2, (5, 0), (), "DismissalDepth", None),
		"DismissalWidth": (19, 2, (5, 0), (), "DismissalWidth", None),
		"DismissalWithWidth": (17, 2, (11, 0), (), "DismissalWithWidth", None),
		"Edges": (3, 2, (12, 0), (), "Edges", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"InternalRadius": (5, 2, (11, 0), (), "InternalRadius", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Radius": (6, 2, (5, 0), (), "Radius", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'Sketch' returns object of type 'IModelObject'
		"Sketch": (2, 2, (9, 0), (), "Sketch", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Straighten": (1, 2, (11, 0), (), "Straighten", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"UnfoldType": (10, 2, (3, 0), (), "UnfoldType", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
		"Width1": (8, 2, (5, 0), (), "Width1", None),
		"Width2": (9, 2, (5, 0), (), "Width2", None),
		"WithoutAngleRelease": (15, 2, (11, 0), (), "WithoutAngleRelease", None),
		"WithoutBendRelease": (16, 2, (11, 0), (), "WithoutBendRelease", None),
	}
	_prop_map_put_ = {
		"BendCoefficient": ((11, LCID, 4, 0),()),
		"BendReduction": ((13, LCID, 4, 0),()),
		"BendRelease": ((18, LCID, 4, 0),()),
		"BendValue": ((12, LCID, 4, 0),()),
		"BuildingType": ((4, LCID, 4, 0),()),
		"ClosingHoleDiameter": ((28, LCID, 4, 0),()),
		"ClosingHoleOffset": ((29, LCID, 4, 0),()),
		"ClosingHolePlacement": ((27, LCID, 4, 0),()),
		"Direction": ((7, LCID, 4, 0),()),
		"DismissalAngleType": ((21, LCID, 4, 0),()),
		"DismissalDepth": ((20, LCID, 4, 0),()),
		"DismissalWidth": ((19, LCID, 4, 0),()),
		"DismissalWithWidth": ((17, LCID, 4, 0),()),
		"Edges": ((3, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"InternalRadius": ((5, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Radius": ((6, LCID, 4, 0),()),
		"Sketch": ((2, LCID, 4, 0),()),
		"Straighten": ((1, LCID, 4, 0),()),
		"UnfoldType": ((10, LCID, 4, 0),()),
		"Width1": ((8, LCID, 4, 0),()),
		"Width2": ((9, LCID, 4, 0),()),
		"WithoutAngleRelease": ((15, LCID, 4, 0),()),
		"WithoutBendRelease": ((16, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISheetMetalSketchBends(DispatchBaseClass):
	" оллекци€ элементов '—гиб по эскизу'."
	CLSID = IID('{247539A2-BB15-4D8A-9121-67BDE48A989A}')
	coclass_clsid = IID('{E7BD79CF-F9EC-4EEF-8431-D0B61B54E8B6}')

	# Result is of type ISheetMetalSketchBend
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{4E4F3CB3-5596-445B-9A18-0AF559E545C5}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type ISheetMetalSketchBend
	# The method SheetMetalSketchBend is actually a property, but must be used as a method to correctly pass the arguments
	def SheetMetalSketchBend(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'SheetMetalSketchBend', '{4E4F3CB3-5596-445B-9A18-0AF559E545C5}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISheetMetalUndercut(DispatchBaseClass):
	'ѕодсечка.'
	CLSID = IID('{2CB2F820-A083-46E3-83F6-5AC4B27078A3}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Distance": (4002, 2, (5, 0), (), "Distance", None),
		"DistanceType": (4001, 2, (3, 0), (), "DistanceType", None),
		"WithAddMaterial": (4003, 2, (11, 0), (), "WithAddMaterial", None),
	}
	_prop_map_put_ = {
		"Distance": ((4002, LCID, 4, 0),()),
		"DistanceType": ((4001, LCID, 4, 0),()),
		"WithAddMaterial": ((4003, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IShell(DispatchBaseClass):
	'ќболочка.'
	CLSID = IID('{05A5C975-D995-4069-90A3-A81391AE8D62}')
	coclass_clsid = IID('{0290BA8F-2F72-4CBB-B7AD-D0437F6BB15C}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"DeletedFaces": (1, 2, (12, 0), (), "DeletedFaces", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Thickness": (3, 2, (5, 0), (), "Thickness", None),
		"ThinType": (2, 2, (3, 0), (), "ThinType", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"DeletedFaces": ((1, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Thickness": ((3, LCID, 4, 0),()),
		"ThinType": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IShellSurface(DispatchBaseClass):
	'ѕоверхность. (ѕоверхность выдавливани€, вращени€, по сечени€м, киниматическа€).'
	CLSID = IID('{6DA1F459-7AAE-4A07-9A7D-FF19F8997AD5}')
	coclass_clsid = None

	_prop_map_get_ = {
		"ClosedShell": (301, 2, (11, 0), (), "ClosedShell", None),
	}
	_prop_map_put_ = {
		"ClosedShell": ((301, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IShells(DispatchBaseClass):
	' оллекци€ операций оболочка.'
	CLSID = IID('{0BA80020-AD0B-4442-B4C7-7AC75AA04CAC}')
	coclass_clsid = IID('{6CFFE821-37CA-476C-9A65-6E011459752A}')

	# Result is of type IShell
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{05A5C975-D995-4069-90A3-A81391AE8D62}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type IShell
	# The method Shell is actually a property, but must be used as a method to correctly pass the arguments
	def Shell(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по ссылке или индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Shell', '{05A5C975-D995-4069-90A3-A81391AE8D62}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISketch(DispatchBaseClass):
	"Ёлемент 'Ёскиз'."
	CLSID = IID('{E6BBF50D-8401-4FB3-A6B6-153D3F447255}')
	coclass_clsid = IID('{FC43EA04-ADED-4D42-883A-11073E2E68EC}')

	def AddSketch(self, Sketch=defaultNamedNotOptArg, Plane=defaultNamedNotOptArg):
		'—оздать эскиз из уже имеющегос€ в заданной плоскости.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), ((9, 1), (9, 1)),Sketch
			, Plane)

	# Result is of type IFragmentDocument
	def BeginEdit(self):
		'¬ойти в режим редактировани€ эскиза.'
		ret = self._oleobj_.InvokeTypes(7, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'BeginEdit', '{E19CE626-DF9C-48C4-A83D-3E3BC7F0DACA}')
		return ret

	# Result is of type IFragmentDocument
	def BeginEditEx(self, ReadOnly=defaultNamedNotOptArg):
		'¬ойти в режим редактировани€ эскиза: ReadOnly = TRUE - дл€ чтени€.'
		ret = self._oleobj_.InvokeTypes(9, LCID, 1, (9, 0), ((11, 1),),ReadOnly
			)
		if ret is not None:
			ret = Dispatch(ret, 'BeginEditEx', '{E19CE626-DF9C-48C4-A83D-3E3BC7F0DACA}')
		return ret

	def DeleteWrongProjection(self):
		'”далить ошибочные проекционные св€зи.'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (11, 0), (),)

	# Result is of type IModelObject
	# The method DirectingObject is actually a property, but must be used as a method to correctly pass the arguments
	def DirectingObject(self, Axis=defaultNamedNotOptArg):
		'Ќаправл€ющий объект.'
		ret = self._oleobj_.InvokeTypes(17, LCID, 2, (9, 0), ((3, 1),),Axis
			)
		if ret is not None:
			ret = Dispatch(ret, 'DirectingObject', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def EndEdit(self):
		'¬ыйти из режима редактировани€ эскиза.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), (),)

	def GetLocation(self, X=pythoncom.Missing, Y=pythoncom.Missing):
		'ѕолучить смещение системы координат эскиза относительно проекции системы координат модели на плоскость эскиза.'
		return self._ApplyTypes_(3, 1, (11, 0), ((16389, 2), (16389, 2)), 'GetLocation', None,X
			, Y)

	def GetLoftPoint(self, X=pythoncom.Missing, Y=pythoncom.Missing):
		'ѕолучить координаты точки в плоскости эскиза.'
		return self._ApplyTypes_(5, 1, (11, 0), ((16389, 2), (16389, 2)), 'GetLoftPoint', None,X
			, Y)

	def RotateAxis(self, Axis=defaultNamedNotOptArg):
		'—менить направление оси на противоположное'
		return self._oleobj_.InvokeTypes(19, LCID, 1, (11, 0), ((3, 1),),Axis
			)

	# The method SetDirectingObject is actually a property, but must be used as a method to correctly pass the arguments
	def SetDirectingObject(self, Axis=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'Ќаправл€ющий объект.'
		return self._oleobj_.InvokeTypes(17, LCID, 4, (24, 0), ((3, 1), (9, 1)),Axis
			, arg1)

	def SetLocation(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg):
		'”становить смещение системы координат эскиза относительно проекции системы координат модели на плоскость эскиза.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((5, 1), (5, 1)),X
			, Y)

	def SetLoftPoint(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg):
		'”становить координаты точки в плоскости эскиза.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), ((5, 1), (5, 1)),X
			, Y)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	# Result is of type IVector3D
	# The method Vector3D is actually a property, but must be used as a method to correctly pass the arguments
	def Vector3D(self, Axis=defaultNamedNotOptArg):
		'¬ектор, задающий направление оси.'
		ret = self._oleobj_.InvokeTypes(18, LCID, 2, (9, 0), ((3, 1),),Axis
			)
		if ret is not None:
			ret = Dispatch(ret, 'Vector3D', '{D51A4DCF-627D-44F5-89BA-46EF2449A212}')
		return ret

	def WriteToFragment(self, FileName=defaultNamedNotOptArg):
		'—охранить эскиз во фрагмент.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), ((8, 1),),FileName
			)

	_prop_map_get_ = {
		"Angle": (2, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'AssociationObject' returns object of type 'IModelObject'
		"AssociationObject": (16, 2, (9, 0), (), "AssociationObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'CoordinateSystem' returns object of type 'IModelObject'
		"CoordinateSystem": (15, 2, (9, 0), (), "CoordinateSystem", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Fixed": (14, 2, (11, 0), (), "Fixed", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"LeftHandedCS": (13, 2, (11, 0), (), "LeftHandedCS", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		# Method 'Plane' returns object of type 'IModelObject'
		"Plane": (1, 2, (9, 0), (), "Plane", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Angle": ((2, LCID, 4, 0),()),
		"AssociationObject": ((16, LCID, 4, 0),()),
		"CoordinateSystem": ((15, LCID, 4, 0),()),
		"Fixed": ((14, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"LeftHandedCS": ((13, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Plane": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISketchs(DispatchBaseClass):
	" оллекци€ элементов 'Ёскиз'."
	CLSID = IID('{EE562963-395C-4748-9726-FCA9C531B1CA}')
	coclass_clsid = IID('{6F94D909-E9C7-4496-8F5B-01F0B03FF409}')

	# Result is of type ISketch
	def Add(self):
		"—оздает новый элемент 'Ёскиз' и добавл€ет его в коллекцию."
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{E6BBF50D-8401-4FB3-A6B6-153D3F447255}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type ISketch
	# The method Sketch is actually a property, but must be used as a method to correctly pass the arguments
	def Sketch(self, Index=defaultNamedNotOptArg):
		"¬озвращает элемент 'Ёскиз', заданный по индексу."
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Sketch', '{E6BBF50D-8401-4FB3-A6B6-153D3F447255}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISourcePart7Params(DispatchBaseClass):
	'ѕараметры компонента в источнике.'
	CLSID = IID('{C9E03A9B-0A54-49AC-9397-8DE4465A8D1D}')
	coclass_clsid = None

	_prop_map_get_ = {
		"DocumentAuthor": (12003, 2, (8, 0), (), "DocumentAuthor", None),
		"DocumentComment": (12004, 2, (12, 0), (), "DocumentComment", None),
		"SourceMarking": (12002, 2, (8, 0), (), "SourceMarking", None),
		"SourceName": (12001, 2, (8, 0), (), "SourceName", None),
	}
	_prop_map_put_ = {
		"DocumentAuthor": ((12003, LCID, 4, 0),()),
		"DocumentComment": ((12004, LCID, 4, 0),()),
		"SourceMarking": ((12002, LCID, 4, 0),()),
		"SourceName": ((12001, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISpecRough(DispatchBaseClass):
	'Ќеуказанна€ шероховатость.'
	CLSID = IID('{D723AAC1-0315-4AED-99BF-88A7E55B6E6D}')
	coclass_clsid = IID('{11BA32BC-D5A2-474B-BA91-E38EE0A2C567}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"AddSign": (7, 2, (11, 0), (), "AddSign", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AutoPlacement": (3, 2, (11, 0), (), "AutoPlacement", None),
		"Crossed": (11, 2, (11, 0), (), "Crossed", None),
		"Distance": (6, 2, (5, 0), (), "Distance", None),
		"IsCreated": (10, 2, (11, 0), (), "IsCreated", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"SignType": (4, 2, (3, 0), (), "SignType", None),
		"Text": (5, 2, (8, 0), (), "Text", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"X": (1, 2, (5, 0), (), "X", None),
		"Y": (2, 2, (5, 0), (), "Y", None),
	}
	_prop_map_put_ = {
		"AddSign": ((7, LCID, 4, 0),()),
		"AutoPlacement": ((3, LCID, 4, 0),()),
		"Distance": ((6, LCID, 4, 0),()),
		"SignType": ((4, LCID, 4, 0),()),
		"Text": ((5, LCID, 4, 0),()),
		"X": ((1, LCID, 4, 0),()),
		"Y": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISpecRough3D(DispatchBaseClass):
	'Ќеуказанна€ шероховатость 3D.'
	CLSID = IID('{AED8F9FC-E493-4CBD-9341-9D9E39E14FDC}')
	coclass_clsid = IID('{86EB116E-6926-4376-AE57-8F26D823B306}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), (),)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"AddSign": (3, 2, (11, 0), (), "AddSign", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"IsCreated": (5, 2, (11, 0), (), "IsCreated", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Placement": (6, 2, (3, 0), (), "Placement", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"SignType": (1, 2, (3, 0), (), "SignType", None),
		"Text": (2, 2, (8, 0), (), "Text", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"AddSign": ((3, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Placement": ((6, LCID, 4, 0),()),
		"SignType": ((1, LCID, 4, 0),()),
		"Text": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISpecificationBaseObject(DispatchBaseClass):
	'Ѕазовый объект спецификации.'
	CLSID = IID('{49994ED8-96BA-4D9D-B642-5F0F1E3FED16}')
	coclass_clsid = IID('{41FCDD59-6012-4E46-84DC-04934683B098}')

	# The method BlockNumberByIndex is actually a property, but must be used as a method to correctly pass the arguments
	def BlockNumberByIndex(self, Val=defaultNamedNotOptArg):
		'Ќомер блока.'
		return self._oleobj_.InvokeTypes(107, LCID, 2, (3, 0), ((3, 1),),Val
			)

	def ClearGeometry(self, ClearGeometry=defaultNamedNotOptArg, ClearLeaders=defaultNamedNotOptArg):
		'ќчистить геометрию у объекта спецификации.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), ((11, 1), (11, 1)),ClearGeometry
			, ClearLeaders)

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(116, LCID, 1, (11, 0), (),)

	def Edit(self):
		'–едактировать объект.'
		return self._oleobj_.InvokeTypes(117, LCID, 1, (11, 0), (),)

	def IncludeGeometry(self, PVal=defaultNamedNotOptArg, FillText=defaultNamedNotOptArg):
		'ƒобавить геометрию к объекту спецификации.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), ((12, 1), (11, 1)),PVal
			, FillText)

	def SetMaterial(self, Material=defaultNamedNotOptArg, Density=defaultNamedNotOptArg):
		'”становить материал в объект спецификации и св€заанный с ним документ.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), ((8, 1), (5, 1)),Material
			, Density)

	def SetSection(self, Val=defaultNamedNotOptArg):
		'”становить номер раздела.'
		return self._oleobj_.InvokeTypes(14, LCID, 1, (11, 0), ((3, 1),),Val
			)

	# The method SetSpcUsed is actually a property, but must be used as a method to correctly pass the arguments
	def SetSpcUsed(self, SpcUsed=defaultNamedNotOptArg, arg1=False):
		'ѕризнаки использовани€ в спецификации.'
		return self._oleobj_.InvokeTypes(15, LCID, 4, (24, 0), ((3, 1), (11, 49)),SpcUsed
			, arg1)

	# The method SpcUsed is actually a property, but must be used as a method to correctly pass the arguments
	def SpcUsed(self, SpcUsed=defaultNamedNotOptArg):
		'ѕризнаки использовани€ в спецификации.'
		return self._oleobj_.InvokeTypes(15, LCID, 2, (11, 0), ((3, 1),),SpcUsed
			)

	# The method SummaryCount is actually a property, but must be used as a method to correctly pass the arguments
	def SummaryCount(self, ColumnTypeNumber=defaultNamedNotOptArg, BlockNumber=defaultNamedNotOptArg):
		'—уммарное количество дл€ исполнени€.'
		return self._oleobj_.InvokeTypes(7, LCID, 2, (5, 0), ((3, 1), (3, 1)),ColumnTypeNumber
			, BlockNumber)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(115, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"AdditionalBlock": (104, 2, (3, 0), (), "AdditionalBlock", None),
		# Method 'AdditionalColumns' returns object of type 'ISpecificationColumns'
		"AdditionalColumns": (113, 2, (9, 0), (), "AdditionalColumns", '{9F44BF03-DE25-4DDE-ADA0-92384199C100}'),
		"AdditionalSection": (103, 2, (3, 0), (), "AdditionalSection", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'AttachedDocuments' returns object of type 'IAttachedDocuments'
		"AttachedDocuments": (114, 2, (9, 0), (), "AttachedDocuments", '{81FAB1C5-F566-4D06-8D3D-17FF01D3566F}'),
		"AttributeNumber": (6, 2, (5, 0), (), "AttributeNumber", None),
		# Method 'Columns' returns object of type 'ISpecificationColumns'
		"Columns": (112, 2, (9, 0), (), "Columns", '{9F44BF03-DE25-4DDE-ADA0-92384199C100}'),
		# Method 'CommentObjects' returns object of type 'ISpecificationCommentObjects'
		"CommentObjects": (4, 2, (9, 0), (), "CommentObjects", '{B8BD0FC7-AB2B-4E7A-8EC2-82060D7D29A7}'),
		"Documents": (5, 2, (12, 0), (), "Documents", None),
		"Draw": (1, 2, (11, 0), (), "Draw", None),
		"DrawPosition": (2, 2, (11, 0), (), "DrawPosition", None),
		"EditSourceObject": (12, 2, (11, 0), (), "EditSourceObject", None),
		"FirstOnSheet": (110, 2, (11, 0), (), "FirstOnSheet", None),
		"Geometry": (9, 2, (12, 0), (), "Geometry", None),
		"IncrementPosition": (111, 2, (11, 0), (), "IncrementPosition", None),
		"NestedBlock": (106, 2, (3, 0), (), "NestedBlock", None),
		"NestedSection": (105, 2, (3, 0), (), "NestedSection", None),
		"ObjectType": (100, 2, (3, 0), (), "ObjectType", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Performance": (3, 2, (11, 0), (), "Performance", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Section": (101, 2, (3, 0), (), "Section", None),
		"State": (109, 2, (3, 0), (), "State", None),
		"Subsection": (102, 2, (3, 0), (), "Subsection", None),
		"SyncronizeWithProperties": (13, 2, (11, 0), (), "SyncronizeWithProperties", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"UniqueMetaObjectKey": (16, 2, (8, 0), (), "UniqueMetaObjectKey", None),
		"UniqueNumber": (108, 2, (5, 0), (), "UniqueNumber", None),
	}
	_prop_map_put_ = {
		"AdditionalBlock": ((104, LCID, 4, 0),()),
		"AdditionalSection": ((103, LCID, 4, 0),()),
		"AttributeNumber": ((6, LCID, 4, 0),()),
		"Draw": ((1, LCID, 4, 0),()),
		"DrawPosition": ((2, LCID, 4, 0),()),
		"EditSourceObject": ((12, LCID, 4, 0),()),
		"FirstOnSheet": ((110, LCID, 4, 0),()),
		"Geometry": ((9, LCID, 4, 0),()),
		"IncrementPosition": ((111, LCID, 4, 0),()),
		"NestedBlock": ((106, LCID, 4, 0),()),
		"NestedSection": ((105, LCID, 4, 0),()),
		"Performance": ((3, LCID, 4, 0),()),
		"SpcUsed": ((15, LCID, 4, 0),('False',)),
		"Subsection": ((102, LCID, 4, 0),()),
		"SyncronizeWithProperties": ((13, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISpecificationBaseObjects(DispatchBaseClass):
	' оллекци€ базовых объектов спецификации.'
	CLSID = IID('{B2B97D19-3A0B-4C9F-A6AC-DEFFAFE0D1C2}')
	coclass_clsid = IID('{E2FD0C57-3E8A-4EC2-A1E9-7BEB75E3AB7C}')

	# Result is of type ISpecificationBaseObject
	def Add(self, SectionNumb=defaultNamedNotOptArg, AttrNumb=defaultNamedNotOptArg):
		'ƒобавл€ет новый объект спецификации в коллекцию.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 1, (9, 0), ((3, 1), (5, 1)),SectionNumb
			, AttrNumb)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{49994ED8-96BA-4D9D-B642-5F0F1E3FED16}')
		return ret

	# Result is of type ISpecificationBaseObject
	def CopySpecificationObject(self, SpcObj=defaultNamedNotOptArg, Geometry=defaultNamedNotOptArg):
		' опирование объекта спецификации.'
		ret = self._oleobj_.InvokeTypes(3, LCID, 1, (9, 0), ((9, 1), (12, 1)),SpcObj
			, Geometry)
		if ret is not None:
			ret = Dispatch(ret, 'CopySpecificationObject', '{49994ED8-96BA-4D9D-B642-5F0F1E3FED16}')
		return ret

	def GetSpecificationObjectsForGeom(self, PGeom=defaultNamedNotOptArg, Equal=defaultNamedNotOptArg, SectionNumb=defaultNamedNotOptArg, AttrNumb=defaultNamedNotOptArg):
		"ѕо геометрии получить массив объектов спецификации в виде SAFEARRAY'€ DISPATCH - VT_ARRAY | VT_DISPATCH или одиночный VT_DISPATCH."
		return self._ApplyTypes_(2, 1, (12, 0), ((12, 1), (11, 1), (3, 1), (5, 1)), 'GetSpecificationObjectsForGeom', None,PGeom
			, Equal, SectionNumb, AttrNumb)

	# Result is of type ISpecificationBaseObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект спецификации, заданный по индексу, по ссылке или по уникальному номеру.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{49994ED8-96BA-4D9D-B642-5F0F1E3FED16}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект спецификации, заданный по индексу, по ссылке или по уникальному номеру.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{49994ED8-96BA-4D9D-B642-5F0F1E3FED16}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{49994ED8-96BA-4D9D-B642-5F0F1E3FED16}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISpecificationColumn(DispatchBaseClass):
	' олонка объекта спецификации.'
	CLSID = IID('{3ECFB777-2645-42B5-A6ED-111688433B26}')
	coclass_clsid = IID('{B5216B74-0577-41D5-9B62-C71674EC9330}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AttributeNumber": (7, 2, (5, 0), (), "AttributeNumber", None),
		"BlockNumber": (3, 2, (3, 0), (), "BlockNumber", None),
		# Method 'ColumnItems' returns object of type 'ISpecificationColumnItems'
		"ColumnItems": (6, 2, (9, 0), (), "ColumnItems", '{F4BAB79A-8A35-44D5-BE44-C566E444F342}'),
		"ColumnName": (9, 2, (8, 0), (), "ColumnName", None),
		"ColumnType": (1, 2, (3, 0), (), "ColumnType", None),
		"ColumnTypeNumber": (2, 2, (3, 0), (), "ColumnTypeNumber", None),
		"CountUniteCells": (10, 2, (3, 0), (), "CountUniteCells", None),
		"Number": (4, 2, (3, 0), (), "Number", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'Text' returns object of type 'IText'
		"Text": (8, 2, (9, 0), (), "Text", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"ValueType": (5, 2, (3, 0), (), "ValueType", None),
	}
	_prop_map_put_ = {
		"AttributeNumber": ((7, LCID, 4, 0),()),
		"CountUniteCells": ((10, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISpecificationColumnItem(DispatchBaseClass):
	'Ёлемент колонки объекта спецификации.'
	CLSID = IID('{2BABDD01-EACA-4137-9749-25B8C5E230EE}')
	coclass_clsid = IID('{D1A46669-AF0C-43EE-ACB6-E765D06BED4A}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Key": (2, 2, (2, 0), (), "Key", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Value": (4, 2, (12, 0), (), "Value", None),
		"ValueType": (1, 2, (3, 0), (), "ValueType", None),
		"Visible": (3, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Key": ((2, LCID, 4, 0),()),
		"Value": ((4, LCID, 4, 0),()),
		"Visible": ((3, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(4, 2, (12, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISpecificationColumnItems(DispatchBaseClass):
	' оллекци€ элементов колонки объекта спецификации.'
	CLSID = IID('{F4BAB79A-8A35-44D5-BE44-C566E444F342}')
	coclass_clsid = IID('{86172CF0-0BED-46E0-B2E1-DD43ABF09290}')

	# Result is of type ISpecificationColumnItem
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент колонки объекта спецификации, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{2BABDD01-EACA-4137-9749-25B8C5E230EE}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент колонки объекта спецификации, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{2BABDD01-EACA-4137-9749-25B8C5E230EE}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{2BABDD01-EACA-4137-9749-25B8C5E230EE}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISpecificationColumnStyle(DispatchBaseClass):
	'—тиль колонки спецификации.'
	CLSID = IID('{16839CAA-3AFB-49A4-A19A-C61963967649}')
	coclass_clsid = IID('{FF5E4685-8914-4382-97C9-C73FFED73449}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AttributeKey1": (12, 2, (3, 0), (), "AttributeKey1", None),
		"AttributeKey2": (13, 2, (3, 0), (), "AttributeKey2", None),
		"AttributeKey3": (14, 2, (3, 0), (), "AttributeKey3", None),
		"AttributeKey4": (15, 2, (3, 0), (), "AttributeKey4", None),
		"AttributeLibraryName": (11, 2, (8, 0), (), "AttributeLibraryName", None),
		"CalculateSum": (5, 2, (11, 0), (), "CalculateSum", None),
		"ColumnType": (2, 2, (3, 0), (), "ColumnType", None),
		"Edit": (4, 2, (11, 0), (), "Edit", None),
		"MaxValue": (17, 2, (5, 0), (), "MaxValue", None),
		"MinValue": (16, 2, (5, 0), (), "MinValue", None),
		"MultiplyToCount": (6, 2, (11, 0), (), "MultiplyToCount", None),
		"Name": (1, 2, (8, 0), (), "Name", None),
		"Number": (3, 2, (3, 0), (), "Number", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"StampLinkID": (9, 2, (3, 0), (), "StampLinkID", None),
		"TextDown": (8, 2, (11, 0), (), "TextDown", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"UseForSectionTitle": (7, 2, (11, 0), (), "UseForSectionTitle", None),
		"UseIn3D": (18, 2, (11, 0), (), "UseIn3D", None),
		"ValueType": (10, 2, (3, 0), (), "ValueType", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISpecificationColumnStyles(DispatchBaseClass):
	' оллекци€ стилей колонок спецификации.'
	CLSID = IID('{41529A95-51F0-44B0-9D55-5753BCEB23BC}')
	coclass_clsid = IID('{EC3F7C56-6A3B-45AC-BF81-614B7B045BAA}')

	# Result is of type ISpecificationColumnStyle
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает стиль колонки спецификации, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{16839CAA-3AFB-49A4-A19A-C61963967649}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает стиль колонки спецификации, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{16839CAA-3AFB-49A4-A19A-C61963967649}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{16839CAA-3AFB-49A4-A19A-C61963967649}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISpecificationColumns(DispatchBaseClass):
	' оллекци€ колонок объекта спецификации.'
	CLSID = IID('{9F44BF03-DE25-4DDE-ADA0-92384199C100}')
	coclass_clsid = IID('{A641E019-073F-49F5-97BC-A9D5FFB063D8}')

	# Result is of type ISpecificationColumn
	# The method Column is actually a property, but must be used as a method to correctly pass the arguments
	def Column(self, ColumnType=defaultNamedNotOptArg, ColumnNumber=defaultNamedNotOptArg, BlockNumber=defaultNamedNotOptArg):
		'¬озвращает колонку объекта спецификации, заданную по типу, номеру и блоку.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((3, 1), (3, 1), (3, 1)),ColumnType
			, ColumnNumber, BlockNumber)
		if ret is not None:
			ret = Dispatch(ret, 'Column', '{3ECFB777-2645-42B5-A6ED-111688433B26}')
		return ret

	# Result is of type ISpecificationColumn
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает колонку объекта спецификации, заданную по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{3ECFB777-2645-42B5-A6ED-111688433B26}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает колонку объекта спецификации, заданную по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{3ECFB777-2645-42B5-A6ED-111688433B26}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{3ECFB777-2645-42B5-A6ED-111688433B26}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISpecificationCommentObject(DispatchBaseClass):
	'¬спомогательный объект спецификации.'
	CLSID = IID('{3B6B80CA-2145-4184-B786-0C571DF5ACD7}')
	coclass_clsid = IID('{6F0354E0-9AB0-47AC-80E8-10FB48C59340}')

	# The method BlockNumberByIndex is actually a property, but must be used as a method to correctly pass the arguments
	def BlockNumberByIndex(self, Val=defaultNamedNotOptArg):
		'Ќомер блока.'
		return self._oleobj_.InvokeTypes(107, LCID, 2, (3, 0), ((3, 1),),Val
			)

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(116, LCID, 1, (11, 0), (),)

	def Edit(self):
		'–едактировать объект.'
		return self._oleobj_.InvokeTypes(117, LCID, 1, (11, 0), (),)

	def SetSection(self, Val=defaultNamedNotOptArg):
		'”становить номер раздела.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((3, 1),),Val
			)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(115, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"AdditionalBlock": (104, 2, (3, 0), (), "AdditionalBlock", None),
		# Method 'AdditionalColumns' returns object of type 'ISpecificationColumns'
		"AdditionalColumns": (113, 2, (9, 0), (), "AdditionalColumns", '{9F44BF03-DE25-4DDE-ADA0-92384199C100}'),
		"AdditionalSection": (103, 2, (3, 0), (), "AdditionalSection", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'AttachedDocuments' returns object of type 'IAttachedDocuments'
		"AttachedDocuments": (114, 2, (9, 0), (), "AttachedDocuments", '{81FAB1C5-F566-4D06-8D3D-17FF01D3566F}'),
		# Method 'BaseObject' returns object of type 'ISpecificationBaseObject'
		"BaseObject": (1, 2, (9, 0), (), "BaseObject", '{49994ED8-96BA-4D9D-B642-5F0F1E3FED16}'),
		"BlockNumber": (2, 2, (3, 0), (), "BlockNumber", None),
		# Method 'Columns' returns object of type 'ISpecificationColumns'
		"Columns": (112, 2, (9, 0), (), "Columns", '{9F44BF03-DE25-4DDE-ADA0-92384199C100}'),
		"EditSourceObject": (3, 2, (11, 0), (), "EditSourceObject", None),
		"FirstOnSheet": (110, 2, (11, 0), (), "FirstOnSheet", None),
		"IncrementPosition": (111, 2, (11, 0), (), "IncrementPosition", None),
		"NestedBlock": (106, 2, (3, 0), (), "NestedBlock", None),
		"NestedSection": (105, 2, (3, 0), (), "NestedSection", None),
		"ObjectType": (100, 2, (3, 0), (), "ObjectType", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Section": (101, 2, (3, 0), (), "Section", None),
		"State": (109, 2, (3, 0), (), "State", None),
		"Subsection": (102, 2, (3, 0), (), "Subsection", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"UniqueNumber": (108, 2, (5, 0), (), "UniqueNumber", None),
	}
	_prop_map_put_ = {
		"AdditionalBlock": ((104, LCID, 4, 0),()),
		"AdditionalSection": ((103, LCID, 4, 0),()),
		"BlockNumber": ((2, LCID, 4, 0),()),
		"EditSourceObject": ((3, LCID, 4, 0),()),
		"FirstOnSheet": ((110, LCID, 4, 0),()),
		"IncrementPosition": ((111, LCID, 4, 0),()),
		"NestedBlock": ((106, LCID, 4, 0),()),
		"NestedSection": ((105, LCID, 4, 0),()),
		"Subsection": ((102, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISpecificationCommentObjects(DispatchBaseClass):
	' оллекци€ вспомогательных объектов спецификации.'
	CLSID = IID('{B8BD0FC7-AB2B-4E7A-8EC2-82060D7D29A7}')
	coclass_clsid = IID('{77CFDEBF-2DF0-4B67-8825-78DF712A0497}')

	# Result is of type ISpecificationCommentObject
	def Add(self, SectionNamb=defaultNamedNotOptArg):
		'ƒобавл€ет новый объект спецификации в коллекцию.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 1, (9, 0), ((3, 1),),SectionNamb
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{3B6B80CA-2145-4184-B786-0C571DF5ACD7}')
		return ret

	def Attach(self, PVal=defaultNamedNotOptArg):
		'ƒобавл€ет вспомогательный объект спецификации в коллекцию прикрепленных объектов (ƒл€ базового объекта).'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), ((9, 1),),PVal
			)

	# Result is of type ISpecificationCommentObject
	def CopySpecificationObject(self, SpcObj=defaultNamedNotOptArg):
		' опирование объекта спецификации.'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((9, 1),),SpcObj
			)
		if ret is not None:
			ret = Dispatch(ret, 'CopySpecificationObject', '{3B6B80CA-2145-4184-B786-0C571DF5ACD7}')
		return ret

	def Detach(self, PVal=defaultNamedNotOptArg):
		'”дал€ет вспомогательный объект спецификации из коллекции прикрепленных объектов (ƒл€ базового объекта).'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), ((9, 1),),PVal
			)

	# Result is of type ISpecificationCommentObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект спецификации, заданный по индексу, по ссылке или по уникальному номеру.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{3B6B80CA-2145-4184-B786-0C571DF5ACD7}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект спецификации, заданный по индексу, по ссылке или по уникальному номеру.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{3B6B80CA-2145-4184-B786-0C571DF5ACD7}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{3B6B80CA-2145-4184-B786-0C571DF5ACD7}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISpecificationDescription(DispatchBaseClass):
	'ќписание спецификации.'
	CLSID = IID('{9678959E-166B-45F3-BDE8-88BBF4645F5C}')
	coclass_clsid = IID('{AD076943-BF97-4802-9D4F-D28C6C41E966}')

	def CompareStyleWithLibStyle(self):
		'ќтличие стил€ —ѕ от библиотечного: 0 - не отличаетс€, 1 -отличаетс€, -1 стиль не найден.'
		return self._oleobj_.InvokeTypes(18, LCID, 1, (3, 0), (),)

	def Delete(self):
		'”далить описание.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), (),)

	def GetPerformanceParam(self, DisplayPerformanceIndex=defaultNamedNotOptArg, PerformanceIndex=pythoncom.Missing, BlockIndex=pythoncom.Missing):
		'ѕолучить параметры и им€ колонки исполнени€ по индексу.'
		return self._ApplyTypes_(19, 1, (8, 0), ((3, 1), (16387, 2), (16387, 2)), 'GetPerformanceParam', None,DisplayPerformanceIndex
			, PerformanceIndex, BlockIndex)

	# The method PerformanceName is actually a property, but must be used as a method to correctly pass the arguments
	def PerformanceName(self, PerformanceIndex=defaultNamedNotOptArg, BlockIndex=defaultNamedNotOptArg):
		'ќтображаемое им€ исполнени€.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(15, LCID, 2, (8, 0), ((3, 1), (3, 1)),PerformanceIndex
			, BlockIndex)

	# The method SetPerformanceName is actually a property, but must be used as a method to correctly pass the arguments
	def SetPerformanceName(self, PerformanceIndex=defaultNamedNotOptArg, BlockIndex=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		'ќтображаемое им€ исполнени€.'
		return self._oleobj_.InvokeTypes(15, LCID, 4, (24, 0), ((3, 1), (3, 1), (8, 1)),PerformanceIndex
			, BlockIndex, arg2)

	def Update(self):
		'»зменить описание.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Active": (4, 2, (11, 0), (), "Active", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BaseObjects' returns object of type 'ISpecificationBaseObjects'
		"BaseObjects": (10, 2, (9, 0), (), "BaseObjects", '{B2B97D19-3A0B-4C9F-A6AC-DEFFAFE0D1C2}'),
		# Method 'CommentObjects' returns object of type 'ISpecificationCommentObjects'
		"CommentObjects": (11, 2, (9, 0), (), "CommentObjects", '{B8BD0FC7-AB2B-4E7A-8EC2-82060D7D29A7}'),
		# Method 'CurrentObject' returns object of type 'ISpecificationObject'
		"CurrentObject": (13, 2, (9, 0), (), "CurrentObject", '{72EB4E8E-7952-4B36-852B-4816B7B5AFEE}'),
		"DelegateMode": (16, 2, (11, 0), (), "DelegateMode", None),
		"LayoutName": (1, 2, (8, 0), (), "LayoutName", None),
		"NeedRebuild": (17, 2, (11, 0), (), "NeedRebuild", None),
		"Objects": (9, 2, (12, 0), (), "Objects", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"PerformanceCount": (21, 2, (3, 0), (), "PerformanceCount", None),
		"PerformanceCountInBlock": (22, 2, (3, 0), (), "PerformanceCountInBlock", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"ShowAllObjects": (14, 2, (11, 0), (), "ShowAllObjects", None),
		"ShowExcludedObjects": (20, 2, (11, 0), (), "ShowExcludedObjects", None),
		"ShowOnSheet": (12, 2, (11, 0), (), "ShowOnSheet", None),
		"SpecificationDocumentName": (3, 2, (8, 0), (), "SpecificationDocumentName", None),
		# Method 'SpecificationStyle' returns object of type 'ISpecificationStyle'
		"SpecificationStyle": (7, 2, (9, 0), (), "SpecificationStyle", '{F237D2B3-DFEE-4702-B71F-E5F6923F03E6}'),
		# Method 'SpecificationTuning' returns object of type 'ISpecificationTuning'
		"SpecificationTuning": (8, 2, (9, 0), (), "SpecificationTuning", '{BB719D42-E44C-445B-969A-0E2F63E97FC8}'),
		"StyleID": (2, 2, (3, 0), (), "StyleID", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"Active": ((4, LCID, 4, 0),()),
		"CurrentObject": ((13, LCID, 4, 0),()),
		"DelegateMode": ((16, LCID, 4, 0),()),
		"LayoutName": ((1, LCID, 4, 0),()),
		"NeedRebuild": ((17, LCID, 4, 0),()),
		"PerformanceCount": ((21, LCID, 4, 0),()),
		"ShowAllObjects": ((14, LCID, 4, 0),()),
		"ShowExcludedObjects": ((20, LCID, 4, 0),()),
		"ShowOnSheet": ((12, LCID, 4, 0),()),
		"SpecificationDocumentName": ((3, LCID, 4, 0),()),
		"StyleID": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISpecificationDescriptions(DispatchBaseClass):
	' оллекци€ описаний спецификации.'
	CLSID = IID('{B9632C5C-86E1-4BC9-83A5-A954E407246A}')
	coclass_clsid = IID('{77168B66-5A17-4694-ADDF-848E314EE0D1}')

	# Result is of type ISpecificationDescription
	def Add(self, LayoutName=defaultNamedNotOptArg, StyleID=defaultNamedNotOptArg, SpcName=defaultNamedNotOptArg):
		'ƒобавл€ет новое описание спецификации в документ и в коллекцию.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 1, (9, 0), ((8, 1), (3, 1), (8, 1)),LayoutName
			, StyleID, SpcName)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{9678959E-166B-45F3-BDE8-88BBF4645F5C}')
		return ret

	# Result is of type ISpecificationDescription
	# The method Description is actually a property, but must be used as a method to correctly pass the arguments
	def Description(self, LayoutName=defaultNamedNotOptArg, StyleID=defaultNamedNotOptArg):
		'¬озвращает описание спецификации по имени файла библиотеки оформлений и номеру стил€ в библиотеке.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 2, (9, 0), ((8, 1), (3, 1)),LayoutName
			, StyleID)
		if ret is not None:
			ret = Dispatch(ret, 'Description', '{9678959E-166B-45F3-BDE8-88BBF4645F5C}')
		return ret

	# Result is of type ISpecificationDescription
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает описание спецификации, заданное по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{9678959E-166B-45F3-BDE8-88BBF4645F5C}')
		return ret

	_prop_map_get_ = {
		# Method 'Active' returns object of type 'ISpecificationDescription'
		"Active": (3, 2, (9, 0), (), "Active", '{9678959E-166B-45F3-BDE8-88BBF4645F5C}'),
		# Method 'ActiveFromLibStyle' returns object of type 'ISpecificationDescription'
		"ActiveFromLibStyle": (4, 2, (9, 0), (), "ActiveFromLibStyle", '{9678959E-166B-45F3-BDE8-88BBF4645F5C}'),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает описание спецификации, заданное по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{9678959E-166B-45F3-BDE8-88BBF4645F5C}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{9678959E-166B-45F3-BDE8-88BBF4645F5C}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISpecificationDocument(DispatchBaseClass):
	'»нтерфейс документа спецификации.'
	CLSID = IID('{E3FA8FD0-6187-4625-89B7-3C815651944D}')
	coclass_clsid = IID('{2D43B764-4F8A-47A6-AAAB-52B59CE5A08D}')

	def Close(self, closeOptions=defaultNamedNotOptArg):
		'«акрыть документ. ≈сли SaveChanges = False, то система предложит пользователю сохранить имеющиес€ изменени€.'
		return self._oleobj_.InvokeTypes(3002, LCID, 1, (11, 0), ((3, 1),),closeOptions
			)

	def RebuildDocument(self):
		'ѕерестроить документ.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), (),)

	def Save(self):
		'—охранить документ на диске.'
		return self._oleobj_.InvokeTypes(3003, LCID, 1, (24, 0), (),)

	def SaveAs(self, PathName=defaultNamedNotOptArg):
		'—охранить документ под другим именем.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (24, 0), ((8, 1),),PathName
			)

	_prop_map_get_ = {
		"Active": (3009, 2, (11, 0), (), "Active", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'AttachedDocuments' returns object of type 'IAttachedDocuments'
		"AttachedDocuments": (1, 2, (9, 0), (), "AttachedDocuments", '{81FAB1C5-F566-4D06-8D3D-17FF01D3566F}'),
		"Changed": (3011, 2, (11, 0), (), "Changed", None),
		"Crossed": (3, 2, (11, 0), (), "Crossed", None),
		# Method 'DocumentFrames' returns object of type 'IDocumentFrames'
		"DocumentFrames": (3001, 2, (9, 0), (), "DocumentFrames", '{1D18C466-C085-4D68-A465-A85D0C8E3A0E}'),
		# Method 'DocumentSettings' returns object of type 'IDocumentSettings'
		"DocumentSettings": (3012, 2, (9, 0), (), "DocumentSettings", '{B35FF50E-2991-4630-8AB8-DC3153E7971A}'),
		"DocumentType": (3000, 2, (3, 0), (), "DocumentType", None),
		# Method 'LayoutSheets' returns object of type 'ILayoutSheets'
		"LayoutSheets": (3014, 2, (9, 0), (), "LayoutSheets", '{7AB54196-0B76-4B01-B769-7F47637173C4}'),
		"Name": (3005, 2, (8, 0), (), "Name", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Path": (3007, 2, (8, 0), (), "Path", None),
		"PathName": (3006, 2, (8, 0), (), "PathName", None),
		"ReadOnly": (3010, 2, (11, 0), (), "ReadOnly", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'SpecificationDescriptions' returns object of type 'ISpecificationDescriptions'
		"SpecificationDescriptions": (3013, 2, (9, 0), (), "SpecificationDescriptions", '{B9632C5C-86E1-4BC9-83A5-A954E407246A}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		# Method 'UserDataStoragesMng' returns object of type 'IUserDataStoragesMng'
		"UserDataStoragesMng": (3015, 2, (9, 0), (), "UserDataStoragesMng", '{77A6D4CA-6418-4DEE-B59C-400BFD052375}'),
		"Visible": (3008, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Active": ((3009, LCID, 4, 0),()),
		"ReadOnly": ((3010, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISpecificationObject(DispatchBaseClass):
	'ќбъект спецификации.'
	CLSID = IID('{72EB4E8E-7952-4B36-852B-4816B7B5AFEE}')
	coclass_clsid = IID('{6F0354E0-9AB0-47AC-80E8-10FB48C59340}')

	# The method BlockNumberByIndex is actually a property, but must be used as a method to correctly pass the arguments
	def BlockNumberByIndex(self, Val=defaultNamedNotOptArg):
		'Ќомер блока.'
		return self._oleobj_.InvokeTypes(107, LCID, 2, (3, 0), ((3, 1),),Val
			)

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(116, LCID, 1, (11, 0), (),)

	def Edit(self):
		'–едактировать объект.'
		return self._oleobj_.InvokeTypes(117, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(115, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"AdditionalBlock": (104, 2, (3, 0), (), "AdditionalBlock", None),
		# Method 'AdditionalColumns' returns object of type 'ISpecificationColumns'
		"AdditionalColumns": (113, 2, (9, 0), (), "AdditionalColumns", '{9F44BF03-DE25-4DDE-ADA0-92384199C100}'),
		"AdditionalSection": (103, 2, (3, 0), (), "AdditionalSection", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'AttachedDocuments' returns object of type 'IAttachedDocuments'
		"AttachedDocuments": (114, 2, (9, 0), (), "AttachedDocuments", '{81FAB1C5-F566-4D06-8D3D-17FF01D3566F}'),
		# Method 'Columns' returns object of type 'ISpecificationColumns'
		"Columns": (112, 2, (9, 0), (), "Columns", '{9F44BF03-DE25-4DDE-ADA0-92384199C100}'),
		"FirstOnSheet": (110, 2, (11, 0), (), "FirstOnSheet", None),
		"IncrementPosition": (111, 2, (11, 0), (), "IncrementPosition", None),
		"NestedBlock": (106, 2, (3, 0), (), "NestedBlock", None),
		"NestedSection": (105, 2, (3, 0), (), "NestedSection", None),
		"ObjectType": (100, 2, (3, 0), (), "ObjectType", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Section": (101, 2, (3, 0), (), "Section", None),
		"State": (109, 2, (3, 0), (), "State", None),
		"Subsection": (102, 2, (3, 0), (), "Subsection", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"UniqueNumber": (108, 2, (5, 0), (), "UniqueNumber", None),
	}
	_prop_map_put_ = {
		"AdditionalBlock": ((104, LCID, 4, 0),()),
		"AdditionalSection": ((103, LCID, 4, 0),()),
		"FirstOnSheet": ((110, LCID, 4, 0),()),
		"IncrementPosition": ((111, LCID, 4, 0),()),
		"NestedBlock": ((106, LCID, 4, 0),()),
		"NestedSection": ((105, LCID, 4, 0),()),
		"Subsection": ((102, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISpecificationSectionStyle(DispatchBaseClass):
	'—тиль раздела спецификации.'
	CLSID = IID('{4B61FC7F-4826-4B58-8CCB-7D459AD0BE7B}')
	coclass_clsid = IID('{A862B550-CAED-48FD-889D-C1507A30D241}')

	# The method SortColumnNumberEx is actually a property, but must be used as a method to correctly pass the arguments
	def SortColumnNumberEx(self, Index=defaultNamedNotOptArg):
		'Ќомер колонки в которой проводить сортировку.'
		return self._oleobj_.InvokeTypes(12, LCID, 2, (3, 0), ((3, 1),),Index
			)

	# The method SortColumnTypeEx is actually a property, but must be used as a method to correctly pass the arguments
	def SortColumnTypeEx(self, Index=defaultNamedNotOptArg):
		'ќбщий тип колонки в которой проводить сортировку.'
		return self._oleobj_.InvokeTypes(11, LCID, 2, (3, 0), ((3, 1),),Index
			)

	# The method SortTypeEx is actually a property, but must be used as a method to correctly pass the arguments
	def SortTypeEx(self, Index=defaultNamedNotOptArg):
		'“ип сортировки.'
		return self._oleobj_.InvokeTypes(13, LCID, 2, (3, 0), ((3, 1),),Index
			)

	_prop_map_get_ = {
		# Method 'AdditionalBlocks' returns object of type 'IAdditionalBlockStyles'
		"AdditionalBlocks": (9, 2, (9, 0), (), "AdditionalBlocks", '{90E2FBEC-A56F-423C-B89F-479673EDD895}'),
		# Method 'AdditionalColumns' returns object of type 'ISpecificationColumnStyles'
		"AdditionalColumns": (8, 2, (9, 0), (), "AdditionalColumns", '{41529A95-51F0-44B0-9D55-5753BCEB23BC}'),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Columns' returns object of type 'ISpecificationColumnStyles'
		"Columns": (7, 2, (9, 0), (), "Columns", '{41529A95-51F0-44B0-9D55-5753BCEB23BC}'),
		"FillDataFromStamp": (5, 2, (11, 0), (), "FillDataFromStamp", None),
		"Name": (1, 2, (8, 0), (), "Name", None),
		"Number": (2, 2, (3, 0), (), "Number", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"SortColumnNumber": (4, 2, (3, 0), (), "SortColumnNumber", None),
		"SortColumnType": (3, 2, (3, 0), (), "SortColumnType", None),
		"SortLevelsCount": (10, 2, (3, 0), (), "SortLevelsCount", None),
		"SortType": (6, 2, (3, 0), (), "SortType", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISpecificationSectionStyles(DispatchBaseClass):
	' оллекци€ стилей разделов спецификации.'
	CLSID = IID('{24AE8484-F4F4-4059-AFC7-9492A64C88E8}')
	coclass_clsid = IID('{25B2EDD7-FB95-4FE6-BA9C-B296531EA6C7}')

	# Result is of type ISpecificationSectionStyle
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает стиль раздела спецификации, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{4B61FC7F-4826-4B58-8CCB-7D459AD0BE7B}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает стиль раздела спецификации, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{4B61FC7F-4826-4B58-8CCB-7D459AD0BE7B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{4B61FC7F-4826-4B58-8CCB-7D459AD0BE7B}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISpecificationStyle(DispatchBaseClass):
	'—тиль спецификации.'
	CLSID = IID('{F237D2B3-DFEE-4702-B71F-E5F6923F03E6}')
	coclass_clsid = IID('{7E9787DC-72ED-452D-8EF5-FD3D21259712}')

	_prop_map_get_ = {
		# Method 'AdditionalBlocks' returns object of type 'IAdditionalBlockStyles'
		"AdditionalBlocks": (12, 2, (9, 0), (), "AdditionalBlocks", '{90E2FBEC-A56F-423C-B89F-479673EDD895}'),
		# Method 'AdditionalColumns' returns object of type 'ISpecificationColumnStyles'
		"AdditionalColumns": (10, 2, (9, 0), (), "AdditionalColumns", '{41529A95-51F0-44B0-9D55-5753BCEB23BC}'),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Columns' returns object of type 'ISpecificationColumnStyles'
		"Columns": (9, 2, (9, 0), (), "Columns", '{41529A95-51F0-44B0-9D55-5753BCEB23BC}'),
		# Method 'Format' returns object of type 'ISheetFormat'
		"Format": (8, 2, (9, 0), (), "Format", '{B9CDE694-4C33-4375-A6F6-AE94DC759510}'),
		"LayoutName1": (1, 2, (8, 0), (), "LayoutName1", None),
		"LayoutName2": (3, 2, (8, 0), (), "LayoutName2", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"PerformanceCountInBlock": (14, 2, (3, 0), (), "PerformanceCountInBlock", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"SectionOn": (6, 2, (11, 0), (), "SectionOn", None),
		# Method 'Sections' returns object of type 'ISpecificationSectionStyles'
		"Sections": (11, 2, (9, 0), (), "Sections", '{24AE8484-F4F4-4059-AFC7-9492A64C88E8}'),
		"SortSectionDown": (13, 2, (11, 0), (), "SortSectionDown", None),
		# Method 'SpecificationTuning' returns object of type 'ISpecificationTuning'
		"SpecificationTuning": (7, 2, (9, 0), (), "SpecificationTuning", '{BB719D42-E44C-445B-969A-0E2F63E97FC8}'),
		"StyleID1": (2, 2, (3, 0), (), "StyleID1", None),
		"StyleID2": (4, 2, (3, 0), (), "StyleID2", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Variant": (5, 2, (3, 0), (), "Variant", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISpecificationSubsection(DispatchBaseClass):
	'ѕодраздел спецификации.'
	CLSID = IID('{7F0E5F63-815C-46E5-B99E-C24244566C00}')
	coclass_clsid = IID('{C82A6A36-CF62-43CE-A180-FA1268AE0116}')

	def Change(self, Name=defaultNamedNotOptArg, Number=defaultNamedNotOptArg):
		'»зменить параметры подраздела.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), ((8, 1), (2, 1)),Name
			, Number)

	def Delete(self):
		'”далить подраздел.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Name": (1, 2, (8, 0), (), "Name", None),
		"Number": (2, 2, (2, 0), (), "Number", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISpecificationSubsections(DispatchBaseClass):
	' оллекци€ подразделов спецификации.'
	CLSID = IID('{56532CB4-BD3F-442C-AFA4-0E6BEB677E61}')
	coclass_clsid = IID('{79130306-1FB8-49FD-85D2-A6C235B91638}')

	# Result is of type ISpecificationSubsection
	def Add(self, Name=defaultNamedNotOptArg, Number=defaultNamedNotOptArg):
		'ƒобавл€ет новый подраздел.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 1, (9, 0), ((8, 1), (2, 1)),Name
			, Number)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{7F0E5F63-815C-46E5-B99E-C24244566C00}')
		return ret

	# Result is of type ISpecificationSubsection
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает подраздел спецификации, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{7F0E5F63-815C-46E5-B99E-C24244566C00}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает подраздел спецификации, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{7F0E5F63-815C-46E5-B99E-C24244566C00}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{7F0E5F63-815C-46E5-B99E-C24244566C00}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISpecificationTuning(DispatchBaseClass):
	'Ќастройки спецификации.'
	CLSID = IID('{BB719D42-E44C-445B-969A-0E2F63E97FC8}')
	coclass_clsid = IID('{C6410109-2800-476B-82EE-202C766B515D}')

	def Update(self):
		'ќбновить описание спецификации в соответствии с внесенными в настройки изменени€ми.'
		return self._oleobj_.InvokeTypes(38, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'AdditionalBlockTextStyleFirst' returns object of type 'ITextStyle'
		"AdditionalBlockTextStyleFirst": (32, 2, (9, 0), (), "AdditionalBlockTextStyleFirst", '{7EA65CA0-420D-4E1D-8C19-998495C4DA2F}'),
		# Method 'AdditionalBlockTextStyleNext' returns object of type 'ITextStyle'
		"AdditionalBlockTextStyleNext": (33, 2, (9, 0), (), "AdditionalBlockTextStyleNext", '{7EA65CA0-420D-4E1D-8C19-998495C4DA2F}'),
		# Method 'AdditionalBlocks' returns object of type 'IAdditionalBlockTunings'
		"AdditionalBlocks": (26, 2, (9, 0), (), "AdditionalBlocks", '{8910CC92-AC76-4837-AB7A-5FD3C7B74728}'),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"BlockCount": (18, 2, (3, 0), (), "BlockCount", None),
		"BlockOnNewPage": (13, 2, (11, 0), (), "BlockOnNewPage", None),
		"CalculatePosition": (3, 2, (11, 0), (), "CalculatePosition", None),
		"CalculateZone": (2, 2, (11, 0), (), "CalculateZone", None),
		"CopySpcObjectOnCopyGeometry": (40, 2, (11, 0), (), "CopySpcObjectOnCopyGeometry", None),
		"DeleteGeometry": (5, 2, (11, 0), (), "DeleteGeometry", None),
		"DeleteSpcObjectOnDeleteGeometry": (39, 2, (11, 0), (), "DeleteSpcObjectOnDeleteGeometry", None),
		"DisableAdditionalBlockEmptyStrings": (37, 2, (11, 0), (), "DisableAdditionalBlockEmptyStrings", None),
		"DisableEmptyBlockString": (7, 2, (11, 0), (), "DisableEmptyBlockString", None),
		"DisableEmptyString": (6, 2, (11, 0), (), "DisableEmptyString", None),
		"DisableNestingBlockEmptyStrings": (36, 2, (11, 0), (), "DisableNestingBlockEmptyStrings", None),
		"DrawBottomUp": (15, 2, (11, 0), (), "DrawBottomUp", None),
		"InitialPosition": (19, 2, (3, 0), (), "InitialPosition", None),
		"InsertDash": (9, 2, (11, 0), (), "InsertDash", None),
		"InsertNull": (8, 2, (11, 0), (), "InsertNull", None),
		"LinkType": (1, 2, (3, 0), (), "LinkType", None),
		# Method 'NestingBlockTextStyleFirst' returns object of type 'ITextStyle'
		"NestingBlockTextStyleFirst": (34, 2, (9, 0), (), "NestingBlockTextStyleFirst", '{7EA65CA0-420D-4E1D-8C19-998495C4DA2F}'),
		# Method 'NestingBlockTextStyleNext' returns object of type 'ITextStyle'
		"NestingBlockTextStyleNext": (35, 2, (9, 0), (), "NestingBlockTextStyleNext", '{7EA65CA0-420D-4E1D-8C19-998495C4DA2F}'),
		# Method 'ObjectTextStyle' returns object of type 'ITextStyle'
		"ObjectTextStyle": (23, 2, (9, 0), (), "ObjectTextStyle", '{7EA65CA0-420D-4E1D-8C19-998495C4DA2F}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'PerformanceBlockTextStyleFirst' returns object of type 'ITextStyle'
		"PerformanceBlockTextStyleFirst": (30, 2, (9, 0), (), "PerformanceBlockTextStyleFirst", '{7EA65CA0-420D-4E1D-8C19-998495C4DA2F}'),
		# Method 'PerformanceBlockTextStyleNext' returns object of type 'ITextStyle'
		"PerformanceBlockTextStyleNext": (31, 2, (9, 0), (), "PerformanceBlockTextStyleNext", '{7EA65CA0-420D-4E1D-8C19-998495C4DA2F}'),
		"PerformanceCount": (17, 2, (3, 0), (), "PerformanceCount", None),
		"PerformanceCountInBlock": (42, 2, (3, 0), (), "PerformanceCountInBlock", None),
		"PositionUp": (14, 2, (11, 0), (), "PositionUp", None),
		"PredefinedTextFileName": (20, 2, (8, 0), (), "PredefinedTextFileName", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'SectionTextStyleFirst' returns object of type 'ITextStyle'
		"SectionTextStyleFirst": (21, 2, (9, 0), (), "SectionTextStyleFirst", '{7EA65CA0-420D-4E1D-8C19-998495C4DA2F}'),
		# Method 'SectionTextStyleNext' returns object of type 'ITextStyle'
		"SectionTextStyleNext": (22, 2, (9, 0), (), "SectionTextStyleNext", '{7EA65CA0-420D-4E1D-8C19-998495C4DA2F}'),
		# Method 'Sections' returns object of type 'ISpecificationTuningSections'
		"Sections": (24, 2, (9, 0), (), "Sections", '{01B1BF6F-B9E3-4E94-99A0-81394FB99B16}'),
		"ShowAdditionalBlockName": (27, 2, (11, 0), (), "ShowAdditionalBlockName", None),
		"ShowEmbodimentWithoutVariables": (41, 2, (11, 0), (), "ShowEmbodimentWithoutVariables", None),
		"ShowInfoByObjects": (10, 2, (11, 0), (), "ShowInfoByObjects", None),
		"ShowListCountIsSameFormat": (43, 2, (11, 0), (), "ShowListCountIsSameFormat", None),
		"ShowNestingBlockName": (28, 2, (11, 0), (), "ShowNestingBlockName", None),
		"ShowPerformanceBlockName": (29, 2, (11, 0), (), "ShowPerformanceBlockName", None),
		"ShowPerformanceFull": (12, 2, (11, 0), (), "ShowPerformanceFull", None),
		"ShowSectionName": (4, 2, (11, 0), (), "ShowSectionName", None),
		"SupportPerformance": (11, 2, (11, 0), (), "SupportPerformance", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"UseAdditionalBlocks": (25, 2, (11, 0), (), "UseAdditionalBlocks", None),
		"UserTextStyle": (16, 2, (11, 0), (), "UserTextStyle", None),
	}
	_prop_map_put_ = {
		"BlockOnNewPage": ((13, LCID, 4, 0),()),
		"CalculatePosition": ((3, LCID, 4, 0),()),
		"CalculateZone": ((2, LCID, 4, 0),()),
		"CopySpcObjectOnCopyGeometry": ((40, LCID, 4, 0),()),
		"DeleteGeometry": ((5, LCID, 4, 0),()),
		"DeleteSpcObjectOnDeleteGeometry": ((39, LCID, 4, 0),()),
		"DisableAdditionalBlockEmptyStrings": ((37, LCID, 4, 0),()),
		"DisableEmptyBlockString": ((7, LCID, 4, 0),()),
		"DisableEmptyString": ((6, LCID, 4, 0),()),
		"DisableNestingBlockEmptyStrings": ((36, LCID, 4, 0),()),
		"DrawBottomUp": ((15, LCID, 4, 0),()),
		"InitialPosition": ((19, LCID, 4, 0),()),
		"InsertDash": ((9, LCID, 4, 0),()),
		"InsertNull": ((8, LCID, 4, 0),()),
		"LinkType": ((1, LCID, 4, 0),()),
		"PerformanceCount": ((17, LCID, 4, 0),()),
		"PositionUp": ((14, LCID, 4, 0),()),
		"PredefinedTextFileName": ((20, LCID, 4, 0),()),
		"ShowAdditionalBlockName": ((27, LCID, 4, 0),()),
		"ShowEmbodimentWithoutVariables": ((41, LCID, 4, 0),()),
		"ShowInfoByObjects": ((10, LCID, 4, 0),()),
		"ShowListCountIsSameFormat": ((43, LCID, 4, 0),()),
		"ShowNestingBlockName": ((28, LCID, 4, 0),()),
		"ShowPerformanceBlockName": ((29, LCID, 4, 0),()),
		"ShowPerformanceFull": ((12, LCID, 4, 0),()),
		"ShowSectionName": ((4, LCID, 4, 0),()),
		"SupportPerformance": ((11, LCID, 4, 0),()),
		"UseAdditionalBlocks": ((25, LCID, 4, 0),()),
		"UserTextStyle": ((16, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISpecificationTuningSection(DispatchBaseClass):
	'Ќастройка раздела спецификации.'
	CLSID = IID('{E68AA413-CC35-450D-BF35-0F294F59B08C}')
	coclass_clsid = IID('{03D146C9-35D2-4FBF-B051-053711FCA51B}')

	_prop_map_get_ = {
		# Method 'AdditionalBlocks' returns object of type 'IAdditionalBlockTunings'
		"AdditionalBlocks": (10, 2, (9, 0), (), "AdditionalBlocks", '{8910CC92-AC76-4837-AB7A-5FD3C7B74728}'),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AttachGeometry": (3, 2, (11, 0), (), "AttachGeometry", None),
		"FirstOnSheet": (6, 2, (11, 0), (), "FirstOnSheet", None),
		"IndependentPosition": (12, 2, (11, 0), (), "IndependentPosition", None),
		"Mark": (14, 2, (8, 0), (), "Mark", None),
		"MarkOn": (13, 2, (11, 0), (), "MarkOn", None),
		"Number": (1, 2, (3, 0), (), "Number", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"PutPosition": (4, 2, (11, 0), (), "PutPosition", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"ReserveStringCount": (7, 2, (2, 0), (), "ReserveStringCount", None),
		"ShowDocumentCode": (11, 2, (11, 0), (), "ShowDocumentCode", None),
		"SortObjects": (5, 2, (11, 0), (), "SortObjects", None),
		"SubsectionOn": (2, 2, (11, 0), (), "SubsectionOn", None),
		# Method 'Subsections' returns object of type 'ISpecificationSubsections'
		"Subsections": (8, 2, (9, 0), (), "Subsections", '{56532CB4-BD3F-442C-AFA4-0E6BEB677E61}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"UseAdditionalBlocks": (9, 2, (11, 0), (), "UseAdditionalBlocks", None),
	}
	_prop_map_put_ = {
		"AttachGeometry": ((3, LCID, 4, 0),()),
		"FirstOnSheet": ((6, LCID, 4, 0),()),
		"IndependentPosition": ((12, LCID, 4, 0),()),
		"Mark": ((14, LCID, 4, 0),()),
		"MarkOn": ((13, LCID, 4, 0),()),
		"PutPosition": ((4, LCID, 4, 0),()),
		"ReserveStringCount": ((7, LCID, 4, 0),()),
		"ShowDocumentCode": ((11, LCID, 4, 0),()),
		"SortObjects": ((5, LCID, 4, 0),()),
		"SubsectionOn": ((2, LCID, 4, 0),()),
		"UseAdditionalBlocks": ((9, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISpecificationTuningSections(DispatchBaseClass):
	' оллекци€ настроек разделов спецификации.'
	CLSID = IID('{01B1BF6F-B9E3-4E94-99A0-81394FB99B16}')
	coclass_clsid = IID('{B64E5FBC-99D3-4CBF-989F-0F832F3C7B5F}')

	# Result is of type ISpecificationTuningSection
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает настройки раздела спецификации, заданные по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E68AA413-CC35-450D-BF35-0F294F59B08C}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает настройки раздела спецификации, заданные по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E68AA413-CC35-450D-BF35-0F294F59B08C}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E68AA413-CC35-450D-BF35-0F294F59B08C}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISpiral3D(DispatchBaseClass):
	'—пираль 3D.'
	CLSID = IID('{8C428C5D-37EF-43A3-8815-410F177D3577}')
	coclass_clsid = None

	def GetBasePoint(self, X=pythoncom.Missing, Y=pythoncom.Missing):
		'ѕолучить координаты точки прив€зки спирали на базовой плоскости (точку пересечени€ оси спирали с базовой плоскостью).'
		return self._ApplyTypes_(5, 1, (11, 0), ((16389, 2), (16389, 2)), 'GetBasePoint', None,X
			, Y)

	def SetBasePoint(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg):
		'”становить координаты точки прив€зки спирали на базовой плоскости (точку пересечени€ оси спирали с базовой плоскостью).'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), ((5, 1), (5, 1)),X
			, Y)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BasePlane' returns object of type 'IModelObject'
		"BasePlane": (4, 2, (9, 0), (), "BasePlane", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"BuildingDirection": (8, 2, (11, 0), (), "BuildingDirection", None),
		"BuildingType": (7, 2, (3, 0), (), "BuildingType", None),
		"Height": (10, 2, (5, 0), (), "Height", None),
		# Method 'HeightBaseObject' returns object of type 'IModelObject'
		"HeightBaseObject": (11, 2, (9, 0), (), "HeightBaseObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"HeightCorrection": (12, 2, (5, 0), (), "HeightCorrection", None),
		"HeightType": (9, 2, (3, 0), (), "HeightType", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'Sketch' returns object of type 'ISketch'
		"Sketch": (14, 2, (9, 0), (), "Sketch", '{E6BBF50D-8401-4FB3-A6B6-153D3F447255}'),
		"Step": (2, 2, (5, 0), (), "Step", None),
		"TurnDirection": (3, 2, (11, 0), (), "TurnDirection", None),
		"TurningAngle": (13, 2, (5, 0), (), "TurningAngle", None),
		"TurnsCount": (1, 2, (5, 0), (), "TurnsCount", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"BasePlane": ((4, LCID, 4, 0),()),
		"BuildingDirection": ((8, LCID, 4, 0),()),
		"BuildingType": ((7, LCID, 4, 0),()),
		"Height": ((10, LCID, 4, 0),()),
		"HeightBaseObject": ((11, LCID, 4, 0),()),
		"HeightCorrection": ((12, LCID, 4, 0),()),
		"HeightType": ((9, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Step": ((2, LCID, 4, 0),()),
		"TurnDirection": ((3, LCID, 4, 0),()),
		"TurningAngle": ((13, LCID, 4, 0),()),
		"TurnsCount": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISpirals3D(DispatchBaseClass):
	' оллекци€ спиралей 3D.'
	CLSID = IID('{AFA7329D-E69C-4980-B3B3-8A2AA39DE979}')
	coclass_clsid = IID('{C926E817-2B20-48A1-AB97-F63972FBA07A}')

	# Result is of type ISpiral3D
	def Add(self, Type=defaultNamedNotOptArg):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((3, 1),),Type
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{8C428C5D-37EF-43A3-8815-410F177D3577}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type ISpiral3D
	# The method Spiral3D is actually a property, but must be used as a method to correctly pass the arguments
	def Spiral3D(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Spiral3D', '{8C428C5D-37EF-43A3-8815-410F177D3577}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISpline3D(DispatchBaseClass):
	'—плайн.'
	CLSID = IID('{4D0940A0-6A4A-4CE8-A08A-EA0A4AE91942}')
	coclass_clsid = IID('{CF10FB1D-FE72-48A2-A36B-19B63594D674}')

	# Result is of type ICurveVertexParam
	def AddVertex(self, Index=defaultNamedNotOptArg):
		'—оздание новой вершины.'
		ret = self._oleobj_.InvokeTypes(6, LCID, 1, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddVertex', '{2AD2E4B4-B870-437A-8D57-5807729FCB05}')
		return ret

	# Result is of type IModelObject
	# The method CenterPointAssociationObject is actually a property, but must be used as a method to correctly pass the arguments
	def CenterPointAssociationObject(self, PointIndex=defaultNamedNotOptArg):
		'“очка прив€зки центра кривизны.'
		ret = self._oleobj_.InvokeTypes(32, LCID, 2, (9, 0), ((3, 1),),PointIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'CenterPointAssociationObject', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type IKompasAPIObject
	# The method CenterPointParams is actually a property, but must be used as a method to correctly pass the arguments
	def CenterPointParams(self, PointIndex=defaultNamedNotOptArg):
		'ѕолучение параметров точки центра кривзны.'
		ret = self._oleobj_.InvokeTypes(30, LCID, 2, (9, 0), ((3, 1),),PointIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'CenterPointParams', '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')
		return ret

	# The method CenterPointType is actually a property, but must be used as a method to correctly pass the arguments
	def CenterPointType(self, PointIndex=defaultNamedNotOptArg):
		'”становить способ построени€ точки.'
		return self._oleobj_.InvokeTypes(31, LCID, 2, (3, 0), ((3, 1),),PointIndex
			)

	def ClearTangentParameters(self):
		'”далить параметры управлени€ во всех точках.'
		return self._oleobj_.InvokeTypes(34, LCID, 1, (11, 0), (),)

	# Result is of type IModelObject
	# The method ConstraintLimitObject is actually a property, but must be used as a method to correctly pass the arguments
	def ConstraintLimitObject(self, PointIndex=defaultNamedNotOptArg):
		'√раница.'
		ret = self._oleobj_.InvokeTypes(16, LCID, 2, (9, 0), ((3, 1),),PointIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'ConstraintLimitObject', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type IModelObject
	# The method ConstraintObject is actually a property, but must be used as a method to correctly pass the arguments
	def ConstraintObject(self, PointIndex=defaultNamedNotOptArg):
		'ќбъект сопр€жени€.'
		ret = self._oleobj_.InvokeTypes(15, LCID, 2, (9, 0), ((3, 1),),PointIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'ConstraintObject', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# The method ConstraintReverse is actually a property, but must be used as a method to correctly pass the arguments
	def ConstraintReverse(self, PointIndex=defaultNamedNotOptArg):
		'ѕротивоположное направление.'
		return self._oleobj_.InvokeTypes(18, LCID, 2, (11, 0), ((3, 1),),PointIndex
			)

	# The method ConstraintType is actually a property, but must be used as a method to correctly pass the arguments
	def ConstraintType(self, PointIndex=defaultNamedNotOptArg):
		'“ип сопр€жени€ в заданной вершине. ”правление кривизной.'
		return self._oleobj_.InvokeTypes(17, LCID, 2, (3, 0), ((3, 1),),PointIndex
			)

	# The method Curvature is actually a property, but must be used as a method to correctly pass the arguments
	def Curvature(self, PointIndex=defaultNamedNotOptArg):
		'¬еличина кривизны в указанной точке.'
		return self._oleobj_.InvokeTypes(21, LCID, 2, (5, 0), ((3, 1),),PointIndex
			)

	# The method CurvatureRadius is actually a property, but must be used as a method to correctly pass the arguments
	def CurvatureRadius(self, PointIndex=defaultNamedNotOptArg):
		'–адиус кривизны.'
		return self._oleobj_.InvokeTypes(20, LCID, 2, (5, 0), ((3, 1),),PointIndex
			)

	def DeleteCenterPointParams(self, PointIndex=defaultNamedNotOptArg):
		'”далить параметры дл€ заданной точки.'
		return self._oleobj_.InvokeTypes(33, LCID, 1, (11, 0), ((3, 1),),PointIndex
			)

	def DeleteVertex(self, Index=defaultNamedNotOptArg):
		'”далить вершину с указанным индексом.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), ((3, 1),),Index
			)

	# Result is of type IVector3D
	# The method DirectionVector is actually a property, but must be used as a method to correctly pass the arguments
	def DirectionVector(self, PointIndex=defaultNamedNotOptArg, VectorIndex=defaultNamedNotOptArg):
		'¬ектор в точке сопр€жени€.'
		ret = self._oleobj_.InvokeTypes(27, LCID, 2, (9, 0), ((3, 1), (3, 1)),PointIndex
			, VectorIndex)
		if ret is not None:
			ret = Dispatch(ret, 'DirectionVector', '{D51A4DCF-627D-44F5-89BA-46EF2449A212}')
		return ret

	def Flush(self):
		'ќчистить массив вершин.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), (),)

	def GetCenterPoint(self, PointIndex=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'”гол вектора производной в указанной точке.'
		return self._ApplyTypes_(28, 1, (11, 0), ((3, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetCenterPoint', None,PointIndex
			, X, Y, Z)

	def GetVector(self, PointIndex=defaultNamedNotOptArg, VectorIndex=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing
			, Z=pythoncom.Missing):
		'ѕолучить направление касательного вектора.'
		return self._ApplyTypes_(22, 1, (11, 0), ((3, 1), (3, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetVector', None,PointIndex
			, VectorIndex, X, Y, Z)

	def GetVertexCoordinatesArray(self, Coordinates=pythoncom.Missing, Weights=pythoncom.Missing):
		'ћассив координат и весов вершин в виде SAFEARRAY double - VT_ARRAY | VT_R8.'
		return self._ApplyTypes_(12, 1, (11, 0), ((16396, 2), (16396, 2)), 'GetVertexCoordinatesArray', None,Coordinates
			, Weights)

	def InvertVector(self, PointIndex=defaultNamedNotOptArg, VectorIndex=defaultNamedNotOptArg):
		'—менить направление касательного вектора на обратное.'
		return self._oleobj_.InvokeTypes(24, LCID, 1, (11, 0), ((3, 1), (3, 1)),PointIndex
			, VectorIndex)

	def ReadFromFile(self, FileName=defaultNamedNotOptArg):
		'ѕрочитать параметры вершин из текстового файла.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), ((8, 1),),FileName
			)

	def SetCenterPoint(self, PointIndex=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg):
		'”гол вектора производной в указанной точке.'
		return self._oleobj_.InvokeTypes(29, LCID, 1, (11, 0), ((3, 1), (5, 1), (5, 1), (5, 1)),PointIndex
			, X, Y, Z)

	# The method SetCenterPointAssociationObject is actually a property, but must be used as a method to correctly pass the arguments
	def SetCenterPointAssociationObject(self, PointIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'“очка прив€зки центра кривизны.'
		return self._oleobj_.InvokeTypes(32, LCID, 4, (24, 0), ((3, 1), (9, 1)),PointIndex
			, arg1)

	# The method SetCenterPointType is actually a property, but must be used as a method to correctly pass the arguments
	def SetCenterPointType(self, PointIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'”становить способ построени€ точки.'
		return self._oleobj_.InvokeTypes(31, LCID, 4, (24, 0), ((3, 1), (3, 1)),PointIndex
			, arg1)

	# The method SetConstraintLimitObject is actually a property, but must be used as a method to correctly pass the arguments
	def SetConstraintLimitObject(self, PointIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'√раница.'
		return self._oleobj_.InvokeTypes(16, LCID, 4, (24, 0), ((3, 1), (9, 1)),PointIndex
			, arg1)

	# The method SetConstraintObject is actually a property, but must be used as a method to correctly pass the arguments
	def SetConstraintObject(self, PointIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ќбъект сопр€жени€.'
		return self._oleobj_.InvokeTypes(15, LCID, 4, (24, 0), ((3, 1), (9, 1)),PointIndex
			, arg1)

	# The method SetConstraintReverse is actually a property, but must be used as a method to correctly pass the arguments
	def SetConstraintReverse(self, PointIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ѕротивоположное направление.'
		return self._oleobj_.InvokeTypes(18, LCID, 4, (24, 0), ((3, 1), (11, 1)),PointIndex
			, arg1)

	# The method SetConstraintType is actually a property, but must be used as a method to correctly pass the arguments
	def SetConstraintType(self, PointIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'“ип сопр€жени€ в заданной вершине. ”правление кривизной.'
		return self._oleobj_.InvokeTypes(17, LCID, 4, (24, 0), ((3, 1), (3, 1)),PointIndex
			, arg1)

	# The method SetCurvature is actually a property, but must be used as a method to correctly pass the arguments
	def SetCurvature(self, PointIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'¬еличина кривизны в указанной точке.'
		return self._oleobj_.InvokeTypes(21, LCID, 4, (24, 0), ((3, 1), (5, 1)),PointIndex
			, arg1)

	# The method SetCurvatureRadius is actually a property, but must be used as a method to correctly pass the arguments
	def SetCurvatureRadius(self, PointIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'–адиус кривизны.'
		return self._oleobj_.InvokeTypes(20, LCID, 4, (24, 0), ((3, 1), (5, 1)),PointIndex
			, arg1)

	# The method SetSplineTransitionType is actually a property, but must be used as a method to correctly pass the arguments
	def SetSplineTransitionType(self, PointIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'—пособ создани€ сопр€жени€ в заданной вершине.'
		return self._oleobj_.InvokeTypes(14, LCID, 4, (24, 0), ((3, 1), (3, 1)),PointIndex
			, arg1)

	# The method SetTangentVectorLenght is actually a property, but must be used as a method to correctly pass the arguments
	def SetTangentVectorLenght(self, PointIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ƒлина касательного вектора.'
		return self._oleobj_.InvokeTypes(19, LCID, 4, (24, 0), ((3, 1), (5, 1)),PointIndex
			, arg1)

	def SetVector(self, PointIndex=defaultNamedNotOptArg, VectorIndex=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg
			, Z=defaultNamedNotOptArg):
		'”становмить направление касательного вектора.'
		return self._oleobj_.InvokeTypes(23, LCID, 1, (11, 0), ((3, 1), (3, 1), (5, 1), (5, 1), (5, 1)),PointIndex
			, VectorIndex, X, Y, Z)

	# The method SetVectorDirectionObject is actually a property, but must be used as a method to correctly pass the arguments
	def SetVectorDirectionObject(self, PointIndex=defaultNamedNotOptArg, VectorIndex=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		'Ќаправл€ющий объект вектора в точке сопр€жени€.'
		return self._oleobj_.InvokeTypes(25, LCID, 4, (24, 0), ((3, 1), (3, 1), (9, 1)),PointIndex
			, VectorIndex, arg2)

	# The method SetVectorOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def SetVectorOrientation(self, PointIndex=defaultNamedNotOptArg, VectorIndex=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		'Ќаправление вектора в точке сопр€жени€.'
		return self._oleobj_.InvokeTypes(26, LCID, 4, (24, 0), ((3, 1), (3, 1), (11, 1)),PointIndex
			, VectorIndex, arg2)

	# The method SplineTransitionType is actually a property, but must be used as a method to correctly pass the arguments
	def SplineTransitionType(self, PointIndex=defaultNamedNotOptArg):
		'—пособ создани€ сопр€жени€ в заданной вершине.'
		return self._oleobj_.InvokeTypes(14, LCID, 2, (3, 0), ((3, 1),),PointIndex
			)

	# The method TangentVectorLenght is actually a property, but must be used as a method to correctly pass the arguments
	def TangentVectorLenght(self, PointIndex=defaultNamedNotOptArg):
		'ƒлина касательного вектора.'
		return self._oleobj_.InvokeTypes(19, LCID, 2, (5, 0), ((3, 1),),PointIndex
			)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	# Result is of type IModelObject
	# The method VectorDirectionObject is actually a property, but must be used as a method to correctly pass the arguments
	def VectorDirectionObject(self, PointIndex=defaultNamedNotOptArg, VectorIndex=defaultNamedNotOptArg):
		'Ќаправл€ющий объект вектора в точке сопр€жени€.'
		ret = self._oleobj_.InvokeTypes(25, LCID, 2, (9, 0), ((3, 1), (3, 1)),PointIndex
			, VectorIndex)
		if ret is not None:
			ret = Dispatch(ret, 'VectorDirectionObject', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# The method VectorOrientation is actually a property, but must be used as a method to correctly pass the arguments
	def VectorOrientation(self, PointIndex=defaultNamedNotOptArg, VectorIndex=defaultNamedNotOptArg):
		'Ќаправление вектора в точке сопр€жени€.'
		return self._oleobj_.InvokeTypes(26, LCID, 2, (11, 0), ((3, 1), (3, 1)),PointIndex
			, VectorIndex)

	# Result is of type ICurveVertexParam
	# The method VertexParams is actually a property, but must be used as a method to correctly pass the arguments
	def VertexParams(self, Index=defaultNamedNotOptArg):
		'ѕолучение параметров вершины ломаной.'
		ret = self._oleobj_.InvokeTypes(5, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'VertexParams', '{2AD2E4B4-B870-437A-8D57-5807729FCB05}')
		return ret

	def WriteToFile(self, FileName=defaultNamedNotOptArg):
		'«аписать параметры вершин в текстовый файл.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), ((8, 1),),FileName
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Closed": (1, 2, (11, 0), (), "Closed", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"Knots": (13, 2, (12, 0), (), "Knots", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"SplineOnPoles": (2, 2, (11, 0), (), "SplineOnPoles", None),
		"SplineOrder": (3, 2, (3, 0), (), "SplineOrder", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
		"VertexCount": (4, 2, (3, 0), (), "VertexCount", None),
		"VertexParamsArray": (11, 2, (12, 0), (), "VertexParamsArray", None),
	}
	_prop_map_put_ = {
		"Closed": ((1, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Knots": ((13, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"SplineOnPoles": ((2, LCID, 4, 0),()),
		"SplineOrder": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISplineOnSurface(DispatchBaseClass):
	'—плайн на поверхности.'
	CLSID = IID('{BFF82605-C64B-460E-A6D3-3C22229A8325}')
	coclass_clsid = IID('{FE7D22F2-17ED-4446-A031-67D67AC47F29}')

	def AddPoint(self, IndexAt=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg
			, W=defaultNamedNotOptArg, AssociationObject=defaultNamedNotOptArg):
		'—оздание новой вершины.'
		return self._oleobj_.InvokeTypes(13, LCID, 1, (11, 0), ((3, 1), (5, 1), (5, 1), (5, 1), (5, 1), (9, 0)),IndexAt
			, X, Y, Z, W, AssociationObject
			)

	def AddVertex(self, IndexAt=defaultNamedNotOptArg, U=defaultNamedNotOptArg, V=defaultNamedNotOptArg, W=defaultNamedNotOptArg
			, AssociationObject=defaultNamedNotOptArg):
		'—оздание новой вершины.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), ((3, 1), (5, 1), (5, 1), (5, 1), (9, 1)),IndexAt
			, U, V, W, AssociationObject)

	# Result is of type IModelObject
	# The method AssociationObject is actually a property, but must be used as a method to correctly pass the arguments
	def AssociationObject(self, Index=defaultNamedNotOptArg):
		'”становить опорный объект дл€ вершины.'
		ret = self._oleobj_.InvokeTypes(15, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'AssociationObject', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def Clear(self):
		'ќчистить массив вершин.'
		return self._oleobj_.InvokeTypes(10, LCID, 1, (11, 0), (),)

	def ClearTangentParameters(self):
		'”далить параметры управлени€ во всех точках.'
		return self._oleobj_.InvokeTypes(22, LCID, 1, (11, 0), (),)

	def DeleteVertex(self, Index=defaultNamedNotOptArg):
		'”далить вершину с указанным индексом.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), ((3, 1),),Index
			)

	def GetPoint(self, Index=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing
			, W=pythoncom.Missing):
		' оординаты вершины, W - вес.'
		return self._ApplyTypes_(11, 1, (11, 0), ((3, 1), (16389, 2), (16389, 2), (16389, 2), (16389, 2)), 'GetPoint', None,Index
			, X, Y, Z, W)

	def GetTangentVector(self, Index=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'ѕолучить направление касательного вектора.'
		return self._ApplyTypes_(18, 1, (11, 0), ((3, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetTangentVector', None,Index
			, X, Y, Z)

	def GetVertex(self, Index=defaultNamedNotOptArg, U=pythoncom.Missing, V=pythoncom.Missing, W=pythoncom.Missing):
		' оординаты UV в %, W - вес.'
		return self._ApplyTypes_(6, 1, (11, 0), ((3, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetVertex', None,Index
			, U, V, W)

	def GetVertexParams(self, UV=pythoncom.Missing, Points=pythoncom.Missing, Weights=pythoncom.Missing):
		'ћассив параметров UV и весов вершин в виде SAFEARRAY double - VT_ARRAY | VT_R8.'
		return self._ApplyTypes_(14, 1, (11, 0), ((16396, 2), (16396, 2), (16396, 2)), 'GetVertexParams', None,UV
			, Points, Weights)

	def Invert(self, Index=defaultNamedNotOptArg):
		'—менить направление касательного вектора на обратное.'
		return self._oleobj_.InvokeTypes(19, LCID, 1, (11, 0), ((3, 1),),Index
			)

	# The method Reverse is actually a property, but must be used as a method to correctly pass the arguments
	def Reverse(self, Index=defaultNamedNotOptArg):
		'ѕротивоположное направление.'
		return self._oleobj_.InvokeTypes(23, LCID, 2, (11, 0), ((3, 1),),Index
			)

	# The method SetAssociationObject is actually a property, but must be used as a method to correctly pass the arguments
	def SetAssociationObject(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'”становить опорный объект дл€ вершины.'
		return self._oleobj_.InvokeTypes(15, LCID, 4, (24, 0), ((3, 1), (9, 1)),Index
			, arg1)

	def SetPoint(self, Index=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg
			, W=defaultNamedNotOptArg):
		' оординаты вершины, W - вес.'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (11, 0), ((3, 1), (5, 1), (5, 1), (5, 1), (5, 1)),Index
			, X, Y, Z, W)

	# The method SetReverse is actually a property, but must be used as a method to correctly pass the arguments
	def SetReverse(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ѕротивоположное направление.'
		return self._oleobj_.InvokeTypes(23, LCID, 4, (24, 0), ((3, 1), (11, 1)),Index
			, arg1)

	# The method SetSplineTangent is actually a property, but must be used as a method to correctly pass the arguments
	def SetSplineTangent(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'“ип касательного вектора в вершине.'
		return self._oleobj_.InvokeTypes(16, LCID, 4, (24, 0), ((3, 1), (3, 1)),Index
			, arg1)

	# The method SetTangentCurve is actually a property, but must be used as a method to correctly pass the arguments
	def SetTangentCurve(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		' асательна€ крива€.'
		return self._oleobj_.InvokeTypes(21, LCID, 4, (24, 0), ((3, 1), (9, 1)),Index
			, arg1)

	def SetTangentVector(self, Index=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg):
		'”становмить направление касательного вектора.'
		return self._oleobj_.InvokeTypes(17, LCID, 1, (11, 0), ((3, 1), (5, 1), (5, 1), (5, 1)),Index
			, X, Y, Z)

	# The method SetVectorLenght is actually a property, but must be used as a method to correctly pass the arguments
	def SetVectorLenght(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ƒлина вектора.'
		return self._oleobj_.InvokeTypes(20, LCID, 4, (24, 0), ((3, 1), (5, 1)),Index
			, arg1)

	def SetVertex(self, Index=defaultNamedNotOptArg, U=defaultNamedNotOptArg, V=defaultNamedNotOptArg, W=defaultNamedNotOptArg):
		' оординаты UV в %, W - вес.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), ((3, 1), (5, 1), (5, 1), (5, 1)),Index
			, U, V, W)

	# The method SplineTangent is actually a property, but must be used as a method to correctly pass the arguments
	def SplineTangent(self, Index=defaultNamedNotOptArg):
		'“ип касательного вектора в вершине.'
		return self._oleobj_.InvokeTypes(16, LCID, 2, (3, 0), ((3, 1),),Index
			)

	# Result is of type IModelObject
	# The method TangentCurve is actually a property, but must be used as a method to correctly pass the arguments
	def TangentCurve(self, Index=defaultNamedNotOptArg):
		' асательна€ крива€.'
		ret = self._oleobj_.InvokeTypes(21, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'TangentCurve', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	# The method VectorLenght is actually a property, but must be used as a method to correctly pass the arguments
	def VectorLenght(self, Index=defaultNamedNotOptArg):
		'ƒлина вектора.'
		return self._oleobj_.InvokeTypes(20, LCID, 2, (5, 0), ((3, 1),),Index
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Closed": (1, 2, (11, 0), (), "Closed", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"SplineOnPoles": (2, 2, (11, 0), (), "SplineOnPoles", None),
		"SplineOrder": (3, 2, (3, 0), (), "SplineOrder", None),
		# Method 'SurfaceObject' returns object of type 'IModelObject'
		"SurfaceObject": (4, 2, (9, 0), (), "SurfaceObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
		"VertexCount": (5, 2, (3, 0), (), "VertexCount", None),
	}
	_prop_map_put_ = {
		"Closed": ((1, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"SplineOnPoles": ((2, LCID, 4, 0),()),
		"SplineOrder": ((3, LCID, 4, 0),()),
		"SurfaceObject": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISplines3D(DispatchBaseClass):
	" оллекци€ элементов 'сплайн'."
	CLSID = IID('{C4BC0839-932F-4DBC-9A84-5D1FE8927351}')
	coclass_clsid = IID('{A7899FAC-ECF5-40AC-9267-97B98B849570}')

	# Result is of type ISpline3D
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{4D0940A0-6A4A-4CE8-A08A-EA0A4AE91942}')
		return ret

	def Convert(self, Objects=defaultNamedNotOptArg):
		'—оздает сплайны по объектам и добавл€ет их в коллекцию.'
		return self._ApplyTypes_(3, 1, (12, 0), ((12, 1),), 'Convert', None,Objects
			)

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type ISpline3D
	# The method Spline3D is actually a property, but must be used as a method to correctly pass the arguments
	def Spline3D(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Spline3D', '{4D0940A0-6A4A-4CE8-A08A-EA0A4AE91942}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISplinesOnSurfaces(DispatchBaseClass):
	' оллекци€ сплайнов по поверхност€м.'
	CLSID = IID('{0E670E69-68AB-4075-9CE4-99E0A1547538}')
	coclass_clsid = IID('{83AE651B-838C-4292-9B82-20918F192841}')

	# Result is of type ISplineOnSurface
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{BFF82605-C64B-460E-A6D3-3C22229A8325}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type ISplineOnSurface
	# The method SplineOnSurface is actually a property, but must be used as a method to correctly pass the arguments
	def SplineOnSurface(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по ссылке или индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'SplineOnSurface', '{BFF82605-C64B-460E-A6D3-3C22229A8325}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISplitLine(DispatchBaseClass):
	'Ћини€ разъема.'
	CLSID = IID('{969B49D1-E660-4E94-9343-DE5B0F397B03}')
	coclass_clsid = IID('{606AD1D9-FE0C-44EF-AB97-EE65EF26BC08}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"CutObjects": (4, 2, (12, 0), (), "CutObjects", None),
		"Direction": (3, 2, (3, 0), (), "Direction", None),
		"Faces": (2, 2, (12, 0), (), "Faces", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'Sketch' returns object of type 'ISketch'
		"Sketch": (1, 2, (9, 0), (), "Sketch", '{E6BBF50D-8401-4FB3-A6B6-153D3F447255}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"CutObjects": ((4, LCID, 4, 0),()),
		"Direction": ((3, LCID, 4, 0),()),
		"Faces": ((2, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Sketch": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISplitLines(DispatchBaseClass):
	' оллекци€ линий разъема.'
	CLSID = IID('{986E4A45-362F-469D-A3AE-CE081B8EA93A}')
	coclass_clsid = IID('{452F7CD4-5C9C-48F5-956F-E07E0B1CC30D}')

	# Result is of type ISplitLine
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{969B49D1-E660-4E94-9343-DE5B0F397B03}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type ISplitLine
	# The method SplitLine is actually a property, but must be used as a method to correctly pass the arguments
	def SplitLine(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'SplitLine', '{969B49D1-E660-4E94-9343-DE5B0F397B03}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISpotfacingHoleParameters(DispatchBaseClass):
	'ќтверстие с цековкой.'
	CLSID = IID('{3EBDD778-87EB-4357-BF08-47BCDE5ABB5D}')
	coclass_clsid = IID('{E588E23F-6AC1-4770-B184-309B13180E18}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"SpotfacingDepth": (2, 2, (5, 0), (), "SpotfacingDepth", None),
		"SpotfacingDiameter": (1, 2, (5, 0), (), "SpotfacingDiameter", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"SpotfacingDepth": ((2, LCID, 4, 0),()),
		"SpotfacingDiameter": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IStamp(DispatchBaseClass):
	'Ўтамп.'
	CLSID = IID('{250CE350-7C21-47FD-8FF2-C44A9FF177DF}')
	coclass_clsid = IID('{79CB82D9-6EA1-49D2-8479-C7005D87EC77}')

	def Clear(self, Id=defaultNamedNotOptArg):
		'ќчистить штамп.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), ((3, 1),),Id
			)

	def GetNextColumnId(self, Id=defaultNamedNotOptArg):
		'ѕолучить идентификатор следующей не пустой €чейки штампа.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (3, 0), ((3, 1),),Id
			)

	# Result is of type IText
	# The method Text is actually a property, but must be used as a method to correctly pass the arguments
	def Text(self, Id=defaultNamedNotOptArg):
		'“екст.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((3, 1),),Id
			)
		if ret is not None:
			ret = Dispatch(ret, 'Text', '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')
		return ret

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Crossed": (5, 2, (11, 0), (), "Crossed", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IStraightAxis(DispatchBaseClass):
	'ѕр€ма€ ось.'
	CLSID = IID('{7B2820E0-2CB7-4412-9B96-F291DD790448}')
	coclass_clsid = IID('{04728D73-A533-4C98-B0BF-92A8A02E6F4C}')

	# Result is of type IMarkNode
	def AddNodeByPoint(self, Type=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg):
		'ƒобавить узел марки по координатам.'
		ret = self._oleobj_.InvokeTypes(2012, LCID, 1, (9, 0), ((3, 1), (5, 1), (5, 1)),Type
			, X, Y)
		if ret is not None:
			ret = Dispatch(ret, 'AddNodeByPoint', '{5AC48E97-80B1-459F-9709-1F3F374559BE}')
		return ret

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def GetInsertionPoints(self, First=defaultNamedNotOptArg, Points=pythoncom.Missing, Directions=pythoncom.Missing, Nodes=pythoncom.Missing):
		'ѕолучить координаты точек дл€ вставки дополнительных элементов.'
		return self._ApplyTypes_(2010, 1, (11, 0), ((11, 1), (16396, 2), (16396, 2), (16396, 2)), 'GetInsertionPoints', None,First
			, Points, Directions, Nodes)

	# Result is of type IMarkNode
	def GetNodeByPoint(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Limit=defaultNamedNotOptArg):
		'ѕолучить узел марки по координатам.'
		ret = self._oleobj_.InvokeTypes(2011, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1)),X
			, Y, Limit)
		if ret is not None:
			ret = Dispatch(ret, 'GetNodeByPoint', '{5AC48E97-80B1-459F-9709-1F3F374559BE}')
		return ret

	# Result is of type IAxisJut
	# The method Jut is actually a property, but must be used as a method to correctly pass the arguments
	def Jut(self, First=defaultNamedNotOptArg):
		'ѕолучить ¬ыступ.First = TRUE первый, First = FALSE второй.'
		ret = self._oleobj_.InvokeTypes(7, LCID, 2, (9, 0), ((11, 1),),First
			)
		if ret is not None:
			ret = Dispatch(ret, 'Jut', '{5A22E024-F530-45DB-A3F2-CA0587BDA1B5}')
		return ret

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (6, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AutoStroke": (2009, 2, (11, 0), (), "AutoStroke", None),
		"DottedLength": (2003, 2, (5, 0), (), "DottedLength", None),
		"DoubleMark": (2001, 2, (11, 0), (), "DoubleMark", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"Interval": (2004, 2, (5, 0), (), "Interval", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		"Length": (5, 2, (5, 0), (), "Length", None),
		# Method 'MarkNodes' returns object of type 'IMarkNodes'
		"MarkNodes": (8, 2, (9, 0), (), "MarkNodes", '{EB8ACD77-8008-4F89-A311-2F4712462F72}'),
		"MarkSize": (2002, 2, (5, 0), (), "MarkSize", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Stroke": (2005, 2, (5, 0), (), "Stroke", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		# Method 'Text' returns object of type 'IText'
		"Text": (2006, 2, (9, 0), (), "Text", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		# Method 'TextAfter' returns object of type 'IText'
		"TextAfter": (2008, 2, (9, 0), (), "TextAfter", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		# Method 'TextBefore' returns object of type 'IText'
		"TextBefore": (2007, 2, (9, 0), (), "TextBefore", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"X1": (1, 2, (5, 0), (), "X1", None),
		"X2": (3, 2, (5, 0), (), "X2", None),
		"Y1": (2, 2, (5, 0), (), "Y1", None),
		"Y2": (4, 2, (5, 0), (), "Y2", None),
	}
	_prop_map_put_ = {
		"Angle": ((6, LCID, 4, 0),()),
		"AutoStroke": ((2009, LCID, 4, 0),()),
		"DottedLength": ((2003, LCID, 4, 0),()),
		"DoubleMark": ((2001, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"Interval": ((2004, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"Length": ((5, LCID, 4, 0),()),
		"MarkSize": ((2002, LCID, 4, 0),()),
		"Stroke": ((2005, LCID, 4, 0),()),
		"X1": ((1, LCID, 4, 0),()),
		"X2": ((3, LCID, 4, 0),()),
		"Y1": ((2, LCID, 4, 0),()),
		"Y2": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IStyle(DispatchBaseClass):
	'—тиль.'
	CLSID = IID('{8DFD15E0-345E-4B1C-86A1-BD65F87128B5}')
	coclass_clsid = IID('{F280E407-A09F-4A98-93A4-451260A3E4C0}')

	def Delete(self):
		'”далить стиль.'
		return self._oleobj_.InvokeTypes(3008, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3007, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"ApiStyleId": (3002, 2, (3, 0), (), "ApiStyleId", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"DisplayStyleId": (3003, 2, (3, 0), (), "DisplayStyleId", None),
		"IsExternalStyle": (3004, 2, (11, 0), (), "IsExternalStyle", None),
		"LibraryPath": (3005, 2, (8, 0), (), "LibraryPath", None),
		"LibraryStyleId": (3006, 2, (3, 0), (), "LibraryStyleId", None),
		"Name": (3001, 2, (8, 0), (), "Name", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"DisplayStyleId": ((3003, LCID, 4, 0),()),
		"Name": ((3001, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IStyles(DispatchBaseClass):
	' оллекци€ стилей.'
	CLSID = IID('{E821AE61-FA05-4B39-8908-BD37D6D044A4}')
	coclass_clsid = IID('{937A14C5-7FB0-4675-80D5-AE99A73D5254}')

	# Result is of type IStyle
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(3, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{8DFD15E0-345E-4B1C-86A1-BD65F87128B5}')
		return ret

	# Result is of type IStyle
	def AddStyleFromLibrary(self, LibraryPath=defaultNamedNotOptArg, Id=defaultNamedNotOptArg, External=defaultNamedNotOptArg):
		'ƒобавить стиль из библиотеки.'
		ret = self._oleobj_.InvokeTypes(5, LCID, 1, (9, 0), ((8, 1), (3, 1), (11, 1)),LibraryPath
			, Id, External)
		if ret is not None:
			ret = Dispatch(ret, 'AddStyleFromLibrary', '{8DFD15E0-345E-4B1C-86A1-BD65F87128B5}')
		return ret

	# Result is of type IStyle
	def Copy(self, Style=defaultNamedNotOptArg):
		' опировать стиль.'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((9, 1),),Style
			)
		if ret is not None:
			ret = Dispatch(ret, 'Copy', '{8DFD15E0-345E-4B1C-86A1-BD65F87128B5}')
		return ret

	# Result is of type IStyle
	def FindStyleFromLibrary(self, LibraryPath=defaultNamedNotOptArg, LibraryStyleId=defaultNamedNotOptArg):
		'¬озвращает внешний стиль если он был добавлен из библиотеки.'
		ret = self._oleobj_.InvokeTypes(6, LCID, 1, (9, 0), ((8, 1), (3, 1)),LibraryPath
			, LibraryStyleId)
		if ret is not None:
			ret = Dispatch(ret, 'FindStyleFromLibrary', '{8DFD15E0-345E-4B1C-86A1-BD65F87128B5}')
		return ret

	# Result is of type IStyle
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу или по имени.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{8DFD15E0-345E-4B1C-86A1-BD65F87128B5}')
		return ret

	# Result is of type IStyle
	# The method StyleByApiId is actually a property, but must be used as a method to correctly pass the arguments
	def StyleByApiId(self, Id=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по идентификатору стил€ API.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 2, (9, 0), ((3, 1),),Id
			)
		if ret is not None:
			ret = Dispatch(ret, 'StyleByApiId', '{8DFD15E0-345E-4B1C-86A1-BD65F87128B5}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу или по имени.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{8DFD15E0-345E-4B1C-86A1-BD65F87128B5}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{8DFD15E0-345E-4B1C-86A1-BD65F87128B5}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IStylesManager(DispatchBaseClass):
	'ћенеджер стилей.'
	CLSID = IID('{4F13BB1B-44AA-42E6-BD50-30E21E434D1B}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'CurvesStyles' returns object of type 'IStyles'
		"CurvesStyles": (9501, 2, (9, 0), (), "CurvesStyles", '{E821AE61-FA05-4B39-8908-BD37D6D044A4}'),
		# Method 'HatchsStyles' returns object of type 'IStyles'
		"HatchsStyles": (9503, 2, (9, 0), (), "HatchsStyles", '{E821AE61-FA05-4B39-8908-BD37D6D044A4}'),
		# Method 'TextsStyles' returns object of type 'IStyles'
		"TextsStyles": (9502, 2, (9, 0), (), "TextsStyles", '{E821AE61-FA05-4B39-8908-BD37D6D044A4}'),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISurfaceContainer(DispatchBaseClass):
	'»нтерфейс контейнера поверхностей.'
	CLSID = IID('{2FE3B199-A6B2-4644-9950-F9905250FF0D}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'CloudPointsSurfaces' returns object of type 'ICloudPointsSurfaces'
		"CloudPointsSurfaces": (15012, 2, (9, 0), (), "CloudPointsSurfaces", '{6CA7CE7A-12C8-4103-ACC1-11001DD1B01D}'),
		# Method 'EquidistantSurfaces' returns object of type 'IEquidistantSurfaces'
		"EquidistantSurfaces": (15006, 2, (9, 0), (), "EquidistantSurfaces", '{992D7C05-7A25-46FB-AAB1-B7337E6EA74B}'),
		# Method 'EvolutionSurfaces' returns object of type 'IEvolutions'
		"EvolutionSurfaces": (15015, 2, (9, 0), (), "EvolutionSurfaces", '{8D984124-C430-45B3-939A-B5264C5B1388}'),
		# Method 'ExtensionSurfaces' returns object of type 'IExtensionSurfaces'
		"ExtensionSurfaces": (15008, 2, (9, 0), (), "ExtensionSurfaces", '{5F6EE7F9-972A-4BB8-B1E4-BC1C74048FFF}'),
		# Method 'ExtrusionSurfaces' returns object of type 'IExtrusions'
		"ExtrusionSurfaces": (15009, 2, (9, 0), (), "ExtrusionSurfaces", '{A160C032-CF96-4467-A682-CE2243DF76BD}'),
		# Method 'FaceRemovers' returns object of type 'IFaceRemovers'
		"FaceRemovers": (15002, 2, (9, 0), (), "FaceRemovers", '{6E177627-05D6-40B4-B955-9203F00656B5}'),
		# Method 'ImportedSurfaces' returns object of type 'IImportedSurfaces'
		"ImportedSurfaces": (15013, 2, (9, 0), (), "ImportedSurfaces", '{7791DDC6-7C2D-450B-BB44-660B078E52D6}'),
		# Method 'JointSurfaces' returns object of type 'IJointSurfaces'
		"JointSurfaces": (15017, 2, (9, 0), (), "JointSurfaces", '{C8AD51FA-5A71-4EE4-ADB2-DDAAA90F1621}'),
		# Method 'LoftSurfaces' returns object of type 'ILofts'
		"LoftSurfaces": (15014, 2, (9, 0), (), "LoftSurfaces", '{AF5F922F-8C32-4949-A29A-BB5EC7A99D00}'),
		# Method 'MeshPointsSurfaces' returns object of type 'IMeshPointsSurfaces'
		"MeshPointsSurfaces": (15011, 2, (9, 0), (), "MeshPointsSurfaces", '{46AFC862-E2DA-432B-95A3-7971BFC82CB8}'),
		# Method 'NurbsSurfaces' returns object of type 'INurbsSurfaces'
		"NurbsSurfaces": (15004, 2, (9, 0), (), "NurbsSurfaces", '{DB184867-6207-4FB7-9B3F-882BEAA16B4D}'),
		# Method 'NurbsSurfacesByCurvesMeshs' returns object of type 'INurbsSurfacesByCurvesMeshs'
		"NurbsSurfacesByCurvesMeshs": (15016, 2, (9, 0), (), "NurbsSurfacesByCurvesMeshs", '{9CEEC1DF-A155-4702-AD18-0D851A4B85A8}'),
		# Method 'RestoredSurfaces' returns object of type 'IRestoredSurfaces'
		"RestoredSurfaces": (15018, 2, (9, 0), (), "RestoredSurfaces", '{CF84B430-2579-49CA-B937-02354EB1F8A7}'),
		# Method 'RotatedSurfaces' returns object of type 'IRotateds'
		"RotatedSurfaces": (15010, 2, (9, 0), (), "RotatedSurfaces", '{A9B14309-92B3-46BA-8841-233293A60310}'),
		# Method 'RuledSurfaces' returns object of type 'IRuledSurfaces'
		"RuledSurfaces": (15005, 2, (9, 0), (), "RuledSurfaces", '{3F3EFC1C-A0A7-4B06-BF7A-384BAB27B07F}'),
		# Method 'SurfacePatches' returns object of type 'ISurfacePatches'
		"SurfacePatches": (15001, 2, (9, 0), (), "SurfacePatches", '{DEE5B135-4D8E-4AD8-AEA4-E763F68290B2}'),
		# Method 'SurfaceSewers' returns object of type 'ISurfaceSewers'
		"SurfaceSewers": (15003, 2, (9, 0), (), "SurfaceSewers", '{70AE0BA0-2059-4EAB-BE41-A6E8C8ACFA8A}'),
		# Method 'TrimmedSurfaces' returns object of type 'ITrimmedSurfaces'
		"TrimmedSurfaces": (15007, 2, (9, 0), (), "TrimmedSurfaces", '{799A9110-799B-40E5-85AF-087AD30A89B4}'),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISurfacePatch(DispatchBaseClass):
	'»нтерфейс заплатки.'
	CLSID = IID('{B6330040-7ABA-4ECD-8C92-5B441AF11C3B}')
	coclass_clsid = IID('{E61F549B-2E9E-45B6-A647-71730E3EEA49}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Edges": (1, 2, (12, 0), (), "Edges", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Edges": ((1, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISurfacePatches(DispatchBaseClass):
	' оллекци€ заплаток.'
	CLSID = IID('{DEE5B135-4D8E-4AD8-AEA4-E763F68290B2}')
	coclass_clsid = IID('{F77E276E-6F68-4A23-AF68-EEF29603B1AD}')

	# Result is of type ISurfacePatch
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{B6330040-7ABA-4ECD-8C92-5B441AF11C3B}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type ISurfacePatch
	# The method SurfacePatch is actually a property, but must be used as a method to correctly pass the arguments
	def SurfacePatch(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'SurfacePatch', '{B6330040-7ABA-4ECD-8C92-5B441AF11C3B}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISurfaceSewer(DispatchBaseClass):
	'ќпераци€ сшивки поверхностей.'
	CLSID = IID('{031FD1C7-9CB6-4E49-A27D-73B8D0B648D4}')
	coclass_clsid = IID('{9541E720-DED1-4A04-A6F0-F11C2512C932}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"CreateBody": (3, 2, (11, 0), (), "CreateBody", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Precision": (2, 2, (5, 0), (), "Precision", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Shells": (1, 2, (12, 0), (), "Shells", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"CreateBody": ((3, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Precision": ((2, LCID, 4, 0),()),
		"Shells": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISurfaceSewers(DispatchBaseClass):
	' оллекци€ операций сшивки поверхностей граней.'
	CLSID = IID('{70AE0BA0-2059-4EAB-BE41-A6E8C8ACFA8A}')
	coclass_clsid = IID('{98702E0A-C12C-49F3-A188-FBC453B4B88C}')

	# Result is of type ISurfaceSewer
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{031FD1C7-9CB6-4E49-A27D-73B8D0B648D4}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type ISurfaceSewer
	# The method SurfaceSewer is actually a property, but must be used as a method to correctly pass the arguments
	def SurfaceSewer(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'SurfaceSewer', '{031FD1C7-9CB6-4E49-A27D-73B8D0B648D4}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISurfaceThickening(DispatchBaseClass):
	'ќпераци€ придани€ толщины поверхности.'
	CLSID = IID('{984F7DD6-A7FB-4693-862F-459CC8630B11}')
	coclass_clsid = IID('{63974EE5-CB94-44B2-8FA0-A13F4264BAF5}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Faces": (1, 2, (12, 0), (), "Faces", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Faces": ((1, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISurfaceThickenings(DispatchBaseClass):
	' оллукци€ операций придани€ толщины поверхности.'
	CLSID = IID('{7A9B6FCC-2156-48C8-BC95-597242EE1B9E}')
	coclass_clsid = IID('{B9101BEB-76D3-44F9-8224-0005FF0E5593}')

	# Result is of type ISurfaceThickening
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{984F7DD6-A7FB-4693-862F-459CC8630B11}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type ISurfaceThickening
	# The method SurfaceThickening is actually a property, but must be used as a method to correctly pass the arguments
	def SurfaceThickening(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'SurfaceThickening', '{984F7DD6-A7FB-4693-862F-459CC8630B11}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISurfacesIntersectionCurve(DispatchBaseClass):
	' рива€ пересечени€ поверхностей'
	CLSID = IID('{758420A0-BECB-4FDA-BDDE-1F398B41117C}')
	coclass_clsid = IID('{CE94C01B-ED23-43FC-98BB-D7BD85EE0D47}')

	def AddObjects(self, ForArray1=defaultNamedNotOptArg, Objects=defaultNamedNotOptArg):
		'ƒобавить элемент(ы) в указанный набор'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), ((11, 1), (12, 1)),ForArray1
			, Objects)

	def Clear(self, ForArray1=defaultNamedNotOptArg):
		'ќчистить указанный набор объектов.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((11, 1),),ForArray1
			)

	# The method Edges is actually a property, but must be used as a method to correctly pass the arguments
	def Edges(self, Index=defaultNamedNotOptArg):
		'ѕолучить ребра созданных контуров по индексу. ¬озвращаетс€ массив ребер в виде массива VT_ARRAY | VT_DISPATCH.'
		return self._ApplyTypes_(10, 2, (12, 0), ((3, 1),), 'Edges', None,Index
			)

	# The method EdgesCheck is actually a property, but must be used as a method to correctly pass the arguments
	def EdgesCheck(self, ContourIndex=defaultNamedNotOptArg):
		'ѕризнак выбора контура по индексу.'
		return self._oleobj_.InvokeTypes(11, LCID, 2, (11, 0), ((3, 1),),ContourIndex
			)

	# Result is of type IModelObject
	def GetObject(self, ForArray1=defaultNamedNotOptArg, Index=defaultNamedNotOptArg):
		'ѕолучить объект из указанного набора по индексу'
		ret = self._oleobj_.InvokeTypes(6, LCID, 1, (9, 0), ((11, 1), (3, 1)),ForArray1
			, Index)
		if ret is not None:
			ret = Dispatch(ret, 'GetObject', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def GetObjects(self, ObjectsArray1=pythoncom.Missing, ObjectsArray2=pythoncom.Missing):
		'ѕолучить 1-й и 2-й набор поверхностей в виде SAFEARRAY DISPATCH - VT_ARRAY | VT_DISPATCH.'
		return self._ApplyTypes_(2, 1, (11, 0), ((16396, 2), (16396, 2)), 'GetObjects', None,ObjectsArray1
			, ObjectsArray2)

	# The method ObjectsCount is actually a property, but must be used as a method to correctly pass the arguments
	def ObjectsCount(self, ForArray1=defaultNamedNotOptArg):
		'ѕолучить количество объектов в указанном наборе'
		return self._oleobj_.InvokeTypes(5, LCID, 2, (3, 0), ((11, 1),),ForArray1
			)

	# The method SetEdgesCheck is actually a property, but must be used as a method to correctly pass the arguments
	def SetEdgesCheck(self, ContourIndex=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ѕризнак выбора контура по индексу.'
		return self._oleobj_.InvokeTypes(11, LCID, 4, (24, 0), ((3, 1), (11, 1)),ContourIndex
			, arg1)

	def SetObjects(self, ObjectsArray1=defaultNamedNotOptArg, ObjectsArray2=defaultNamedNotOptArg):
		'«адать 1-й и 2-й наборы поверхностей в виде SAFEARRAY DISPATCH - VT_ARRAY | VT_DISPATCH.'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (11, 0), ((12, 1), (12, 1)),ObjectsArray1
			, ObjectsArray2)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AutoCheck": (7, 2, (11, 0), (), "AutoCheck", None),
		"EdgesArraysCount": (9, 2, (3, 0), (), "EdgesArraysCount", None),
		"EdgesChecks": (8, 2, (12, 0), (), "EdgesChecks", None),
		"EdgesChecksCount": (12, 2, (3, 0), (), "EdgesChecksCount", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"AutoCheck": ((7, LCID, 4, 0),()),
		"EdgesChecks": ((8, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISurfacesIntersectionCurves(DispatchBaseClass):
	' оллекци€ кривых пересечений поверхностей.'
	CLSID = IID('{453E0E34-4D2D-47B2-8E95-EB05C731961D}')
	coclass_clsid = IID('{BDD167C1-8439-412E-8A41-4A01576CBC79}')

	# Result is of type ISurfacesIntersectionCurve
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{758420A0-BECB-4FDA-BDDE-1F398B41117C}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type ISurfacesIntersectionCurve
	# The method SurfacesIntersectionCurve is actually a property, but must be used as a method to correctly pass the arguments
	def SurfacesIntersectionCurve(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по ссылке или индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'SurfacesIntersectionCurve', '{758420A0-BECB-4FDA-BDDE-1F398B41117C}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ISymbols2DContainer(DispatchBaseClass):
	'»нтерфейс контейнера условных обозначений 2D.'
	CLSID = IID('{F46B0086-17F2-4489-A5A7-0AA677610AFD}')
	coclass_clsid = None

	_prop_map_get_ = {
		# Method 'AngleDimensions' returns object of type 'IAngleDimensions'
		"AngleDimensions": (10004, 2, (9, 0), (), "AngleDimensions", '{DF9ABB77-BBB6-4B29-A0E0-81DCFD525C2E}'),
		# Method 'ArcDimensions' returns object of type 'IArcDimensions'
		"ArcDimensions": (10007, 2, (9, 0), (), "ArcDimensions", '{FE2755D9-48E2-44CC-BC24-86CF86BE08E2}'),
		# Method 'AssociationTables' returns object of type 'IAssociationTables'
		"AssociationTables": (10021, 2, (9, 0), (), "AssociationTables", '{96F02F01-04E1-44D1-9974-48330EBE801B}'),
		# Method 'AxisLines' returns object of type 'IAxisLines'
		"AxisLines": (10018, 2, (9, 0), (), "AxisLines", '{C567E700-E163-4C8F-B329-931BB93D0223}'),
		# Method 'Bases' returns object of type 'IBases'
		"Bases": (10011, 2, (9, 0), (), "Bases", '{C607727C-6B0A-4FB6-AFCA-ED9D83F5C6B7}'),
		# Method 'BreakLineDimensions' returns object of type 'IBreakLineDimensions'
		"BreakLineDimensions": (10005, 2, (9, 0), (), "BreakLineDimensions", '{4125169F-3EA8-4AC0-9E1B-5582D62600C4}'),
		# Method 'BreakRadialDimensions' returns object of type 'IBreakRadialDimensions'
		"BreakRadialDimensions": (10008, 2, (9, 0), (), "BreakRadialDimensions", '{E2181A3E-5417-4D73-AB65-983DED3438E0}'),
		# Method 'BrokenLines' returns object of type 'IBrokenLines'
		"BrokenLines": (10020, 2, (9, 0), (), "BrokenLines", '{2A7EADC0-5E79-4DDB-85D5-E3EDB743480D}'),
		# Method 'CentreMarkers' returns object of type 'ICentreMarkers'
		"CentreMarkers": (10016, 2, (9, 0), (), "CentreMarkers", '{A0533211-CF52-4AB5-A172-3DC7D94276D1}'),
		# Method 'CircularsCentries' returns object of type 'ICircularsCentries'
		"CircularsCentries": (10022, 2, (9, 0), (), "CircularsCentries", '{1F7ED8F6-85DA-4B32-9306-31E3DABA3F84}'),
		# Method 'ConditionIntersects' returns object of type 'IConditionIntersects'
		"ConditionIntersects": (10024, 2, (9, 0), (), "ConditionIntersects", '{EDB023F6-0862-4CB3-AF81-62D784F455B1}'),
		# Method 'CutLines' returns object of type 'ICutLines'
		"CutLines": (10014, 2, (9, 0), (), "CutLines", '{666DA5B4-324C-493C-9A91-37D9E078EB4E}'),
		# Method 'DiametralDimensions' returns object of type 'IDiametralDimensions'
		"DiametralDimensions": (10003, 2, (9, 0), (), "DiametralDimensions", '{8E45FEB9-7BCD-4C9F-9767-320736980662}'),
		# Method 'DrawingTables' returns object of type 'IDrawingTables'
		"DrawingTables": (10013, 2, (9, 0), (), "DrawingTables", '{DF92DACE-BDC6-4341-86DA-3A9C8DCFDEFE}'),
		# Method 'HeightDimensions' returns object of type 'IHeightDimensions'
		"HeightDimensions": (10006, 2, (9, 0), (), "HeightDimensions", '{3A56D35C-3242-4C49-BA99-CF790EB10356}'),
		# Method 'Leaders' returns object of type 'ILeaders'
		"Leaders": (10010, 2, (9, 0), (), "Leaders", '{BA2D820C-0DB9-47C6-A32D-34C7D8BA1B2F}'),
		# Method 'LineDimensions' returns object of type 'ILineDimensions'
		"LineDimensions": (10001, 2, (9, 0), (), "LineDimensions", '{A6F6A18A-78FA-4A77-BB75-90647E0C545C}'),
		# Method 'LinearsCentries' returns object of type 'ILinearsCentries'
		"LinearsCentries": (10023, 2, (9, 0), (), "LinearsCentries", '{E0854CCB-7849-4503-BF8B-F70CF493D59B}'),
		# Method 'RadialDimensions' returns object of type 'IRadialDimensions'
		"RadialDimensions": (10002, 2, (9, 0), (), "RadialDimensions", '{12D26993-449E-42E2-A909-B047AFD6E27D}'),
		# Method 'RemoteElements' returns object of type 'IRemoteElements'
		"RemoteElements": (10017, 2, (9, 0), (), "RemoteElements", '{88427A6B-00AF-46E2-9B95-BC8348C2162A}'),
		# Method 'Roughs' returns object of type 'IRoughs'
		"Roughs": (10009, 2, (9, 0), (), "Roughs", '{ACC42B32-27F3-4F74-B4A5-C97D4C7B289D}'),
		# Method 'Tolerances' returns object of type 'ITolerances'
		"Tolerances": (10012, 2, (9, 0), (), "Tolerances", '{97CDD55F-3C64-469B-B26E-A927D3300B6C}'),
		# Method 'ViewPointers' returns object of type 'IViewPointers'
		"ViewPointers": (10015, 2, (9, 0), (), "ViewPointers", '{08B45C97-6F86-4809-BBC3-78F216BD0430}'),
		# Method 'WaveLines' returns object of type 'IWaveLines'
		"WaveLines": (10019, 2, (9, 0), (), "WaveLines", '{C1F0A911-8B4A-48B5-9611-5250D3FC2ACA}'),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISymbols3DContainer(DispatchBaseClass):
	'»нтерфейс контейнера условных обозначений 3D.'
	CLSID = IID('{D695D345-7054-4BBD-8D36-8E1F5AEDC5ED}')
	coclass_clsid = None

	def CreateGenerativeDimensions(self, Objects=defaultNamedNotOptArg, CreateZeroDimensions=defaultNamedNotOptArg):
		'ќтобразить размеры эскизов и операций.'
		return self._oleobj_.InvokeTypes(13009, LCID, 1, (11, 0), ((12, 1), (11, 1)),Objects
			, CreateZeroDimensions)

	# Result is of type IVariable7
	def GetDimensionVariable(self, Dimension=defaultNamedNotOptArg):
		'ѕолучить переменную св€занную с размером.'
		ret = self._oleobj_.InvokeTypes(13010, LCID, 1, (9, 0), ((9, 1),),Dimension
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetDimensionVariable', '{8BAB52D9-8EF6-43A6-A1B8-AF42D5961A94}')
		return ret

	_prop_map_get_ = {
		# Method 'AngleDimensions3D' returns object of type 'IAngleDimensions3D'
		"AngleDimensions3D": (13004, 2, (9, 0), (), "AngleDimensions3D", '{E0E8DB05-F71B-457E-BFEB-7EC2E803E77A}'),
		# Method 'Bases3D' returns object of type 'IBases3D'
		"Bases3D": (13007, 2, (9, 0), (), "Bases3D", '{8BC582B3-1F82-4D19-AF95-24CBAD412E52}'),
		# Method 'DiametralDimensions3D' returns object of type 'IDiametralDimensions3D'
		"DiametralDimensions3D": (13003, 2, (9, 0), (), "DiametralDimensions3D", '{79B5AC3B-9B2F-4C75-8482-3C0D6B07D911}'),
		# Method 'Leaders3D' returns object of type 'ILeaders3D'
		"Leaders3D": (13005, 2, (9, 0), (), "Leaders3D", '{C6E6BDD4-2B0E-49BF-87D3-04E800200DDC}'),
		# Method 'LineDimensions3D' returns object of type 'ILineDimensions3D'
		"LineDimensions3D": (13001, 2, (9, 0), (), "LineDimensions3D", '{8E30C80C-4C79-497B-A74B-84D44F96EF4D}'),
		# Method 'RadialDimensions3D' returns object of type 'IRadialDimensions3D'
		"RadialDimensions3D": (13002, 2, (9, 0), (), "RadialDimensions3D", '{153924CD-E046-4334-8798-46A6D6663DE4}'),
		# Method 'Roughs3D' returns object of type 'IRoughs3D'
		"Roughs3D": (13006, 2, (9, 0), (), "Roughs3D", '{8533772B-1C43-4FDD-9F0E-BC92F15862C9}'),
		# Method 'Threads' returns object of type 'IThreads'
		"Threads": (13011, 2, (9, 0), (), "Threads", '{6090C8D4-4EB0-402A-8E25-29C1FAE85F11}'),
		# Method 'Tolerances3D' returns object of type 'ITolerances3D'
		"Tolerances3D": (13008, 2, (9, 0), (), "Tolerances3D", '{82ADDA0C-B8DE-4336-A5CC-B36504A80E2D}'),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ISystemSettings(DispatchBaseClass):
	'ѕарамеры системы.'
	CLSID = IID('{FFB66332-17FF-47EB-AC43-32084F8F6077}')
	coclass_clsid = IID('{31C4845E-508F-43F0-A57F-E7602A0E45E6}')

	# The method ModelEditColor is actually a property, but must be used as a method to correctly pass the arguments
	def ModelEditColor(self, ColorType=defaultNamedNotOptArg):
		'–едактор моделей: ÷вета редактировани€ объектов.'
		return self._oleobj_.InvokeTypes(11, LCID, 2, (3, 0), ((3, 1),),ColorType
			)

	# Result is of type IKompasAPIObject
	# The method NewDocumentSettings is actually a property, but must be used as a method to correctly pass the arguments
	def NewDocumentSettings(self, SettingsType=defaultNamedNotOptArg):
		'Ќастройки новых документов.'
		ret = self._oleobj_.InvokeTypes(8, LCID, 2, (9, 0), ((3, 1),),SettingsType
			)
		if ret is not None:
			ret = Dispatch(ret, 'NewDocumentSettings', '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')
		return ret

	# The method ObjectsFilter3D is actually a property, but must be used as a method to correctly pass the arguments
	def ObjectsFilter3D(self, Type=defaultNamedNotOptArg):
		'—пособ фильтрации 3D объектов.'
		return self._oleobj_.InvokeTypes(7, LCID, 2, (11, 0), ((3, 1),),Type
			)

	# The method SetModelEditColor is actually a property, but must be used as a method to correctly pass the arguments
	def SetModelEditColor(self, ColorType=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'–едактор моделей: ÷вета редактировани€ объектов.'
		return self._oleobj_.InvokeTypes(11, LCID, 4, (24, 0), ((3, 1), (3, 1)),ColorType
			, arg1)

	# The method SetObjectsFilter3D is actually a property, but must be used as a method to correctly pass the arguments
	def SetObjectsFilter3D(self, Type=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'—пособ фильтрации 3D объектов.'
		return self._oleobj_.InvokeTypes(7, LCID, 4, (24, 0), ((3, 1), (11, 1)),Type
			, arg1)

	# Result is of type IThreadPattern
	# The method ThreadPattern is actually a property, but must be used as a method to correctly pass the arguments
	def ThreadPattern(self, ThreadTableName=defaultNamedNotOptArg):
		'ѕараметры стандартной резьбы.'
		ret = self._oleobj_.InvokeTypes(16, LCID, 2, (9, 0), ((8, 1),),ThreadTableName
			)
		if ret is not None:
			ret = Dispatch(ret, 'ThreadPattern', '{246741CF-BC91-4E69-AEEE-CF905B9C05F7}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AssociationViewAutoSaveBeforeRebuild": (20, 2, (11, 0), (), "AssociationViewAutoSaveBeforeRebuild", None),
		"AssociationViewRebuildParallel": (18, 2, (11, 0), (), "AssociationViewRebuildParallel", None),
		"AssociationViewRebuildParallelLowPriority": (19, 2, (11, 0), (), "AssociationViewRebuildParallelLowPriority", None),
		"EnableAddFilesToRecentList": (29, 2, (11, 0), (), "EnableAddFilesToRecentList", None),
		"EnablesAddSystemDelimersInMarking": (9, 2, (11, 0), (), "EnablesAddSystemDelimersInMarking", None),
		"FilesAutoSaveSwitchOn": (1, 2, (11, 0), (), "FilesAutoSaveSwitchOn", None),
		"FilesBackupPrevCopySwitchOn": (2, 2, (11, 0), (), "FilesBackupPrevCopySwitchOn", None),
		"Language": (17, 2, (8, 0), (), "Language", None),
		"ModelFillChooseFace": (12, 2, (11, 0), (), "ModelFillChooseFace", None),
		"ModelInverseInDynamicSelect": (13, 2, (11, 0), (), "ModelInverseInDynamicSelect", None),
		"ModelLocalCSCreateInAbsoluteCS": (3, 2, (11, 0), (), "ModelLocalCSCreateInAbsoluteCS", None),
		"ModelLocalCSSetActive": (4, 2, (11, 0), (), "ModelLocalCSSetActive", None),
		"ModelPerformanceLevel": (27, 2, (3, 0), (), "ModelPerformanceLevel", None),
		"ModelRenderType": (23, 2, (3, 0), (), "ModelRenderType", None),
		"ModelScaleFactor": (26, 2, (5, 0), (), "ModelScaleFactor", None),
		"ModelSmoothMotion": (5, 2, (11, 0), (), "ModelSmoothMotion", None),
		"ModelStepMoveDetail": (24, 2, (5, 0), (), "ModelStepMoveDetail", None),
		"ModelStepRotateDetail": (25, 2, (5, 0), (), "ModelStepRotateDetail", None),
		"ModelTransparencyType": (28, 2, (3, 0), (), "ModelTransparencyType", None),
		"ModelUseOpenGLSearch": (15, 2, (11, 0), (), "ModelUseOpenGLSearch", None),
		"ModelUsePartColorForEdit": (14, 2, (11, 0), (), "ModelUsePartColorForEdit", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'ReportStyleListSettings' returns object of type 'ILibArraySettings'
		"ReportStyleListSettings": (6, 2, (9, 0), (), "ReportStyleListSettings", '{76D9033D-5F87-41CC-A3E8-55EFEE94B677}'),
		# Method 'StandardsThreadsListSettings' returns object of type 'ILibArraySettings'
		"StandardsThreadsListSettings": (10, 2, (9, 0), (), "StandardsThreadsListSettings", '{76D9033D-5F87-41CC-A3E8-55EFEE94B677}'),
		"Theme": (21, 2, (3, 0), (), "Theme", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"UseHardwareAcceleration": (22, 2, (11, 0), (), "UseHardwareAcceleration", None),
	}
	_prop_map_put_ = {
		"AssociationViewAutoSaveBeforeRebuild": ((20, LCID, 4, 0),()),
		"AssociationViewRebuildParallel": ((18, LCID, 4, 0),()),
		"AssociationViewRebuildParallelLowPriority": ((19, LCID, 4, 0),()),
		"EnableAddFilesToRecentList": ((29, LCID, 4, 0),()),
		"EnablesAddSystemDelimersInMarking": ((9, LCID, 4, 0),()),
		"FilesAutoSaveSwitchOn": ((1, LCID, 4, 0),()),
		"FilesBackupPrevCopySwitchOn": ((2, LCID, 4, 0),()),
		"ModelFillChooseFace": ((12, LCID, 4, 0),()),
		"ModelInverseInDynamicSelect": ((13, LCID, 4, 0),()),
		"ModelLocalCSCreateInAbsoluteCS": ((3, LCID, 4, 0),()),
		"ModelLocalCSSetActive": ((4, LCID, 4, 0),()),
		"ModelPerformanceLevel": ((27, LCID, 4, 0),()),
		"ModelRenderType": ((23, LCID, 4, 0),()),
		"ModelScaleFactor": ((26, LCID, 4, 0),()),
		"ModelSmoothMotion": ((5, LCID, 4, 0),()),
		"ModelStepMoveDetail": ((24, LCID, 4, 0),()),
		"ModelStepRotateDetail": ((25, LCID, 4, 0),()),
		"ModelTransparencyType": ((28, LCID, 4, 0),()),
		"ModelUseOpenGLSearch": ((15, LCID, 4, 0),()),
		"ModelUsePartColorForEdit": ((14, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITable(DispatchBaseClass):
	'—етка таблицы.'
	CLSID = IID('{D3715420-645E-435B-BB25-8E35AC570718}')
	coclass_clsid = None

	def AddColumn(self, ColN=defaultNamedNotOptArg, Right=defaultNamedNotOptArg):
		'ƒобавить колонку.'
		return self._oleobj_.InvokeTypes(2505, LCID, 1, (11, 0), ((3, 1), (11, 1)),ColN
			, Right)

	def AddRow(self, RowN=defaultNamedNotOptArg, Down=defaultNamedNotOptArg):
		'ƒобавить строку.'
		return self._oleobj_.InvokeTypes(2507, LCID, 1, (11, 0), ((3, 1), (11, 1)),RowN
			, Down)

	# Result is of type ITableCell
	# The method Cell is actually a property, but must be used as a method to correctly pass the arguments
	def Cell(self, RowN=defaultNamedNotOptArg, ColN=defaultNamedNotOptArg):
		'«начение в €чейке таблицы.'
		ret = self._oleobj_.InvokeTypes(2503, LCID, 2, (9, 0), ((3, 1), (3, 1)),RowN
			, ColN)
		if ret is not None:
			ret = Dispatch(ret, 'Cell', '{CF9150BA-0E3A-46DE-8973-332A00361474}')
		return ret

	# Result is of type ITableCell
	# The method CellById is actually a property, but must be used as a method to correctly pass the arguments
	def CellById(self, CellID=defaultNamedNotOptArg):
		'«начение в €чейке таблицы заданое по идентификатору.'
		ret = self._oleobj_.InvokeTypes(2504, LCID, 2, (9, 0), ((3, 1),),CellID
			)
		if ret is not None:
			ret = Dispatch(ret, 'CellById', '{CF9150BA-0E3A-46DE-8973-332A00361474}')
		return ret

	def Clear(self):
		'ќчистить всю таблицу.'
		return self._oleobj_.InvokeTypes(2509, LCID, 1, (11, 0), (),)

	def DeleteColumn(self, ColN=defaultNamedNotOptArg):
		'”далить колонку из таблицы.'
		return self._oleobj_.InvokeTypes(2506, LCID, 1, (11, 0), ((3, 1),),ColN
			)

	def DeleteRow(self, RowN=defaultNamedNotOptArg):
		'”далить строку из таблицы.'
		return self._oleobj_.InvokeTypes(2508, LCID, 1, (11, 0), ((3, 1),),RowN
			)

	# Result is of type ITableRange
	# The method Range is actually a property, but must be used as a method to correctly pass the arguments
	def Range(self, BeginRow=defaultNamedNotOptArg, BeginColumn=defaultNamedNotOptArg, EndRow=defaultNamedNotOptArg, EndColumn=defaultNamedNotOptArg):
		'»нтерфейс дл€ групповых операций над колонками.'
		ret = self._oleobj_.InvokeTypes(2510, LCID, 2, (9, 0), ((3, 1), (3, 1), (3, 1), (3, 1)),BeginRow
			, BeginColumn, EndRow, EndColumn)
		if ret is not None:
			ret = Dispatch(ret, 'Range', '{D78E47DC-172B-4824-A519-9BC2C0387B5C}')
		return ret

	_prop_map_get_ = {
		"ColumnsCount": (2502, 2, (3, 0), (), "ColumnsCount", None),
		"RowsCount": (2501, 2, (3, 0), (), "RowsCount", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITableCell(DispatchBaseClass):
	'ячейка таблицы.'
	CLSID = IID('{CF9150BA-0E3A-46DE-8973-332A00361474}')
	coclass_clsid = IID('{7C3AD6F0-625E-4756-8C64-A04783653A72}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"CellID": (2, 2, (3, 0), (), "CellID", None),
		"Column": (4, 2, (3, 0), (), "Column", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Row": (3, 2, (3, 0), (), "Row", None),
		# Method 'Text' returns object of type 'IKompasAPIObject'
		"Text": (1, 2, (9, 0), (), "Text", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITablePattern(DispatchBaseClass):
	'»нтерфейс массива по таблице.'
	CLSID = IID('{EFE5B123-174F-4CB0-AE85-7F291FA8AE1B}')
	coclass_clsid = IID('{345103DC-4694-4A5E-AB0E-9652B62646CD}')

	def AddInitialObjects(self, Objects=defaultNamedNotOptArg):
		'ƒобавить объекты в массив копируемых объектов.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), ((12, 1),),Objects
			)

	def Clear(self):
		'ќчистить список исходных объектов массива.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), (),)

	def Destroy(self):
		'–азрушить массив.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), (),)

	# Result is of type IModelObject
	# The method Exemplar is actually a property, but must be used as a method to correctly pass the arguments
	def Exemplar(self, Index1=defaultNamedNotOptArg, Index2=defaultNamedNotOptArg):
		'ѕолучить экземпл€р по индексу (или индексам).'
		ret = self._oleobj_.InvokeTypes(11, LCID, 2, (9, 0), ((3, 1), (3, 1)),Index1
			, Index2)
		if ret is not None:
			ret = Dispatch(ret, 'Exemplar', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def GetExemplarsCounts(self, Count1=pythoncom.Missing, Count2=pythoncom.Missing):
		'ѕолучить количество экземпл€ров.'
		return self._ApplyTypes_(12, 1, (11, 0), ((16387, 2), (16387, 2)), 'GetExemplarsCounts', None,Count1
			, Count2)

	def IsInitialObject(self, Object=defaultNamedNotOptArg):
		'ѕроверка - €вл€етс€ ли объект исходным дл€ массива.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((9, 1),),Object
			)

	def IsSuitableObject(self, Object=defaultNamedNotOptArg):
		'ѕроверка пригодности объекта дл€ операции.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), ((9, 1),),Object
			)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BasePoint' returns object of type 'IModelObject'
		"BasePoint": (10, 2, (9, 0), (), "BasePoint", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"BasePointType": (9, 2, (3, 0), (), "BasePointType", None),
		"FileName": (101, 2, (8, 0), (), "FileName", None),
		"GeometryPattern": (8, 2, (11, 0), (), "GeometryPattern", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"InitialObjects": (1, 2, (12, 0), (), "InitialObjects", None),
		"InstanceDeletedIndexes": (2, 2, (12, 0), (), "InstanceDeletedIndexes", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'OrientationObject' returns object of type 'IModelObject'
		"OrientationObject": (105, 2, (9, 0), (), "OrientationObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"OrientationType": (104, 2, (3, 0), (), "OrientationType", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"PointsType": (102, 2, (3, 0), (), "PointsType", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"SaveInitialOrientation": (103, 2, (11, 0), (), "SaveInitialOrientation", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"BasePoint": ((10, LCID, 4, 0),()),
		"BasePointType": ((9, LCID, 4, 0),()),
		"FileName": ((101, LCID, 4, 0),()),
		"GeometryPattern": ((8, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"InitialObjects": ((1, LCID, 4, 0),()),
		"InstanceDeletedIndexes": ((2, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"OrientationObject": ((105, LCID, 4, 0),()),
		"OrientationType": ((104, LCID, 4, 0),()),
		"PointsType": ((102, LCID, 4, 0),()),
		"SaveInitialOrientation": ((103, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITableRange(DispatchBaseClass):
	'»нтерфейс дл€ групповых операций над €чейками таблицы.'
	CLSID = IID('{D78E47DC-172B-4824-A519-9BC2C0387B5C}')
	coclass_clsid = None

	def ClearCells(self):
		'ќчистить €чейки таблицы.'
		return self._oleobj_.InvokeTypes(3503, LCID, 1, (11, 0), (),)

	def CombineCells(self):
		'ќбъединение €чеек.'
		return self._oleobj_.InvokeTypes(3501, LCID, 1, (11, 0), (),)

	def DivideCells(self, ColumnCount=defaultNamedNotOptArg, RowCount=defaultNamedNotOptArg, PrepareCombine=defaultNamedNotOptArg):
		'–азбить €чейки.'
		return self._oleobj_.InvokeTypes(3502, LCID, 1, (11, 0), ((3, 1), (3, 1), (11, 0)),ColumnCount
			, RowCount, PrepareCombine)

	_prop_map_get_ = {
		"Cells": (3504, 2, (12, 0), (), "Cells", None),
		# Method 'CellsBoundaries' returns object of type 'ICellBoundaries'
		"CellsBoundaries": (3506, 2, (9, 0), (), "CellsBoundaries", '{1E29E849-1D1E-4791-BD31-8EF00ED5D118}'),
		# Method 'CellsFormat' returns object of type 'ICellFormat'
		"CellsFormat": (3505, 2, (9, 0), (), "CellsFormat", '{9F2F27E7-8FB2-4C6C-A54D-35DB240060D8}'),
		"Texts": (3507, 2, (12, 0), (), "Texts", None),
	}
	_prop_map_put_ = {
		"Texts": ((3507, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITabulator(DispatchBaseClass):
	'ѕозици€ табул€тора.'
	CLSID = IID('{2DD73B92-F8C8-49AA-AECD-B75713427FC1}')
	coclass_clsid = IID('{D65E21E0-4B98-401D-86B5-712E0AA56CEC}')

	_prop_map_get_ = {
		"Align": (2, 2, (3, 0), (), "Align", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Filling": (3, 2, (3, 0), (), "Filling", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Position": (1, 2, (3, 0), (), "Position", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"Align": ((2, LCID, 4, 0),()),
		"Filling": ((3, LCID, 4, 0),()),
		"Position": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITabulators(DispatchBaseClass):
	' оллекци€ позиции табул€торов.'
	CLSID = IID('{BB66E097-95C7-49B1-B6FD-3506C7758D09}')
	coclass_clsid = IID('{C0D50C82-511E-4554-8296-EDFF2AE66C4C}')

	# Result is of type ITabulator
	def Add(self, Position=defaultNamedNotOptArg):
		'—оздает новую позицию табул€тора и добавл€ет ее в коллекцию.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 1, (9, 0), ((3, 1),),Position
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{2DD73B92-F8C8-49AA-AECD-B75713427FC1}')
		return ret

	def Clear(self):
		'ќчищает коллекцию, удал€ет из коллекции все позиции табул€тора.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), (),)

	# Result is of type ITabulator
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает позицию табул€тора, заданную по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{2DD73B92-F8C8-49AA-AECD-B75713427FC1}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает позицию табул€тора, заданную по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{2DD73B92-F8C8-49AA-AECD-B75713427FC1}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{2DD73B92-F8C8-49AA-AECD-B75713427FC1}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ITechnicalDemand(DispatchBaseClass):
	'“ехнические требовани€.'
	CLSID = IID('{18C80AE5-BF92-482A-9C56-3D1638F5E5F5}')
	coclass_clsid = IID('{281276EB-C88D-4F54-9C13-E6DDB8C2530D}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), (),)

	def Synchronize(self):
		'—инхронизаци€.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AutoPlacement": (3, 2, (11, 0), (), "AutoPlacement", None),
		"BlocksGabarits": (2, 2, (12, 0), (), "BlocksGabarits", None),
		"BlocksStartLineNumbers": (7, 2, (12, 0), (), "BlocksStartLineNumbers", None),
		"IsCreated": (6, 2, (11, 0), (), "IsCreated", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'Text' returns object of type 'IText'
		"Text": (1, 2, (9, 0), (), "Text", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"AutoPlacement": ((3, LCID, 4, 0),()),
		"BlocksGabarits": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITechnicalDemand3D(DispatchBaseClass):
	'“ехнические требовани€ 3D.'
	CLSID = IID('{CD435B3D-175C-4E18-BAA0-81FDD7EB6A86}')
	coclass_clsid = IID('{848B7259-B5FE-4CF1-A5BC-6AD3704D8F2F}')

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"IsCreated": (3, 2, (11, 0), (), "IsCreated", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		# Method 'Text' returns object of type 'IText'
		"Text": (1, 2, (9, 0), (), "Text", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITessellation7(DispatchBaseClass):
	'“реангул€ци€ грани.'
	CLSID = IID('{CA597AE6-2ECE-4483-A997-1AFD5ABF9D3A}')
	coclass_clsid = None

	def GetFacetParams(self):
		'ѕолучить параметры вершин треагул€ционной сетки.'
		return self._ApplyTypes_(2007, 1, (12, 0), (), 'GetFacetParams', None,)

	def GetFacetPoints(self, Points=pythoncom.Missing, Indexes=pythoncom.Missing, Normals=pythoncom.Missing):
		'ѕолучить параметры вершин треагул€ционной сетки.'
		return self._ApplyTypes_(2006, 1, (11, 0), ((16396, 2), (16396, 2), (16396, 2)), 'GetFacetPoints', None,Points
			, Indexes, Normals)

	def RebuildTessellation(self):
		'ѕерестроить после изменени€ параметров сетки.'
		return self._oleobj_.InvokeTypes(2005, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"FacetAngle": (2003, 2, (5, 0), (), "FacetAngle", None),
		"FacetSag": (2002, 2, (5, 0), (), "FacetSag", None),
		"FacetSize": (2001, 2, (5, 0), (), "FacetSize", None),
		"NeedParams": (2004, 2, (11, 0), (), "NeedParams", None),
	}
	_prop_map_put_ = {
		"FacetAngle": ((2003, LCID, 4, 0),()),
		"FacetSag": ((2002, LCID, 4, 0),()),
		"FacetSize": ((2001, LCID, 4, 0),()),
		"NeedParams": ((2004, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IText(DispatchBaseClass):
	'“екст.'
	CLSID = IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')
	coclass_clsid = IID('{393AB030-F683-470C-8F4E-AA93BF3162CC}')

	# Result is of type ITextLine
	def Add(self):
		'ƒобавить строку в конец текста.'
		ret = self._oleobj_.InvokeTypes(2005, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{AAB72FE2-DEA3-4FB6-B0DD-B926249EF67C}')
		return ret

	# Result is of type ITextLine
	def AddBefore(self, Index=defaultNamedNotOptArg):
		'ƒобавить строку перед строкой с заданным индексом.'
		ret = self._oleobj_.InvokeTypes(2006, LCID, 1, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddBefore', '{AAB72FE2-DEA3-4FB6-B0DD-B926249EF67C}')
		return ret

	# Result is of type ITextTable
	def AddTable(self, IndexAt=defaultNamedNotOptArg, RowsCount=defaultNamedNotOptArg, ColumnsCount=defaultNamedNotOptArg, RowHeigh=defaultNamedNotOptArg
			, ColumnsWidth=defaultNamedNotOptArg, TitlePos=defaultNamedNotOptArg):
		'ƒобавить таблицу в текст (дл€ текстового документа).'
		ret = self._oleobj_.InvokeTypes(2013, LCID, 1, (9, 0), ((3, 1), (3, 1), (3, 1), (5, 1), (5, 1), (3, 1)),IndexAt
			, RowsCount, ColumnsCount, RowHeigh, ColumnsWidth, TitlePos
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddTable', '{9AE6C0A0-72EB-4A51-B54C-A0E57CC5F6DC}')
		return ret

	# Result is of type ITextLine
	def AddTextLine(self, Type=defaultNamedNotOptArg, FileName=defaultNamedNotOptArg):
		'ƒобавить строку c внешними данными.'
		ret = self._oleobj_.InvokeTypes(2009, LCID, 1, (9, 0), ((3, 1), (8, 1)),Type
			, FileName)
		if ret is not None:
			ret = Dispatch(ret, 'AddTextLine', '{AAB72FE2-DEA3-4FB6-B0DD-B926249EF67C}')
		return ret

	# Result is of type ITextLine
	def AddTextLineBefore(self, Type=defaultNamedNotOptArg, Index=defaultNamedNotOptArg, FileName=defaultNamedNotOptArg):
		'ƒобавить строку c внешними данными перед строкой с заданным индексом.'
		ret = self._oleobj_.InvokeTypes(2010, LCID, 1, (9, 0), ((3, 1), (3, 1), (8, 1)),Type
			, Index, FileName)
		if ret is not None:
			ret = Dispatch(ret, 'AddTextLineBefore', '{AAB72FE2-DEA3-4FB6-B0DD-B926249EF67C}')
		return ret

	def Assign(self, Other=defaultNamedNotOptArg):
		'—копировать текст.'
		return self._oleobj_.InvokeTypes(2012, LCID, 1, (11, 0), ((9, 1),),Other
			)

	def Clear(self):
		'ќчистить.'
		return self._oleobj_.InvokeTypes(2008, LCID, 1, (11, 0), (),)

	def Edit(self, HWnd=defaultNamedNotOptArg):
		'–едактировать в окне.'
		return self._oleobj_.InvokeTypes(2014, LCID, 1, (11, 0), ((3, 1),),HWnd
			)

	def Replace(self, SrcText=defaultNamedNotOptArg, NewText=defaultNamedNotOptArg, Case=False, WordOnly=False
			, ReplaceAll=False):
		'«аменить текст.'
		return self._oleobj_.InvokeTypes(2011, LCID, 1, (11, 0), ((8, 1), (8, 1), (11, 49), (11, 49), (11, 49)),SrcText
			, NewText, Case, WordOnly, ReplaceAll)

	# Result is of type ITextLine
	# The method TextLine is actually a property, but must be used as a method to correctly pass the arguments
	def TextLine(self, Index=defaultNamedNotOptArg):
		'—трока текста с заданным индексом.'
		ret = self._oleobj_.InvokeTypes(2004, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'TextLine', '{AAB72FE2-DEA3-4FB6-B0DD-B926249EF67C}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2003, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Str": (2007, 2, (8, 0), (), "Str", None),
		"Style": (2001, 2, (3, 0), (), "Style", None),
		"TextLines": (2002, 2, (12, 0), (), "TextLines", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"Str": ((2007, LCID, 4, 0),()),
		"Style": ((2001, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2003, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ITextDocument(DispatchBaseClass):
	'»нтерфейс текстового документа.'
	CLSID = IID('{71A589EA-D32F-42C4-BBC4-A51611E85E90}')
	coclass_clsid = IID('{F5CF81CF-F6C3-4D9C-B393-6DF532BFB45D}')

	def Close(self, closeOptions=defaultNamedNotOptArg):
		'«акрыть документ. ≈сли SaveChanges = False, то система предложит пользователю сохранить имеющиес€ изменени€.'
		return self._oleobj_.InvokeTypes(3002, LCID, 1, (11, 0), ((3, 1),),closeOptions
			)

	def Save(self):
		'—охранить документ на диске.'
		return self._oleobj_.InvokeTypes(3003, LCID, 1, (24, 0), (),)

	def SaveAs(self, PathName=defaultNamedNotOptArg):
		'—охранить документ под другим именем.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (24, 0), ((8, 1),),PathName
			)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Active": (3009, 2, (11, 0), (), "Active", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"BlocksGabarits": (3, 2, (12, 0), (), "BlocksGabarits", None),
		"BlocksStartLineNumbers": (4, 2, (12, 0), (), "BlocksStartLineNumbers", None),
		"Changed": (3011, 2, (11, 0), (), "Changed", None),
		# Method 'DocumentFrames' returns object of type 'IDocumentFrames'
		"DocumentFrames": (3001, 2, (9, 0), (), "DocumentFrames", '{1D18C466-C085-4D68-A465-A85D0C8E3A0E}'),
		# Method 'DocumentSettings' returns object of type 'IDocumentSettings'
		"DocumentSettings": (3012, 2, (9, 0), (), "DocumentSettings", '{B35FF50E-2991-4630-8AB8-DC3153E7971A}'),
		"DocumentType": (3000, 2, (3, 0), (), "DocumentType", None),
		# Method 'LayoutSheets' returns object of type 'ILayoutSheets'
		"LayoutSheets": (3014, 2, (9, 0), (), "LayoutSheets", '{7AB54196-0B76-4B01-B769-7F47637173C4}'),
		"Name": (3005, 2, (8, 0), (), "Name", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Path": (3007, 2, (8, 0), (), "Path", None),
		"PathName": (3006, 2, (8, 0), (), "PathName", None),
		"ReadOnly": (3010, 2, (11, 0), (), "ReadOnly", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"SectionsStartLineNumbers": (5, 2, (12, 0), (), "SectionsStartLineNumbers", None),
		# Method 'SpecificationDescriptions' returns object of type 'ISpecificationDescriptions'
		"SpecificationDescriptions": (3013, 2, (9, 0), (), "SpecificationDescriptions", '{B9632C5C-86E1-4BC9-83A5-A954E407246A}'),
		# Method 'Text' returns object of type 'IText'
		"Text": (1, 2, (9, 0), (), "Text", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		# Method 'UserDataStoragesMng' returns object of type 'IUserDataStoragesMng'
		"UserDataStoragesMng": (3015, 2, (9, 0), (), "UserDataStoragesMng", '{77A6D4CA-6418-4DEE-B59C-400BFD052375}'),
		"Visible": (3008, 2, (11, 0), (), "Visible", None),
	}
	_prop_map_put_ = {
		"Active": ((3009, LCID, 4, 0),()),
		"ReadOnly": ((3010, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITextDocumentSection(DispatchBaseClass):
	'ѕараметры раздела текстового документа.'
	CLSID = IID('{A64BE069-8FCB-43F1-AB34-9974DC7FCF5F}')
	coclass_clsid = IID('{40A3F4A8-E1FE-4A31-8922-B47C8097F14F}')

	def Delete(self):
		'”далить лист.'
		return self._oleobj_.InvokeTypes(9, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"EvenLayoutLibraryFileName": (4, 2, (8, 0), (), "EvenLayoutLibraryFileName", None),
		"EvenLayoutStyleNumber": (5, 2, (5, 0), (), "EvenLayoutStyleNumber", None),
		# Method 'Format' returns object of type 'ISheetFormat'
		"Format": (1, 2, (9, 0), (), "Format", '{B9CDE694-4C33-4375-A6F6-AE94DC759510}'),
		"LayoutLibraryFileName": (2, 2, (8, 0), (), "LayoutLibraryFileName", None),
		"LayoutStyleNumber": (3, 2, (5, 0), (), "LayoutStyleNumber", None),
		"OddLayoutLibraryFileName": (6, 2, (8, 0), (), "OddLayoutLibraryFileName", None),
		"OddLayoutStyleNumber": (7, 2, (5, 0), (), "OddLayoutStyleNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"EvenLayoutLibraryFileName": ((4, LCID, 4, 0),()),
		"EvenLayoutStyleNumber": ((5, LCID, 4, 0),()),
		"LayoutLibraryFileName": ((2, LCID, 4, 0),()),
		"LayoutStyleNumber": ((3, LCID, 4, 0),()),
		"OddLayoutLibraryFileName": ((6, LCID, 4, 0),()),
		"OddLayoutStyleNumber": ((7, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITextDocumentSectionsManager(DispatchBaseClass):
	'»нтерфейс менеджера разделов текстового документа.'
	CLSID = IID('{EEB71F69-1C0F-4E73-9D20-523697215E0B}')
	coclass_clsid = IID('{87749A4B-353E-4A5A-862A-F025B49609B5}')

	# Result is of type ITextDocumentSection
	def AddSection(self):
		'ƒобавить закладку.'
		ret = self._oleobj_.InvokeTypes(2001, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'AddSection', '{A64BE069-8FCB-43F1-AB34-9974DC7FCF5F}')
		return ret

	# Result is of type ITextDocumentSection
	def AddSectionAt(self, Index=defaultNamedNotOptArg):
		'ƒобавить закладку.'
		ret = self._oleobj_.InvokeTypes(2002, LCID, 1, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddSectionAt', '{A64BE069-8FCB-43F1-AB34-9974DC7FCF5F}')
		return ret

	def GetSectionLineIndexes(self, SectionIndex=defaultNamedNotOptArg, FirstLineIndex=pythoncom.Missing, LastLineIndex=pythoncom.Missing):
		'ѕолучить индексы первой и последней строки раздела и число строк раздела.'
		return self._ApplyTypes_(2007, 1, (3, 0), ((3, 1), (16387, 2), (16387, 2)), 'GetSectionLineIndexes', None,SectionIndex
			, FirstLineIndex, LastLineIndex)

	def MoveLinesToSection(self, Section=defaultNamedNotOptArg, FirstLineIndex=defaultNamedNotOptArg, LastLineIndex=defaultNamedNotOptArg):
		'ѕеренести строки в другой раздел.'
		return self._oleobj_.InvokeTypes(2008, LCID, 1, (11, 0), ((9, 1), (3, 1), (3, 1)),Section
			, FirstLineIndex, LastLineIndex)

	def MoveSection(self, SectionIndex=defaultNamedNotOptArg, NewSectionIndex=defaultNamedNotOptArg):
		'ѕереместить раздел.'
		return self._oleobj_.InvokeTypes(2006, LCID, 1, (11, 0), ((3, 1), (3, 1)),SectionIndex
			, NewSectionIndex)

	# Result is of type ITextDocumentSection
	# The method Section is actually a property, but must be used as a method to correctly pass the arguments
	def Section(self, Index=defaultNamedNotOptArg):
		'ѕолучить параметры раздела по индексу.'
		ret = self._oleobj_.InvokeTypes(2004, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Section', '{A64BE069-8FCB-43F1-AB34-9974DC7FCF5F}')
		return ret

	# Result is of type ITextDocumentSection
	# The method SectionByTextLine is actually a property, but must be used as a method to correctly pass the arguments
	def SectionByTextLine(self, LineIndex=defaultNamedNotOptArg):
		'ѕолучить параметры раздела по индексу.'
		ret = self._oleobj_.InvokeTypes(2005, LCID, 2, (9, 0), ((3, 1),),LineIndex
			)
		if ret is not None:
			ret = Dispatch(ret, 'SectionByTextLine', '{A64BE069-8FCB-43F1-AB34-9974DC7FCF5F}')
		return ret

	_prop_map_get_ = {
		"SectionsCount": (2003, 2, (3, 0), (), "SectionsCount", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITextFont(DispatchBaseClass):
	'ѕараметры шрифта.'
	CLSID = IID('{A6AD008D-58D1-48B5-BD29-E6795289FE4B}')
	coclass_clsid = IID('{7F52DDDE-FD30-40DF-97E9-B606A005FD14}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Bold": (5, 2, (11, 0), (), "Bold", None),
		"Color": (4, 2, (3, 0), (), "Color", None),
		"FontName": (1, 2, (8, 0), (), "FontName", None),
		"Height": (2, 2, (5, 0), (), "Height", None),
		"Italic": (6, 2, (11, 0), (), "Italic", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"TextLineStep": (8, 2, (5, 0), (), "TextLineStep", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Underline": (7, 2, (11, 0), (), "Underline", None),
		"WidthFactor": (3, 2, (5, 0), (), "WidthFactor", None),
	}
	_prop_map_put_ = {
		"Bold": ((5, LCID, 4, 0),()),
		"Color": ((4, LCID, 4, 0),()),
		"FontName": ((1, LCID, 4, 0),()),
		"Height": ((2, LCID, 4, 0),()),
		"Italic": ((6, LCID, 4, 0),()),
		"TextLineStep": ((8, LCID, 4, 0),()),
		"Underline": ((7, LCID, 4, 0),()),
		"WidthFactor": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITextItem(DispatchBaseClass):
	' омпонент строки текста.'
	CLSID = IID('{1DE74AFB-5026-4B85-861F-F0CFDBD443E6}')
	coclass_clsid = IID('{58CED17B-2AA8-4DF8-B215-811DDE72DF3C}')

	def Delete(self):
		'”далить компоненту строки.'
		return self._oleobj_.InvokeTypes(2007, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных компонента.'
		return self._oleobj_.InvokeTypes(2008, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ItemType": (2001, 2, (3, 0), (), "ItemType", None),
		"NewLine": (2006, 2, (11, 0), (), "NewLine", None),
		"Number": (2004, 2, (3, 0), (), "Number", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"SizeFactor": (2005, 2, (3, 0), (), "SizeFactor", None),
		"Str": (2002, 2, (8, 0), (), "Str", None),
		"SymbolFontName": (2003, 2, (8, 0), (), "SymbolFontName", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"ItemType": ((2001, LCID, 4, 0),()),
		"NewLine": ((2006, LCID, 4, 0),()),
		"Number": ((2004, LCID, 4, 0),()),
		"SizeFactor": ((2005, LCID, 4, 0),()),
		"Str": ((2002, LCID, 4, 0),()),
		"SymbolFontName": ((2003, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITextLine(DispatchBaseClass):
	'Cтрока текста.'
	CLSID = IID('{AAB72FE2-DEA3-4FB6-B0DD-B926249EF67C}')
	coclass_clsid = IID('{FDFD93BC-11C4-42A9-9C8F-A4FB206274B6}')

	# Result is of type ITextItem
	def Add(self):
		'ƒобавить компонент строки текста в конец строки.'
		ret = self._oleobj_.InvokeTypes(5, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{1DE74AFB-5026-4B85-861F-F0CFDBD443E6}')
		return ret

	# Result is of type ITextItem
	def AddBefore(self, Index=defaultNamedNotOptArg):
		'ƒобавить компонент строки текста перед компонентом с заданным индексом.'
		ret = self._oleobj_.InvokeTypes(6, LCID, 1, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddBefore', '{1DE74AFB-5026-4B85-861F-F0CFDBD443E6}')
		return ret

	def Assign(self, Other=defaultNamedNotOptArg):
		'—копировать текст.'
		return self._oleobj_.InvokeTypes(23, LCID, 1, (11, 0), ((9, 1),),Other
			)

	def Clear(self):
		'ќчистить.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), (),)

	def Delete(self):
		'”далить строку.'
		return self._oleobj_.InvokeTypes(19, LCID, 1, (11, 0), (),)

	def Edit(self, HWnd=defaultNamedNotOptArg):
		'–едактировать в окне.'
		return self._oleobj_.InvokeTypes(25, LCID, 1, (11, 0), ((3, 1),),HWnd
			)

	# Result is of type ITextItem
	def InsertHypertextReference(self, TextItemIndex=defaultNamedNotOptArg, Object=defaultNamedNotOptArg, Type=defaultNamedNotOptArg, Brackets=defaultNamedNotOptArg
			, TextLineIndex=defaultNamedNotOptArg, Precision=defaultNamedNotOptArg, PropertyId=defaultNamedNotOptArg):
		'ƒобавить ссылку в текст.'
		ret = self._oleobj_.InvokeTypes(24, LCID, 1, (9, 0), ((3, 1), (9, 1), (3, 1), (11, 1), (3, 1), (3, 1), (5, 1)),TextItemIndex
			, Object, Type, Brackets, TextLineIndex, Precision
			, PropertyId)
		if ret is not None:
			ret = Dispatch(ret, 'InsertHypertextReference', '{1DE74AFB-5026-4B85-861F-F0CFDBD443E6}')
		return ret

	# Result is of type ITextItem
	# The method TextItem is actually a property, but must be used as a method to correctly pass the arguments
	def TextItem(self, Index=defaultNamedNotOptArg):
		' омпонент строки текста с заданным индексом.'
		ret = self._oleobj_.InvokeTypes(4, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'TextItem', '{1DE74AFB-5026-4B85-861F-F0CFDBD443E6}')
		return ret

	_prop_map_get_ = {
		"Align": (10, 2, (3, 0), (), "Align", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"BlockIndex": (27, 2, (3, 0), (), "BlockIndex", None),
		"Count": (3, 2, (3, 0), (), "Count", None),
		"IndentedLine": (11, 2, (5, 0), (), "IndentedLine", None),
		"LeftEdge": (14, 2, (5, 0), (), "LeftEdge", None),
		"Level": (17, 2, (3, 0), (), "Level", None),
		"NewPage": (22, 2, (11, 0), (), "NewPage", None),
		"NewSection": (26, 2, (11, 0), (), "NewSection", None),
		"Numbering": (18, 2, (3, 0), (), "Numbering", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"RightEdge": (15, 2, (5, 0), (), "RightEdge", None),
		"SectionBlockIndex": (28, 2, (3, 0), (), "SectionBlockIndex", None),
		"Step": (9, 2, (5, 0), (), "Step", None),
		"StepAfterParagraph": (13, 2, (5, 0), (), "StepAfterParagraph", None),
		"StepBeforeParagraph": (12, 2, (5, 0), (), "StepBeforeParagraph", None),
		"Str": (7, 2, (8, 0), (), "Str", None),
		"Style": (1, 2, (3, 0), (), "Style", None),
		# Method 'Tabulators' returns object of type 'ITabulators'
		"Tabulators": (16, 2, (9, 0), (), "Tabulators", '{BB66E097-95C7-49B1-B6FD-3506C7758D09}'),
		"TextItems": (2, 2, (12, 0), (), "TextItems", None),
		# Method 'TextLineData' returns object of type 'IKompasAPIObject'
		"TextLineData": (21, 2, (9, 0), (), "TextLineData", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"TextLineType": (20, 2, (3, 0), (), "TextLineType", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"Align": ((10, LCID, 4, 0),()),
		"IndentedLine": ((11, LCID, 4, 0),()),
		"LeftEdge": ((14, LCID, 4, 0),()),
		"Level": ((17, LCID, 4, 0),()),
		"NewPage": ((22, LCID, 4, 0),()),
		"NewSection": ((26, LCID, 4, 0),()),
		"Numbering": ((18, LCID, 4, 0),()),
		"RightEdge": ((15, LCID, 4, 0),()),
		"Step": ((9, LCID, 4, 0),()),
		"StepAfterParagraph": ((13, LCID, 4, 0),()),
		"StepBeforeParagraph": ((12, LCID, 4, 0),()),
		"Str": ((7, LCID, 4, 0),()),
		"Style": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(3, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ITextStyle(DispatchBaseClass):
	'ѕараметры стил€ текста.'
	CLSID = IID('{7EA65CA0-420D-4E1D-8C19-998495C4DA2F}')
	coclass_clsid = IID('{92523524-1E11-4193-AD5F-E2381555DCC6}')

	_prop_map_get_ = {
		"Align": (4, 2, (3, 0), (), "Align", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"EnableLine1": (12, 2, (11, 0), (), "EnableLine1", None),
		"EnableLine2": (16, 2, (11, 0), (), "EnableLine2", None),
		"EnableLine3": (20, 2, (11, 0), (), "EnableLine3", None),
		"Extended": (10, 2, (11, 0), (), "Extended", None),
		# Method 'Font' returns object of type 'ITextFont'
		"Font": (24, 2, (9, 0), (), "Font", '{A6AD008D-58D1-48B5-BD29-E6795289FE4B}'),
		"Height1": (13, 2, (5, 0), (), "Height1", None),
		"Height2": (17, 2, (5, 0), (), "Height2", None),
		"Height3": (21, 2, (5, 0), (), "Height3", None),
		"IndentedLine": (5, 2, (5, 0), (), "IndentedLine", None),
		"LeftEdge": (8, 2, (5, 0), (), "LeftEdge", None),
		"LinesCount": (11, 2, (3, 0), (), "LinesCount", None),
		"Name": (1, 2, (8, 0), (), "Name", None),
		"Number": (2, 2, (3, 0), (), "Number", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"RightEdge": (9, 2, (5, 0), (), "RightEdge", None),
		"Step": (3, 2, (5, 0), (), "Step", None),
		"Step1": (15, 2, (5, 0), (), "Step1", None),
		"Step2": (19, 2, (5, 0), (), "Step2", None),
		"Step3": (23, 2, (5, 0), (), "Step3", None),
		"StepAfterParagraph": (7, 2, (5, 0), (), "StepAfterParagraph", None),
		"StepBeforeParagraph": (6, 2, (5, 0), (), "StepBeforeParagraph", None),
		# Method 'Tabulators' returns object of type 'ITabulators'
		"Tabulators": (25, 2, (9, 0), (), "Tabulators", '{BB66E097-95C7-49B1-B6FD-3506C7758D09}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"WidthFactor1": (14, 2, (5, 0), (), "WidthFactor1", None),
		"WidthFactor2": (18, 2, (5, 0), (), "WidthFactor2", None),
		"WidthFactor3": (22, 2, (5, 0), (), "WidthFactor3", None),
	}
	_prop_map_put_ = {
		"Align": ((4, LCID, 4, 0),()),
		"EnableLine1": ((12, LCID, 4, 0),()),
		"EnableLine2": ((16, LCID, 4, 0),()),
		"EnableLine3": ((20, LCID, 4, 0),()),
		"Extended": ((10, LCID, 4, 0),()),
		"Height1": ((13, LCID, 4, 0),()),
		"Height2": ((17, LCID, 4, 0),()),
		"Height3": ((21, LCID, 4, 0),()),
		"IndentedLine": ((5, LCID, 4, 0),()),
		"LeftEdge": ((8, LCID, 4, 0),()),
		"LinesCount": ((11, LCID, 4, 0),()),
		"Name": ((1, LCID, 4, 0),()),
		"Number": ((2, LCID, 4, 0),()),
		"RightEdge": ((9, LCID, 4, 0),()),
		"Step": ((3, LCID, 4, 0),()),
		"Step1": ((15, LCID, 4, 0),()),
		"Step2": ((19, LCID, 4, 0),()),
		"Step3": ((23, LCID, 4, 0),()),
		"StepAfterParagraph": ((7, LCID, 4, 0),()),
		"StepBeforeParagraph": ((6, LCID, 4, 0),()),
		"WidthFactor1": ((14, LCID, 4, 0),()),
		"WidthFactor2": ((18, LCID, 4, 0),()),
		"WidthFactor3": ((22, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITextTable(DispatchBaseClass):
	'“аблица в тексте текстового документа.'
	CLSID = IID('{9AE6C0A0-72EB-4A51-B54C-A0E57CC5F6DC}')
	coclass_clsid = IID('{94AA20BC-33CF-40F0-B0EE-8DAD194F49D4}')

	def Save(self, FileName=defaultNamedNotOptArg):
		'—охранить в файл.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((8, 1),),FileName
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"FixedCellsSize": (1, 2, (11, 0), (), "FixedCellsSize", None),
		"FixedColumnCount": (3, 2, (11, 0), (), "FixedColumnCount", None),
		"FixedRowCount": (2, 2, (11, 0), (), "FixedRowCount", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"FixedCellsSize": ((1, LCID, 4, 0),()),
		"FixedColumnCount": ((3, LCID, 4, 0),()),
		"FixedRowCount": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITexturesParam(DispatchBaseClass):
	'ѕараметры наложени€ текстур.'
	CLSID = IID('{6EDA87C9-26C9-4040-AE48-33AD3EA9244F}')
	coclass_clsid = IID('{B0AA22BA-3F8B-4DC7-97FF-688AE467179D}')

	# The method SetTextureAngle is actually a property, but must be used as a method to correctly pass the arguments
	def SetTextureAngle(self, Type=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ѕоворот текстуры.'
		return self._oleobj_.InvokeTypes(6506, LCID, 4, (24, 0), ((3, 1), (5, 1)),Type
			, arg1)

	# The method SetTextureDx is actually a property, but must be used as a method to correctly pass the arguments
	def SetTextureDx(self, Type=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'—мещение по горизонтали.'
		return self._oleobj_.InvokeTypes(6504, LCID, 4, (24, 0), ((3, 1), (5, 1)),Type
			, arg1)

	# The method SetTextureDy is actually a property, but must be used as a method to correctly pass the arguments
	def SetTextureDy(self, Type=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'—мещение по вертикали.'
		return self._oleobj_.InvokeTypes(6505, LCID, 4, (24, 0), ((3, 1), (5, 1)),Type
			, arg1)

	# The method SetTextureFileName is actually a property, but must be used as a method to correctly pass the arguments
	def SetTextureFileName(self, Type=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'»м€ файла текстуры.'
		return self._oleobj_.InvokeTypes(6501, LCID, 4, (24, 0), ((3, 1), (8, 1)),Type
			, arg1)

	# The method SetTextureHeight is actually a property, but must be used as a method to correctly pass the arguments
	def SetTextureHeight(self, Type=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'¬ысота текстуры.'
		return self._oleobj_.InvokeTypes(6502, LCID, 4, (24, 0), ((3, 1), (5, 1)),Type
			, arg1)

	# The method SetTextureWidth is actually a property, but must be used as a method to correctly pass the arguments
	def SetTextureWidth(self, Type=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'¬ысота текстуры.'
		return self._oleobj_.InvokeTypes(6503, LCID, 4, (24, 0), ((3, 1), (5, 1)),Type
			, arg1)

	# The method TextureAngle is actually a property, but must be used as a method to correctly pass the arguments
	def TextureAngle(self, Type=defaultNamedNotOptArg):
		'ѕоворот текстуры.'
		return self._oleobj_.InvokeTypes(6506, LCID, 2, (5, 0), ((3, 1),),Type
			)

	# The method TextureDx is actually a property, but must be used as a method to correctly pass the arguments
	def TextureDx(self, Type=defaultNamedNotOptArg):
		'—мещение по горизонтали.'
		return self._oleobj_.InvokeTypes(6504, LCID, 2, (5, 0), ((3, 1),),Type
			)

	# The method TextureDy is actually a property, but must be used as a method to correctly pass the arguments
	def TextureDy(self, Type=defaultNamedNotOptArg):
		'—мещение по вертикали.'
		return self._oleobj_.InvokeTypes(6505, LCID, 2, (5, 0), ((3, 1),),Type
			)

	# The method TextureFileName is actually a property, but must be used as a method to correctly pass the arguments
	def TextureFileName(self, Type=defaultNamedNotOptArg):
		'»м€ файла текстуры.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(6501, LCID, 2, (8, 0), ((3, 1),),Type
			)

	# The method TextureHeight is actually a property, but must be used as a method to correctly pass the arguments
	def TextureHeight(self, Type=defaultNamedNotOptArg):
		'¬ысота текстуры.'
		return self._oleobj_.InvokeTypes(6502, LCID, 2, (5, 0), ((3, 1),),Type
			)

	# The method TextureWidth is actually a property, but must be used as a method to correctly pass the arguments
	def TextureWidth(self, Type=defaultNamedNotOptArg):
		'¬ысота текстуры.'
		return self._oleobj_.InvokeTypes(6503, LCID, 2, (5, 0), ((3, 1),),Type
			)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(6507, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IThinParameters(DispatchBaseClass):
	'ѕараметры тонкой стенки.'
	CLSID = IID('{B90D597D-4213-4A59-98D4-0B67E719551B}')
	coclass_clsid = None

	def GetThinParameters(self, Thin=pythoncom.Missing, ThinType=pythoncom.Missing, ThicknessNormal=pythoncom.Missing, ThicknessReverse=pythoncom.Missing):
		'ѕолучить параметры тонкой стенки элемента.'
		return self._ApplyTypes_(2504, 1, (11, 0), ((16395, 2), (16387, 2), (16389, 2), (16389, 2)), 'GetThinParameters', None,Thin
			, ThinType, ThicknessNormal, ThicknessReverse)

	# The method SetThickness is actually a property, but must be used as a method to correctly pass the arguments
	def SetThickness(self, Normal=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'“олщина стенки.'
		return self._oleobj_.InvokeTypes(2503, LCID, 4, (24, 0), ((11, 1), (5, 1)),Normal
			, arg1)

	def SetThinParameters(self, Thin=defaultNamedNotOptArg, ThinType=defaultNamedNotOptArg, ThicknessNormal=defaultNamedNotOptArg, ThicknessReverse=defaultNamedNotOptArg):
		'”становить параметры тонкой стенки элемента.'
		return self._oleobj_.InvokeTypes(2505, LCID, 1, (11, 0), ((11, 1), (3, 1), (5, 1), (5, 1)),Thin
			, ThinType, ThicknessNormal, ThicknessReverse)

	# The method Thickness is actually a property, but must be used as a method to correctly pass the arguments
	def Thickness(self, Normal=defaultNamedNotOptArg):
		'“олщина стенки.'
		return self._oleobj_.InvokeTypes(2503, LCID, 2, (5, 0), ((11, 1),),Normal
			)

	_prop_map_get_ = {
		"Thin": (2501, 2, (11, 0), (), "Thin", None),
		"ThinType": (2502, 2, (3, 0), (), "ThinType", None),
	}
	_prop_map_put_ = {
		"Thin": ((2501, LCID, 4, 0),()),
		"ThinType": ((2502, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IThread(DispatchBaseClass):
	'”словное обозначение резьбы.'
	CLSID = IID('{BC710E4D-A679-40FC-B5AE-16302ABBFEB8}')
	coclass_clsid = IID('{606263B5-E920-46FB-930E-4107CC0FBA1B}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AutoDiameter": (6, 2, (11, 0), (), "AutoDiameter", None),
		"AutoLenght": (4, 2, (11, 0), (), "AutoLenght", None),
		# Method 'BaseObject' returns object of type 'IModelObject'
		"BaseObject": (1, 2, (9, 0), (), "BaseObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"BaseObjectAdjustment": (8, 2, (11, 0), (), "BaseObjectAdjustment", None),
		"BaseObjectAdjustmentOffset1": (9, 2, (11, 0), (), "BaseObjectAdjustmentOffset1", None),
		"BaseObjectAdjustmentOffset2": (10, 2, (11, 0), (), "BaseObjectAdjustmentOffset2", None),
		"Direction": (7, 2, (11, 0), (), "Direction", None),
		# Method 'FinalBorder' returns object of type 'IModelObject'
		"FinalBorder": (3, 2, (9, 0), (), "FinalBorder", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		# Method 'InitialBorder' returns object of type 'IModelObject'
		"InitialBorder": (2, 2, (9, 0), (), "InitialBorder", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"LeftThread": (11, 2, (11, 0), (), "LeftThread", None),
		"Lenght": (5, 2, (5, 0), (), "Lenght", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"AutoDiameter": ((6, LCID, 4, 0),()),
		"AutoLenght": ((4, LCID, 4, 0),()),
		"BaseObject": ((1, LCID, 4, 0),()),
		"BaseObjectAdjustment": ((8, LCID, 4, 0),()),
		"BaseObjectAdjustmentOffset1": ((9, LCID, 4, 0),()),
		"BaseObjectAdjustmentOffset2": ((10, LCID, 4, 0),()),
		"Direction": ((7, LCID, 4, 0),()),
		"FinalBorder": ((3, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"InitialBorder": ((2, LCID, 4, 0),()),
		"LeftThread": ((11, LCID, 4, 0),()),
		"Lenght": ((5, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IThreadDialogParam(DispatchBaseClass):
	'ѕараметры диалога выбора стандартной резбы.'
	CLSID = IID('{28C513EE-057A-4094-8C18-D3FD733D2C81}')
	coclass_clsid = IID('{7AD229F8-CC73-4FF2-A611-02782B6DDC75}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"IsConic": (2, 2, (11, 0), (), "IsConic", None),
		"NominalDiameter": (3, 2, (5, 0), (), "NominalDiameter", None),
		"P": (4, 2, (5, 0), (), "P", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Standart": (1, 2, (8, 0), (), "Standart", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"IsConic": ((2, LCID, 4, 0),()),
		"NominalDiameter": ((3, LCID, 4, 0),()),
		"P": ((4, LCID, 4, 0),()),
		"Standart": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IThreadPattern(DispatchBaseClass):
	'ѕараметры стандартной резьбы.'
	CLSID = IID('{246741CF-BC91-4E69-AEEE-CF905B9C05F7}')
	coclass_clsid = IID('{A795DEC9-D9BD-4275-B553-44855BB59D71}')

	# The method ConeL1 is actually a property, but must be used as a method to correctly pass the arguments
	def ConeL1(self, Index=defaultNamedNotOptArg):
		'L1 —мещение основной плоскости от торца наружной резьбы (мм).'
		return self._oleobj_.InvokeTypes(8, LCID, 2, (5, 0), ((3, 1),),Index
			)

	# The method ConeL2 is actually a property, but must be used as a method to correctly pass the arguments
	def ConeL2(self, Index=defaultNamedNotOptArg):
		'L2 —мещение основной плоскости от торца внутренней резьбы (мм).'
		return self._oleobj_.InvokeTypes(9, LCID, 2, (5, 0), ((3, 1),),Index
			)

	# The method Designation is actually a property, but must be used as a method to correctly pass the arguments
	def Designation(self, Index=defaultNamedNotOptArg):
		'ќбозначение резьбы.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(11, LCID, 2, (8, 0), ((3, 1),),Index
			)

	def GetParameters(self, Index=defaultNamedNotOptArg, NominalDiameter=pythoncom.Missing, P=pythoncom.Missing, L=pythoncom.Missing
			, L1=pythoncom.Missing, L2=pythoncom.Missing):
		'ѕараметры резьбы дл€ дл€ заданного диаметра и шага.'
		return self._ApplyTypes_(14, 1, (8, 0), ((3, 1), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2)), 'GetParameters', None,Index
			, NominalDiameter, P, L, L1, L2
			)

	# The method Lenght is actually a property, but must be used as a method to correctly pass the arguments
	def Lenght(self, Index=defaultNamedNotOptArg):
		'L - –абоча€ длина резьбы (мм).'
		return self._oleobj_.InvokeTypes(10, LCID, 2, (5, 0), ((3, 1),),Index
			)

	# The method NominalDiameter is actually a property, but must be used as a method to correctly pass the arguments
	def NominalDiameter(self, Index=defaultNamedNotOptArg):
		'D - Ќоминальный диаметр резьбы (мм).'
		return self._oleobj_.InvokeTypes(6, LCID, 2, (5, 0), ((3, 1),),Index
			)

	# The method P is actually a property, but must be used as a method to correctly pass the arguments
	def P(self, Index=defaultNamedNotOptArg):
		'P - Ўаг резьбы.'
		return self._oleobj_.InvokeTypes(7, LCID, 2, (5, 0), ((3, 1),),Index
			)

	def SelectDiameters(self):
		'Cписок номинальных диаметров резьбы (мм).'
		return self._ApplyTypes_(12, 1, (12, 0), (), 'SelectDiameters', None,)

	def SelectP(self, NominalDiameter=defaultNamedNotOptArg):
		'Cписок шагов резьбы дл€ данног диаметра.'
		return self._ApplyTypes_(13, 1, (12, 0), ((5, 1),), 'SelectP', None,NominalDiameter
			)

	def SelectParameters(self, NominalDiameter=defaultNamedNotOptArg, P=defaultNamedNotOptArg, L=pythoncom.Missing, L1=pythoncom.Missing
			, L2=pythoncom.Missing):
		'ѕараметры резьбы дл€ дл€ заданного диаметра и шага.'
		return self._ApplyTypes_(15, 1, (8, 0), ((5, 1), (5, 1), (16389, 2), (16389, 2), (16389, 2)), 'SelectParameters', None,NominalDiameter
			, P, L, L1, L2)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ConeAngle": (3, 2, (5, 0), (), "ConeAngle", None),
		"HoleKoeff": (4, 2, (5, 0), (), "HoleKoeff", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"PatternsCount": (5, 2, (3, 0), (), "PatternsCount", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Standart": (2, 2, (8, 0), (), "Standart", None),
		"TableName": (1, 2, (8, 0), (), "TableName", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IThreads(DispatchBaseClass):
	' оллекци€ условных обозначений резьбы.'
	CLSID = IID('{6090C8D4-4EB0-402A-8E25-29C1FAE85F11}')
	coclass_clsid = IID('{ABA1BF7E-8138-4DC3-8EFB-A240E2B8B36E}')

	# Result is of type IThread
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{BC710E4D-A679-40FC-B5AE-16302ABBFEB8}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type IThread
	# The method Thread is actually a property, but must be used as a method to correctly pass the arguments
	def Thread(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу или по имени.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Thread', '{BC710E4D-A679-40FC-B5AE-16302ABBFEB8}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IThreadsParameters(DispatchBaseClass):
	'ѕараметры резьбы.'
	CLSID = IID('{6DBF5262-75A5-4BB9-8EF6-159F204B49D8}')
	coclass_clsid = IID('{606263B5-E920-46FB-930E-4107CC0FBA1B}')

	def Init(self, StandardFileName=defaultNamedNotOptArg, Diameter=defaultNamedNotOptArg, Pitch=defaultNamedNotOptArg):
		'»нициализаци€ параметров стандартной резбы.'
		return self._oleobj_.InvokeTypes(5001, LCID, 1, (11, 0), ((8, 1), (5, 1), (5, 1)),StandardFileName
			, Diameter, Pitch)

	_prop_map_get_ = {
		"ConicalThreadAngle": (5006, 2, (5, 0), (), "ConicalThreadAngle", None),
		"Diameter": (5002, 2, (5, 0), (), "Diameter", None),
		"Internal": (5007, 2, (11, 0), (), "Internal", None),
		"InternalDiameterCoefficient": (5005, 2, (5, 0), (), "InternalDiameterCoefficient", None),
		"Pitch": (5003, 2, (5, 0), (), "Pitch", None),
		"ThreadStandardFileName": (5004, 2, (8, 0), (), "ThreadStandardFileName", None),
	}
	_prop_map_put_ = {
		"Diameter": ((5002, LCID, 4, 0),()),
		"Pitch": ((5003, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITolerance(DispatchBaseClass):
	'ƒопуск формы.'
	CLSID = IID('{42DEF911-ADB2-478C-85F1-D5FEFA262EEC}')
	coclass_clsid = IID('{BD78C015-15E7-45F6-AD21-D737007ED7C1}')

	# The method ArrowType is actually a property, but must be used as a method to correctly pass the arguments
	def ArrowType(self, Index=defaultNamedNotOptArg):
		'“ип стрелки ответвлени€ ( TRUE стрелка/ FALSE треугольник).'
		return self._oleobj_.InvokeTypes(1, LCID, 2, (11, 0), ((3, 1),),Index
			)

	# The method BranchPos is actually a property, but must be used as a method to correctly pass the arguments
	def BranchPos(self, Index=defaultNamedNotOptArg):
		'ѕоложение ножки.'
		return self._oleobj_.InvokeTypes(2, LCID, 2, (3, 0), ((3, 1),),Index
			)

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	# The method SetArrowType is actually a property, but must be used as a method to correctly pass the arguments
	def SetArrowType(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'“ип стрелки ответвлени€ ( TRUE стрелка/ FALSE треугольник).'
		return self._oleobj_.InvokeTypes(1, LCID, 4, (24, 0), ((3, 1), (11, 1)),Index
			, arg1)

	# The method SetBranchPos is actually a property, but must be used as a method to correctly pass the arguments
	def SetBranchPos(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ѕоложение ножки.'
		return self._oleobj_.InvokeTypes(2, LCID, 4, (24, 0), ((3, 1), (3, 1)),Index
			, arg1)

	# The method SetToleranceArrowType is actually a property, but must be used as a method to correctly pass the arguments
	def SetToleranceArrowType(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'“ип стрелки ответвлени€.'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((3, 1), (3, 1)),Index
			, arg1)

	# The method ToleranceArrowType is actually a property, but must be used as a method to correctly pass the arguments
	def ToleranceArrowType(self, Index=defaultNamedNotOptArg):
		'“ип стрелки ответвлени€.'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (3, 0), ((3, 1),),Index
			)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITolerance3D(DispatchBaseClass):
	'ƒопуск формы в 3D.'
	CLSID = IID('{9CF700CF-72DB-44EB-A191-3814A3CC21BD}')
	coclass_clsid = IID('{68C4A672-8029-40E8-9203-E50046072BCF}')

	# The method ArrowType is actually a property, but must be used as a method to correctly pass the arguments
	def ArrowType(self, Index=defaultNamedNotOptArg):
		'“ип стрелки ответвлени€.'
		return self._oleobj_.InvokeTypes(5, LCID, 2, (11, 0), ((3, 1),),Index
			)

	# The method BranchPos is actually a property, but must be used as a method to correctly pass the arguments
	def BranchPos(self, Index=defaultNamedNotOptArg):
		'ѕоложение ножки.'
		return self._oleobj_.InvokeTypes(7, LCID, 2, (3, 0), ((3, 1),),Index
			)

	def GetPosition(self, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'“очка задающа€ положение объекта.'
		return self._ApplyTypes_(3, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2)), 'GetPosition', None,X
			, Y, Z)

	# The method SetArrowType is actually a property, but must be used as a method to correctly pass the arguments
	def SetArrowType(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'“ип стрелки ответвлени€.'
		return self._oleobj_.InvokeTypes(5, LCID, 4, (24, 0), ((3, 1), (11, 1)),Index
			, arg1)

	# The method SetBranchPos is actually a property, but must be used as a method to correctly pass the arguments
	def SetBranchPos(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ѕоложение ножки.'
		return self._oleobj_.InvokeTypes(7, LCID, 4, (24, 0), ((3, 1), (3, 1)),Index
			, arg1)

	def SetPosition(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg):
		'“очка задающа€ положение объекта.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1)),X
			, Y, Z)

	# The method SetToleranceArrowType is actually a property, but must be used as a method to correctly pass the arguments
	def SetToleranceArrowType(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'“ип стрелки ответвлени€.'
		return self._oleobj_.InvokeTypes(6, LCID, 4, (24, 0), ((3, 1), (3, 1)),Index
			, arg1)

	# The method ToleranceArrowType is actually a property, but must be used as a method to correctly pass the arguments
	def ToleranceArrowType(self, Index=defaultNamedNotOptArg):
		'“ип стрелки ответвлени€.'
		return self._oleobj_.InvokeTypes(6, LCID, 2, (3, 0), ((3, 1),),Index
			)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"BasePlane": (1, 2, (3, 0), (), "BasePlane", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		# Method 'PositionObject' returns object of type 'IModelObject'
		"PositionObject": (2, 2, (9, 0), (), "PositionObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"BasePlane": ((1, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"PositionObject": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IToleranceParam(DispatchBaseClass):
	'ѕараметры допуска формы.'
	CLSID = IID('{46E2F216-6BCE-4863-9DDC-CC08DC0016F7}')
	coclass_clsid = None

	_prop_map_get_ = {
		"BasePointPos": (1501, 2, (3, 0), (), "BasePointPos", None),
		"BaseSign1": (1509, 2, (3, 0), (), "BaseSign1", None),
		"BaseSign2": (1511, 2, (3, 0), (), "BaseSign2", None),
		# Method 'BaseValue1' returns object of type 'ITextLine'
		"BaseValue1": (1508, 2, (9, 0), (), "BaseValue1", '{AAB72FE2-DEA3-4FB6-B0DD-B926249EF67C}'),
		# Method 'BaseValue2' returns object of type 'ITextLine'
		"BaseValue2": (1510, 2, (9, 0), (), "BaseValue2", '{AAB72FE2-DEA3-4FB6-B0DD-B926249EF67C}'),
		"PrefixSign": (1505, 2, (3, 0), (), "PrefixSign", None),
		"Sign": (1504, 2, (3, 0), (), "Sign", None),
		"SuffixSign": (1507, 2, (3, 0), (), "SuffixSign", None),
		# Method 'Table' returns object of type 'ITable'
		"Table": (1503, 2, (9, 0), (), "Table", '{D3715420-645E-435B-BB25-8E35AC570718}'),
		"Value": (1506, 2, (8, 0), (), "Value", None),
		"Vertical": (1502, 2, (11, 0), (), "Vertical", None),
	}
	_prop_map_put_ = {
		"BasePointPos": ((1501, LCID, 4, 0),()),
		"BaseSign1": ((1509, LCID, 4, 0),()),
		"BaseSign2": ((1511, LCID, 4, 0),()),
		"PrefixSign": ((1505, LCID, 4, 0),()),
		"Sign": ((1504, LCID, 4, 0),()),
		"SuffixSign": ((1507, LCID, 4, 0),()),
		"Value": ((1506, LCID, 4, 0),()),
		"Vertical": ((1502, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(1506, 2, (8, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IToleranceRecalc(DispatchBaseClass):
	'ѕересчет модели.'
	CLSID = IID('{07C35E20-5554-4C10-B0D4-5B07DD9CE842}')
	coclass_clsid = IID('{B1B69577-AA04-41AC-A98E-F7DDEF40AFC0}')

	def AddAllVariables(self):
		'ƒобавить все переменные.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), (),)

	def AddItems(self, Object=defaultNamedNotOptArg):
		'ƒобавить переменние, размер или компонент.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), ((9, 1),),Object
			)

	# The method Coefficient is actually a property, but must be used as a method to correctly pass the arguments
	def Coefficient(self, Index=defaultNamedNotOptArg):
		' оэффициент.'
		return self._oleobj_.InvokeTypes(10, LCID, 2, (5, 0), ((12, 1),),Index
			)

	def DeleteItem(self, Index=defaultNamedNotOptArg):
		'”далить переменную или вариант пересчета компонента по имени, индексу или интерфейсу.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), ((12, 1),),Index
			)

	# Result is of type IKompasAPIObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'ѕолучить переменную или компонент.'
		ret = self._oleobj_.InvokeTypes(4, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')
		return ret

	# The method RecalcType is actually a property, but must be used as a method to correctly pass the arguments
	def RecalcType(self, Index=defaultNamedNotOptArg):
		'—пособ пересчета.'
		return self._oleobj_.InvokeTypes(8, LCID, 2, (3, 0), ((12, 1),),Index
			)

	# The method RecalcUserType is actually a property, but must be used as a method to correctly pass the arguments
	def RecalcUserType(self, Index=defaultNamedNotOptArg):
		'—пособ пользовательского пересчета дл€ всавки.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(9, LCID, 2, (8, 0), ((12, 1),),Index
			)

	# The method SetCoefficient is actually a property, but must be used as a method to correctly pass the arguments
	def SetCoefficient(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		' оэффициент.'
		return self._oleobj_.InvokeTypes(10, LCID, 4, (24, 0), ((12, 1), (5, 1)),Index
			, arg1)

	# The method SetRecalcType is actually a property, but must be used as a method to correctly pass the arguments
	def SetRecalcType(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'—пособ пересчета.'
		return self._oleobj_.InvokeTypes(8, LCID, 4, (24, 0), ((12, 1), (3, 1)),Index
			, arg1)

	# The method SetRecalcUserType is actually a property, but must be used as a method to correctly pass the arguments
	def SetRecalcUserType(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'—пособ пользовательского пересчета дл€ всавки.'
		return self._oleobj_.InvokeTypes(9, LCID, 4, (24, 0), ((12, 1), (8, 1)),Index
			, arg1)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Current": (2, 2, (11, 0), (), "Current", None),
		"Id": (11, 2, (3, 0), (), "Id", None),
		"ItemsCount": (3, 2, (3, 0), (), "ItemsCount", None),
		"Name": (1, 2, (8, 0), (), "Name", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"Current": ((2, LCID, 4, 0),()),
		"Name": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')
	#This class has Item property/method which allows indexed access with the object[key] syntax.
	#Some objects will accept a string or other type of key in addition to integers.
	#Note that many Office objects do not use zero-based indexing.
	def __getitem__(self, key):
		return self._get_good_object_(self._oleobj_.Invoke(*(4, LCID, 2, 1, key)), "Item", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')

class IToleranceRecalcsManager(DispatchBaseClass):
	'ћенеджер пересчета модели по допускам.'
	CLSID = IID('{B7134661-5E97-45DB-9208-5E1E49BEF9C2}')
	coclass_clsid = None

	# Result is of type IToleranceRecalc
	def AddRecalc(self):
		'—оздать пересчет размеров.'
		ret = self._oleobj_.InvokeTypes(1002, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'AddRecalc', '{07C35E20-5554-4C10-B0D4-5B07DD9CE842}')
		return ret

	# Result is of type IToleranceRecalc
	def AddRecalcCopy(self, Source=defaultNamedNotOptArg):
		'—оздать пересчет размеров по образцу.'
		ret = self._oleobj_.InvokeTypes(1003, LCID, 1, (9, 0), ((9, 1),),Source
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddRecalcCopy', '{07C35E20-5554-4C10-B0D4-5B07DD9CE842}')
		return ret

	# Result is of type IToleranceRecalc
	def GetRecalc(self, Index=defaultNamedNotOptArg):
		'ѕолучить пересчет размеров по имени или индексу.'
		ret = self._oleobj_.InvokeTypes(1004, LCID, 1, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'GetRecalc', '{07C35E20-5554-4C10-B0D4-5B07DD9CE842}')
		return ret

	def SaveRecalcModel(self, FileName=defaultNamedNotOptArg):
		'—охранить пересчитанную копию модели.'
		return self._oleobj_.InvokeTypes(1006, LCID, 1, (11, 0), ((8, 1),),FileName
			)

	_prop_map_get_ = {
		# Method 'CurrentRecalc' returns object of type 'IToleranceRecalc'
		"CurrentRecalc": (1007, 2, (9, 0), (), "CurrentRecalc", '{07C35E20-5554-4C10-B0D4-5B07DD9CE842}'),
		"RecalcsCount": (1001, 2, (3, 0), (), "RecalcsCount", None),
		"ToleranceMode": (1005, 2, (11, 0), (), "ToleranceMode", None),
	}
	_prop_map_put_ = {
		"ToleranceMode": ((1005, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITolerances(DispatchBaseClass):
	' оллекци€ допусков формы.'
	CLSID = IID('{97CDD55F-3C64-469B-B26E-A927D3300B6C}')
	coclass_clsid = IID('{6E4F37E5-2F92-4A22-97EF-F5AEC374343A}')

	# Result is of type ITolerance
	def Add(self):
		'ƒобавить допуск формы  в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{42DEF911-ADB2-478C-85F1-D5FEFA262EEC}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	# Result is of type ITolerance
	# The method Tolerance is actually a property, but must be used as a method to correctly pass the arguments
	def Tolerance(self, Index=defaultNamedNotOptArg):
		'ѕолучить допуск формы по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Tolerance', '{42DEF911-ADB2-478C-85F1-D5FEFA262EEC}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ITolerances3D(DispatchBaseClass):
	' оллекци€ допусков формы 3D.'
	CLSID = IID('{82ADDA0C-B8DE-4336-A5CC-B36504A80E2D}')
	coclass_clsid = IID('{EE1CF4A7-CB7E-42C2-854D-32EB10E28C78}')

	# Result is of type ITolerance3D
	def Add(self):
		'ƒобавить допуск формы 3D в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{9CF700CF-72DB-44EB-A191-3814A3CC21BD}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type ITolerance3D
	# The method Tolerance3D is actually a property, but must be used as a method to correctly pass the arguments
	def Tolerance3D(self, Index=defaultNamedNotOptArg):
		'ѕолучить допуск формы 3D по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Tolerance3D', '{9CF700CF-72DB-44EB-A191-3814A3CC21BD}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ITrimmedCurve(DispatchBaseClass):
	'ќпераци€ усеченни€ кривой.'
	CLSID = IID('{F86B25DD-55A8-40F7-ACC4-4795FCF7C87C}')
	coclass_clsid = IID('{46DCF819-A2E0-4D7C-BFCD-F0181F6358EF}')

	def GetIntersectParameters(self, CutPoints1=pythoncom.Missing, CutPoints2=pythoncom.Missing):
		'ѕолучить массивы точек пересечени€ кривой с секущими объектами'
		return self._ApplyTypes_(8, 1, (11, 0), ((16396, 2), (16396, 2)), 'GetIntersectParameters', None,CutPoints1
			, CutPoints2)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"BeginParameter": (6, 2, (5, 0), (), "BeginParameter", None),
		# Method 'Curve' returns object of type 'IModelObject'
		"Curve": (1, 2, (9, 0), (), "Curve", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'CutObject1' returns object of type 'IModelObject'
		"CutObject1": (2, 2, (9, 0), (), "CutObject1", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'CutObject2' returns object of type 'IModelObject'
		"CutObject2": (3, 2, (9, 0), (), "CutObject2", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"EndParameter": (7, 2, (5, 0), (), "EndParameter", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Sense": (5, 2, (11, 0), (), "Sense", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"UseTwoCutObjecs": (4, 2, (11, 0), (), "UseTwoCutObjecs", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"BeginParameter": ((6, LCID, 4, 0),()),
		"Curve": ((1, LCID, 4, 0),()),
		"CutObject1": ((2, LCID, 4, 0),()),
		"CutObject2": ((3, LCID, 4, 0),()),
		"EndParameter": ((7, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Sense": ((5, LCID, 4, 0),()),
		"UseTwoCutObjecs": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITrimmedCurves(DispatchBaseClass):
	' оллекци€ операций усеченни€ кривой.'
	CLSID = IID('{E0916A32-60A7-4786-859F-C4B08402CC36}')
	coclass_clsid = IID('{FFC3BE29-A93A-47AA-9733-362C120E87D6}')

	# Result is of type ITrimmedCurve
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{F86B25DD-55A8-40F7-ACC4-4795FCF7C87C}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type ITrimmedCurve
	# The method TrimmedCurve is actually a property, but must be used as a method to correctly pass the arguments
	def TrimmedCurve(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'TrimmedCurve', '{F86B25DD-55A8-40F7-ACC4-4795FCF7C87C}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class ITrimmedSurface(DispatchBaseClass):
	'ќпераци€ усечени€ поверхности.'
	CLSID = IID('{3D64A257-8109-491C-8CB6-F0DCF516F02E}')
	coclass_clsid = IID('{5B3A39A9-82EB-4997-8279-6641009E9C9E}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"CutObject": (2, 2, (12, 0), (), "CutObject", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		"OperationResult": (4, 2, (3, 0), (), "OperationResult", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Sense": (3, 2, (11, 0), (), "Sense", None),
		"Surface": (1, 2, (12, 0), (), "Surface", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"CutObject": ((2, LCID, 4, 0),()),
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"OperationResult": ((4, LCID, 4, 0),()),
		"Sense": ((3, LCID, 4, 0),()),
		"Surface": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ITrimmedSurfaces(DispatchBaseClass):
	' оллекци€ ќпераций усечени€ поверхности.'
	CLSID = IID('{799A9110-799B-40E5-85AF-087AD30A89B4}')
	coclass_clsid = IID('{7C809F8B-4BF4-42AF-B1CE-7CBEFA653730}')

	# Result is of type ITrimmedSurface
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{3D64A257-8109-491C-8CB6-F0DCF516F02E}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type ITrimmedSurface
	# The method TrimmedSurface is actually a property, but must be used as a method to correctly pass the arguments
	def TrimmedSurface(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'TrimmedSurface', '{3D64A257-8109-491C-8CB6-F0DCF516F02E}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IUnhistoredCurve3D(DispatchBaseClass):
	' рива€ без истории.'
	CLSID = IID('{56F2843F-DE6A-43BC-ACCD-560B7FA7DD05}')
	coclass_clsid = IID('{DFA86296-3244-47D5-A306-D115FFC45DA1}')

	def Replace(self, Curve=defaultNamedNotOptArg, DeleteSource=defaultNamedNotOptArg):
		'»зменить кривую.'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (11, 0), ((9, 1), (11, 1)),Curve
			, DeleteSource)

	def Unwrap(self, Placement=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg
			, Accuracy=defaultNamedNotOptArg):
		'ѕостроить развертку.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), ((12, 1), (5, 1), (5, 1), (5, 1), (5, 1)),Placement
			, X, Y, Z, Accuracy)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IUnhistoredCurves3D(DispatchBaseClass):
	' оллекци€ кривых без истории.'
	CLSID = IID('{AAADB4EE-6F26-4865-9A83-01E71A438621}')
	coclass_clsid = IID('{FC9E1D2C-CE09-45E7-B95B-BF060ED6B597}')

	# Result is of type IUnhistoredCurve3D
	def Add(self, Points=defaultNamedNotOptArg):
		'—оздает новую кривую по массиву точек.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((12, 1),),Points
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{56F2843F-DE6A-43BC-ACCD-560B7FA7DD05}')
		return ret

	# Result is of type IUnhistoredCurve3D
	def Convert(self, Curve=defaultNamedNotOptArg, DeleteSource=defaultNamedNotOptArg):
		'—оздает кривую без истории по кривой.'
		ret = self._oleobj_.InvokeTypes(4, LCID, 1, (9, 0), ((9, 1), (11, 1)),Curve
			, DeleteSource)
		if ret is not None:
			ret = Dispatch(ret, 'Convert', '{56F2843F-DE6A-43BC-ACCD-560B7FA7DD05}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def Load(self, FileName=defaultNamedNotOptArg, SewCurves=defaultNamedNotOptArg):
		'ѕрочитать кривые из файла.'
		return self._ApplyTypes_(3, 1, (12, 0), ((8, 1), (11, 1)), 'Load', None,FileName
			, SewCurves)

	# Result is of type IUnhistoredCurve3D
	# The method UnhistoredCurve3D is actually a property, but must be used as a method to correctly pass the arguments
	def UnhistoredCurve3D(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'UnhistoredCurve3D', '{56F2843F-DE6A-43BC-ACCD-560B7FA7DD05}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IUnionComponents(DispatchBaseClass):
	'ќпераци€ объединение компонентов.'
	CLSID = IID('{2DCDD394-C325-4D41-A5FD-9E8CC7B8EC5C}')
	coclass_clsid = IID('{D8AF682B-5F03-4CCE-9E77-787A76D2B55F}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Parts": (1, 2, (12, 0), (), "Parts", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Parts": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IUnionsComponents(DispatchBaseClass):
	' оллекци€ операций объединение компонентов.'
	CLSID = IID('{2A449EF6-1554-4C66-8A98-2734DAB88E97}')
	coclass_clsid = IID('{801B8CC1-1735-4448-BE29-A16E578D9851}')

	# Result is of type IUnionComponents
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{2DCDD394-C325-4D41-A5FD-9E8CC7B8EC5C}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type IUnionComponents
	# The method UnionComponents is actually a property, but must be used as a method to correctly pass the arguments
	def UnionComponents(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу или по имени.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'UnionComponents', '{2DCDD394-C325-4D41-A5FD-9E8CC7B8EC5C}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IUnitMarking(DispatchBaseClass):
	'ќбозначение узла.'
	CLSID = IID('{86F46084-16A8-4B5C-99E9-F848216788F0}')
	coclass_clsid = IID('{79A4CAF1-F75C-47D5-A3AF-65D8B95AD17A}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"FilletRadius": (12, 2, (5, 0), (), "FilletRadius", None),
		"Form": (9, 2, (3, 0), (), "Form", None),
		"Height": (4, 2, (5, 0), (), "Height", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Radius": (3, 2, (5, 0), (), "Radius", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"ShelfDirection": (6, 2, (3, 0), (), "ShelfDirection", None),
		"ShelfX": (7, 2, (5, 0), (), "ShelfX", None),
		"ShelfY": (8, 2, (5, 0), (), "ShelfY", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		# Method 'TextDown' returns object of type 'IText'
		"TextDown": (11, 2, (9, 0), (), "TextDown", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		# Method 'TextUp' returns object of type 'IText'
		"TextUp": (10, 2, (9, 0), (), "TextUp", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"Width": (5, 2, (5, 0), (), "Width", None),
		"Xc": (1, 2, (5, 0), (), "Xc", None),
		"Yc": (2, 2, (5, 0), (), "Yc", None),
	}
	_prop_map_put_ = {
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"FilletRadius": ((12, LCID, 4, 0),()),
		"Form": ((9, LCID, 4, 0),()),
		"Height": ((4, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"Radius": ((3, LCID, 4, 0),()),
		"ShelfDirection": ((6, LCID, 4, 0),()),
		"ShelfX": ((7, LCID, 4, 0),()),
		"ShelfY": ((8, LCID, 4, 0),()),
		"Width": ((5, LCID, 4, 0),()),
		"Xc": ((1, LCID, 4, 0),()),
		"Yc": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IUnitMarkings(DispatchBaseClass):
	' оллекци€ обозначений узлов.'
	CLSID = IID('{969AD901-FC09-47F5-94F5-1ABEB1A9C85C}')
	coclass_clsid = IID('{2156B173-A854-4714-BE90-6F9ADE48E2AF}')

	# Result is of type IUnitMarking
	def Add(self):
		'ƒобавить обозначение узла в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{86F46084-16A8-4B5C-99E9-F848216788F0}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	# Result is of type IUnitMarking
	# The method UnitMarking is actually a property, but must be used as a method to correctly pass the arguments
	def UnitMarking(self, Index=defaultNamedNotOptArg):
		'ѕолучить обозначение узла, заданное по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'UnitMarking', '{86F46084-16A8-4B5C-99E9-F848216788F0}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IUnitNumber(DispatchBaseClass):
	'Ќомер узла.'
	CLSID = IID('{FABAF607-CB92-47C4-9409-B7678162051D}')
	coclass_clsid = IID('{515C7A0D-0120-4CC4-A5F0-67473D7D95D3}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		# Method 'TextDown' returns object of type 'IText'
		"TextDown": (4, 2, (9, 0), (), "TextDown", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		# Method 'TextUp' returns object of type 'IText'
		"TextUp": (3, 2, (9, 0), (), "TextUp", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"X": (1, 2, (5, 0), (), "X", None),
		"Y": (2, 2, (5, 0), (), "Y", None),
	}
	_prop_map_put_ = {
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"X": ((1, LCID, 4, 0),()),
		"Y": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IUnitNumbers(DispatchBaseClass):
	' оллекци€ номеров узла.'
	CLSID = IID('{598E649B-970C-454B-9162-1BB6C9FBFCBF}')
	coclass_clsid = IID('{624E4C7C-156C-4FD9-8DA8-CEB9750860D1}')

	# Result is of type IUnitNumber
	def Add(self):
		'ƒобавить номер узла в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{FABAF607-CB92-47C4-9409-B7678162051D}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	# Result is of type IUnitNumber
	# The method UnitNumber is actually a property, but must be used as a method to correctly pass the arguments
	def UnitNumber(self, Index=defaultNamedNotOptArg):
		'ѕолучить номер узла, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'UnitNumber', '{FABAF607-CB92-47C4-9409-B7678162051D}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IUserDataStorage(DispatchBaseClass):
	'ќбъект пользовательского хранилища данных.'
	CLSID = IID('{DD2AF5C4-D5B9-420D-B658-F935F80A8586}')
	coclass_clsid = IID('{4C7C5A7E-AD2C-4B1F-82B9-73476837E020}')

	def AddObject(self, Pass=defaultNamedNotOptArg, Object=defaultNamedNotOptArg, Comment=defaultNamedNotOptArg):
		'ƒобавить объект пользовательского хранилища и комментарий к нему'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (3, 0), ((8, 1), (12, 1), (8, 1)),Pass
			, Object, Comment)

	def Clear(self, Pass=defaultNamedNotOptArg):
		'”далить все объекты.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), ((8, 1),),Pass
			)

	def Delete(self, Pass=defaultNamedNotOptArg, Index=defaultNamedNotOptArg):
		'”далить объект заданный по индексу или по комментарию.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), ((8, 1), (12, 1)),Pass
			, Index)

	def GetObject(self, Index=defaultNamedNotOptArg, Object=pythoncom.Missing, Numb=pythoncom.Missing):
		'ѕолучить объект пользовательского хранилища и комментарий к нему по комменатрию или индексу'
		return self._ApplyTypes_(4, 1, (8, 0), ((12, 1), (16396, 2), (16387, 2)), 'GetObject', None,Index
			, Object, Numb)

	# The method Name is actually a property, but must be used as a method to correctly pass the arguments
	def Name(self, Pass=defaultNamedNotOptArg):
		'»м€ хранилища.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(1, LCID, 2, (8, 0), ((8, 1),),Pass
			)

	# The method SetName is actually a property, but must be used as a method to correctly pass the arguments
	def SetName(self, Pass=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'»м€ хранилища.'
		return self._oleobj_.InvokeTypes(1, LCID, 4, (24, 0), ((8, 1), (8, 1)),Pass
			, arg1)

	def SetObject(self, Pass=defaultNamedNotOptArg, Index=defaultNamedNotOptArg, Object=defaultNamedNotOptArg, Comment=defaultNamedNotOptArg):
		'”становить объект пользовательского хранилища и комментарий к нему по комменатрию или индексу'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (3, 0), ((8, 1), (12, 1), (12, 1), (8, 1)),Pass
			, Index, Object, Comment)

	def SetPassword(self, OldPass=defaultNamedNotOptArg, NewPass=defaultNamedNotOptArg):
		'”становить пароль на изменение данных в хранилище.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), ((8, 1), (8, 1)),OldPass
			, NewPass)

	# The method SetVersion is actually a property, but must be used as a method to correctly pass the arguments
	def SetVersion(self, Pass=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'ѕолучить версию хранилища.'
		return self._oleobj_.InvokeTypes(3, LCID, 4, (24, 0), ((8, 1), (3, 1)),Pass
			, arg1)

	# The method Version is actually a property, but must be used as a method to correctly pass the arguments
	def Version(self, Pass=defaultNamedNotOptArg):
		'ѕолучить версию хранилища.'
		return self._oleobj_.InvokeTypes(3, LCID, 2, (3, 0), ((8, 1),),Pass
			)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IUserDataStorages(DispatchBaseClass):
	' оллекци€ объектов пользовательского хранилища '
	CLSID = IID('{9DBFB4EB-BE9F-46EF-88FF-BB603A9E786B}')
	coclass_clsid = IID('{1B57D1CF-CBEA-4DBC-9452-50E367784958}')

	# Result is of type IUserDataStorage
	def Add(self, StorageName=defaultNamedNotOptArg):
		'—оздает новый объект хранилища и добавл€ет его в коллекцию'
		ret = self._oleobj_.InvokeTypes(1, LCID, 1, (9, 0), ((8, 1),),StorageName
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{DD2AF5C4-D5B9-420D-B658-F935F80A8586}')
		return ret

	def Delete(self, Password=defaultNamedNotOptArg, Index=defaultNamedNotOptArg):
		'”далить объект заданный по индексу или по имени'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), ((8, 1), (12, 1)),Password
			, Index)

	# Result is of type IUserDataStorage
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по имени или по индексу'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{DD2AF5C4-D5B9-420D-B658-F935F80A8586}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по имени или по индексу'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{DD2AF5C4-D5B9-420D-B658-F935F80A8586}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{DD2AF5C4-D5B9-420D-B658-F935F80A8586}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IUserDataStoragesMng(DispatchBaseClass):
	'ћенеджер пользовательских хранилищ'
	CLSID = IID('{77A6D4CA-6418-4DEE-B59C-400BFD052375}')
	coclass_clsid = IID('{13BCC1C9-C582-4616-89EE-4CD250595CC4}')

	# Result is of type IUserDataStorages
	def Add(self, Object=defaultNamedNotOptArg):
		'—оздает новое хранилища по объекту и добавл€ет его в коллекцию'
		ret = self._oleobj_.InvokeTypes(1, LCID, 1, (9, 0), ((9, 1),),Object
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{9DBFB4EB-BE9F-46EF-88FF-BB603A9E786B}')
		return ret

	def Clear(self):
		'ќчистить менеджер от всех коллеций.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), (),)

	def Delete(self, Index=defaultNamedNotOptArg):
		'”далить коллекцию по индексу, заданному по ссылке на объект или по индексу.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), ((12, 1),),Index
			)

	# Result is of type IUserDataStorages
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке на объект или по индексу'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{9DBFB4EB-BE9F-46EF-88FF-BB603A9E786B}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке на объект или по индексу'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{9DBFB4EB-BE9F-46EF-88FF-BB603A9E786B}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{9DBFB4EB-BE9F-46EF-88FF-BB603A9E786B}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IUserDesignationCompObj(DispatchBaseClass):
	'—оставной объект дл€ пользовательских объектов обозначений 3D.'
	CLSID = IID('{701EE4DA-4A8C-4F64-9ED3-4B51A0ABF79C}')
	coclass_clsid = IID('{2A26A1B6-9B08-4F28-8828-58CA667AD6DF}')

	def SetObjects(self, Objects=defaultNamedNotOptArg):
		'«адать объекты.'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (11, 0), ((12, 1),),Objects
			)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IUserFolder(DispatchBaseClass):
	'»нтерфейс пользовательской директории.'
	CLSID = IID('{67671C8A-3587-41EB-9291-39E9F94E4EA5}')
	coclass_clsid = IID('{FF3B01C1-0693-45AE-A641-8BCAAE5C99B2}')

	# Result is of type IModelObject
	def Add(self, Type=defaultNamedNotOptArg):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 1, (9, 0), ((3, 1),),Type
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def GetObjects(self):
		'ѕолучить набор объектов в виде SAFEARRAY DISPATCH - VT_ARRAY | VT_DISPATCH.'
		return self._ApplyTypes_(2, 1, (12, 0), (), 'GetObjects', None,)

	def SetObjects(self, Objects=defaultNamedNotOptArg):
		'«адать объекты.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), ((12, 1),),Objects
			)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IUserFolders(DispatchBaseClass):
	'»нтерфейс коллекции пользовательских директорий.'
	CLSID = IID('{0155AE59-92F4-4CEE-9633-8ADA943388CB}')
	coclass_clsid = IID('{BD6A9CD5-210A-41A7-9AA0-D07064ED460E}')

	# Result is of type IUserFolder
	def Add(self):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{67671C8A-3587-41EB-9291-39E9F94E4EA5}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IUserMetadataManager(DispatchBaseClass):
	'ћенеджер пользовательских метаданных.'
	CLSID = IID('{DC982411-CF10-4C00-946B-B5338448568A}')
	coclass_clsid = None

	def AddFile(self, ApplicationIID=defaultNamedNotOptArg, SrcFileName=defaultNamedNotOptArg, DestFileName=defaultNamedNotOptArg, AllowReplacement=defaultNamedNotOptArg
			, Compress=defaultNamedNotOptArg):
		'ƒобавить файл в хранилище.'
		return self._oleobj_.InvokeTypes(20008, LCID, 1, (11, 0), ((8, 1), (8, 1), (8, 1), (11, 1), (11, 1)),ApplicationIID
			, SrcFileName, DestFileName, AllowReplacement, Compress)

	def CreateStorage(self, ApplicationIID=defaultNamedNotOptArg, ApplicationDescription=defaultNamedNotOptArg, Version=defaultNamedNotOptArg):
		'—оздать хранилище файлов приложени€.'
		return self._oleobj_.InvokeTypes(20001, LCID, 1, (11, 0), ((8, 1), (8, 1), (8, 1)),ApplicationIID
			, ApplicationDescription, Version)

	def DeleteFile(self, ApplicationIID=defaultNamedNotOptArg, StorageFileName=defaultNamedNotOptArg):
		'”далить файл из хранилища.'
		return self._oleobj_.InvokeTypes(20006, LCID, 1, (11, 0), ((8, 1), (8, 1)),ApplicationIID
			, StorageFileName)

	def DeleteStorage(self, ApplicationIID=defaultNamedNotOptArg):
		'”далить хранилище файлов приложени€.'
		return self._oleobj_.InvokeTypes(20003, LCID, 1, (11, 0), ((8, 1),),ApplicationIID
			)

	def ExistStorage(self, ApplicationIID=defaultNamedNotOptArg):
		'ѕроверить наличие хранилища данных приложени€.'
		return self._oleobj_.InvokeTypes(20002, LCID, 1, (11, 0), ((8, 1),),ApplicationIID
			)

	def ExtractFile(self, ApplicationIID=defaultNamedNotOptArg, SrcFileName=defaultNamedNotOptArg, DestFileName=defaultNamedNotOptArg, AllowReplacement=defaultNamedNotOptArg):
		'»звлечь файл из хранилища.'
		return self._oleobj_.InvokeTypes(20009, LCID, 1, (11, 0), ((8, 1), (8, 1), (8, 1), (11, 1)),ApplicationIID
			, SrcFileName, DestFileName, AllowReplacement)

	def GetAllFilenames(self, ApplicationIID=defaultNamedNotOptArg):
		'ѕолучить список файлов приложени€.'
		return self._ApplyTypes_(20004, 1, (12, 0), ((8, 1),), 'GetAllFilenames', None,ApplicationIID
			)

	def IsExistFile(self, ApplicationIID=defaultNamedNotOptArg, StorageFileName=defaultNamedNotOptArg):
		'ѕроверить наличие файла в хранилище.'
		return self._oleobj_.InvokeTypes(20007, LCID, 1, (11, 0), ((8, 1), (8, 1)),ApplicationIID
			, StorageFileName)

	# The method SetStorageInfo is actually a property, but must be used as a method to correctly pass the arguments
	def SetStorageInfo(self, ApplicationIID=defaultNamedNotOptArg, ParameterName=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		'ѕолучить данные из StorageInfo.'
		return self._oleobj_.InvokeTypes(20005, LCID, 4, (24, 0), ((8, 1), (8, 1), (8, 1)),ApplicationIID
			, ParameterName, arg2)

	# The method StorageInfo is actually a property, but must be used as a method to correctly pass the arguments
	def StorageInfo(self, ApplicationIID=defaultNamedNotOptArg, ParameterName=defaultNamedNotOptArg):
		'ѕолучить данные из StorageInfo.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(20005, LCID, 2, (8, 0), ((8, 1), (8, 1)),ApplicationIID
			, ParameterName)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IUserObject3D(DispatchBaseClass):
	'ѕользовательский объект 3D.'
	CLSID = IID('{1C1886BC-98DD-4AA9-B038-6849C7BCC86C}')
	coclass_clsid = IID('{DE5CD3C8-0B9B-4B42-A1B7-12690B74D64E}')

	# Result is of type IModelObject
	# The method AssociationObject is actually a property, but must be used as a method to correctly pass the arguments
	def AssociationObject(self, Index=defaultNamedNotOptArg):
		'”становить опорный объект.'
		ret = self._oleobj_.InvokeTypes(103, LCID, 2, (9, 0), ((3, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'AssociationObject', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def ClearAssociationObject(self):
		'”далить все опорные объекты.'
		return self._oleobj_.InvokeTypes(105, LCID, 1, (11, 0), (),)

	# The method SetAssociationObject is actually a property, but must be used as a method to correctly pass the arguments
	def SetAssociationObject(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'”становить опорный объект.'
		return self._oleobj_.InvokeTypes(103, LCID, 4, (24, 0), ((3, 1), (9, 1)),Index
			, arg1)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AssociationObjectCount": (104, 2, (3, 0), (), "AssociationObjectCount", None),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"PropertyObjectEditable": (106, 2, (11, 0), (), "PropertyObjectEditable", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"UserParameters": (102, 2, (13, 0), (), "UserParameters", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"PropertyObjectEditable": ((106, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IUserObjects3D(DispatchBaseClass):
	'»нтерфейс коллекции пользовательских объектов 3D.'
	CLSID = IID('{1753E6BE-C57C-415E-931D-37EAD991D629}')
	coclass_clsid = IID('{BF632568-4E7A-4D21-BA18-AE708775E92E}')

	# Result is of type IUserObject3D
	def Add(self, Type=defaultNamedNotOptArg):
		'—оздает новый элемент и добавл€ет его в коллекцию.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), ((3, 1),),Type
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{1C1886BC-98DD-4AA9-B038-6849C7BCC86C}')
		return ret

	# Result is of type IModelObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	# Result is of type IUserObject3D
	# The method UserObject3D is actually a property, but must be used as a method to correctly pass the arguments
	def UserObject3D(self, Index=defaultNamedNotOptArg):
		'¬озвращает элемент, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'UserObject3D', '{1C1886BC-98DD-4AA9-B038-6849C7BCC86C}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IUserParameters(DispatchBaseClass):
	'ќбъект создаваемый библиотекой.'
	CLSID = IID('{2B32E33D-F898-4249-90E6-3770FE3BC906}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Command": (17003, 2, (3, 0), (), "Command", None),
		"LibraryFileName": (17001, 2, (8, 0), (), "LibraryFileName", None),
		"LibraryName": (17002, 2, (8, 0), (), "LibraryName", None),
		"ObjectID": (17004, 2, (8, 0), (), "ObjectID", None),
		"UserParams": (17005, 2, (12, 0), (), "UserParams", None),
	}
	_prop_map_put_ = {
		"Command": ((17003, LCID, 4, 0),()),
		"LibraryFileName": ((17001, LCID, 4, 0),()),
		"LibraryName": ((17002, LCID, 4, 0),()),
		"ObjectID": ((17004, LCID, 4, 0),()),
		"UserParams": ((17005, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IVariable7(DispatchBaseClass):
	'ѕараметрическа€ переменна€ модели.'
	CLSID = IID('{8BAB52D9-8EF6-43A6-A1B8-AF42D5961A94}')
	coclass_clsid = IID('{DF582F9B-E350-4EF8-A6EA-5D8D32D43CA1}')

	# Result is of type IProperty
	def AddProperty(self):
		'—оздать свойство переменна€.'
		ret = self._oleobj_.InvokeTypes(20, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'AddProperty', '{C389F80D-228D-4FB1-B183-959AEA0B5906}')
		return ret

	def CreateDeviationVariables(self):
		'—оздать переменные дл€ отклонений.'
		return self._oleobj_.InvokeTypes(25, LCID, 1, (11, 0), (),)

	def Delete(self):
		'”далить переменную.'
		return self._oleobj_.InvokeTypes(12, LCID, 1, (11, 0), (),)

	# The method DeviationExpression is actually a property, but must be used as a method to correctly pass the arguments
	def DeviationExpression(self, HighDeviation=defaultNamedNotOptArg):
		'¬ыражение дл€ переменной отклонени€.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(26, LCID, 2, (8, 0), ((11, 1),),HighDeviation
			)

	# The method SetDeviationExpression is actually a property, but must be used as a method to correctly pass the arguments
	def SetDeviationExpression(self, HighDeviation=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'¬ыражение дл€ переменной отклонени€.'
		return self._oleobj_.InvokeTypes(26, LCID, 4, (24, 0), ((11, 1), (8, 1)),HighDeviation
			, arg1)

	def SetLink(self, DocumentName=defaultNamedNotOptArg, VariableName=defaultNamedNotOptArg):
		'”становить ссылку на переменную.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), ((8, 1), (8, 1)),DocumentName
			, VariableName)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"DeviationOn": (22, 2, (11, 0), (), "DeviationOn", None),
		"DeviationType": (23, 2, (3, 0), (), "DeviationType", None),
		"DisplayName": (8, 2, (8, 0), (), "DisplayName", None),
		"Expression": (6, 2, (8, 0), (), "Expression", None),
		"External": (4, 2, (11, 0), (), "External", None),
		"HasTolerance": (17, 2, (11, 0), (), "HasTolerance", None),
		"HighDeviation": (15, 2, (5, 0), (), "HighDeviation", None),
		"Information": (5, 2, (11, 0), (), "Information", None),
		"IsCreatedDeviationVariables": (24, 2, (11, 0), (), "IsCreatedDeviationVariables", None),
		"LinkDocumentName": (10, 2, (8, 0), (), "LinkDocumentName", None),
		"LinkVariableName": (9, 2, (8, 0), (), "LinkVariableName", None),
		"LowDeviation": (16, 2, (5, 0), (), "LowDeviation", None),
		"Name": (1, 2, (8, 0), (), "Name", None),
		"Note": (2, 2, (8, 0), (), "Note", None),
		"ParameterNote": (7, 2, (8, 0), (), "ParameterNote", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Property' returns object of type 'IProperty'
		"Property": (19, 2, (9, 0), (), "Property", '{C389F80D-228D-4FB1-B183-959AEA0B5906}'),
		"ReadOnly": (13, 2, (11, 0), (), "ReadOnly", None),
		"Rectangle": (18, 2, (11, 0), (), "Rectangle", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Tolerance": (14, 2, (8, 0), (), "Tolerance", None),
		"ToleranceOn": (21, 2, (11, 0), (), "ToleranceOn", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Value": (3, 2, (5, 0), (), "Value", None),
	}
	_prop_map_put_ = {
		"DeviationOn": ((22, LCID, 4, 0),()),
		"DeviationType": ((23, LCID, 4, 0),()),
		"Expression": ((6, LCID, 4, 0),()),
		"External": ((4, LCID, 4, 0),()),
		"HasTolerance": ((17, LCID, 4, 0),()),
		"HighDeviation": ((15, LCID, 4, 0),()),
		"Information": ((5, LCID, 4, 0),()),
		"LowDeviation": ((16, LCID, 4, 0),()),
		"Note": ((2, LCID, 4, 0),()),
		"ReadOnly": ((13, LCID, 4, 0),()),
		"Rectangle": ((18, LCID, 4, 0),()),
		"Tolerance": ((14, LCID, 4, 0),()),
		"ToleranceOn": ((21, LCID, 4, 0),()),
		"Value": ((3, LCID, 4, 0),()),
	}
	# Default property for this class is 'Value'
	def __call__(self):
		return self._ApplyTypes_(*(3, 2, (5, 0), (), "Value", None))
	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IVariableTable(DispatchBaseClass):
	'“аблица переменных.'
	CLSID = IID('{2B8B154E-ED76-4FF0-B3E4-FEE691D014A4}')
	coclass_clsid = IID('{B49FD0E4-26AC-48DE-AD0E-7DFA902DF2B7}')

	def AddColumn(self, Val=defaultNamedNotOptArg):
		'ƒобавить колонку в таблицу переменных.'
		return self._oleobj_.InvokeTypes(7010, LCID, 1, (3, 0), ((8, 1),),Val
			)

	def AddRow(self, Val=defaultNamedNotOptArg):
		'ƒобавить строку в таблицу переменных.'
		return self._oleobj_.InvokeTypes(7012, LCID, 1, (3, 0), ((8, 1),),Val
			)

	def ApplyVars(self, Index=defaultNamedNotOptArg):
		'ѕрименить параметры строки к компоненту.'
		return self._oleobj_.InvokeTypes(7008, LCID, 1, (11, 0), ((12, 1),),Index
			)

	# The method Cell is actually a property, but must be used as a method to correctly pass the arguments
	def Cell(self, RowIndexVal=defaultNamedNotOptArg, ColIndex=defaultNamedNotOptArg):
		'«начение в €чейке таблицы переменных.'
		return self._oleobj_.InvokeTypes(7007, LCID, 2, (5, 0), ((3, 1), (3, 1)),RowIndexVal
			, ColIndex)

	def Clear(self):
		'ќчистить всю таблицу - удалить все строки и колонки.'
		return self._oleobj_.InvokeTypes(7014, LCID, 1, (11, 0), (),)

	# The method Comment is actually a property, but must be used as a method to correctly pass the arguments
	def Comment(self, Val=defaultNamedNotOptArg):
		' омментарий к строке.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(7005, LCID, 2, (8, 0), ((3, 1),),Val
			)

	def DeleteColumn(self, ColVal=defaultNamedNotOptArg):
		'”далить колонку из таблицы переменных.'
		return self._oleobj_.InvokeTypes(7011, LCID, 1, (11, 0), ((12, 1),),ColVal
			)

	def DeleteRow(self, RowVal=defaultNamedNotOptArg):
		'”далить строку из таблицы переменных.'
		return self._oleobj_.InvokeTypes(7013, LCID, 1, (11, 0), ((12, 1),),RowVal
			)

	def FindColumnIndex(self, Val=defaultNamedNotOptArg):
		'Ќайти индекс колонки по имени переменной.'
		return self._oleobj_.InvokeTypes(7015, LCID, 1, (3, 0), ((8, 1),),Val
			)

	# The method SetCell is actually a property, but must be used as a method to correctly pass the arguments
	def SetCell(self, RowIndexVal=defaultNamedNotOptArg, ColIndex=defaultNamedNotOptArg, arg2=defaultUnnamedArg):
		'«начение в €чейке таблицы переменных.'
		return self._oleobj_.InvokeTypes(7007, LCID, 4, (24, 0), ((3, 1), (3, 1), (5, 1)),RowIndexVal
			, ColIndex, arg2)

	# The method SetComment is actually a property, but must be used as a method to correctly pass the arguments
	def SetComment(self, Val=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		' омментарий к строке.'
		return self._oleobj_.InvokeTypes(7005, LCID, 4, (24, 0), ((3, 1), (8, 1)),Val
			, arg1)

	# The method SetTableRow is actually a property, but must be used as a method to correctly pass the arguments
	def SetTableRow(self, Index=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'—трока переменных.'
		return self._oleobj_.InvokeTypes(7006, LCID, 4, (24, 0), ((12, 1), (12, 1)),Index
			, arg1)

	# The method SetVarName is actually a property, but must be used as a method to correctly pass the arguments
	def SetVarName(self, Column=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'»м€ переменной в колонке таблицы переменных.'
		return self._oleobj_.InvokeTypes(7003, LCID, 4, (24, 0), ((3, 1), (8, 1)),Column
			, arg1)

	# The method TableRow is actually a property, but must be used as a method to correctly pass the arguments
	def TableRow(self, Index=defaultNamedNotOptArg):
		'—трока переменных.'
		return self._ApplyTypes_(7006, 2, (12, 0), ((12, 1),), 'TableRow', None,Index
			)

	# The method VarName is actually a property, but must be used as a method to correctly pass the arguments
	def VarName(self, Column=defaultNamedNotOptArg):
		'»м€ переменной в колонке таблицы переменных.'
		# Result is a Unicode object
		return self._oleobj_.InvokeTypes(7003, LCID, 2, (8, 0), ((3, 1),),Column
			)

	# The method VisualTable is actually a property, but must be used as a method to correctly pass the arguments
	def VisualTable(self, WinVal=defaultNamedNotOptArg, Select=defaultNamedNotOptArg):
		'¬ыдать таблицу в визуальном режиме.'
		return self._oleobj_.InvokeTypes(7009, LCID, 2, (3, 0), ((3, 1), (11, 1)),WinVal
			, Select)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ColumnsCount": (7002, 2, (3, 0), (), "ColumnsCount", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"RowsCount": (7001, 2, (3, 0), (), "RowsCount", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"VarNames": (7004, 2, (12, 0), (), "VarNames", None),
	}
	_prop_map_put_ = {
		"VarNames": ((7004, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IVector3D(DispatchBaseClass):
	'»нтерфейс параметров вектора 3D.'
	CLSID = IID('{D51A4DCF-627D-44F5-89BA-46EF2449A212}')
	coclass_clsid = IID('{F47C641C-E59B-4B44-9168-A156B15FEF69}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Parameters' returns object of type 'IKompasAPIObject'
		"Parameters": (2, 2, (9, 0), (), "Parameters", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"ParametersType": (1, 2, (3, 0), (), "ParametersType", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"ParametersType": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IVector3DAlongSurfaceNormalParameters(DispatchBaseClass):
	'»нтерфейс параметров вектора, перпендикул€рного грани в указанной точке.'
	CLSID = IID('{064CF423-8D27-41E5-84C4-303F286B38B1}')
	coclass_clsid = IID('{AEFAE454-A1D8-4E22-BEA9-AF2D79DF6BE9}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BaseObject' returns object of type 'IModelObject'
		"BaseObject": (1, 2, (9, 0), (), "BaseObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Direction": (2, 2, (11, 0), (), "Direction", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"U": (3, 2, (5, 0), (), "U", None),
		"V": (4, 2, (5, 0), (), "V", None),
	}
	_prop_map_put_ = {
		"BaseObject": ((1, LCID, 4, 0),()),
		"Direction": ((2, LCID, 4, 0),()),
		"U": ((3, LCID, 4, 0),()),
		"V": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IVector3DBy2AnglesParameters(DispatchBaseClass):
	'»нтерфейс параметров вектора по двум углам.'
	CLSID = IID('{7DC2A592-FACB-4AB2-9B74-27D8116FD591}')
	coclass_clsid = IID('{65CA2B10-06A5-4684-AC5F-EB51AA0BCF28}')

	_prop_map_get_ = {
		"AngleA": (2, 2, (5, 0), (), "AngleA", None),
		"AngleB": (3, 2, (5, 0), (), "AngleB", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'LocalCS' returns object of type 'ILocalCoordinateSystem'
		"LocalCS": (1, 2, (9, 0), (), "LocalCS", '{BA6395F5-3506-4483-8864-4EEC220AF316}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"AngleA": ((2, LCID, 4, 0),()),
		"AngleB": ((3, LCID, 4, 0),()),
		"LocalCS": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IVector3DBy2VertexesParameters(DispatchBaseClass):
	'»нтерфейс параметров вектора 3D по двум вершинам.'
	CLSID = IID('{C039C103-EC51-4FF1-A870-7C016BC7A0D9}')
	coclass_clsid = IID('{4DC7A9C1-C7A0-421B-8481-62147127994B}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Direction": (3, 2, (11, 0), (), "Direction", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		# Method 'Vertex1' returns object of type 'IModelObject'
		"Vertex1": (1, 2, (9, 0), (), "Vertex1", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		# Method 'Vertex2' returns object of type 'IModelObject'
		"Vertex2": (2, 2, (9, 0), (), "Vertex2", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
	}
	_prop_map_put_ = {
		"Direction": ((3, LCID, 4, 0),()),
		"Vertex1": ((1, LCID, 4, 0),()),
		"Vertex2": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IVector3DByCoefficientsParameters(DispatchBaseClass):
	'»нтерфейс параметров вектора по коэффициентам.'
	CLSID = IID('{794BEC80-EBB3-4021-9710-2E7BDAC66F63}')
	coclass_clsid = IID('{2347BFD1-F8FB-4AF3-A3DE-1769AC24E158}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"CoefficientByX": (2, 2, (5, 0), (), "CoefficientByX", None),
		"CoefficientByY": (3, 2, (5, 0), (), "CoefficientByY", None),
		"CoefficientByZ": (4, 2, (5, 0), (), "CoefficientByZ", None),
		# Method 'LocalCS' returns object of type 'ILocalCoordinateSystem'
		"LocalCS": (1, 2, (9, 0), (), "LocalCS", '{BA6395F5-3506-4483-8864-4EEC220AF316}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"CoefficientByX": ((2, LCID, 4, 0),()),
		"CoefficientByY": ((3, LCID, 4, 0),()),
		"CoefficientByZ": ((4, LCID, 4, 0),()),
		"LocalCS": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IVector3DByCurveParameters(DispatchBaseClass):
	'»нтерфейс параметров вектора по базисному вектору в точке кривой (кроме пр€молинейных объектов)'
	CLSID = IID('{68C9D554-7DF1-4509-9B41-007F123EFB78}')
	coclass_clsid = IID('{01DED71C-8500-47A1-9879-E7D1E955152C}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Curve' returns object of type 'IModelObject'
		"Curve": (1, 2, (9, 0), (), "Curve", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Direction": (4, 2, (11, 0), (), "Direction", None),
		"Offset": (2, 2, (5, 0), (), "Offset", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"VectorType": (3, 2, (3, 0), (), "VectorType", None),
	}
	_prop_map_put_ = {
		"Curve": ((1, LCID, 4, 0),()),
		"Direction": ((4, LCID, 4, 0),()),
		"Offset": ((2, LCID, 4, 0),()),
		"VectorType": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IVector3DByLocalCSParameters(DispatchBaseClass):
	'»нтерфейс параметров вектора по углу в плоскости —  и по оси — .'
	CLSID = IID('{1E1F5BE3-E502-41D1-B2EB-8A8216C49B18}')
	coclass_clsid = IID('{5C0BE8E4-A07B-4315-9EBF-933172ED1540}')

	_prop_map_get_ = {
		"Angle": (3, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AxisType": (2, 2, (3, 0), (), "AxisType", None),
		"Direction": (4, 2, (11, 0), (), "Direction", None),
		# Method 'LocalCS' returns object of type 'ILocalCoordinateSystem'
		"LocalCS": (1, 2, (9, 0), (), "LocalCS", '{BA6395F5-3506-4483-8864-4EEC220AF316}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"Angle": ((3, LCID, 4, 0),()),
		"AxisType": ((2, LCID, 4, 0),()),
		"Direction": ((4, LCID, 4, 0),()),
		"LocalCS": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IVector3DByObjectParameters(DispatchBaseClass):
	'»нтерфейс параметров вектора по ребру или плоскости.'
	CLSID = IID('{4CBAB5B7-2350-47EB-84DA-2953F932D465}')
	coclass_clsid = IID('{9F24FA16-76BE-4F5E-9DEE-DBD86FA9903E}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'BaseObject' returns object of type 'IModelObject'
		"BaseObject": (1, 2, (9, 0), (), "BaseObject", '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}'),
		"Direction": (2, 2, (11, 0), (), "Direction", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"BaseObject": ((1, LCID, 4, 0),()),
		"Direction": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IVector3DByScreenNormalParameters(DispatchBaseClass):
	'»нтерфейс параметров вектора перпендикул€рно плоскости экрана.'
	CLSID = IID('{F4593CA1-05E9-46F2-BF6C-4288371066D1}')
	coclass_clsid = IID('{431C567C-FA69-4DEE-B6EE-C46156A0F2B3}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Direction": (1, 2, (11, 0), (), "Direction", None),
		"Fix": (2, 2, (11, 0), (), "Fix", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"Direction": ((1, LCID, 4, 0),()),
		"Fix": ((2, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IVertex(DispatchBaseClass):
	'»нтерфейс вершины.'
	CLSID = IID('{585E265F-0AAD-4A42-8030-3A69882A9B39}')
	coclass_clsid = IID('{D3E2C967-AB5A-4732-A7C1-D185DF7A0ED6}')

	def GetPoint(self, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'ѕолучить координаты вершины.'
		return self._ApplyTypes_(1, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2)), 'GetPoint', None,X
			, Y, Z)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"IsFreeVertex": (2, 2, (11, 0), (), "IsFreeVertex", None),
		"IsSketchVertex": (4, 2, (11, 0), (), "IsSketchVertex", None),
		"IsTopologyVertex": (3, 2, (11, 0), (), "IsTopologyVertex", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
	}
	_prop_map_put_ = {
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IView(DispatchBaseClass):
	'¬ид.'
	CLSID = IID('{21A7BA87-1C8B-41B4-8247-CDD593546F37}')
	coclass_clsid = IID('{9F144F3A-A296-46C6-99C2-1877B83B0E63}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	# Result is of type IVariable7
	# The method Variable is actually a property, but must be used as a method to correctly pass the arguments
	def Variable(self, Index=defaultNamedNotOptArg):
		'ѕолучить параметрическую переменную по имени, индексу или указателю на размер'
		ret = self._oleobj_.InvokeTypes(16, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Variable', '{8BAB52D9-8EF6-43A6-A1B8-AF42D5961A94}')
		return ret

	_prop_map_get_ = {
		"Angle": (12, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Background": (3, 2, (11, 0), (), "Background", None),
		"Color": (6, 2, (3, 0), (), "Color", None),
		"Comment": (7, 2, (8, 0), (), "Comment", None),
		"Current": (5, 2, (11, 0), (), "Current", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Layers' returns object of type 'ILayers'
		"Layers": (14, 2, (9, 0), (), "Layers", '{F6DC2898-D596-4418-A21A-D15AE07B9A40}'),
		"Name": (2, 2, (8, 0), (), "Name", None),
		"Number": (1, 2, (3, 0), (), "Number", None),
		"ObjectCount": (8, 2, (3, 0), (), "ObjectCount", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Scale": (11, 2, (5, 0), (), "Scale", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"Variables": (15, 2, (12, 0), (), "Variables", None),
		"VariablesCount": (17, 2, (3, 0), (), "VariablesCount", None),
		"ViewType": (13, 2, (3, 0), (), "ViewType", None),
		"Visible": (4, 2, (11, 0), (), "Visible", None),
		"X": (9, 2, (5, 0), (), "X", None),
		"Y": (10, 2, (5, 0), (), "Y", None),
	}
	_prop_map_put_ = {
		"Angle": ((12, LCID, 4, 0),()),
		"Background": ((3, LCID, 4, 0),()),
		"Color": ((6, LCID, 4, 0),()),
		"Comment": ((7, LCID, 4, 0),()),
		"Current": ((5, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"Name": ((2, LCID, 4, 0),()),
		"Number": ((1, LCID, 4, 0),()),
		"Scale": ((11, LCID, 4, 0),()),
		"Visible": ((4, LCID, 4, 0),()),
		"X": ((9, LCID, 4, 0),()),
		"Y": ((10, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IView1(DispatchBaseClass):
	'ƒополнительный интерфейс дл€ вида.'
	CLSID = IID('{93233F05-B389-4076-BCA2-CCDB87BDB7B7}')
	coclass_clsid = None

	# Result is of type IDrawingObject
	def FindObject(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Limit=defaultNamedNotOptArg, Param=defaultNamedNotOptArg):
		'Ќайти объект, ближайший к заданной точке, удовлетвор€ющий параметрам поиска.'
		ret = self._oleobj_.InvokeTypes(25, LCID, 1, (9, 0), ((5, 1), (5, 1), (5, 1), (9, 1)),X
			, Y, Limit, Param)
		if ret is not None:
			ret = Dispatch(ret, 'FindObject', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def FindObjects(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Limit=defaultNamedNotOptArg, Param=defaultNamedNotOptArg):
		'Ќайти объекты, в заданной точке, удовлетвор€ющий параметрам поиска.'
		return self._ApplyTypes_(26, 1, (12, 0), ((5, 1), (5, 1), (5, 1), (9, 1)), 'FindObjects', None,X
			, Y, Limit, Param)

	def SelectObjects(self, RegionType=defaultNamedNotOptArg, XMin=defaultNamedNotOptArg, YMin=defaultNamedNotOptArg, XMax=defaultNamedNotOptArg
			, YMax=defaultNamedNotOptArg):
		'ќтобрать объекты рамкой.'
		return self._ApplyTypes_(27, 1, (12, 0), ((3, 1), (5, 1), (5, 1), (5, 1), (5, 1)), 'SelectObjects', None,RegionType
			, XMin, YMin, XMax, YMax)

	_prop_map_get_ = {
		# Method 'BaseObject' returns object of type 'IDrawingObject'
		"BaseObject": (22, 2, (9, 0), (), "BaseObject", '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}'),
		"Crossed": (23, 2, (11, 0), (), "Crossed", None),
		"CrossedTitle": (24, 2, (11, 0), (), "CrossedTitle", None),
		"EditMacroVisibleRegime": (19, 2, (11, 0), (), "EditMacroVisibleRegime", None),
		# Method 'LocalCoordinateSystems2D' returns object of type 'ILocalCoordinateSystems2D'
		"LocalCoordinateSystems2D": (18, 2, (9, 0), (), "LocalCoordinateSystems2D", '{E6A6A1C8-A6F9-470E-AF64-D6AB7741D684}'),
		"Numerator": (20, 2, (5, 0), (), "Numerator", None),
		"Printable": (21, 2, (11, 0), (), "Printable", None),
	}
	_prop_map_put_ = {
		"BaseObject": ((22, LCID, 4, 0),()),
		"Numerator": ((20, LCID, 4, 0),()),
		"Printable": ((21, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IViewDesignation(DispatchBaseClass):
	'ќбозначение вида.'
	CLSID = IID('{5F9580DA-915C-4C28-991D-5DFFE3BF3B3C}')
	coclass_clsid = None

	_prop_map_get_ = {
		"Designation": (4008, 2, (8, 0), (), "Designation", None),
		# Method 'DrawingText' returns object of type 'IDrawingObject'
		"DrawingText": (4010, 2, (9, 0), (), "DrawingText", '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}'),
		"RefObject": (4009, 2, (12, 0), (), "RefObject", None),
		"ShowAngle": (4005, 2, (11, 0), (), "ShowAngle", None),
		"ShowName": (4001, 2, (11, 0), (), "ShowName", None),
		"ShowPage": (4006, 2, (11, 0), (), "ShowPage", None),
		"ShowScale": (4003, 2, (11, 0), (), "ShowScale", None),
		"ShowTurn": (4004, 2, (11, 0), (), "ShowTurn", None),
		"ShowUnfold": (4002, 2, (11, 0), (), "ShowUnfold", None),
		"ShowZone": (4007, 2, (11, 0), (), "ShowZone", None),
	}
	_prop_map_put_ = {
		"RefObject": ((4009, LCID, 4, 0),()),
		"ShowAngle": ((4005, LCID, 4, 0),()),
		"ShowName": ((4001, LCID, 4, 0),()),
		"ShowPage": ((4006, LCID, 4, 0),()),
		"ShowScale": ((4003, LCID, 4, 0),()),
		"ShowTurn": ((4004, LCID, 4, 0),()),
		"ShowUnfold": ((4002, LCID, 4, 0),()),
		"ShowZone": ((4007, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IViewPointer(DispatchBaseClass):
	'—трелка взгл€да.'
	CLSID = IID('{3EE98177-63E8-4C48-89AD-3D5CCCF84D72}')
	coclass_clsid = IID('{E437188E-6071-4C50-9E43-FB53E63D9EE9}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'AdditionalText' returns object of type 'IText'
		"AdditionalText": (11, 2, (9, 0), (), "AdditionalText", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"ArrowType": (12, 2, (3, 0), (), "ArrowType", None),
		"AutoSheet": (8, 2, (11, 0), (), "AutoSheet", None),
		"AutoSorted": (7, 2, (11, 0), (), "AutoSorted", None),
		"AutoZone": (9, 2, (11, 0), (), "AutoZone", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		# Method 'Text' returns object of type 'IText'
		"Text": (10, 2, (9, 0), (), "Text", '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}'),
		"TextX": (5, 2, (5, 0), (), "TextX", None),
		"TextY": (6, 2, (5, 0), (), "TextY", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"X1": (1, 2, (5, 0), (), "X1", None),
		"X2": (3, 2, (5, 0), (), "X2", None),
		"Y1": (2, 2, (5, 0), (), "Y1", None),
		"Y2": (4, 2, (5, 0), (), "Y2", None),
	}
	_prop_map_put_ = {
		"ArrowType": ((12, LCID, 4, 0),()),
		"AutoSheet": ((8, LCID, 4, 0),()),
		"AutoSorted": ((7, LCID, 4, 0),()),
		"AutoZone": ((9, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"TextX": ((5, LCID, 4, 0),()),
		"TextY": ((6, LCID, 4, 0),()),
		"X1": ((1, LCID, 4, 0),()),
		"X2": ((3, LCID, 4, 0),()),
		"Y1": ((2, LCID, 4, 0),()),
		"Y2": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IViewPointers(DispatchBaseClass):
	' оллекци€ стрелок взгл€да.'
	CLSID = IID('{08B45C97-6F86-4809-BBC3-78F216BD0430}')
	coclass_clsid = IID('{A3035980-E806-4458-BF4E-4BD8BC54D592}')

	# Result is of type IViewPointer
	def Add(self):
		'ƒобавить стрелку взгл€да.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{3EE98177-63E8-4C48-89AD-3D5CCCF84D72}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	# Result is of type IViewPointer
	# The method ViewPointer is actually a property, but must be used as a method to correctly pass the arguments
	def ViewPointer(self, Index=defaultNamedNotOptArg):
		'ѕолучить стрелку взгл€да.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'ViewPointer', '{3EE98177-63E8-4C48-89AD-3D5CCCF84D72}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IViews(DispatchBaseClass):
	' оллекци€ видов.'
	CLSID = IID('{9CD1B5E6-C1A2-4910-8D0C-97080B14AA3D}')
	coclass_clsid = IID('{675CDFC9-4ED8-4689-8A15-BE9CC85CFBDC}')

	# Result is of type IView
	def Add(self, ViewType=defaultNamedNotOptArg):
		'—оздать вид (добавл€ет вид в коллекцию).'
		ret = self._oleobj_.InvokeTypes(3, LCID, 1, (9, 0), ((3, 1),),ViewType
			)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{21A7BA87-1C8B-41B4-8247-CDD593546F37}')
		return ret

	def AddStandartViews(self, FileName=defaultNamedNotOptArg, ProjectionName=defaultNamedNotOptArg, ProjectionsTypes=defaultNamedNotOptArg, X=defaultNamedNotOptArg
			, Y=defaultNamedNotOptArg, Scale=defaultNamedNotOptArg, DX=defaultNamedNotOptArg, DY=defaultNamedNotOptArg):
		'—оздать группу стандартных ассоциативных видов (добавить виды в коллекцию).'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), ((8, 1), (8, 1), (12, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1)),FileName
			, ProjectionName, ProjectionsTypes, X, Y, Scale
			, DX, DY)

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	# Result is of type IView
	# The method View is actually a property, but must be used as a method to correctly pass the arguments
	def View(self, Index=defaultNamedNotOptArg):
		'¬озвращает вид, заданный по имени, ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'View', '{21A7BA87-1C8B-41B4-8247-CDD593546F37}')
		return ret

	# Result is of type IView
	# The method ViewByNumber is actually a property, but must be used as a method to correctly pass the arguments
	def ViewByNumber(self, Numb=defaultNamedNotOptArg):
		'¬озвращает вид, заданный по номеру.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 2, (9, 0), ((3, 1),),Numb
			)
		if ret is not None:
			ret = Dispatch(ret, 'ViewByNumber', '{21A7BA87-1C8B-41B4-8247-CDD593546F37}')
		return ret

	_prop_map_get_ = {
		# Method 'ActiveView' returns object of type 'IView'
		"ActiveView": (4, 2, (9, 0), (), "ActiveView", '{21A7BA87-1C8B-41B4-8247-CDD593546F37}'),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IViewsAndLayersManager(DispatchBaseClass):
	'ћенеджер слоев и видов 2D документа.'
	CLSID = IID('{A4737593-578B-4187-8CAD-E1056EB5404B}')
	coclass_clsid = IID('{2E3092B1-3B1A-4060-B202-B0C6F4177973}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'LayerGroups' returns object of type 'ILayerGroups'
		"LayerGroups": (2, 2, (9, 0), (), "LayerGroups", '{DBFF6D98-8F79-453E-9B8B-81E40A6D8027}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		# Method 'Views' returns object of type 'IViews'
		"Views": (1, 2, (9, 0), (), "Views", '{9CD1B5E6-C1A2-4910-8D0C-97080B14AA3D}'),
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IWaveLine(DispatchBaseClass):
	'¬олниста€ лини€.'
	CLSID = IID('{FA2012E1-A983-47D3-9D43-B8DC619AC554}')
	coclass_clsid = IID('{1D709F94-C02D-4DAD-8E74-B9E7434A8E62}')

	def Delete(self):
		'”далить объект.'
		return self._oleobj_.InvokeTypes(3005, LCID, 1, (11, 0), (),)

	def SetWavesAmplitude(self, Representation=defaultNamedNotOptArg, NewVal=defaultNamedNotOptArg):
		'«адать представление амплитуды волн. Representation == TRUE - амплитуда задана в абсолютных значени€, FALSE в процентах.'
		return self._oleobj_.InvokeTypes(11, LCID, 1, (11, 0), ((11, 1), (5, 1)),Representation
			, NewVal)

	def Update(self):
		'ќбновление данных.'
		return self._oleobj_.InvokeTypes(3004, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		"Angle": (5, 2, (5, 0), (), "Angle", None),
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"AutoWavesAmplitude": (14, 2, (11, 0), (), "AutoWavesAmplitude", None),
		"Direction": (8, 2, (11, 0), (), "Direction", None),
		"DrawingObjectParamType": (3006, 2, (3, 0), (), "DrawingObjectParamType", None),
		"DrawingObjectType": (3000, 2, (3, 0), (), "DrawingObjectType", None),
		"HalfWavesCount": (9, 2, (3, 0), (), "HalfWavesCount", None),
		"LayerNumber": (3001, 2, (3, 0), (), "LayerNumber", None),
		"Length": (6, 2, (5, 0), (), "Length", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Style": (7, 2, (3, 0), (), "Style", None),
		"Temp": (3002, 2, (11, 0), (), "Temp", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (3003, 2, (11, 0), (), "Valid", None),
		"WaveLength": (10, 2, (5, 0), (), "WaveLength", None),
		"WavesAmplitude": (12, 2, (5, 0), (), "WavesAmplitude", None),
		"WavesAmplitudeRepresentation": (13, 2, (11, 0), (), "WavesAmplitudeRepresentation", None),
		"X1": (1, 2, (5, 0), (), "X1", None),
		"X2": (3, 2, (5, 0), (), "X2", None),
		"Y1": (2, 2, (5, 0), (), "Y1", None),
		"Y2": (4, 2, (5, 0), (), "Y2", None),
	}
	_prop_map_put_ = {
		"Angle": ((5, LCID, 4, 0),()),
		"AutoWavesAmplitude": ((14, LCID, 4, 0),()),
		"Direction": ((8, LCID, 4, 0),()),
		"DrawingObjectParamType": ((3006, LCID, 4, 0),()),
		"HalfWavesCount": ((9, LCID, 4, 0),()),
		"LayerNumber": ((3001, LCID, 4, 0),()),
		"Length": ((6, LCID, 4, 0),()),
		"Style": ((7, LCID, 4, 0),()),
		"WaveLength": ((10, LCID, 4, 0),()),
		"X1": ((1, LCID, 4, 0),()),
		"X2": ((3, LCID, 4, 0),()),
		"Y1": ((2, LCID, 4, 0),()),
		"Y2": ((4, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IWaveLines(DispatchBaseClass):
	' оллекци€ волнистых линий.'
	CLSID = IID('{C1F0A911-8B4A-48B5-9611-5250D3FC2ACA}')
	coclass_clsid = IID('{A5B25423-BA42-47B3-B0BD-AF8CC911B767}')

	# Result is of type IWaveLine
	def Add(self):
		'—оздать волнистую линию (добавить волнистую линию в коллекцию).'
		ret = self._oleobj_.InvokeTypes(2, LCID, 1, (9, 0), (),)
		if ret is not None:
			ret = Dispatch(ret, 'Add', '{FA2012E1-A983-47D3-9D43-B8DC619AC554}')
		return ret

	# Result is of type IDrawingObject
	# The method Item is actually a property, but must be used as a method to correctly pass the arguments
	def Item(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Item', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	# Result is of type IWaveLine
	# The method WaveLine is actually a property, but must be used as a method to correctly pass the arguments
	def WaveLine(self, Index=defaultNamedNotOptArg):
		'¬озвращает волнистую линию, заданную по индексу.'
		ret = self._oleobj_.InvokeTypes(1, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'WaveLine', '{FA2012E1-A983-47D3-9D43-B8DC619AC554}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Count": (2000, 2, (3, 0), (), "Count", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
	}
	# Default method for this class is 'Item'
	def __call__(self, Index=defaultNamedNotOptArg):
		'¬озвращает объект, заданный по ссылке или по индексу.'
		ret = self._oleobj_.InvokeTypes(0, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, '__call__', '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
		return ret

	def __str__(self, *args):
		return str(self.__call__(*args))
	def __int__(self, *args):
		return int(self.__call__(*args))
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,2,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')
	#This class has Count() property - allow len(ob) to provide this
	def __len__(self):
		return self._ApplyTypes_(*(2000, 2, (3, 0), (), "Count", None))
	#This class has a __len__ - this is needed so 'if object:' always returns TRUE.
	def __nonzero__(self):
		return True

class IZone(DispatchBaseClass):
	'«она.'
	CLSID = IID('{05C71C4B-F8BC-42E9-89D5-B9BC0145ED36}')
	coclass_clsid = IID('{A81F2ABB-4F55-4C82-BDC8-78D10BAA8C15}')

	def GetGabarit(self, X1=pythoncom.Missing, Y1=pythoncom.Missing, Z1=pythoncom.Missing, X2=pythoncom.Missing
			, Y2=pythoncom.Missing, Z2=pythoncom.Missing):
		'¬ыдать габарит.'
		return self._ApplyTypes_(3, 1, (11, 0), ((16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2), (16389, 2)), 'GetGabarit', None,X1
			, Y1, Z1, X2, Y2, Z2
			)

	# The method SelectObjects is actually a property, but must be used as a method to correctly pass the arguments
	def SelectObjects(self, SelectType=defaultNamedNotOptArg):
		'¬ернуть объекты попадающие в зону или наход€щиес€ вне зоны.'
		return self._ApplyTypes_(4, 2, (12, 0), ((3, 1),), 'SelectObjects', None,SelectType
			)

	# The method SelectParts is actually a property, but must be used as a method to correctly pass the arguments
	def SelectParts(self, SelectType=defaultNamedNotOptArg):
		'¬ернуть вставки моделей с редактируемого уровн€ попадающие в зону или наход€щиес€ вне зоны.'
		return self._ApplyTypes_(5, 2, (12, 0), ((3, 1),), 'SelectParts', None,SelectType
			)

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parameters' returns object of type 'IKompasAPIObject'
		"Parameters": (2, 2, (9, 0), (), "Parameters", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
		"ZoneType": (1, 2, (3, 0), (), "ZoneType", None),
	}
	_prop_map_put_ = {
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"ZoneType": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IZoneDivision(DispatchBaseClass):
	'–азбиение зон.'
	CLSID = IID('{D67AA2B3-2E8A-4882-B11A-3828D106CA0A}')
	coclass_clsid = IID('{39E54D0F-3D65-43CD-BCA5-B8D46FE19077}')

	def Update(self):
		'»зменить свойства объекта.'
		return self._oleobj_.InvokeTypes(503, LCID, 1, (11, 0), (),)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"Hidden": (502, 2, (11, 0), (), "Hidden", None),
		"ModelObjectType": (506, 2, (3, 0), (), "ModelObjectType", None),
		"Name": (501, 2, (8, 0), (), "Name", None),
		# Method 'Owner' returns object of type 'IFeature7'
		"Owner": (507, 2, (9, 0), (), "Owner", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		# Method 'Parameters' returns object of type 'IKompasAPIObject'
		"Parameters": (3, 2, (9, 0), (), "Parameters", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		# Method 'Part' returns object of type 'IPart7'
		"Part": (505, 2, (9, 0), (), "Part", '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"Valid": (504, 2, (11, 0), (), "Valid", None),
		# Method 'Zone' returns object of type 'IZone'
		"Zone": (2, 2, (9, 0), (), "Zone", '{05C71C4B-F8BC-42E9-89D5-B9BC0145ED36}'),
		"ZoneDivisionType": (1, 2, (3, 0), (), "ZoneDivisionType", None),
	}
	_prop_map_put_ = {
		"Hidden": ((502, LCID, 4, 0),()),
		"Name": ((501, LCID, 4, 0),()),
		"Zone": ((2, LCID, 4, 0),()),
		"ZoneDivisionType": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IZoneDivisionParametersByPlanes(DispatchBaseClass):
	'ѕараметры разбиени€ зоны дл€ способа по набору плоскостей.'
	CLSID = IID('{3E6BA559-7A5A-4525-8CC0-304AB4164EA5}')
	coclass_clsid = IID('{2D21B406-9933-4038-9196-5111472C5099}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Planes": (1, 2, (12, 0), (), "Planes", None),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"Planes": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IZoneDivisionParametersRegular(DispatchBaseClass):
	'ѕараметры разбиени€ зоны дл€ способа –авномерно по ос€м.'
	CLSID = IID('{C29D4DCA-6BDC-4E7E-BD93-163950E8A1E1}')
	coclass_clsid = IID('{00F35E8B-F196-4447-9546-CA9D21ECD3B7}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"XCount": (1, 2, (3, 0), (), "XCount", None),
		"YCount": (2, 2, (3, 0), (), "YCount", None),
		"ZCount": (3, 2, (3, 0), (), "ZCount", None),
	}
	_prop_map_put_ = {
		"XCount": ((1, LCID, 4, 0),()),
		"YCount": ((2, LCID, 4, 0),()),
		"ZCount": ((3, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IZoneParametersByBorderPoints(DispatchBaseClass):
	'ѕараметры зоны заданной габаритным параллелепипедом.'
	CLSID = IID('{C24EB4CB-CE63-4130-AE76-86DE33A8DDD0}')
	coclass_clsid = IID('{CB8A3B37-B26D-400C-AE24-1395176FDC87}')

	# Result is of type IModelObject
	# The method AssociationObject is actually a property, but must be used as a method to correctly pass the arguments
	def AssociationObject(self, First=defaultNamedNotOptArg):
		'”становить опорный объект дл€ вершины.'
		ret = self._oleobj_.InvokeTypes(4, LCID, 2, (9, 0), ((11, 1),),First
			)
		if ret is not None:
			ret = Dispatch(ret, 'AssociationObject', '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')
		return ret

	def GetPoint(self, First=defaultNamedNotOptArg, X=pythoncom.Missing, Y=pythoncom.Missing, Z=pythoncom.Missing):
		'ѕолучить координату точки.'
		return self._ApplyTypes_(2, 1, (11, 0), ((11, 1), (16389, 2), (16389, 2), (16389, 2)), 'GetPoint', None,First
			, X, Y, Z)

	# Result is of type IKompasAPIObject
	# The method PointParameters is actually a property, but must be used as a method to correctly pass the arguments
	def PointParameters(self, First=defaultNamedNotOptArg):
		'ѕолучить интерфейс параметров точки.'
		ret = self._oleobj_.InvokeTypes(6, LCID, 2, (9, 0), ((11, 1),),First
			)
		if ret is not None:
			ret = Dispatch(ret, 'PointParameters', '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')
		return ret

	# The method PointType is actually a property, but must be used as a method to correctly pass the arguments
	def PointType(self, First=defaultNamedNotOptArg):
		'“ип параметров построени€ точки.'
		return self._oleobj_.InvokeTypes(5, LCID, 2, (3, 0), ((11, 1),),First
			)

	# The method SetAssociationObject is actually a property, but must be used as a method to correctly pass the arguments
	def SetAssociationObject(self, First=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'”становить опорный объект дл€ вершины.'
		return self._oleobj_.InvokeTypes(4, LCID, 4, (24, 0), ((11, 1), (9, 1)),First
			, arg1)

	def SetPoint(self, First=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg):
		'”становить координату точки.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), ((11, 1), (5, 1), (5, 1), (5, 1)),First
			, X, Y, Z)

	# The method SetPointType is actually a property, but must be used as a method to correctly pass the arguments
	def SetPointType(self, First=defaultNamedNotOptArg, arg1=defaultUnnamedArg):
		'“ип параметров построени€ точки.'
		return self._oleobj_.InvokeTypes(5, LCID, 4, (24, 0), ((11, 1), (3, 1)),First
			, arg1)

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"BuildingType": (1, 2, (3, 0), (), "BuildingType", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"BuildingType": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IZoneParametersByObjects(DispatchBaseClass):
	'ѕараметры зоны по суммарному габариту объектов.'
	CLSID = IID('{F577ED6F-C858-442F-855A-E572AA6068AA}')
	coclass_clsid = IID('{C41922E4-E46F-48C2-8EF3-3A52598AFF26}')

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"BaseObjects": (1, 2, (12, 0), (), "BaseObjects", None),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
	}
	_prop_map_put_ = {
		"BaseObjects": ((1, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class IZonesManager(DispatchBaseClass):
	'ћенеджер зон.'
	CLSID = IID('{0B93D860-69EC-4D03-8A1D-EB0C936B1D45}')
	coclass_clsid = IID('{D45C07B1-E8FE-43F8-8396-5BDB05937155}')

	# Result is of type IZone
	def AddZone(self, ZoneType=defaultNamedNotOptArg):
		'ƒобавить зону.'
		ret = self._oleobj_.InvokeTypes(3, LCID, 1, (9, 0), ((3, 1),),ZoneType
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddZone', '{05C71C4B-F8BC-42E9-89D5-B9BC0145ED36}')
		return ret

	# Result is of type IZoneDivision
	def AddZoneDivision(self, ZoneType=defaultNamedNotOptArg):
		'ƒобавить –азбиение зоны.'
		ret = self._oleobj_.InvokeTypes(6, LCID, 1, (9, 0), ((3, 1),),ZoneType
			)
		if ret is not None:
			ret = Dispatch(ret, 'AddZoneDivision', '{D67AA2B3-2E8A-4882-B11A-3828D106CA0A}')
		return ret

	# Result is of type IZone
	# The method Zone is actually a property, but must be used as a method to correctly pass the arguments
	def Zone(self, Index=defaultNamedNotOptArg):
		'ѕолучить зону по имени или индексу.'
		ret = self._oleobj_.InvokeTypes(2, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'Zone', '{05C71C4B-F8BC-42E9-89D5-B9BC0145ED36}')
		return ret

	# Result is of type IZoneDivision
	# The method ZoneDivision is actually a property, but must be used as a method to correctly pass the arguments
	def ZoneDivision(self, Index=defaultNamedNotOptArg):
		'ѕолучить объект –азбиение зоны по имени или индексу.'
		ret = self._oleobj_.InvokeTypes(5, LCID, 2, (9, 0), ((12, 1),),Index
			)
		if ret is not None:
			ret = Dispatch(ret, 'ZoneDivision', '{D67AA2B3-2E8A-4882-B11A-3828D106CA0A}')
		return ret

	_prop_map_get_ = {
		# Method 'Application' returns object of type 'IApplication'
		"Application": (1001, 2, (9, 0), (), "Application", '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}'),
		"CreateZonesInGlobalCS": (9, 2, (11, 0), (), "CreateZonesInGlobalCS", None),
		# Method 'CurrentZone' returns object of type 'IZone'
		"CurrentZone": (7, 2, (9, 0), (), "CurrentZone", '{05C71C4B-F8BC-42E9-89D5-B9BC0145ED36}'),
		# Method 'Parent' returns object of type 'IKompasAPIObject'
		"Parent": (1000, 2, (9, 0), (), "Parent", '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}'),
		"Reference": (1003, 2, (3, 0), (), "Reference", None),
		"Type": (1002, 2, (3, 0), (), "Type", None),
		"ZonesCount": (1, 2, (3, 0), (), "ZonesCount", None),
		"ZonesDivisionCount": (4, 2, (3, 0), (), "ZonesDivisionCount", None),
		# Method 'ZonesTree' returns object of type 'IFeature7'
		"ZonesTree": (10, 2, (9, 0), (), "ZonesTree", '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}'),
		"ZonesVisible": (8, 2, (11, 0), (), "ZonesVisible", None),
	}
	_prop_map_put_ = {
		"CreateZonesInGlobalCS": ((9, LCID, 4, 0),()),
		"CurrentZone": ((7, LCID, 4, 0),()),
		"ZonesVisible": ((8, LCID, 4, 0),()),
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ksContentDialogNotify:
	'Cобыти€ диалога с произвольным контентом IContentDialogParam.'
	CLSID = CLSID_Sink = IID('{7BE2F563-98AD-4F96-891E-C568C0CCD61B}')
	coclass_clsid = IID('{6AB4AFCD-EFD7-49FB-9FA2-0CBBAC094DE9}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnCreateContentCallback",
		        2 : "OnDestroyContent",
		        3 : "OnExecuteCommand",
		        4 : "OnButtonUpdate",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnCreateContentCallback(self, ParentHwnd=defaultNamedNotOptArg, NewContentHwnd=pythoncom.Missing):
#		'—оздание контента.'
#	def OnDestroyContent(self):
#		'”даление контента.'
#	def OnExecuteCommand(self, ButtonID=defaultNamedNotOptArg):
#		'¬ыполнить команду.'
#	def OnButtonUpdate(self, ButtonID=defaultNamedNotOptArg, Check=defaultNamedNotOptArg, Enable=defaultNamedNotOptArg):
#		'”становка состо€ни€ кнопки панели.'


class ksDocument3DNotify7:
	'—обыти€ дл€ 3D документа.'
	CLSID = CLSID_Sink = IID('{C784D45B-8C68-4189-8F27-A3B0D6CFAEB2}')
	coclass_clsid = IID('{9237AAFE-992B-4521-BF68-3A0C6D7F7769}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnBeginRebuild",
		        2 : "OnRebuild",
		        3 : "OnBeginChoiceMaterial",
		        4 : "OnChoiceMaterial",
		        5 : "OnBeginChoiceMarking",
		        6 : "OnChoiceMarking",
		        7 : "OnBeginSetPartFromFile",
		        8 : "OnBeginCreatePartFromFile",
		        9 : "OnCreateEmbodiment",
		       10 : "OnDeleteEmbodiment",
		       11 : "OnChangeCurrentEmbodiment",
		       12 : "OnBeginChoiceProperty",
		       13 : "OnChoiceProperty",
		       14 : "OnBeginRollbackFeatures",
		       15 : "OnRollbackFeatures",
		       16 : "OnBedinLoadCombinationChange",
		       17 : "OnLoadCombinationChange",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnBeginRebuild(self):
#		'Ќачало перестроени€ модели.'
#	def OnRebuild(self):
#		'ћодель перестроена.'
#	def OnBeginChoiceMaterial(self):
#		'Ќачало выбора материала.'
#	def OnChoiceMaterial(self, Material=defaultNamedNotOptArg, Density=defaultNamedNotOptArg):
#		'«акончен выбор материала.'
#	def OnBeginChoiceMarking(self):
#		'Ќачало выбора обозначени€.'
#	def OnChoiceMarking(self, Marking=defaultNamedNotOptArg):
#		'«акончен выбор обозначени€.'
#	def OnBeginSetPartFromFile(self):
#		'Ќачало установки компонента в сборку (до диалога выбора имени).'
#	def OnBeginCreatePartFromFile(self, TypeDoc=defaultNamedNotOptArg, Plane=defaultNamedNotOptArg):
#		'Ќачало создани€ компонента в сборке  (до диалога выбора имени).'
#	def OnCreateEmbodiment(self, Marking=defaultNamedNotOptArg):
#		'ƒобавлено новое исполнение.'
#	def OnDeleteEmbodiment(self, Marking=defaultNamedNotOptArg):
#		'”далено исполнение.'
#	def OnChangeCurrentEmbodiment(self, Marking=defaultNamedNotOptArg):
#		'»споление установлено текущим.'
#	def OnBeginChoiceProperty(self, Obj=defaultNamedNotOptArg, propID=defaultNamedNotOptArg):
#		'Ќачало выбора свойства.'
#	def OnChoiceProperty(self, Obj=defaultNamedNotOptArg, propID=defaultNamedNotOptArg):
#		'«акончен выбор свойства.'
#	def OnBeginRollbackFeatures(self):
#		'Ќачало отката дерева модели.'
#	def OnRollbackFeatures(self):
#		'«авершение отката дерева модели.'
#	def OnBedinLoadCombinationChange(self, Index=defaultNamedNotOptArg):
#		'Ќачало переключени€ типа загрузки.'
#	def OnLoadCombinationChange(self, Index=defaultNamedNotOptArg):
#		'«авершение переключени€ типа загрузки.'


class ksDocumentFileNotify:
	'Cобыти€ документа - –абота с файлом.'
	CLSID = CLSID_Sink = IID('{324C1A45-67AD-41FB-BE57-624F930646F1}')
	coclass_clsid = IID('{DBBB268E-19D3-40DE-B77C-987CA15FE711}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnBeginCloseDocument",
		        2 : "OnCloseDocument",
		        3 : "OnBeginSaveDocument",
		        4 : "OnSaveDocument",
		        5 : "OnActivate",
		        6 : "OnDeactivate",
		        7 : "OnBeginSaveAsDocument",
		        8 : "OnDocumentFrameOpen",
		        9 : "OnProcessActivate",
		       10 : "OnProcessDeactivate",
		       11 : "OnBeginProcess",
		       12 : "OnEndProcess",
		       13 : "OnBeginAutoSaveDocument",
		       14 : "OnAutoSaveDocument",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnBeginCloseDocument(self):
#		'Ќачало закрыти€ документа.'
#	def OnCloseDocument(self):
#		'ƒокумент закрыт.'
#	def OnBeginSaveDocument(self, fileName=defaultNamedNotOptArg):
#		'Ќачало сохранени€ документа.'
#	def OnSaveDocument(self):
#		'ƒокумент сохранен.'
#	def OnActivate(self):
#		'ƒокумент активизирован.'
#	def OnDeactivate(self):
#		'ƒокумент деактивизирован.'
#	def OnBeginSaveAsDocument(self):
#		'Ќачало сохранени€ документа c другим именем (до диалога выбора имени).'
#	def OnDocumentFrameOpen(self, v=defaultNamedNotOptArg):
#		'ќкно документа открылось.'
#	def OnProcessActivate(self, iD=defaultNamedNotOptArg):
#		'јктивизаци€ процесса.'
#	def OnProcessDeactivate(self, iD=defaultNamedNotOptArg):
#		'ƒеактивизаци€ процесса.'
#	def OnBeginProcess(self, iD=defaultNamedNotOptArg):
#		'Ќачало процесса.'
#	def OnEndProcess(self, iD=defaultNamedNotOptArg, Success=defaultNamedNotOptArg):
#		'«авершение процесса.'
#	def OnBeginAutoSaveDocument(self, fileName=defaultNamedNotOptArg):
#		'Ќачало автосохранени€ документа.'
#	def OnAutoSaveDocument(self):
#		'ƒокумент автосохранен.'


class ksDocumentFrameNotify:
	'Cобыти€ дл€ окна документа(клавиатура, мышь, событи€ по отрисовке документа).'
	CLSID = CLSID_Sink = IID('{6ECBB531-5609-4364-AC92-7A6A21D23313}')
	coclass_clsid = IID('{8BFFC9B4-5FE7-4EC5-8BA5-0FF8520D5FF6}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnBeginPaint",
		        2 : "OnClosePaint",
		        3 : "OnMouseDown",
		        4 : "OnMouseUp",
		        5 : "OnMouseDblClick",
		        6 : "OnBeginPaintGL",
		        7 : "OnClosePaintGL",
		        8 : "OnAddGabarit",
		        9 : "OnActivate",
		       10 : "OnDeactivate",
		       11 : "OnCloseFrame",
		       12 : "OnMouseMove",
		       13 : "OnShowOcxTree",
		       14 : "OnBeginPaintTmpObjects",
		       15 : "OnClosePaintTmpObjects",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnBeginPaint(self, PaintObj=defaultNamedNotOptArg):
#		'Ќачало отрисовки документа.'
#	def OnClosePaint(self, PaintObj=defaultNamedNotOptArg):
#		' онец отрисовки документа.'
#	def OnMouseDown(self, NButton=defaultNamedNotOptArg, NShiftState=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg):
#		'Ќажатие кнопки мыши.'
#	def OnMouseUp(self, NButton=defaultNamedNotOptArg, NShiftState=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg):
#		'ќтпускание  кнопки мыши.'
#	def OnMouseDblClick(self, NButton=defaultNamedNotOptArg, NShiftState=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg):
#		'ƒвойной клик кнопки мыши.'
#	def OnBeginPaintGL(self, GlObj=defaultNamedNotOptArg, DrawMode=defaultNamedNotOptArg):
#		'Ќачало отрисовки документа в OpenGL.'
#	def OnClosePaintGL(self, GlObj=defaultNamedNotOptArg, DrawMode=defaultNamedNotOptArg):
#		'ќкончание отрисовки документа в OpenGL.'
#	def OnAddGabarit(self, GabObj=defaultNamedNotOptArg):
#		'ќпределение габаритов документа.'
#	def OnActivate(self):
#		'јктивизаци€ окна.'
#	def OnDeactivate(self):
#		'ƒеактивизаци€ окна.'
#	def OnCloseFrame(self):
#		'«акрытие окна.'
#	def OnMouseMove(self, NShiftState=defaultNamedNotOptArg, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg):
#		'ѕеремещение мыши.'
#	def OnShowOcxTree(self, Ocx=defaultNamedNotOptArg, Show=defaultNamedNotOptArg):
#		'ѕереключение закладки дерева документа.'
#	def OnBeginPaintTmpObjects(self):
#		'Ќачало отрисовки временных объектов(фантомов).'
#	def OnClosePaintTmpObjects(self):
#		' онец отрисовки временных объектов(фантомов).'


class ksDrawingObjectNotify:
	'—обыти€ дл€ графического объекта.'
	CLSID = CLSID_Sink = IID('{E335A73F-DF27-4D33-8CBD-E928F797FB94}')
	coclass_clsid = IID('{5F90A46E-EA28-4294-B34F-145C80141517}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnChangeActive",
		        2 : "OnBeginDelete",
		        3 : "OnDelete",
		        4 : "OnBeginMove",
		        5 : "OnMove",
		        6 : "OnBeginRotate",
		        7 : "OnRotate",
		        8 : "OnBeginScale",
		        9 : "OnScale",
		       10 : "OnBeginTransform",
		       11 : "OnTransform",
		       12 : "OnBeginCopy",
		       13 : "OnCopy",
		       14 : "OnBeginSymmetry",
		       15 : "OnSymmetry",
		       16 : "OnBeginProcess",
		       17 : "OnEndProcess",
		       18 : "OnCreateObject",
		       19 : "OnUpdateObject",
		       20 : "OnBeginDestroyObject",
		       21 : "OnDestroyObject",
		       22 : "OnBeginPropertyChanged",
		       23 : "OnPropertyChanged",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnChangeActive(self, Obj=defaultNamedNotOptArg):
#		'ѕереключение актиfвности объекта( вид, слой).'
#	def OnBeginDelete(self, Objects=defaultNamedNotOptArg):
#		'Ќачало удалени€ объекта, false - запрещает удаление.'
#	def OnDelete(self, Objects=defaultNamedNotOptArg):
#		'”даление объекта.'
#	def OnBeginMove(self, Objects=defaultNamedNotOptArg):
#		'Ќачало сдвига объекта, false - запрещает сдвиг.'
#	def OnMove(self, Objects=defaultNamedNotOptArg):
#		'—двиг объекта.'
#	def OnBeginRotate(self, Objects=defaultNamedNotOptArg):
#		'Ќачало поворота объекта, false - запрещает поворот.'
#	def OnRotate(self, Objects=defaultNamedNotOptArg):
#		'ѕоворот объекта.'
#	def OnBeginScale(self, Objects=defaultNamedNotOptArg):
#		'Ќачало масштабировани€ объекта, false - запрещает поворот.'
#	def OnScale(self, Objects=defaultNamedNotOptArg):
#		'ћасштабирование объекта.'
#	def OnBeginTransform(self, Objects=defaultNamedNotOptArg):
#		'Ќачало трансформации объекта, false - запрещает трансформацию.'
#	def OnTransform(self, Objects=defaultNamedNotOptArg):
#		'“рансформаци€ объекта.'
#	def OnBeginCopy(self, Objects=defaultNamedNotOptArg):
#		'Ќачало копировани€ объекта, false - запрещает копирование.'
#	def OnCopy(self, Objects=defaultNamedNotOptArg):
#		' опирование объекта.'
#	def OnBeginSymmetry(self, Objects=defaultNamedNotOptArg):
#		'Ќачало симметрии  объекта, false - запрещает симметрию.'
#	def OnSymmetry(self, Objects=defaultNamedNotOptArg):
#		'—имметри€  объекта.'
#	def OnBeginProcess(self, PType=defaultNamedNotOptArg, ObjRef=defaultNamedNotOptArg):
#		'Ќачало редактировани€создани€ объекта.false - запрещает процесс.'
#	def OnEndProcess(self, PType=defaultNamedNotOptArg):
#		' онец редактировани€создани€ объекта.'
#	def OnCreateObject(self, Objects=defaultNamedNotOptArg):
#		'—оздание объекта.'
#	def OnUpdateObject(self, Objects=defaultNamedNotOptArg):
#		'–едактирование объекта.'
#	def OnBeginDestroyObject(self, Objects=defaultNamedNotOptArg):
#		'Ќачало разрушени€ объекта, false - запрещает разрушение.'
#	def OnDestroyObject(self, Objects=defaultNamedNotOptArg):
#		'–азрушение объекта.'
#	def OnBeginPropertyChanged(self, Objects=defaultNamedNotOptArg):
#		'Ќачало изменени€ свойств объекта.'
#	def OnPropertyChanged(self, Objects=defaultNamedNotOptArg):
#		'«авершение изменени€ свойств объекта.'


class ksFindObjectParametersNotify(DispatchBaseClass):
	'‘ильтраци€ объектов в функци€х поиска объектов под курсором.'
	CLSID = IID('{E0C4D376-8503-4FC1-8442-794EC7F26364}')
	coclass_clsid = None

	def FilterObject(self, Object=defaultNamedNotOptArg):
		'‘ильтраци€ объектов.'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (11, 0), ((9, 1),),Object
			)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ksGLObject(DispatchBaseClass):
	'¬спомогательные данные дл€ создани€ листа в контексте OpenGL.'
	CLSID = IID('{B1C65023-B908-4CAD-9238-C5026520E62C}')
	coclass_clsid = None

	def glBegin(self, Mode=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(1, LCID, 1, (11, 0), ((3, 1),),Mode
			)

	def glColor3d(self, R=defaultNamedNotOptArg, G=defaultNamedNotOptArg, B=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(20, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1)),R
			, G, B)

	def glDisable(self, Cap=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((3, 1),),Cap
			)

	def glEnable(self, Cap=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), ((3, 1),),Cap
			)

	def glEnd(self):
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), (),)

	def glLineStipple(self, Factor=defaultNamedNotOptArg, Pattern=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(22, LCID, 1, (11, 0), ((3, 1), (2, 1)),Factor
			, Pattern)

	def glLineWidth(self, W=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(21, LCID, 1, (11, 0), ((5, 1),),W
			)

	def glPointSize(self, W=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(23, LCID, 1, (11, 0), ((5, 1),),W
			)

	def glPolygonMode(self, Face=defaultNamedNotOptArg, Mode=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(24, LCID, 1, (11, 0), ((3, 1), (3, 1)),Face
			, Mode)

	def glVertex2d(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(40, LCID, 1, (11, 0), ((5, 1), (5, 1)),X
			, Y)

	def glVertex2dv(self, PData=defaultNamedNotOptArg, CountDouble=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(41, LCID, 1, (11, 0), ((16389, 1), (3, 1)),PData
			, CountDouble)

	def glVertex3d(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(42, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1)),X
			, Y, Z)

	def glVertex3dv(self, PData=defaultNamedNotOptArg, CountDouble=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(43, LCID, 1, (11, 0), ((16389, 1), (3, 1)),PData
			, CountDouble)

	def glVertex4d(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Z=defaultNamedNotOptArg, W=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(44, LCID, 1, (11, 0), ((5, 1), (5, 1), (5, 1), (5, 1)),X
			, Y, Z, W)

	def glVertex4dv(self, PData=defaultNamedNotOptArg, CountDouble=defaultNamedNotOptArg):
		return self._oleobj_.InvokeTypes(45, LCID, 1, (11, 0), ((16389, 1), (3, 1)),PData
			, CountDouble)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ksKompasObjectNotify:
	'Cобыти€ приложени€.'
	CLSID = CLSID_Sink = IID('{C7CB743A-C59D-4C27-8CB6-971C2A393F2F}')
	coclass_clsid = IID('{1A4C2A9B-3B2A-49D1-B75F-3810DD4A2086}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnCreateDocument",
		        2 : "OnBeginOpenDocument",
		        3 : "OnOpenDocument",
		        4 : "OnChangeActiveDocument",
		        5 : "OnApplicationDestroy",
		        6 : "OnBeginCreate",
		        7 : "OnBeginOpenFile",
		        8 : "OnBeginCloseAllDocument",
		        9 : "OnKeyDown",
		       10 : "OnKeyUp",
		       11 : "OnKeyPress",
		       12 : "OnBeginReguestFiles",
		       13 : "OnBeginChoiceMaterial",
		       14 : "OnChoiceMaterial",
		       15 : "OnIsNeedConvertToSavePrevious",
		       16 : "OnBeginConvertToSavePrevious",
		       17 : "OnEndConvertToSavePrevious",
		       18 : "OnChangeTheme",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnCreateDocument(self, newDoc=defaultNamedNotOptArg, docType=defaultNamedNotOptArg):
#		'ƒокумент создан.'
#	def OnBeginOpenDocument(self, fileName=defaultNamedNotOptArg):
#		'Ќачало открыти€ документа.'
#	def OnOpenDocument(self, newDoc=defaultNamedNotOptArg, docType=defaultNamedNotOptArg):
#		'ƒокумент открыт.'
#	def OnChangeActiveDocument(self, newDoc=defaultNamedNotOptArg, docType=defaultNamedNotOptArg):
#		'ѕереключение на другой активный документ.'
#	def OnApplicationDestroy(self):
#		'«акрытие приложени€.'
#	def OnBeginCreate(self, docType=defaultNamedNotOptArg):
#		'Ќачало создани€ документа(до диалога выбора типа).'
#	def OnBeginOpenFile(self):
#		'Ќачало открыти€ документа(до диалога выбора имени).'
#	def OnBeginCloseAllDocument(self):
#		'Ќачало закрыти€ всех открытых документов.'
#	def OnKeyDown(self, key=defaultNamedNotOptArg, flags=defaultNamedNotOptArg, systemKey=defaultNamedNotOptArg):
#		'—обытие нажати€ клавиатуры - нажали клавишу.'
#	def OnKeyUp(self, key=defaultNamedNotOptArg, flags=defaultNamedNotOptArg, systemKey=defaultNamedNotOptArg):
#		'—обытие нажати€ клавиатуры - отпустили клавишу.'
#	def OnKeyPress(self, key=defaultNamedNotOptArg, systemKey=defaultNamedNotOptArg):
#		'—обытие нажати€ клавиатуры - нажали клавишу.'
#	def OnBeginReguestFiles(self, requestID=defaultNamedNotOptArg, files=defaultNamedNotOptArg):
#		'«апрос имен файлов.'
#	def OnBeginChoiceMaterial(self, MaterialPropertyId=defaultNamedNotOptArg):
#		'Ќачало выбора материала.'
#	def OnChoiceMaterial(self, MaterialPropertyId=defaultNamedNotOptArg, material=defaultNamedNotOptArg, density=defaultNamedNotOptArg):
#		'«акончен выбор материала.'
#	def OnIsNeedConvertToSavePrevious(self, pDoc=defaultNamedNotOptArg, docType=defaultNamedNotOptArg, saveVersion=defaultNamedNotOptArg, saveToPreviusParam=defaultNamedNotOptArg
#			, needConvert=defaultNamedNotOptArg):
#		'Ќачало сохранени€ документа в предыдущую верию.'
#	def OnBeginConvertToSavePrevious(self, pDoc=defaultNamedNotOptArg, docType=defaultNamedNotOptArg, saveVersion=defaultNamedNotOptArg, saveToPreviusParam=defaultNamedNotOptArg):
#		'Ќачало конвертации документа перед записью в предыдущую верию.'
#	def OnEndConvertToSavePrevious(self, pDoc=defaultNamedNotOptArg, docType=defaultNamedNotOptArg, saveVersion=defaultNamedNotOptArg, saveToPreviusParam=defaultNamedNotOptArg):
#		'«авершение конвертации документа перед записью в предыдущую верию.'
#	def OnChangeTheme(self, newTheme=defaultNamedNotOptArg):
#		'—обытие изменени€ темы.'


class ksLayoutSheetsNotify:
	'—обыти€ дл€ листов оформлени€.'
	CLSID = CLSID_Sink = IID('{58E30500-6073-4337-BFC1-32A74EA17DE8}')
	coclass_clsid = IID('{1EF17E36-3C4D-4C86-AD1B-17E744075DF8}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnAdd",
		        2 : "OnDelete",
		        3 : "OnUpdate",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnAdd(self, PSheet=defaultNamedNotOptArg):
#		'ƒобавлен лист оформлени€.'
#	def OnDelete(self, PSheet=defaultNamedNotOptArg):
#		'”дален лист оформлени€.'
#	def OnUpdate(self, PSheet=defaultNamedNotOptArg):
#		'»зменены параметры листа оформлени€.'


class ksLibraryManagerNotify:
	'Cобыти€ менеджера библиотек.'
	CLSID = CLSID_Sink = IID('{9B9CC387-E217-4EED-BCE9-9E1D645B49EE}')
	coclass_clsid = IID('{AACB5896-8918-43CB-A5B4-F3EAF45BCEF7}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnBeginAttach",
		        2 : "OnAttach",
		        3 : "OnBeginDetach",
		        4 : "OnDetach",
		        5 : "OnBeginExecute",
		        6 : "OnEndExecute",
		        7 : "OnSystemControlStop",
		        8 : "OnSystemControlStart",
		        9 : "OnAddLibraryDescription",
		       10 : "OnDeleteLibraryDescription",
		       11 : "OnAddInsert",
		       12 : "OnDeleteInsert",
		       13 : "OnEditInsert",
		       14 : "OnTryExecute",
		       15 : "OnBeginInsertDocument",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnBeginAttach(self, PLibrary=defaultNamedNotOptArg):
#		'ѕодключить библиотеку.'
#	def OnAttach(self, PLibrary=defaultNamedNotOptArg):
#		'ѕодключили библиотеку.'
#	def OnBeginDetach(self, PLibrary=defaultNamedNotOptArg):
#		'ќтключить библиотеку.'
#	def OnDetach(self, PLibrary=defaultNamedNotOptArg):
#		'ќтключили библиотеку.'
#	def OnBeginExecute(self, PLibrary=defaultNamedNotOptArg):
#		'«апуск выполнени€ комманды библиотеки.'
#	def OnEndExecute(self, PLibrary=defaultNamedNotOptArg):
#		'«авершение выполнени€ комманды библиотеки.'
#	def OnSystemControlStop(self, PLibrary=defaultNamedNotOptArg):
#		'ѕередача управлени€ библиотеке.'
#	def OnSystemControlStart(self, PLibrary=defaultNamedNotOptArg):
#		'ѕередача управлени€ системе.'
#	def OnAddLibraryDescription(self, PLibrary=defaultNamedNotOptArg):
#		'ƒобавили описание библиотеки.'
#	def OnDeleteLibraryDescription(self, PLibrary=defaultNamedNotOptArg):
#		'”далили описание библиотеки.'
#	def OnAddInsert(self, PInsert=defaultNamedNotOptArg, Create=defaultNamedNotOptArg):
#		'ƒобавили документ в библиотеку документов.'
#	def OnDeleteInsert(self, PInsert=defaultNamedNotOptArg):
#		'”далили документ из библиотеки документов.'
#	def OnEditInsert(self, PLibrary=defaultNamedNotOptArg, PDoc=defaultNamedNotOptArg, NewFrw=defaultNamedNotOptArg):
#		'–едактирование документа из библиотеки документов.'
#	def OnTryExecute(self, PLibrary=defaultNamedNotOptArg, CommandID=defaultNamedNotOptArg):
#		'ѕопытка выполнени€ комманды библиотеки.'
#	def OnBeginInsertDocument(self, PLibrary=defaultNamedNotOptArg, InsertionType=defaultNamedNotOptArg, Insertion=defaultNamedNotOptArg):
#		'«апуск вставки документа из библиотеки.'


class ksModelObjectNotify:
	'»нтерфейс событий объектов 3D документов.'
	CLSID = CLSID_Sink = IID('{7B8E86E1-4304-449D-9CEC-1B14F74A16FB}')
	coclass_clsid = IID('{B0223EED-4659-4EAC-BDA2-20B0FDD4E7B7}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnBeginDelete",
		        2 : "OnDelete",
		        3 : "OnExcluded",
		        4 : "OnHidden",
		        5 : "OnBeginPropertyChanged",
		        6 : "OnPropertyChanged",
		        7 : "OnBeginPlacementChanged",
		        8 : "OnPlacementChanged",
		        9 : "OnBeginProcess",
		       10 : "OnEndProcess",
		       11 : "OnCreateObject",
		       12 : "OnUpdateObject",
		       13 : "OnBeginLoadStateChange",
		       14 : "OnLoadStateChange",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnBeginDelete(self, Obj=defaultNamedNotOptArg):
#		'Ќачало удалени€ объектов.'
#	def OnDelete(self, Obj=defaultNamedNotOptArg):
#		'Oбъекты удалены.'
#	def OnExcluded(self, Obj=defaultNamedNotOptArg, Excluded=defaultNamedNotOptArg):
#		'Oбъект исключен/включен в расчет.'
#	def OnHidden(self, Obj=defaultNamedNotOptArg, _Hidden=defaultNamedNotOptArg):
#		'Oбъект скрыт/показан.'
#	def OnBeginPropertyChanged(self, Obj=defaultNamedNotOptArg):
#		'Ќачало изменени€ свойств объета.'
#	def OnPropertyChanged(self, Obj=defaultNamedNotOptArg):
#		'»зменены свойства объета.'
#	def OnBeginPlacementChanged(self, Obj=defaultNamedNotOptArg):
#		'Ќачало изменени€ положени€ объета .'
#	def OnPlacementChanged(self, Obj=defaultNamedNotOptArg):
#		'»зменено положени€ объета.'
#	def OnBeginProcess(self, PType=defaultNamedNotOptArg, PObj=defaultNamedNotOptArg):
#		'Ќачало редактировани€создани€ объекта.false - запрещает процесс'
#	def OnEndProcess(self, PType=defaultNamedNotOptArg):
#		' онец редактировани€создани€ объекта.'
#	def OnCreateObject(self, Obj=defaultNamedNotOptArg):
#		'—оздание объекта.'
#	def OnUpdateObject(self, Obj=defaultNamedNotOptArg):
#		'–едактирование объекта.'
#	def OnBeginLoadStateChange(self, Obj=defaultNamedNotOptArg, LoadState=defaultNamedNotOptArg):
#		'Ќачало изменени€ типа загрузки.'
#	def OnLoadStateChange(self, Obj=defaultNamedNotOptArg, LoadState=defaultNamedNotOptArg):
#		'«авершение изменени€ типа загрузки.'


class ksPLMObjectNotify(DispatchBaseClass):
	'Cобыти€ объектов версионировани€.'
	CLSID = IID('{B6DB286D-A060-4107-A693-19D135C47751}')
	coclass_clsid = None

	def PLMChangeChanged(self, Object=defaultNamedNotOptArg, newValue=defaultNamedNotOptArg):
		'»зменение признака отличи€.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), ((9, 1), (3, 1)),Object
			, newValue)

	def PLMStatusChanged(self, Object=defaultNamedNotOptArg, newValue=defaultNamedNotOptArg):
		'»зменение статуса в системе версионировани€.'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (11, 0), ((9, 1), (3, 1)),Object
			, newValue)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ksProcess2DNotify:
	'—обыти€ дл€ процесса 2D.'
	CLSID = CLSID_Sink = IID('{7278F9EC-AC53-4861-9E9E-199B59F82A9A}')
	coclass_clsid = IID('{A54A786D-FBBA-45F6-BAFB-18E6D2CE96FF}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnPlacementChange",
		        2 : "OnExecuteCommand",
		        3 : "OnRun",
		        4 : "OnStop",
		        5 : "OnActivate",
		        6 : "OnDeactivate",
		        7 : "OnEndProcess",
		        8 : "OnGetMouseEnterLeavePoint",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnPlacementChange(self, X=defaultNamedNotOptArg, Y=defaultNamedNotOptArg, Angle=defaultNamedNotOptArg, Dynamic=defaultNamedNotOptArg):
#		'»зменение положени€.'
#	def OnExecuteCommand(self, Command=defaultNamedNotOptArg):
#		'¬ыполнить команду.'
#	def OnRun(self):
#		'«апуск процесса.'
#	def OnStop(self):
#		'ќстановка процесса.'
#	def OnActivate(self):
#		'јктивизаци€ процесса.'
#	def OnDeactivate(self):
#		'ƒеактивизаци€ процесса.'
#	def OnEndProcess(self):
#		'ќкончание процесса.'
#	def OnGetMouseEnterLeavePoint(self, Control=defaultNamedNotOptArg, BtnID=defaultNamedNotOptArg, PointIndex=defaultNamedNotOptArg, Parameters=defaultNamedNotOptArg):
#		'«апрос параметров точек дл€ визуального определени€ места применени€ параметра.'


class ksProcess3DManipulatorsNotify(DispatchBaseClass):
	'Cобыти€ манипул€торов.'
	CLSID = IID('{45B82B5C-D0B7-4AC5-965C-26B09612CBF6}')
	coclass_clsid = None

	def BeginDragManipulator(self, ManipulatorId=defaultNamedNotOptArg, PrimitiveType=defaultNamedNotOptArg):
		'Ќачало таскани€ манипул€тора за примитив.'
		return self._oleobj_.InvokeTypes(4, LCID, 1, (11, 0), ((3, 1), (3, 1)),ManipulatorId
			, PrimitiveType)

	def ChangeManipulatorValue(self, ManipulatorId=defaultNamedNotOptArg, PrimitiveType=defaultNamedNotOptArg, newValue=defaultNamedNotOptArg):
		'«авершение редактировани€ значени€ в редакторе манипул€тора.'
		return self._oleobj_.InvokeTypes(8, LCID, 1, (11, 0), ((3, 1), (3, 1), (5, 1)),ManipulatorId
			, PrimitiveType, newValue)

	def ClickManipulatorPrimitive(self, ManipulatorId=defaultNamedNotOptArg, PrimitiveType=defaultNamedNotOptArg, DoubleClick=defaultNamedNotOptArg):
		' лик или двойной клик по примитиву манипул€тора.'
		return self._oleobj_.InvokeTypes(3, LCID, 1, (11, 0), ((3, 1), (3, 1), (11, 1)),ManipulatorId
			, PrimitiveType, DoubleClick)

	def CreateManipulatorEdit(self, ManipulatorId=defaultNamedNotOptArg, PrimitiveType=defaultNamedNotOptArg):
		'—оздание редактора дл€ ввода значени€ управл€ющего положением манипул€тора.'
		return self._oleobj_.InvokeTypes(6, LCID, 1, (11, 0), ((3, 1), (3, 1)),ManipulatorId
			, PrimitiveType)

	def DestroyManipulatorEdit(self, ManipulatorId=defaultNamedNotOptArg):
		'”даление редактора дл€ ввода значени€ управл€ющего положением манипул€тора.'
		return self._oleobj_.InvokeTypes(7, LCID, 1, (11, 0), ((3, 1),),ManipulatorId
			)

	def EndDragManipulator(self, ManipulatorId=defaultNamedNotOptArg, PrimitiveType=defaultNamedNotOptArg):
		'«авершение таскани€ манипул€тора за примитив.'
		return self._oleobj_.InvokeTypes(5, LCID, 1, (11, 0), ((3, 1), (3, 1)),ManipulatorId
			, PrimitiveType)

	def MoveManipulator(self, ManipulatorId=defaultNamedNotOptArg, VX=defaultNamedNotOptArg, VY=defaultNamedNotOptArg, VZ=defaultNamedNotOptArg
			, Delta=defaultNamedNotOptArg, FromEdit=defaultNamedNotOptArg):
		'ѕеремещение манипул€тора.'
		return self._oleobj_.InvokeTypes(2, LCID, 1, (11, 0), ((3, 1), (5, 1), (5, 1), (5, 1), (5, 1), (11, 1)),ManipulatorId
			, VX, VY, VZ, Delta, FromEdit
			)

	def RotateManipulator(self, ManipulatorId=defaultNamedNotOptArg, X0=defaultNamedNotOptArg, Y0=defaultNamedNotOptArg, Z0=defaultNamedNotOptArg
			, AxisZX=defaultNamedNotOptArg, AxisZXY=defaultNamedNotOptArg, AxisZZ=defaultNamedNotOptArg, Angle=defaultNamedNotOptArg, FromEdit=defaultNamedNotOptArg):
		'¬ращение манипул€тора относительно оси на угол.'
		return self._oleobj_.InvokeTypes(1, LCID, 1, (11, 0), ((3, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (5, 1), (11, 1)),ManipulatorId
			, X0, Y0, Z0, AxisZX, AxisZXY
			, AxisZZ, Angle, FromEdit)

	_prop_map_get_ = {
	}
	_prop_map_put_ = {
	}
	def __iter__(self):
		"Return a Python iterator for this object"
		try:
			ob = self._oleobj_.InvokeTypes(-4,LCID,3,(13, 10),())
		except pythoncom.error:
			raise TypeError("This object does not support enumeration")
		return win32com.client.util.Iterator(ob, None)

class ksProcess3DNotify:
	'—обыти€ дл€ процесса 3D.'
	CLSID = CLSID_Sink = IID('{E896DF8D-6BE9-473A-B7B4-38050CDEF537}')
	coclass_clsid = IID('{172114B0-F8B7-4BED-A38B-62BFC490A3AF}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnPlacementChange",
		        2 : "OnExecuteCommand",
		        3 : "OnRun",
		        4 : "OnStop",
		        5 : "OnActivate",
		        6 : "OnDeactivate",
		        7 : "OnFilterObject",
		        8 : "OnCreateTakeObject",
		        9 : "OnEndProcess",
		       10 : "OnProcessingGroupObjects",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnPlacementChange(self, Object=defaultNamedNotOptArg):
#		'»зменение положени€.'
#	def OnExecuteCommand(self, Command=defaultNamedNotOptArg):
#		'¬ыполнить команду.'
#	def OnRun(self):
#		'«апуск процесса.'
#	def OnStop(self):
#		'ќстановка процесса.'
#	def OnActivate(self):
#		'јктивизаци€ процесса.'
#	def OnDeactivate(self):
#		'ƒеактивизаци€ процесса.'
#	def OnFilterObject(self, Object=defaultNamedNotOptArg):
#		'‘ильтраци€ объетов.'
#	def OnCreateTakeObject(self, Object=defaultNamedNotOptArg):
#		'—оздание объекта в подпроцессе.'
#	def OnEndProcess(self):
#		'ќкончание процесса.'
#	def OnProcessingGroupObjects(self, Objects=defaultNamedNotOptArg, selectionType=defaultNamedNotOptArg):
#		'ќбработать объекты, пришедшие из рамки.'


class ksPropertyManagerNotify:
	'Cобыти€ панели свойств.'
	CLSID = CLSID_Sink = IID('{5A89C538-E0DD-4C21-B3D1-3BF65EEB8C3E}')
	coclass_clsid = IID('{1B9CBAB1-99DA-433E-8D4E-6761D1AB9B8A}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnButtonClick",
		        2 : "OnChangeControlValue",
		        3 : "OnControlCommand",
		        4 : "OnButtonUpdate",
		        5 : "OnProcessActivate",
		        6 : "OnProcessDeactivate",
		        7 : "OnCommandHelp",
		        8 : "OnSelectItem",
		        9 : "OnCheckItem",
		       10 : "OnChangeActiveTab",
		       11 : "OnEditFocus",
		       12 : "OnUserMenuCommand",
		       13 : "OnLayoutChanged",
		       14 : "OnGetContextMenuType",
		       15 : "OnFillContextPanel",
		       16 : "OnFillContextIconMenu",
		       17 : "OnEndEditItem",
		       18 : "OnChangeTabExpanded",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnButtonClick(self, ButtonID=defaultNamedNotOptArg):
#		'Ќажатие кнопки спецпанели.'
#	def OnChangeControlValue(self, Control=defaultNamedNotOptArg):
#		'»зменение значени€ контрола.'
#	def OnControlCommand(self, Control=defaultNamedNotOptArg, ButtonID=defaultNamedNotOptArg):
#		'Ќажатие кнопки контрола.'
#	def OnButtonUpdate(self, ButtonID=defaultNamedNotOptArg, Check=defaultNamedNotOptArg, Enable=defaultNamedNotOptArg):
#		'”становка состо€ни€ кнопки спецпанели.'
#	def OnProcessActivate(self):
#		'јктивизаци€ процесса.'
#	def OnProcessDeactivate(self):
#		'ƒеактивизаци€ процесса.'
#	def OnCommandHelp(self, Id=defaultNamedNotOptArg):
#		'¬ызов справки.'
#	def OnSelectItem(self, Control=defaultNamedNotOptArg, Index=defaultNamedNotOptArg, Select=defaultNamedNotOptArg):
#		'—електирование элемента списка.'
#	def OnCheckItem(self, Control=defaultNamedNotOptArg, Index=defaultNamedNotOptArg, Check=defaultNamedNotOptArg):
#		'¬ыбор элемента в спике.'
#	def OnChangeActiveTab(self, TabIndex=defaultNamedNotOptArg):
#		'»зменение активности закладки панели свойств.'
#	def OnEditFocus(self, Control=defaultNamedNotOptArg, Set=defaultNamedNotOptArg):
#		'”становка/сн€тие фокуса на редакторе ввода.'
#	def OnUserMenuCommand(self, Control=defaultNamedNotOptArg, MenuID=defaultNamedNotOptArg):
#		'Ќажатие пункта пользовательского меню.'
#	def OnLayoutChanged(self):
#		'»зменение размещени€ панели свойств.'
#	def OnGetContextMenuType(self, LX=defaultNamedNotOptArg, LY=defaultNamedNotOptArg, ContextMenuType=defaultNamedNotOptArg):
#		'CLLBACK дл€ получени€ типа контекстного меню.'
#	def OnFillContextPanel(self, ContextPanel=defaultNamedNotOptArg):
#		'CLLBACK дл€ накачки контекстной панели.'
#	def OnFillContextIconMenu(self, ContextMenu=defaultNamedNotOptArg):
#		'CLLBACK дл€ накачки контекстной панели.'
#	def OnEndEditItem(self, Control=defaultNamedNotOptArg, Index=defaultNamedNotOptArg):
#		'«авершение редактировани€ текста элемента списка.'
#	def OnChangeTabExpanded(self, TabIndex=defaultNamedNotOptArg):
#		'»зменение активности закладки панели свойств.'


class ksPropertyUserControlNotify:
	'Cобыти€ пользовательского элемента управлени€.'
	CLSID = CLSID_Sink = IID('{5A31BB02-026C-4419-A0FF-A93CF58DCA99}')
	coclass_clsid = IID('{725A98DC-9987-4A79-BDA2-F5024E2D0FF3}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnCreateOCX",
		        2 : "OnDestroyOCX",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnCreateOCX(self, IOcx=defaultNamedNotOptArg):
#		'—оздалс€ OCX контрол.'
#	def OnDestroyOCX(self):
#		'”дал€етс€ OCX контрол.'


class ksSelectionMngNotify:
	'Cобыти€ дл€ менеджера селектированных объектов.'
	CLSID = CLSID_Sink = IID('{A421368A-34B6-4DDF-9A52-73B3488EE83F}')
	coclass_clsid = IID('{45615DBB-7842-436C-9B84-063A13C061E8}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnSelect",
		        2 : "OnUnselect",
		        3 : "OnUnselectAll",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnSelect(self, obj=defaultNamedNotOptArg):
#		'ќбъект селектирован.'
#	def OnUnselect(self, obj=defaultNamedNotOptArg):
#		'ќбъект расселектирован.'
#	def OnUnselectAll(self):
#		'¬се объекты расселектированы.'


class ksSpecificationDescriptionNotify:
	'—обыти€ дл€ описани€ спецификации.'
	CLSID = CLSID_Sink = IID('{A0DA14E6-4F92-4D18-8CD1-2BBAB695CE13}')
	coclass_clsid = IID('{AD076943-BF97-4802-9D4F-D28C6C41E966}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnTuningSpcStyleBeginChange",
		        2 : "OnTuningSpcStyleChange",
		        3 : "OnChangeCurrentSpcDescription",
		        4 : "OnSpcDescriptionAdd",
		        5 : "OnSpcDescriptionRemove",
		        6 : "OnSpcDescriptionBeginEdit",
		        7 : "OnSpcDescriptionEdit",
		        8 : "OnSynchronizationBegin",
		        9 : "OnSynchronization",
		       10 : "OnBeginCalcPositions",
		       11 : "OnCalcPositions",
		       12 : "OnBeginCreateObject",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnTuningSpcStyleBeginChange(self, Descr=defaultNamedNotOptArg):
#		'Ќачало изменени€ настроек спецификации.'
#	def OnTuningSpcStyleChange(self, Descr=defaultNamedNotOptArg, IsOk=defaultNamedNotOptArg):
#		'Ќастройки спецификации изменились.'
#	def OnChangeCurrentSpcDescription(self, Descr=defaultNamedNotOptArg):
#		'»зменилось текущее описание спецификации.'
#	def OnSpcDescriptionAdd(self, Descr=defaultNamedNotOptArg):
#		'ƒобавилось описание спецификации.'
#	def OnSpcDescriptionRemove(self, Descr=defaultNamedNotOptArg):
#		'”далилось описание спецификации.'
#	def OnSpcDescriptionBeginEdit(self, Descr=defaultNamedNotOptArg):
#		'Ќачало редактировани€ описани€ спецификации.'
#	def OnSpcDescriptionEdit(self, Descr=defaultNamedNotOptArg, IsOk=defaultNamedNotOptArg):
#		'ќтредактировали описание спецификации.'
#	def OnSynchronizationBegin(self):
#		'Ќачало синхронизации.'
#	def OnSynchronization(self):
#		'—инхронизаци€ проведена.'
#	def OnBeginCalcPositions(self):
#		'Ќачало расчета позиций.'
#	def OnCalcPositions(self):
#		'ѕроведен расчет позиций.'
#	def OnBeginCreateObject(self, TypeObj=defaultNamedNotOptArg):
#		'Ќачало создани€ объекта —ѕ (до диалога выбора раздела ).'


class ksSpecificationObjectNotify:
	'—обыти€ дл€ объектов спецификации.'
	CLSID = CLSID_Sink = IID('{1C4DEC41-A8EA-40EE-9AC8-F807232DB874}')
	coclass_clsid = IID('{77A64147-06A5-4843-8C6F-F0E35F0ED951}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnBeginDelete",
		        2 : "OnDelete",
		        3 : "OnCellDblClick",
		        4 : "OnCellBeginEdit",
		        5 : "OnChangeCurrent",
		        6 : "OnDocumentBeginAdd",
		        7 : "OnDocumentAdd",
		        8 : "OnDocumentRemove",
		        9 : "OnBeginGeomChange",
		       10 : "OnGeomChange",
		       11 : "OnBeginProcess",
		       12 : "OnEndProcess",
		       13 : "OnCreateObject",
		       14 : "OnUpdateObject",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnBeginDelete(self, Obj=defaultNamedNotOptArg):
#		'Ќачало удалени€ объекта.'
#	def OnDelete(self, Obj=defaultNamedNotOptArg):
#		'”даление объекта.'
#	def OnCellDblClick(self, Obj=defaultNamedNotOptArg, Number=defaultNamedNotOptArg):
#		'ƒвойной клик в €чейке.'
#	def OnCellBeginEdit(self, Obj=defaultNamedNotOptArg, Number=defaultNamedNotOptArg):
#		'Ќачало редактировани€ в €чейке .'
#	def OnChangeCurrent(self, Obj=defaultNamedNotOptArg):
#		'»зменилс€ текущий объект.'
#	def OnDocumentBeginAdd(self, Obj=defaultNamedNotOptArg):
#		'Ќачало добавлени€ документа.'
#	def OnDocumentAdd(self, Obj=defaultNamedNotOptArg, DocName=defaultNamedNotOptArg):
#		'ƒобавление документа в объекте —ѕ.'
#	def OnDocumentRemove(self, Obj=defaultNamedNotOptArg, DocName=defaultNamedNotOptArg):
#		'”даление документа из объекта —ѕ.'
#	def OnBeginGeomChange(self, Obj=defaultNamedNotOptArg):
#		'Ќачало измени€ геометрии объекта —ѕ.'
#	def OnGeomChange(self, Obj=defaultNamedNotOptArg):
#		'√еометри€ объекта —ѕ изменилась.'
#	def OnBeginProcess(self, PType=defaultNamedNotOptArg, Obj=defaultNamedNotOptArg):
#		'Ќачало редактировани€создани€ объекта.false - запрещает процесс'
#	def OnEndProcess(self, PType=defaultNamedNotOptArg):
#		' онец редактировани€создани€ объекта.'
#	def OnCreateObject(self, Obj=defaultNamedNotOptArg):
#		'—оздание объекта.'
#	def OnUpdateObject(self, Obj=defaultNamedNotOptArg):
#		'–едактирование объекта.'


class ksStampNotify:
	'Cобыти€ документа - –абота с основной надписью.'
	CLSID = CLSID_Sink = IID('{404E7D5A-A13F-4CFF-8214-FEA7012110CB}')
	coclass_clsid = IID('{79CB82D9-6EA1-49D2-8479-C7005D87EC77}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnBeginEditStamp",
		        2 : "OnEndEditStamp",
		        3 : "OnStampCellDblClick",
		        4 : "OnStampCellBeginEdit",
		        5 : "OnStampBeginClearCells",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnBeginEditStamp(self):
#		'Ќачало редактировани€ штампа.'
#	def OnEndEditStamp(self, editResult=defaultNamedNotOptArg):
#		'«авершение редактировани€ штампа.'
#	def OnStampCellDblClick(self, number=defaultNamedNotOptArg):
#		'ƒвойной клик в €чейке штампа.'
#	def OnStampCellBeginEdit(self, number=defaultNamedNotOptArg):
#		'Ќачало редактировани€ в €чейке штампа.'
#	def OnStampBeginClearCells(self, cells=defaultNamedNotOptArg):
#		'Ќачало редактировани€ в €чейке штампа.'


class ksViewsAndLayersManagerNotify:
	'—обыти€ менеджера видов и слоев.'
	CLSID = CLSID_Sink = IID('{FC04C62E-AB0F-4614-B3D9-0EA8671CEB08}')
	coclass_clsid = IID('{2E3092B1-3B1A-4060-B202-B0C6F4177973}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        1 : "OnBeginEdit",
		        2 : "OnEndEdit",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnBeginEdit(self):
#		'Ќачало редактировани€.'
#	def OnEndEdit(self, IsOk=defaultNamedNotOptArg):
#		'«авершение редактировани€.'


from win32com.client import CoClassBaseClass
class AdditionalBlockSectionTuning(CoClassBaseClass): # A CoClass
	# Ќастройка раздела блока дополнительных разделов.
	CLSID = IID('{39BDE053-03AA-4B95-8E25-5B8041C7BE12}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IAdditionalBlockSectionTuning,
	]
	default_interface = IAdditionalBlockSectionTuning

class AdditionalBlockSectionTunings(CoClassBaseClass): # A CoClass
	#  оллекци€ настроек разделов блока дополнительных разделов.
	CLSID = IID('{821A5929-98F3-4C67-BC2C-D3A8A1442086}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IAdditionalBlockSectionTunings,
	]
	default_interface = IAdditionalBlockSectionTunings

class AdditionalBlockStyle(CoClassBaseClass): # A CoClass
	# —тиль блока дополнительных разделов.
	CLSID = IID('{704BC0BD-189C-4B8B-A97A-AB5F0C6897EF}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IAdditionalBlockStyle,
	]
	default_interface = IAdditionalBlockStyle

class AdditionalBlockStyles(CoClassBaseClass): # A CoClass
	#  оллекци€ стилей блоков дополнительных разделов.
	CLSID = IID('{2A248D5E-8B8F-4F43-91EC-10C7F02E2064}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IAdditionalBlockStyles,
	]
	default_interface = IAdditionalBlockStyles

class AdditionalBlockTuning(CoClassBaseClass): # A CoClass
	# Ќастройка блока дополнительных разделов.
	CLSID = IID('{D62780C1-EDD6-49B6-B619-04E22189D288}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IAdditionalBlockTuning,
	]
	default_interface = IAdditionalBlockTuning

class AdditionalBlockTunings(CoClassBaseClass): # A CoClass
	#  оллекци€ настроек блоков дополнительных разделов.
	CLSID = IID('{B6CC6F97-B1F1-42CF-ADC7-7875B06A7089}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IAdditionalBlockTunings,
	]
	default_interface = IAdditionalBlockTunings

class AngleDimension(CoClassBaseClass): # A CoClass
	# ”гловой размер.
	CLSID = IID('{BEABBB41-F220-43AB-9922-39BF76207E2A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IAngleDimension,
	]
	default_interface = IAngleDimension

class AngleDimension3D(CoClassBaseClass): # A CoClass
	# ”гловой размер 3D.
	CLSID = IID('{9D769F23-62B6-46FB-9BC9-A74A28E98501}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IAngleDimension3D,
	]
	default_interface = IAngleDimension3D

class AngleDimensions(CoClassBaseClass): # A CoClass
	#  оллекци€ угловых размеров.
	CLSID = IID('{82DDC7DF-D7C3-41A6-9913-DEB4CE349203}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IAngleDimensions,
	]
	default_interface = IAngleDimensions

class AngleDimensions3D(CoClassBaseClass): # A CoClass
	#  оллекци€ угловых размеров 3D.
	CLSID = IID('{154CBD57-2124-4667-BECA-61A6D8AB380A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IAngleDimensions3D,
	]
	default_interface = IAngleDimensions3D

class ArcAxis(CoClassBaseClass): # A CoClass
	# ƒугова€ ось.
	CLSID = IID('{AE2C24D6-17E4-4E5F-BA2B-ED62AC2323EC}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IBuildingAxis,
		IArcAxis,
	]
	default_interface = IArcAxis

class ArcDimension(CoClassBaseClass): # A CoClass
	# –азмер дуги окружности.
	CLSID = IID('{37F30E53-7355-436D-8EEF-3B1DE7E9EFCE}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IArcDimension,
	]
	default_interface = IArcDimension

class ArcDimensions(CoClassBaseClass): # A CoClass
	#  оллекци€ размеров дуг окружностей.
	CLSID = IID('{D18DFB31-8A26-4281-BF18-C462CEDBE714}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IArcDimensions,
	]
	default_interface = IArcDimensions

class Arcs(CoClassBaseClass): # A CoClass
	#  оллекци€ дуг.
	CLSID = IID('{307690EF-0E80-4CD1-93E1-49288C5697A7}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IArcs,
	]
	default_interface = IArcs

class Arcs3D(CoClassBaseClass): # A CoClass
	#  оллекци€ дуг 3D.
	CLSID = IID('{0B792EA8-E117-4B5C-8775-C466A1108422}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IArcs3D,
	]
	default_interface = IArcs3D

class AreaMeasurement3D(CoClassBaseClass): # A CoClass
	# »змерение площади.
	CLSID = IID('{A0D30170-DD32-466A-9CDB-AC91B0795995}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IAreaMeasurement3D,
	]
	default_interface = IAreaMeasurement3D

class AreaMeasurements3D(CoClassBaseClass): # A CoClass
	#  оллекци€ измерений площади.
	CLSID = IID('{D1B34114-0946-4074-9E57-A84A8325845A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IAreaMeasurements3D,
	]
	default_interface = IAreaMeasurements3D

class AssemblyDocument(CoClassBaseClass): # A CoClass
	# »нтерфейс сборки.
	CLSID = IID('{705B37C7-CA52-4588-980E-1105C919E20C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasDocument,
		IKompasDocument3D,
		IAssemblyDocument,
	]
	default_interface = IAssemblyDocument

class AssociationTable(CoClassBaseClass): # A CoClass
	# јссоциативна€ таблица.
	CLSID = IID('{8883DD05-F024-4C44-B9D2-E29EF361A23C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IAssociationTable,
	]
	default_interface = IAssociationTable

class AssociationTables(CoClassBaseClass): # A CoClass
	#  оллекци€ ассоциативных таблиц.
	CLSID = IID('{A124F0E6-DA11-45B4-8618-95B63C36C7C3}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IAssociationTables,
	]
	default_interface = IAssociationTables

class AssociationView(CoClassBaseClass): # A CoClass
	# јссоциативный вид.
	CLSID = IID('{9F144F3A-A296-46C6-99C2-1877B83B0E63}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IView,
		IAssociationView,
	]
	default_interface = IAssociationView

class AttachedDocument(CoClassBaseClass): # A CoClass
	# ѕараметры присоединенного документа к объекту спецификации.
	CLSID = IID('{30251A40-34EA-4DA6-A0B0-66E7A556A813}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IAttachedDocument,
	]
	default_interface = IAttachedDocument

class AttachedDocuments(CoClassBaseClass): # A CoClass
	#  оллекци€ присоединенных документов к объекту спецификации.
	CLSID = IID('{7E97523D-C412-4DA4-9FEC-E4769E88B340}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IAttachedDocuments,
	]
	default_interface = IAttachedDocuments

class Axes3D(CoClassBaseClass): # A CoClass
	#  оллекци€ осей 3D.
	CLSID = IID('{7C3D9245-648E-49D4-A4CA-DB8D3257683F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IAxes3D,
	]
	default_interface = IAxes3D

class Axis3D(CoClassBaseClass): # A CoClass
	# ¬спомогательна€ ось 3D.
	CLSID = IID('{8BE0DEB4-1BD0-4997-B82B-14605574A53D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IAxis3D,
	]
	default_interface = IAxis3D

class Axis3DBy2Planes(CoClassBaseClass): # A CoClass
	# ќсь на пересечении плоскостей.
	CLSID = IID('{EF803C9D-8E47-4EB4-A1F4-FD4D3769A76D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IAxis3D,
		IAxis3DBy2Planes,
	]
	default_interface = IAxis3DBy2Planes

class Axis3DBy2Points(CoClassBaseClass): # A CoClass
	# ќсь через две вершины.
	CLSID = IID('{F0D21C54-2816-4FE2-9AA0-A88821488AB3}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IAxis3D,
		IAxis3DBy2Points,
	]
	default_interface = IAxis3DBy2Points

class Axis3DByConeface(CoClassBaseClass): # A CoClass
	# ќсь конической поверхности.
	CLSID = IID('{C0202ADA-0962-41DA-ADE2-D3015A3E4533}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IAxis3D,
		IAxis3DByConeface,
	]
	default_interface = IAxis3DByConeface

class Axis3DByEdge(CoClassBaseClass): # A CoClass
	# ќсь через ребро.
	CLSID = IID('{59309A8D-E9B0-45C2-98E8-792EC6C93F15}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IAxis3D,
		IAxis3DByEdge,
	]
	default_interface = IAxis3DByEdge

class Axis3DByOperation(CoClassBaseClass): # A CoClass
	# ќсь операции.
	CLSID = IID('{572AF961-64C8-4335-808C-17F2E8AF012E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IAxis3D,
		IAxis3DByOperation,
	]
	default_interface = IAxis3DByOperation

class Axis3DByPointAndObject(CoClassBaseClass): # A CoClass
	# ќсь через вершину по объекту.
	CLSID = IID('{A3BE6C5C-E339-4B42-900E-2719848CDC85}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IAxis3D,
		IAxis3DByPointAndObject,
	]
	default_interface = IAxis3DByPointAndObject

class AxisJut(CoClassBaseClass): # A CoClass
	# ¬ыступ оси.
	CLSID = IID('{97559604-8CCC-44E4-B332-7E16C34522D5}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IAxisJut,
	]
	default_interface = IAxisJut

class AxisLine(CoClassBaseClass): # A CoClass
	# ќсева€ лини€.
	CLSID = IID('{325C006C-C993-4656-BC1A-DE65D8401527}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IAxisLine,
	]
	default_interface = IAxisLine

class AxisLine3D(CoClassBaseClass): # A CoClass
	# ќсева€ лини€ 3D.
	CLSID = IID('{11F1CF98-3563-4DFA-B6AC-E3BCD6197085}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IAxis3D,
		IAxisLine3D,
	]
	default_interface = IAxisLine3D

class AxisLines(CoClassBaseClass): # A CoClass
	#  оллекци€ осевых линий.
	CLSID = IID('{78F95449-3A99-4B3E-86B5-C7BC9DDDF074}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IAxisLines,
	]
	default_interface = IAxisLines

class Base3D(CoClassBaseClass): # A CoClass
	# ќбозначение 3D базы.
	CLSID = IID('{DAAE59DF-E97C-4434-9166-8A52BEA0FF31}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IBase3D,
	]
	default_interface = IBase3D

class BaseLeader(CoClassBaseClass): # A CoClass
	# Ћини€ выноски. Ѕазовый интерфейс.
	CLSID = IID('{7A899963-5137-459A-AB0A-48653074BCD0}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IBaseLeader,
	]
	default_interface = IBaseLeader

class BaseLeader3D(CoClassBaseClass): # A CoClass
	# ¬ыносна€ надпись к многослойным конструкци€м.
	CLSID = IID('{31DC80A4-BCC8-45C1-8CE1-6C43E24FD96C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IBaseLeader3D,
	]
	default_interface = IBaseLeader3D

class BaseLineDimension3D(CoClassBaseClass): # A CoClass
	# Ћинейный размер в 3D (от отрезка до точки)
	CLSID = IID('{F8E92C35-23B4-4058-85E5-324B46FB551F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IBaseLineDimension3D,
	]
	default_interface = IBaseLineDimension3D

class Bases(CoClassBaseClass): # A CoClass
	#  оллекци€ обозначений базы.
	CLSID = IID('{2D2BC5F4-2D44-4C4E-A20E-1F8D8095DF73}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IBases,
	]
	default_interface = IBases

class Bases3D(CoClassBaseClass): # A CoClass
	#  оллекци€ 3D обозначений базы.
	CLSID = IID('{DBF9FA07-8FE1-46DE-B236-9931388FF543}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IBases3D,
	]
	default_interface = IBases3D

class Beziers(CoClassBaseClass): # A CoClass
	#  оллекци€ кривых Ѕезье.
	CLSID = IID('{D744D5EE-E926-45B3-B622-F7B543A2D066}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IBeziers,
	]
	default_interface = IBeziers

class BilletObsolete(CoClassBaseClass): # A CoClass
	# ƒеталь заготовка и «еркальна€ деталь.
	CLSID = IID('{62AFE65C-2F2E-47FA-965A-37CCA9B25352}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		ILocalCSObject,
		IEmbodimentsManager,
		IBilletObsolete,
	]
	default_interface = IBilletObsolete

class BilletsObsoletes(CoClassBaseClass): # A CoClass
	#  оллекци€ деталей заготовок и зеркальных деталей.
	CLSID = IID('{42C8D1F3-0DAA-477B-8994-184E59DBDD7C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IBilletsObsoletes,
	]
	default_interface = IBilletsObsoletes

class Body7(CoClassBaseClass): # A CoClass
	# »нтерфейс твердого тела.
	CLSID = IID('{29E7E8D5-7988-408F-A02B-7C0871221C9C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IBody7,
	]
	default_interface = IBody7

class BodyReposition(CoClassBaseClass): # A CoClass
	# ѕерепози≠ционирова≠ние тела, поверхно≠сти.
	CLSID = IID('{5924E1DF-1DBA-4076-88EE-55BFA2D4088D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IBodyReposition,
	]
	default_interface = IBodyReposition

class BodyRepositions(CoClassBaseClass): # A CoClass
	#  оллекци€ операций перепози≠ционирова≠ни€ тела, поверхно≠сти.
	CLSID = IID('{B0280081-56AA-48B8-A675-30F6A4AE6445}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IBodyRepositions,
	]
	default_interface = IBodyRepositions

class Booleans(CoClassBaseClass): # A CoClass
	#  оллекци€ булевых операций.
	CLSID = IID('{86BA33C6-0381-4CEB-A6FD-84C39645D7D2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IBooleans,
	]
	default_interface = IBooleans

class Brace(CoClassBaseClass): # A CoClass
	# ‘игурна€ скобка.
	CLSID = IID('{2DF7A8F9-CB3B-499E-867F-81BA5B41ED57}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IBrace,
	]
	default_interface = IBrace

class Braces(CoClassBaseClass): # A CoClass
	#  оллекци€ фигурных скобок.
	CLSID = IID('{82CD752F-BC4F-45A2-9FE9-8AB01FDAF6C9}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObjects,
		IBraces,
	]
	default_interface = IBraces

class BreakAngleDimension(CoClassBaseClass): # A CoClass
	# ”гловой размер с обрывом.
	CLSID = IID('{D33D3BFC-BEDC-4E91-A78C-D03461379E15}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IAngleDimension,
		IBreakAngleDimension,
	]
	default_interface = IBreakAngleDimension

class BreakLineDimension(CoClassBaseClass): # A CoClass
	# Ћинейный размер с обрывом
	CLSID = IID('{9F6632A5-AAA8-4BF3-94AA-ADF2838BEC74}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IBreakLineDimension,
	]
	default_interface = IBreakLineDimension

class BreakLineDimensions(CoClassBaseClass): # A CoClass
	#  оллекци€ линейных размеров с обрывом
	CLSID = IID('{865EDBB6-F511-45EF-AA82-C19AD126F9B9}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IBreakLineDimensions,
	]
	default_interface = IBreakLineDimensions

class BreakRadialDimension(CoClassBaseClass): # A CoClass
	# –адиальный размер с изломом.
	CLSID = IID('{60ADBA37-9540-40E9-8F52-03E80E3F423E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IBreakRadialDimension,
	]
	default_interface = IBreakRadialDimension

class BrokenLine(CoClassBaseClass): # A CoClass
	# Ћини€ обрыва с изломами.
	CLSID = IID('{1C337EDB-F786-4D56-8BD2-06D927176C32}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IBrokenLine,
	]
	default_interface = IBrokenLine

class BrokenLines(CoClassBaseClass): # A CoClass
	#  оллекци€ линий обрыва с изломами.
	CLSID = IID('{31314843-3608-4B45-8F0A-DDBC308226C6}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IBrokenLines,
	]
	default_interface = IBrokenLines

class BuildingAxes(CoClassBaseClass): # A CoClass
	#  оллекци€ строительных осей.
	CLSID = IID('{B879C6F6-5AB0-4BEE-8872-FE87C621F15B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IBuildingAxes,
	]
	default_interface = IBuildingAxes

class CentreMarker(CoClassBaseClass): # A CoClass
	# ќбозначение центра.
	CLSID = IID('{F6E745A9-DB3A-40F8-9318-D8A53D04DF16}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		ICentreMarker,
	]
	default_interface = ICentreMarker

class CentreMarkers(CoClassBaseClass): # A CoClass
	#  оллекци€ обозначени€ центров.
	CLSID = IID('{80178C38-D3BE-4E6B-9D22-AA43D8DA2C46}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		ICentreMarkers,
	]
	default_interface = ICentreMarkers

class Chamfer(CoClassBaseClass): # A CoClass
	# ‘аска.
	CLSID = IID('{5E6970D9-B721-4B7C-B29D-7AA4B25CBCC8}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IChamfer,
	]
	default_interface = IChamfer

class Chamfers(CoClassBaseClass): # A CoClass
	#  оллекци€ фасок.
	CLSID = IID('{2AC5E1B7-C86E-476B-9015-F102A303B0CE}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IChamfers,
	]
	default_interface = IChamfers

class CheckSum(CoClassBaseClass): # A CoClass
	# »нтерфейс котрольной суммы.
	CLSID = IID('{D3154740-6BF5-47F6-9A02-486F78190791}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ICheckSum,
	]
	default_interface = ICheckSum

class ChooseManager(CoClassBaseClass): # A CoClass
	# »нтерфейс менеджера селектированных объектов.
	CLSID = IID('{495C89BD-48C4-40B3-9829-4E982F191BA2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IChooseManager,
	]
	default_interface = IChooseManager

class CircleAxis(CoClassBaseClass): # A CoClass
	#  ругова€ ось.
	CLSID = IID('{8A706E75-73FF-4FBF-8D3F-61A13513C7EB}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IBuildingAxis,
		ICircleAxis,
	]
	default_interface = ICircleAxis

class CircleCopyObjectParam(CoClassBaseClass): # A CoClass
	# ѕараметры копировани€ объектов по окружности.
	CLSID = IID('{6F7F48FC-1DA4-4689-9AE3-69804B842D1B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ICopyObjectParam,
		ICircleCopyObjectParam,
	]
	default_interface = ICircleCopyObjectParam

class Circles(CoClassBaseClass): # A CoClass
	#  оллекци€ окружностей.
	CLSID = IID('{E91C61E1-5C35-4EB3-972E-213CC012426F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		ICircles,
	]
	default_interface = ICircles

class CircularCentres(CoClassBaseClass): # A CoClass
	#  ругова€ сетка центров.
	CLSID = IID('{46BF1402-7436-42CD-9084-DA35C498326A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		ICircularCentres,
	]
	default_interface = ICircularCentres

class CircularCopyObjectParam(CoClassBaseClass): # A CoClass
	# ѕараметры копировани€ объектов.
	CLSID = IID('{FECBF8C1-D8B4-437F-8AA3-DC6362C2E51E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ICopyObjectParam,
		ICircularCopyObjectParam,
	]
	default_interface = ICircularCopyObjectParam

class CircularPattern(CoClassBaseClass): # A CoClass
	# ќпераци€ копировани€ по концентрической сетке.
	CLSID = IID('{FFC0A8BB-FB7C-4981-8E07-F5D3FEB4DC5B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IFeaturePattern,
		ICircularPattern,
	]
	default_interface = ICircularPattern

class CircularsCentries(CoClassBaseClass): # A CoClass
	#  оллекци€ круговых сеток центров.
	CLSID = IID('{412F4305-E302-4870-863D-99015F6F0896}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		ICircularsCentries,
	]
	default_interface = ICircularsCentries

class CloudPointsSurface(CoClassBaseClass): # A CoClass
	# ѕоверхность по сети точек.
	CLSID = IID('{43F3CA73-2015-4FB4-82C1-B25A9FA92310}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		ICloudPointsSurface,
	]
	default_interface = ICloudPointsSurface

class CloudPointsSurfaces(CoClassBaseClass): # A CoClass
	#  оллекци€ поверхностей по пласту(облаку) точек.
	CLSID = IID('{9860A4F8-58DC-4285-B1B0-5EB539D2A6CA}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ICloudPointsSurfaces,
	]
	default_interface = ICloudPointsSurfaces

class CollectionGeometry(CoClassBaseClass): # A CoClass
	#  оллекци€ геометрии.
	CLSID = IID('{01D8A252-C3A1-45EA-BC92-0E2B6258EDF5}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		ICollectionGeometry,
	]
	default_interface = ICollectionGeometry

class CollectionsGeometry(CoClassBaseClass): # A CoClass
	#  оллекции геометрии.
	CLSID = IID('{55556EA2-4975-4C27-97BB-A78C08D98E2C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ICollectionsGeometry,
	]
	default_interface = ICollectionsGeometry

class Colourings(CoClassBaseClass): # A CoClass
	#  оллекци€ заливок.
	CLSID = IID('{CAA76116-56AD-4466-9951-C16C10D43CE0}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IColourings,
	]
	default_interface = IColourings

class ConditionIntersect(CoClassBaseClass): # A CoClass
	# ”словное пересечение.
	CLSID = IID('{F7458066-14B5-4945-ACCC-1199F98AAFDA}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IConditionIntersect,
	]
	default_interface = IConditionIntersect

class ConditionIntersects(CoClassBaseClass): # A CoClass
	#  оллекци€ условных пересечений.
	CLSID = IID('{0031BFFF-6A43-44B4-8E0B-0DA3984CB9ED}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IConditionIntersects,
	]
	default_interface = IConditionIntersects

class ConicCurve(CoClassBaseClass): # A CoClass
	# ”словное пересечение.
	CLSID = IID('{98CF3E5E-0548-4616-8BB9-28C1A1092955}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IConicCurve,
	]
	default_interface = IConicCurve

class ConicCurves(CoClassBaseClass): # A CoClass
	#  оллекци€ конических кривых .
	CLSID = IID('{4C5033FF-6870-45B1-A995-733578C23553}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IConicCurves,
	]
	default_interface = IConicCurves

class ConicHoleParameters(CoClassBaseClass): # A CoClass
	#  оническое отверстие.
	CLSID = IID('{D3CA313F-8817-48B7-892D-6D7DFE1E407B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IConicHoleParameters,
	]
	default_interface = IConicHoleParameters

class ConicSpiral3D(CoClassBaseClass): # A CoClass
	#  оническа€ спираль.
	CLSID = IID('{BD740853-3960-46D9-8DAB-1C490E699B6A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IConicSpiral3D,
	]
	default_interface = IConicSpiral3D

class ConjunctivePoint(CoClassBaseClass): # A CoClass
	# ѕрисоединительна€ точка.
	CLSID = IID('{4A7A9FC8-85D7-4B62-99BB-7A303F1D6E98}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IPoint3D,
		IConjunctivePoint,
	]
	default_interface = IConjunctivePoint

class ConjunctivePoints(CoClassBaseClass): # A CoClass
	#  оллекци€ элементов 'ѕрисоединительна€ точка'.
	CLSID = IID('{C5DDAF9B-32B7-4552-ADAD-F31D8706ED6B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IConjunctivePoints,
	]
	default_interface = IConjunctivePoints

class ConnectCurve(CoClassBaseClass): # A CoClass
	# ќпераци€ соединени€ кривых.
	CLSID = IID('{DC434F74-5BC2-4AE7-93E1-E9FC5670E028}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IConnectCurve,
	]
	default_interface = IConnectCurve

class ConnectCurves(CoClassBaseClass): # A CoClass
	#  оллекци€ ќпераций соединени€ кривых.
	CLSID = IID('{CDC3416D-E4FD-4C16-9ABC-3DB233FEEE76}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IConnectCurves,
	]
	default_interface = IConnectCurves

class ContentDialogParam(CoClassBaseClass): # A CoClass
	# ѕараметры диалога с произвольным контентом.
	CLSID = IID('{6AB4AFCD-EFD7-49FB-9FA2-0CBBAC094DE9}')
	coclass_sources = [
		ksContentDialogNotify,
	]
	default_source = ksContentDialogNotify
	coclass_interfaces = [
		IKompasAPIObject,
		IContentDialogParam,
	]
	default_interface = IContentDialogParam

class Contour(CoClassBaseClass): # A CoClass
	#  онтур.
	CLSID = IID('{12FABDF2-CAA4-4C8F-A3E6-A56DD90552B5}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IContour,
	]
	default_interface = IContour

class Contour3D(CoClassBaseClass): # A CoClass
	#  онтур 3D.
	CLSID = IID('{375FD000-6094-4351-8E03-E2A2631DFBE0}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IContour3D,
	]
	default_interface = IContour3D

class ContourArc(CoClassBaseClass): # A CoClass
	# —егмент контура - дуга .
	CLSID = IID('{31450942-A67C-4459-B7EB-F1B900B100FD}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IContourSegment,
		IContourArc,
	]
	default_interface = IContourArc

class ContourLineSegment(CoClassBaseClass): # A CoClass
	# —егмент контура - отрезок.
	CLSID = IID('{1D09CC46-FBCC-4B09-8D0A-E20B22FAE3EF}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IContourSegment,
		IContourLineSegment,
	]
	default_interface = IContourLineSegment

class ContourSegment(CoClassBaseClass): # A CoClass
	# —егмент контура - отрезок.
	CLSID = IID('{33DEDD79-0855-4C92-A1B9-0D45BD3B8DAB}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IContourSegment,
	]
	default_interface = IContourSegment

class Contours3D(CoClassBaseClass): # A CoClass
	#  оллекци€ контуров 3D.
	CLSID = IID('{0ED8DFDC-5EF8-4A9F-940F-9104775417D7}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IContours3D,
	]
	default_interface = IContours3D

class ControlPoint(CoClassBaseClass): # A CoClass
	#  онтрольна€ точка.
	CLSID = IID('{816922D4-1FBA-4672-95AE-E27BEC782E47}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IPoint3D,
		IControlPoint,
	]
	default_interface = IControlPoint

class ControlPoints(CoClassBaseClass): # A CoClass
	#  оллекци€ элементов ' онтрольна€ точка'.
	CLSID = IID('{F8B4A9EA-09FE-41C4-8E66-B2A015CA51C8}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IControlPoints,
	]
	default_interface = IControlPoints

class Converter(CoClassBaseClass): # A CoClass
	# »нтерфейс конвертера файлов  ќћѕј—.
	CLSID = IID('{A496A838-57F7-4BEC-99FF-51D4782C60AE}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IConverter,
	]
	default_interface = IConverter

class CopiesGeometry(CoClassBaseClass): # A CoClass
	#  оллекци€ копий геометрии.
	CLSID = IID('{BB8BA111-24FF-47F6-AE7B-97023F467A1D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ICopiesGeometry,
	]
	default_interface = ICopiesGeometry

class CopyGeometry(CoClassBaseClass): # A CoClass
	#  опи€ геометрии.
	CLSID = IID('{277E8B80-BA49-4779-94D2-CFB7EEF20F06}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		ICopyGeometry,
	]
	default_interface = ICopyGeometry

class CountersinkHole3DParameters(CoClassBaseClass): # A CoClass
	# ќтверстие с зенковкой.
	CLSID = IID('{22D3BACB-1077-417D-A138-BBF0754A73B6}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ICountersinkHoleParameters,
	]
	default_interface = ICountersinkHoleParameters

class CountersinkSpotfacingHoleParameters(CoClassBaseClass): # A CoClass
	# ќтверстие с зенковкой и цековкой.
	CLSID = IID('{2D9B843D-99BB-4322-AAE7-B1D0C3E82F83}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ICountersinkSpotfacingHoleParameters,
	]
	default_interface = ICountersinkSpotfacingHoleParameters

class Coupling(CoClassBaseClass): # A CoClass
	# ÷епочка операции 'сечение'.
	CLSID = IID('{C2B10EDA-FAFA-4485-A7EF-0A61FD26536C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		ICoupling,
	]
	default_interface = ICoupling

class Curve2D(CoClassBaseClass): # A CoClass
	# ћатематическа€ крива€ 2D.
	CLSID = IID('{93F02582-585F-4319-90B5-3974A70999D8}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ICurve2D,
	]
	default_interface = ICurve2D

class CurveBy2Projections(CoClassBaseClass): # A CoClass
	#  рива€ по двум проекци€м.
	CLSID = IID('{97F94C42-4891-4C13-848A-529D3B1F8458}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		ICurveBy2Projections,
	]
	default_interface = ICurveBy2Projections

class CurveByLaw(CoClassBaseClass): # A CoClass
	#  рива€ по закону.
	CLSID = IID('{5F39D09D-2C8F-4732-9635-528FF64D8A1B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		ICurveByLaw,
	]
	default_interface = ICurveByLaw

class CurveByLaws(CoClassBaseClass): # A CoClass
	#  оллекци€ кривых по закону.
	CLSID = IID('{7FDF9C11-FC8F-401C-9620-3E13C3254DE0}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ICurveByLaws,
	]
	default_interface = ICurveByLaws

class CurveCopyObjectParam(CoClassBaseClass): # A CoClass
	# ѕараметры копировани€ объектов вдоль кривой.
	CLSID = IID('{07BD4468-D478-447C-8F20-1C6E2ABBD9C2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ICopyObjectParam,
		ICurveCopyObjectParam,
	]
	default_interface = ICurveCopyObjectParam

class CurveOutLine(CoClassBaseClass): # A CoClass
	# Ћини€ очерка.
	CLSID = IID('{1B3EB690-1F97-4A36-9A0C-B251CC76A205}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		ICurveOutLine,
	]
	default_interface = ICurveOutLine

class CurveOutLines(CoClassBaseClass): # A CoClass
	#  оллекци€ линий очерка.
	CLSID = IID('{B1CDDFB5-1B50-4E4F-AECF-51F975A7D6EF}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ICurveOutLines,
	]
	default_interface = ICurveOutLines

class CurveStyle(CoClassBaseClass): # A CoClass
	# —тиль линий.
	CLSID = IID('{B357540F-DA46-471C-90F9-2018CB2DC70E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IStyle,
		ICurveStyle,
	]
	default_interface = ICurveStyle

class CurveVertexParam(CoClassBaseClass): # A CoClass
	# »нтерфейс параметров вершины кривой.
	CLSID = IID('{114075C2-6D73-4198-A29A-F05D772FC75D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ICurveVertexParam,
	]
	default_interface = ICurveVertexParam

class CurvesBy2Projectionses(CoClassBaseClass): # A CoClass
	#  оллекци€ проекционных кривых.
	CLSID = IID('{AB57FA3C-10B0-44BD-96EF-EA9F2AF0D4DA}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ICurvesBy2Projectionses,
	]
	default_interface = ICurvesBy2Projectionses

class Cut(CoClassBaseClass): # A CoClass
	# »нтерфейс операции 'сечение'.
	CLSID = IID('{2757F3A6-617F-4B75-8ABC-459E30561316}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		ICut,
	]
	default_interface = ICut

class CutExtrusion(CoClassBaseClass): # A CoClass
	# Ёлемент '¬ырезать выдавливанием'.
	CLSID = IID('{B60B0F24-9069-4AB4-B0E4-DC558A6BF4A3}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IExtrusion,
		ICutExtrusion,
	]
	default_interface = ICutExtrusion

class CutLine(CoClassBaseClass): # A CoClass
	# Ћини€ разреза/сечени€.
	CLSID = IID('{DE089315-444A-46A1-A551-4F0264EF11D2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		ICutLine,
	]
	default_interface = ICutLine

class CutLines(CoClassBaseClass): # A CoClass
	#  оллекци€ линий разреза/сечени€.
	CLSID = IID('{AFDE9B99-603D-4B29-B2E5-3F7399B72619}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		ICutLines,
	]
	default_interface = ICutLines

class CutRotated(CoClassBaseClass): # A CoClass
	# Ёлемент '¬ырезать вращением'.
	CLSID = IID('{D96A0574-FB91-4D49-AF19-EBCC78335723}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IRotated,
		ICutRotated,
	]
	default_interface = ICutRotated

class CutUnitMarking(CoClassBaseClass): # A CoClass
	# ќбозначение узла в сечении.
	CLSID = IID('{BE66B386-7D76-4AFC-AC47-521B6648CB8F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		ICutUnitMarking,
	]
	default_interface = ICutUnitMarking

class CutUnitMarkings(CoClassBaseClass): # A CoClass
	#  оллекци€ обозначений узлов.
	CLSID = IID('{DDEFF219-E3BC-457F-87FF-3C3ADCFA720E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		ICutUnitMarkings,
	]
	default_interface = ICutUnitMarkings

class Cuts(CoClassBaseClass): # A CoClass
	#  оллекци€ операций 'сечение'.
	CLSID = IID('{3803D968-E469-45C2-8C3B-0D5B0E00C034}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ICuts,
	]
	default_interface = ICuts

class CylindricSpiral3D(CoClassBaseClass): # A CoClass
	# ÷илиндрическа€ спираль.
	CLSID = IID('{CC5B7B89-DFA5-42EB-B307-113A013052D6}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		ICylindricSpiral3D,
	]
	default_interface = ICylindricSpiral3D

class DerivedPattern(CoClassBaseClass): # A CoClass
	# ћассив по образцу.
	CLSID = IID('{9B988E67-1EFB-4441-BB37-F33A50A5C209}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IFeaturePattern,
		IDerivedPattern,
	]
	default_interface = IDerivedPattern

class DiametralDimension(CoClassBaseClass): # A CoClass
	# ƒиаметральный размер.
	CLSID = IID('{117E5AB9-3D8C-4F14-BB4B-14FF43082EA7}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IDiametralDimension,
	]
	default_interface = IDiametralDimension

class DiametralDimension3D(CoClassBaseClass): # A CoClass
	# ƒиаметральный размер 3D.
	CLSID = IID('{FC1FC235-02C5-41D5-871B-D754926B593E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IDiametralDimension3D,
	]
	default_interface = IDiametralDimension3D

class DiametralDimensions(CoClassBaseClass): # A CoClass
	#  оллекци€ диаметральных размеров.
	CLSID = IID('{2195AC03-677A-4236-9BEA-FBDE74CEE7F3}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IDiametralDimensions,
	]
	default_interface = IDiametralDimensions

class DiametralDimensions3D(CoClassBaseClass): # A CoClass
	#  оллекци€ диаметральных размеров 3D.
	CLSID = IID('{F3F0EDE3-3E00-48E8-922F-121CA571BE26}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IDiametralDimensions3D,
	]
	default_interface = IDiametralDimensions3D

class DistanceAngleMeasurement3D(CoClassBaseClass): # A CoClass
	# »змерение рассто€ни€ и угла.
	CLSID = IID('{2A128198-F2CF-4F33-85BF-7E4814254308}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IDistanceAngleMeasurement3D,
	]
	default_interface = IDistanceAngleMeasurement3D

class DistanceAngleMeasurements3D(CoClassBaseClass): # A CoClass
	#  оллекци€ измерений рассто€ни€ и угла.
	CLSID = IID('{CFA1BE63-DAEC-4B9B-AE59-A200323FDAB1}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IDistanceAngleMeasurements3D,
	]
	default_interface = IDistanceAngleMeasurements3D

class Document2DSettings(CoClassBaseClass): # A CoClass
	# Ќастройки 2D документа.
	CLSID = IID('{EBB0EE6B-305C-4448-9674-3F5072606D47}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDocumentSettings,
		IDocument2DSettings,
	]
	default_interface = IDocument2DSettings

class Document3DManager(CoClassBaseClass): # A CoClass
	# ћенеджер 3D документа.
	CLSID = IID('{2EDCB445-FE02-4529-BAD6-DED0C9DAF6A5}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDocument3DManager,
	]
	default_interface = IDocument3DManager

class Document3DSettings(CoClassBaseClass): # A CoClass
	# Ќастройки 3D документа.
	CLSID = IID('{91008BBD-B5BE-42D8-B9D9-37127514C6F1}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDocumentSettings,
		IDocument3DSettings,
	]
	default_interface = IDocument3DSettings

class DocumentFrame(CoClassBaseClass): # A CoClass
	# »нтерфейс окна документа
	CLSID = IID('{8BFFC9B4-5FE7-4EC5-8BA5-0FF8520D5FF6}')
	coclass_sources = [
		ksDocumentFrameNotify,
	]
	default_source = ksDocumentFrameNotify
	coclass_interfaces = [
		IKompasAPIObject,
		IDocumentFrame,
	]
	default_interface = IDocumentFrame

class DocumentFrames(CoClassBaseClass): # A CoClass
	#  оллекци€ окон документа
	CLSID = IID('{CC89942A-6FE5-4808-8DC8-FF46D546A8EB}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDocumentFrames,
	]
	default_interface = IDocumentFrames

class DocumentSettings(CoClassBaseClass): # A CoClass
	# Ќастройки документа.
	CLSID = IID('{64964B4C-5A02-41D8-B6EC-F7CF627564E6}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDocumentSettings,
	]
	default_interface = IDocumentSettings

class Documents(CoClassBaseClass): # A CoClass
	#  оллекци€ документов, открытых в приложении
	CLSID = IID('{385647BD-89B1-4F2D-A06E-4DD829EE096B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDocuments,
	]
	default_interface = IDocuments

class DrawingContour(CoClassBaseClass): # A CoClass
	#  онтур.
	CLSID = IID('{63502BD9-2EC0-4908-8E45-DE433E7B9DB7}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IDrawingContour,
	]
	default_interface = IDrawingContour

class DrawingContours(CoClassBaseClass): # A CoClass
	# мультилиний.
	CLSID = IID('{B3BADEEA-2F85-4A72-8546-DFEA96E3E736}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IDrawingContours,
	]
	default_interface = IDrawingContours

class DrawingDocument(CoClassBaseClass): # A CoClass
	# »нтерфейс чертежа.
	CLSID = IID('{5414B05F-A731-4369-BBD2-419B5CD9D2A2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasDocument,
		IKompasDocument2D,
		IDrawingDocument,
	]
	default_interface = IDrawingDocument

class DrawingGroup(CoClassBaseClass): # A CoClass
	# √руппа (посто€нна€, временна€, именована€.
	CLSID = IID('{C0A36437-0D32-4D41-9C3F-0A70D66A4C03}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingGroup,
	]
	default_interface = IDrawingGroup

class DrawingGroups(CoClassBaseClass): # A CoClass
	#  оллекци€ групп (»меннованные, –абочие (¬ременные и посто€нные)).
	CLSID = IID('{ABBC0387-2E69-4575-BAD1-A97B02B418B2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingGroups,
	]
	default_interface = IDrawingGroups

class DrawingObject(CoClassBaseClass): # A CoClass
	# Ѕазовый интерфейс дл€ всех графических объектов.
	CLSID = IID('{3310AC4A-DC93-4AB5-B2CD-5391E6CB370A}')
	coclass_sources = [
		ksDrawingObjectNotify,
	]
	default_source = ksDrawingObjectNotify
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
	]
	default_interface = IDrawingObject

class DrawingObjects(CoClassBaseClass): # A CoClass
	#  оллекци€ графических объектов.
	CLSID = IID('{5F90A46E-EA28-4294-B34F-145C80141517}')
	coclass_sources = [
		ksDrawingObjectNotify,
	]
	default_source = ksDrawingObjectNotify
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
	]
	default_interface = IDrawingObjects

class DrawingTable(CoClassBaseClass): # A CoClass
	# “аблица на чертеже.
	CLSID = IID('{020B47A5-6B61-48B2-80F6-3A607E0E0A94}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IDrawingTable,
	]
	default_interface = IDrawingTable

class DrawingTables(CoClassBaseClass): # A CoClass
	# “аблица на чертеже.
	CLSID = IID('{E0C24704-8D4E-45BA-9175-972D58E37C7F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IDrawingTables,
	]
	default_interface = IDrawingTables

class DrawingText(CoClassBaseClass): # A CoClass
	# “екст на чертеже.
	CLSID = IID('{2E194B4E-F08D-4D62-A9B8-849004D8D923}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IDrawingText,
	]
	default_interface = IDrawingText

class DrawingTexts(CoClassBaseClass): # A CoClass
	#  оллекци€ текстов на чертеже.
	CLSID = IID('{5F4C3AA0-4B59-4EEE-AB00-53CEA8909F66}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IDrawingTexts,
	]
	default_interface = IDrawingTexts

class DynamicCrossSection(CoClassBaseClass): # A CoClass
	# ƒинамическое сечение.
	CLSID = IID('{2180F44D-3125-45F6-8466-62793172A940}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IDynamicCrossSection,
	]
	default_interface = IDynamicCrossSection

class DynamicCrossSectionStep(CoClassBaseClass): # A CoClass
	# Ўаг динамического сечени€.
	CLSID = IID('{5CA6F5DA-81A0-4B99-93B4-C4D68DD8F42D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDynamicCrossSectionStep,
	]
	default_interface = IDynamicCrossSectionStep

class DynamicCrossSectionStepParametersByBorderPoints(CoClassBaseClass): # A CoClass
	# ѕараметры шага динамического сечени€ по габаритному параллелепипеду.
	CLSID = IID('{E785BB44-EA2D-4704-A645-2400A19AEBBC}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDynamicCrossSectionStepParametersByBorderPoints,
	]
	default_interface = IDynamicCrossSectionStepParametersByBorderPoints

class DynamicCrossSectionStepParametersByFreePlane(CoClassBaseClass): # A CoClass
	# ѕараметры шага динамического сечени€ по произвольной плоскости.
	CLSID = IID('{0CEFC601-D4AA-4493-8905-636F87167515}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDynamicCrossSectionStepParametersByFreePlane,
	]
	default_interface = IDynamicCrossSectionStepParametersByFreePlane

class DynamicCrossSectionStepParametersByOffsetPlane(CoClassBaseClass): # A CoClass
	# ѕараметры шага динамического сечени€ по смещенной плоскости.
	CLSID = IID('{543A8DAF-A009-4D20-83EE-1ECFFAB1CD24}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDynamicCrossSectionStepParametersByOffsetPlane,
	]
	default_interface = IDynamicCrossSectionStepParametersByOffsetPlane

class DynamicCrossSectionStepParametersByRotatedPlane(CoClassBaseClass): # A CoClass
	# ѕараметры шага динамического сечени€ по плоскости под углом.
	CLSID = IID('{D6F7640A-CE45-4792-B301-B9F9BE8FF483}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDynamicCrossSectionStepParametersByRotatedPlane,
	]
	default_interface = IDynamicCrossSectionStepParametersByRotatedPlane

class DynamicCrossSectionStepParametersByZone(CoClassBaseClass): # A CoClass
	# ѕараметры шага динамического сечени€ по зоне.
	CLSID = IID('{017A292E-8BFE-4A2C-A3F5-AC6B8D015D49}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDynamicCrossSectionStepParametersByZone,
	]
	default_interface = IDynamicCrossSectionStepParametersByZone

class Edge(CoClassBaseClass): # A CoClass
	# –ебро 3D.
	CLSID = IID('{98F55F56-45A6-4210-955A-E831907FD36F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IEdge,
	]
	default_interface = IEdge

class EdgeLengthMeasurement3D(CoClassBaseClass): # A CoClass
	# »змерение длины ребра.
	CLSID = IID('{8064EACE-0AAE-4AE9-96A1-C7A31310DDD6}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IEdgeLengthMeasurement3D,
	]
	default_interface = IEdgeLengthMeasurement3D

class EdgeLengthMeasurements3D(CoClassBaseClass): # A CoClass
	#  оллекци€ измерений длины ребра.
	CLSID = IID('{18B1FABC-67DB-4847-A0E8-95CFC542D109}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IEdgeLengthMeasurements3D,
	]
	default_interface = IEdgeLengthMeasurements3D

class EditDoubleManipulator(CoClassBaseClass): # A CoClass
	# ћанипул€тор - редактор вещественного значени€.
	CLSID = IID('{F942D621-874A-4A51-A651-A435CE0C6304}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IBaseManipulator,
		IEditDoubleManipulator,
	]
	default_interface = IEditDoubleManipulator

class EllipseArcs(CoClassBaseClass): # A CoClass
	#  оллекци€ дуг эллипсов.
	CLSID = IID('{A1471F9B-32BE-4E66-BF1C-F83255C7EC6D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IEllipseArcs,
	]
	default_interface = IEllipseArcs

class Ellipses(CoClassBaseClass): # A CoClass
	#  оллекци€ эллипсов.
	CLSID = IID('{F0270B21-879A-4B96-BA43-95B402754FC0}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IEllipses,
	]
	default_interface = IEllipses

class Embodiment(CoClassBaseClass): # A CoClass
	# »сполнение.
	CLSID = IID('{8ED8030C-87C3-41D4-BB4D-319BA74D6879}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IEmbodiment,
	]
	default_interface = IEmbodiment

class Equidistant3D(CoClassBaseClass): # A CoClass
	# Ёквидистанта 3D.
	CLSID = IID('{948EB787-026E-4990-8A92-B6B3F25D4D7C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IEquidistant3D,
	]
	default_interface = IEquidistant3D

class EquidistantSurface(CoClassBaseClass): # A CoClass
	# ќпераци€ построени€ эквидистанты поверхности.
	CLSID = IID('{D575BF4A-81A5-4E01-A22B-CF944C3E9BDC}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IEquidistantSurface,
	]
	default_interface = IEquidistantSurface

class EquidistantSurfaces(CoClassBaseClass): # A CoClass
	#  оллекци€ эквидистант поверхности.
	CLSID = IID('{939B3DEB-7BFD-47EA-AF42-233B3B683571}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IEquidistantSurfaces,
	]
	default_interface = IEquidistantSurfaces

class Equidistants(CoClassBaseClass): # A CoClass
	#  оллекци€ эквидистант.
	CLSID = IID('{487511E6-E3F4-4F7C-9217-C485B1463A61}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IEquidistants,
	]
	default_interface = IEquidistants

class Equidistants3D(CoClassBaseClass): # A CoClass
	#  оллекци€ эквидистант3D .
	CLSID = IID('{D5ABFF52-A8A7-45CB-BDCD-103FDFEF3E3E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IEquidistants3D,
	]
	default_interface = IEquidistants3D

class Evolution(CoClassBaseClass): # A CoClass
	# »нтерфейс кинематической операции.
	CLSID = IID('{B8BEEC82-BEC3-406F-93C5-4464149C3275}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IEvolution,
	]
	default_interface = IEvolution

class Evolutions(CoClassBaseClass): # A CoClass
	#  оллекци€ кинематических операций.
	CLSID = IID('{C21B92BD-B9D0-44C7-B52F-4AFE57F7899E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IEvolutions,
	]
	default_interface = IEvolutions

class ExtensionSurface(CoClassBaseClass): # A CoClass
	# ќпераци€ продлени€ поверхности.
	CLSID = IID('{A6CD01C2-FD04-4B95-93F4-4D0648349C3F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IExtensionSurface,
	]
	default_interface = IExtensionSurface

class ExtensionSurfaces(CoClassBaseClass): # A CoClass
	#  оллекци€ ќпераций продлени€ поверхности .
	CLSID = IID('{E117EB74-5E7D-4EDA-9F32-9C7CEFA29311}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IExtensionSurfaces,
	]
	default_interface = IExtensionSurfaces

class ExternalGDIObject(CoClassBaseClass): # A CoClass
	# ¬нешний GDI объект.
	CLSID = IID('{D7A43DA7-65AE-4006-AB72-B579CEE9A99C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IExternalGDIObject,
	]
	default_interface = IExternalGDIObject

class ExternalTessellationObject(CoClassBaseClass): # A CoClass
	# ќбъект с внешней триангул€цией.
	CLSID = IID('{C51785D4-4665-4521-885E-1D0633AE445C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IExternalTessellationObject,
	]
	default_interface = IExternalTessellationObject

class Extrusion(CoClassBaseClass): # A CoClass
	# Ёлемент выдавливани€.
	CLSID = IID('{9D3CAF4C-4D9D-40EC-BE5A-12A3AC595007}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IExtrusion,
	]
	default_interface = IExtrusion

class ExtrusionSurface(CoClassBaseClass): # A CoClass
	# Ёлемент поверхность выдавливани€.
	CLSID = IID('{E25EFEF5-D5C7-49E6-9149-9EA6E36CE9AE}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IExtrusion,
		IExtrusionSurface,
	]
	default_interface = IExtrusionSurface

class Extrusions(CoClassBaseClass): # A CoClass
	#  оллекци€ элементов выдавливани€.
	CLSID = IID('{2B4C99E4-FB5D-4D7D-A44D-5B898E1F5E9E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IExtrusions,
	]
	default_interface = IExtrusions

class Face(CoClassBaseClass): # A CoClass
	# »нтерфейс грани.
	CLSID = IID('{B92823BB-3D0F-4994-8BB4-7BFC4B6F4CCE}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IFace,
	]
	default_interface = IFace

class FaceRemover(CoClassBaseClass): # A CoClass
	# ќпераци€ удалени€ граней.
	CLSID = IID('{5B433BC2-C5DB-4CF7-8C99-EBCD1421D43E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IFaceRemover,
	]
	default_interface = IFaceRemover

class FaceRemovers(CoClassBaseClass): # A CoClass
	#  оллекци€ операций удалени€ граней.
	CLSID = IID('{8B491E62-1DE7-4C17-9629-F77DF0E8E45C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IFaceRemovers,
	]
	default_interface = IFaceRemovers

class FeaturePatterns(CoClassBaseClass): # A CoClass
	#  оллекци€ массивов.
	CLSID = IID('{33289D92-16E7-4E98-B126-DE9FCE328B5E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IFeaturePatterns,
	]
	default_interface = IFeaturePatterns

class Fillet(CoClassBaseClass): # A CoClass
	# —кругление.
	CLSID = IID('{754D6A63-A68D-4574-AA01-F8C252873A1C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IFillet,
	]
	default_interface = IFillet

class FilletCurve(CoClassBaseClass): # A CoClass
	# ќпераци€ скруглени€ кривых.
	CLSID = IID('{DDC4358E-877E-469F-A465-26901265C51E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IFilletCurve,
	]
	default_interface = IFilletCurve

class FilletCurves(CoClassBaseClass): # A CoClass
	#  оллекци€ ќпераций скруглени€ кривых.
	CLSID = IID('{52CF9D27-73D6-4CC7-980E-26A4BEC840BF}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IFilletCurves,
	]
	default_interface = IFilletCurves

class Fillets(CoClassBaseClass): # A CoClass
	#  оллекци€ скруглений.
	CLSID = IID('{BC5254E9-8A80-49BA-9812-689F597E0908}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IFillets,
	]
	default_interface = IFillets

class FindObjectParameters(CoClassBaseClass): # A CoClass
	# ѕараметры поиска объектов.
	CLSID = IID('{D4ED8463-0728-42BD-9413-83144E174241}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IFindObjectParameters,
	]
	default_interface = IFindObjectParameters

class FragmentDocument(CoClassBaseClass): # A CoClass
	# »нтерфейс фрагмента.
	CLSID = IID('{86CA15DA-A197-4993-AB98-8921D156114E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasDocument,
		IKompasDocument2D,
		IFragmentDocument,
	]
	default_interface = IFragmentDocument

class FullFillet(CoClassBaseClass): # A CoClass
	# ѕолное скругление.
	CLSID = IID('{39BC03AF-5E8D-4466-B69A-7E5C2FE8E79C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IFullFillet,
	]
	default_interface = IFullFillet

class FullFillets(CoClassBaseClass): # A CoClass
	#  оллекци€ операций полного скруглени€.
	CLSID = IID('{C2C76BBB-C57C-4263-8250-6289DF04EE8E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IFullFillets,
	]
	default_interface = IFullFillets

class HatchStyle(CoClassBaseClass): # A CoClass
	# —тиль штриховки.
	CLSID = IID('{F280E407-A09F-4A98-93A4-451260A3E4C0}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IStyle,
		IHatchStyle,
	]
	default_interface = IHatchStyle

class Hatches(CoClassBaseClass): # A CoClass
	#  оллекци€ штриховок.
	CLSID = IID('{1044ADC3-E779-4C48-A4DD-A00BEF9341D6}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IHatches,
	]
	default_interface = IHatches

class HeightDimension(CoClassBaseClass): # A CoClass
	# –азмер высоты
	CLSID = IID('{CA99C371-8E76-4FE0-A176-A33FC6D2FDFC}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IHeightDimension,
	]
	default_interface = IHeightDimension

class HeightDimensions(CoClassBaseClass): # A CoClass
	#  оллекци€ размеров высоты
	CLSID = IID('{2A942576-E76D-4375-A1D9-0CCC4B382786}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IHeightDimensions,
	]
	default_interface = IHeightDimensions

class Hole3D(CoClassBaseClass): # A CoClass
	# ќтверстие.
	CLSID = IID('{9F4504BC-739E-42C6-A946-7875F3D43589}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IHole3D,
	]
	default_interface = IHole3D

class Holes3D(CoClassBaseClass): # A CoClass
	#  оллекци€ отверстий.
	CLSID = IID('{12851DCA-A72C-4F44-9CF0-282476F65052}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IHoles3D,
	]
	default_interface = IHoles3D

class ImportedSurface(CoClassBaseClass): # A CoClass
	# »мпортированна€ поверхность.
	CLSID = IID('{F5DD3012-45BD-42EA-A448-1CF7E646487A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IImportedSurface,
	]
	default_interface = IImportedSurface

class ImportedSurfaces(CoClassBaseClass): # A CoClass
	#  оллекци€ импортированных поверхностей.
	CLSID = IID('{2DF37218-0F1D-4E7E-B1E4-954B8AA790D2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IImportedSurfaces,
	]
	default_interface = IImportedSurfaces

class Incline(CoClassBaseClass): # A CoClass
	# ќпераци€ уклон.
	CLSID = IID('{1E0DC81A-179B-45DA-A285-06A40015C953}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IIncline,
	]
	default_interface = IIncline

class Inclines(CoClassBaseClass): # A CoClass
	#  оллекци€ операций уклон.
	CLSID = IID('{6DCEC4A9-CFA6-410B-B7A1-1FD60DCD2BAF}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IInclines,
	]
	default_interface = IInclines

class Insert(CoClassBaseClass): # A CoClass
	# Ёлемент(документ) библиотеки элементов(документов).
	CLSID = IID('{5D1BD639-051F-48C5-BCA7-7698B4D070B4}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IInsert,
	]
	default_interface = IInsert

class InsertionDefinition(CoClassBaseClass): # A CoClass
	# ќписание вставки фрагмента или вида.
	CLSID = IID('{30D92D83-D913-4898-85A4-A6DCEF2007CA}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IInsertionDefinition,
	]
	default_interface = IInsertionDefinition

class InsertionObjects(CoClassBaseClass): # A CoClass
	#  оллекци€ вставок фрагментов и видов других чертежей.
	CLSID = IID('{8095A5E3-86CB-4B66-AA45-E71E1E8883A9}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IInsertionObjects,
	]
	default_interface = IInsertionObjects

class InsertionParameters(CoClassBaseClass): # A CoClass
	# ѕараметры вставки фрагмента и растрового объекта в текст.
	CLSID = IID('{863D0E6D-C8E0-4E49-88B7-DAB423CDA1C3}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IInsertionParameters,
	]
	default_interface = IInsertionParameters

class InsertionView(CoClassBaseClass): # A CoClass
	# ¬ставка вида из другого чертежа.
	CLSID = IID('{A4E92DC4-9804-4381-9B54-8E2030C50E6D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IInsertionObject,
		IInsertionView,
	]
	default_interface = IInsertionView

class Inserts(CoClassBaseClass): # A CoClass
	#  оллекци€ команд (элементов) библиотеки.
	CLSID = IID('{F8527798-EB6E-43C6-AE05-6FA964CFD96B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IInserts,
	]
	default_interface = IInserts

class InsertsLibraries(CoClassBaseClass): # A CoClass
	#  оллекци€ библиотек элементов(документов)  ќћѕј—.
	CLSID = IID('{6C64BD39-1613-4AD4-B5BA-B6F38D32E82C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IInsertsLibraries,
	]
	default_interface = IInsertsLibraries

class InsertsLibrary(CoClassBaseClass): # A CoClass
	# Ѕиблиотека элементов(документов)  ќћѕј—.
	CLSID = IID('{9A06D2A1-BCDE-4C43-88A1-5A491469BE11}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ILibrary,
		IInsertsLibrary,
	]
	default_interface = IInsertsLibrary

class IsoparametricCurve(CoClassBaseClass): # A CoClass
	# »зопараметрическа€ крива€.
	CLSID = IID('{E05CD072-EAC4-4439-84C9-F1084D178D8C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IIsoparametricCurve,
	]
	default_interface = IIsoparametricCurve

class IsoparametricCurves(CoClassBaseClass): # A CoClass
	#  оллекци€ изопараметрических кривых.
	CLSID = IID('{6F579902-6CB6-4902-8020-4F2F71F9C3AA}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IIsoparametricCurves,
	]
	default_interface = IIsoparametricCurves

class IsoparametricCurvesSet(CoClassBaseClass): # A CoClass
	# √руппа изопараметрических кривых.
	CLSID = IID('{74F538E8-B3FA-40AB-8EEC-5B3071E98C44}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IIsoparametricCurvesSet,
	]
	default_interface = IIsoparametricCurvesSet

class IsoparametricCurvesSets(CoClassBaseClass): # A CoClass
	#  оллекци€ групп изпараметрических кривых.
	CLSID = IID('{6D1AEFF5-1F8E-4BF1-986C-2D4332B3D5F8}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IIsoparametricCurvesSets,
	]
	default_interface = IIsoparametricCurvesSets

class JointSurface(CoClassBaseClass): # A CoClass
	# ѕоверхность соединени€.
	CLSID = IID('{B82A24F7-C580-4577-9F18-09E817D9CC90}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IJointSurface,
	]
	default_interface = IJointSurface

class JointSurfaces(CoClassBaseClass): # A CoClass
	#  оллекци€ поверхностей соединени€.
	CLSID = IID('{0FD2565C-9396-4DF6-936A-DBBC3378BC21}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IJointSurfaces,
	]
	default_interface = IJointSurfaces

class KompasDocument(CoClassBaseClass): # A CoClass
	# Ѕазовый класс документов  ќћѕј—.
	CLSID = IID('{DBBB268E-19D3-40DE-B77C-987CA15FE711}')
	coclass_sources = [
		ksDocumentFileNotify,
	]
	default_source = ksDocumentFileNotify
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasDocument,
	]
	default_interface = IKompasDocument

class KompasDocument3D(CoClassBaseClass): # A CoClass
	# Ѕазовый класс 3D документов  ќћѕј—.
	CLSID = IID('{9237AAFE-992B-4521-BF68-3A0C6D7F7769}')
	coclass_sources = [
		ksDocument3DNotify7,
	]
	default_source = ksDocument3DNotify7
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasDocument,
		IKompasDocument3D,
	]
	default_interface = IKompasDocument3D

class KompasError(CoClassBaseClass): # A CoClass
	# »нформаци€ о ошибке системы  ќћѕј—.
	CLSID = IID('{A5B4DB5F-0554-4D75-915B-3F838F18C809}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasError,
	]
	default_interface = IKompasError

# This CoClass is known by the name 'KSINVISIBLE.Application.7'
class KompasInvisible7(CoClassBaseClass): # A CoClass
	# KompasInvisible7.
	CLSID = IID('{1A4C2A9B-3B2A-49D1-B75F-3810DD4A2086}')
	coclass_sources = [
		ksKompasObjectNotify,
	]
	default_source = ksKompasObjectNotify
	coclass_interfaces = [
		IKompasAPIObject,
		IApplication,
	]
	default_interface = IApplication

class Layer(CoClassBaseClass): # A CoClass
	# —лой.
	CLSID = IID('{392916B8-171E-4229-9E75-1D514C75FB17}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		ILayer,
	]
	default_interface = ILayer

class Layer3D(CoClassBaseClass): # A CoClass
	# —лой в 3D.
	CLSID = IID('{4F500BED-70AE-4AFD-A13C-C345FBE39663}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ILayer3D,
	]
	default_interface = ILayer3D

class LayerFilterCondition(CoClassBaseClass): # A CoClass
	# ”словие фильтрации слоев.
	CLSID = IID('{21D31870-5EBC-42CE-8858-A308E7E4B8A4}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ILayerFilterCondition,
	]
	default_interface = ILayerFilterCondition

class LayerFilterConditions(CoClassBaseClass): # A CoClass
	# ”словие фильтрации слоев.
	CLSID = IID('{9F90DA69-2CA3-4C2E-AB59-6BB9B0E7DFB8}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		ILayerFilterConditions,
	]
	default_interface = ILayerFilterConditions

class LayerGroup(CoClassBaseClass): # A CoClass
	# √руппа слоев.
	CLSID = IID('{5543C50A-B56D-48AF-87C3-09C1B48CBC5A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		ILayerGroup,
	]
	default_interface = ILayerGroup

class LayerGroup3D(CoClassBaseClass): # A CoClass
	# √руппа слоев.
	CLSID = IID('{049F66CC-B9AC-4689-B0B4-B1183B5B67B2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		ILayerGroup3D,
	]
	default_interface = ILayerGroup3D

class LayerGroups(CoClassBaseClass): # A CoClass
	#  оллекци€ групп слоев
	CLSID = IID('{E53FFD4E-619D-4B9B-9C34-9C23668E6F4A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		ILayerGroups,
	]
	default_interface = ILayerGroups

class LayerGroups3D(CoClassBaseClass): # A CoClass
	#  оллекци€ групп слоев в 3D
	CLSID = IID('{E08FA7C6-1A29-43AE-B0D8-158159BF1D27}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		ILayerGroups3D,
	]
	default_interface = ILayerGroups3D

class Layers(CoClassBaseClass): # A CoClass
	#  оллекци€ слоев.
	CLSID = IID('{C0402ED4-D1AB-4567-BE4F-AFD88AF848EC}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		ILayers,
	]
	default_interface = ILayers

class Layers3D(CoClassBaseClass): # A CoClass
	#  оллекци€ слоев в 3D.
	CLSID = IID('{B74E958E-2583-4B60-A1BA-FE72EC8F0930}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		ILayers3D,
	]
	default_interface = ILayers3D

class LayoutSheet(CoClassBaseClass): # A CoClass
	# ѕараметры листа оформлени€.
	CLSID = IID('{5331E747-7833-4988-92CA-90283160DDF6}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ILayoutSheet,
	]
	default_interface = ILayoutSheet

class LayoutSheets(CoClassBaseClass): # A CoClass
	#  оллекци€ листов оформлени€.
	CLSID = IID('{1EF17E36-3C4D-4C86-AD1B-17E744075DF8}')
	coclass_sources = [
		ksLayoutSheetsNotify,
	]
	default_source = ksLayoutSheetsNotify
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		ILayoutSheets,
	]
	default_interface = ILayoutSheets

class Leaders(CoClassBaseClass): # A CoClass
	#  оллекци€ линий выносок.
	CLSID = IID('{90E9D9E8-1451-4BA1-97A6-4BE6D1508649}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		ILeaders,
	]
	default_interface = ILeaders

class Leaders3D(CoClassBaseClass): # A CoClass
	#  оллекци€ линий выносок 3D.
	CLSID = IID('{9B18CB77-9EDD-440C-B154-969F1B5C7B98}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ILeaders3D,
	]
	default_interface = ILeaders3D

class LibArraySettings(CoClassBaseClass): # A CoClass
	# »нтерфейс дл€ выбора состо€ний библиотек в настройках.
	CLSID = IID('{19144A91-0D9F-4906-AFD0-BEFB5625662D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ILibArraySettings,
	]
	default_interface = ILibArraySettings

class LibraryHoleParameters(CoClassBaseClass): # A CoClass
	# ѕараметры отверсти€ из библиотеки.
	CLSID = IID('{DA8608DC-9B21-418E-8813-AA33B50A4DAD}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ILibraryHoleParameters,
	]
	default_interface = ILibraryHoleParameters

class LibraryManager(CoClassBaseClass): # A CoClass
	# ћенеджер библиотек.
	CLSID = IID('{AACB5896-8918-43CB-A5B4-F3EAF45BCEF7}')
	coclass_sources = [
		ksLibraryManagerNotify,
	]
	default_source = ksLibraryManagerNotify
	coclass_interfaces = [
		IKompasAPIObject,
		ILibraryManager,
	]
	default_interface = ILibraryManager

class LineDimension(CoClassBaseClass): # A CoClass
	# Ћинейный размер.
	CLSID = IID('{A7B94E84-CB49-4021-8AC2-27ADC8036B4D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		ILineDimension,
	]
	default_interface = ILineDimension

class LineDimension3D(CoClassBaseClass): # A CoClass
	# Ћинейный размер в 3D (на плоскости)
	CLSID = IID('{0FD2290E-6FF6-48C4-9B10-E1C6D0608C74}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IBaseLineDimension3D,
		ILineDimension3D,
	]
	default_interface = ILineDimension3D

class LineDimensions(CoClassBaseClass): # A CoClass
	#  оллекци€ линейных размеров.
	CLSID = IID('{D44491CE-CDD2-4435-AFAB-7AEC8E58D912}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		ILineDimensions,
	]
	default_interface = ILineDimensions

class LineDimensions3D(CoClassBaseClass): # A CoClass
	#  оллекци€ линейных размеров 3D.
	CLSID = IID('{BC66C415-362A-4246-850F-A7D39BDE6C1B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ILineDimensions3D,
	]
	default_interface = ILineDimensions3D

class LineSegment(CoClassBaseClass): # A CoClass
	# ќтрезок.
	CLSID = IID('{EE1993AD-CAC2-421C-B9B1-131BA16466CF}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		ILineSegment,
	]
	default_interface = ILineSegment

class LineSegment3D(CoClassBaseClass): # A CoClass
	# ќтрезок 3D.
	CLSID = IID('{874A7DFC-944E-49DE-80DE-EB78894C48D1}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		ILineSegment3D,
	]
	default_interface = ILineSegment3D

class LineSegments(CoClassBaseClass): # A CoClass
	#  оллекци€ отрезков.
	CLSID = IID('{B7B673AF-5E78-45AA-8C78-894D1F4F77AC}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		ILineSegments,
	]
	default_interface = ILineSegments

class LineSegments3D(CoClassBaseClass): # A CoClass
	#  оллекци€ отрезков 3D.
	CLSID = IID('{9D634ADF-E8BD-48A3-AA20-4FE654605D3E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ILineSegments3D,
	]
	default_interface = ILineSegments3D

class LinearCentres(CoClassBaseClass): # A CoClass
	# Ћинейна€ сетка центров.
	CLSID = IID('{B7C0077B-FAEF-4183-B3BE-0B07529D3342}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		ILinearCentres,
	]
	default_interface = ILinearCentres

class LinearPattern(CoClassBaseClass): # A CoClass
	# ќпераци€ копировани€ по сетке.
	CLSID = IID('{9A4B0A4C-961B-465E-AC12-99A604A503CB}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IFeaturePattern,
		ILinearPattern,
	]
	default_interface = ILinearPattern

class LinearsCentries(CoClassBaseClass): # A CoClass
	#  оллекци€ линейных сеток центров.
	CLSID = IID('{EAFBF8C9-EA01-4550-8C56-391D57ECCE3A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		ILinearsCentries,
	]
	default_interface = ILinearsCentries

class Lines(CoClassBaseClass): # A CoClass
	#  оллекци€ линий.
	CLSID = IID('{431C0844-4C3E-4110-8E16-2B952AA0521D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		ILines,
	]
	default_interface = ILines

class LoadCombinationsParam(CoClassBaseClass): # A CoClass
	# »нтерфейс параметров типа загрузки документа.
	CLSID = IID('{0801D00A-7F0A-4045-BCD7-E148083953D2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ILoadCombinationsParam,
	]
	default_interface = ILoadCombinationsParam

class LocalCSAxesDirectionParam(CoClassBaseClass): # A CoClass
	# »нтерфейс параметров Ћ—  дл€ типа ориентации - 'направление осей'.
	CLSID = IID('{D9B8494F-9693-488D-AC64-1EEE767737E9}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ILocalCSAxesDirectionParam,
	]
	default_interface = ILocalCSAxesDirectionParam

class LocalCSEulerParam(CoClassBaseClass): # A CoClass
	# »нтерфейс параметров Ћ—  дл€ типа ориентации - 'система углов Ёйлера'.
	CLSID = IID('{D49278A6-1476-48FB-9374-CD066742B0AC}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ILocalCSEulerParam,
	]
	default_interface = ILocalCSEulerParam

class LocalCSOrientByObjectParam(CoClassBaseClass): # A CoClass
	# »нтерфейс параметров Ћ—  дл€ типа ориентации - 'ориентирование по объекту'.
	CLSID = IID('{9018B030-43B0-4A67-AE2B-11F14AB2716D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ILocalCSOrientByObjectParam,
	]
	default_interface = ILocalCSOrientByObjectParam

class LocalCoordinateSystem(CoClassBaseClass): # A CoClass
	# »нтерфейс Ћ— .
	CLSID = IID('{E39CAE1D-9B07-4171-8A97-90D9E7E475D4}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IPoint3D,
		ILocalCoordinateSystem,
	]
	default_interface = ILocalCoordinateSystem

class LocalCoordinateSystem2D(CoClassBaseClass): # A CoClass
	# Ћокальна€ система координат.
	CLSID = IID('{BCB037A2-D246-44AF-92EF-FDC54624FFA2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ILocalCoordinateSystem2D,
	]
	default_interface = ILocalCoordinateSystem2D

class LocalCoordinateSystems(CoClassBaseClass): # A CoClass
	#  оллекци€ локальных систем координат.
	CLSID = IID('{C2EB441C-8053-4ECB-961F-D0607769B508}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ILocalCoordinateSystems,
	]
	default_interface = ILocalCoordinateSystems

class LocalCoordinateSystems2D(CoClassBaseClass): # A CoClass
	#  оллекци€ локальных систем координат.
	CLSID = IID('{CEFD648E-547C-4D66-94E9-336E6E89BCFE}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		ILocalCoordinateSystems2D,
	]
	default_interface = ILocalCoordinateSystems2D

class Loft(CoClassBaseClass): # A CoClass
	# ќпераци€ по сечени€м.
	CLSID = IID('{F4FA0EE2-9988-4FE9-AF69-D9F84368AF09}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		ILoft,
	]
	default_interface = ILoft

class Lofts(CoClassBaseClass): # A CoClass
	#  оллекци€ сечений.
	CLSID = IID('{73F8984C-5A44-455C-973D-98E9589DB57A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ILofts,
	]
	default_interface = ILofts

class Loop7(CoClassBaseClass): # A CoClass
	# »нтерфейс цикла - содержит информацию о св€з€х с другими гран€ми.
	CLSID = IID('{6198541B-92B1-40B1-8484-F6E18302F75E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ILoop7,
	]
	default_interface = ILoop7

class MacroObject(CoClassBaseClass): # A CoClass
	# Ќетипизированный макроэлемент.
	CLSID = IID('{A9880F8D-2166-4690-ACA5-4479DBE4251B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IMacroObject,
	]
	default_interface = IMacroObject

class MacroObject3D(CoClassBaseClass): # A CoClass
	# 3D макроэлемент.
	CLSID = IID('{6B9C4409-D991-4E0E-A8DE-AFDD3A582AE8}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IMacroObject3D,
	]
	default_interface = IMacroObject3D

class MacroObjects(CoClassBaseClass): # A CoClass
	#  оллекци€ макроэлементов.
	CLSID = IID('{2B471C1A-E44F-44AD-99EA-4AC126B80965}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IMacroObjects,
	]
	default_interface = IMacroObjects

class MacroObjects3D(CoClassBaseClass): # A CoClass
	# »нтерфейс коллекции макроэлементов 3D.
	CLSID = IID('{A7238B7E-7E31-46C0-A814-ECB90B5414A5}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IMacroObjects3D,
	]
	default_interface = IMacroObjects3D

class Manipulators(CoClassBaseClass): # A CoClass
	#  оллекци€ манипул€торов.
	CLSID = IID('{7CDB34A1-2B31-4FFD-BAF7-C06B588FE0CB}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IManipulators,
	]
	default_interface = IManipulators

class MarkInsideForm(CoClassBaseClass): # A CoClass
	# ћарка и позиционного обозначени€ (без линии-выноски).
	CLSID = IID('{CDABB418-649A-4AB9-8A92-C51789075912}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IMark,
		IMarkInsideForm,
	]
	default_interface = IMarkInsideForm

class MarkNode(CoClassBaseClass): # A CoClass
	# ”зел дл€ вставки дополнительных марок.
	CLSID = IID('{B98EA663-66BC-46C0-A86C-1FE40AF8A3D8}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IMarkNode,
	]
	default_interface = IMarkNode

class MarkNodes(CoClassBaseClass): # A CoClass
	#  оллекци€  узлов дл€ вставки марки.
	CLSID = IID('{6681105E-35E0-4E76-9E64-0AB8B50E6149}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IMarkNodes,
	]
	default_interface = IMarkNodes

class MarkOnLeader(CoClassBaseClass): # A CoClass
	# ћарка и позиционные обозначени€ (с линией-выноской).
	CLSID = IID('{CF195C37-A915-48CA-9F6B-6B3845FED05B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IMark,
		IMarkOnLeader,
	]
	default_interface = IMarkOnLeader

class MarkOnLine(CoClassBaseClass): # A CoClass
	# ћарка и позиционные обозначени€ (на линии).
	CLSID = IID('{84CAA3BB-3E7A-4185-82BC-85D4102D5DEF}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IMark,
		IMarkOnLine,
	]
	default_interface = IMarkOnLine

class Marks(CoClassBaseClass): # A CoClass
	#  оллекци€ марок (содержит марки всех типов).
	CLSID = IID('{C0DEA6BF-0AD5-4C55-AD3D-A3F145943E47}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IMarks,
	]
	default_interface = IMarks

class Mate3DByAngle(CoClassBaseClass): # A CoClass
	# —опр€жение под углом.
	CLSID = IID('{2D4F2072-EBD6-4CB6-B1C2-535BBF097F40}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IMateConstraint3D,
		IMate3DByAngle,
	]
	default_interface = IMate3DByAngle

class Mate3DByTangent(CoClassBaseClass): # A CoClass
	# —опр€жение по касательной.
	CLSID = IID('{FBBD6A6C-65F3-492E-9095-15D6111A5EA1}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IMateConstraint3D,
		IMate3DByTangent,
	]
	default_interface = IMate3DByTangent

class Mate3DCamGear(CoClassBaseClass): # A CoClass
	# —опр€жение двух компонентов - кулачковый механизм.  улачек - толкатель.
	CLSID = IID('{A7301502-52CA-4886-94FC-5B8002880FF4}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IMateConstraint3D,
		IMate3DCamGear,
	]
	default_interface = IMate3DCamGear

class Mate3DDependentPosition(CoClassBaseClass): # A CoClass
	# —опр€жение «ависимое положение.
	CLSID = IID('{8E8B8453-1695-477D-9A39-C957FFAD84FE}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IMateConstraint3D,
		IMate3DDependentPosition,
	]
	default_interface = IMate3DDependentPosition

class Mate3DSymmetry(CoClassBaseClass): # A CoClass
	# —опр€жение симметри€.
	CLSID = IID('{80BC4FCE-18BA-42A7-8E62-563843274250}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IMateConstraint3D,
		IMate3DSymmetry,
	]
	default_interface = IMate3DSymmetry

class Mate3DTransmission(CoClassBaseClass): # A CoClass
	# —опр€жение двух вращающихс€ компонентов.
	CLSID = IID('{FA6EE09A-E2C8-45B7-A4EC-B53F45B84652}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IMateConstraint3D,
		IMate3DTransmission,
	]
	default_interface = IMate3DTransmission

class MateConstraint3D(CoClassBaseClass): # A CoClass
	# —опр€жение 3D.
	CLSID = IID('{67DBF7C5-FFB1-4E47-A8E5-901A63EE130A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IMateConstraint3D,
	]
	default_interface = IMateConstraint3D

class MathCurve3D(CoClassBaseClass): # A CoClass
	# ћатематическа€ крива€ в трехмерном пространстве.
	CLSID = IID('{0BDEEF46-FCD5-4F3C-B9AE-5A073689BA91}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IMathCurve3D,
	]
	default_interface = IMathCurve3D

class MathSurface3D(CoClassBaseClass): # A CoClass
	# ћатематическа€ поверхность в трехмерном пространстве.
	CLSID = IID('{D6DA79A3-CF5D-432B-900F-429403741DDD}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IMathSurface3D,
	]
	default_interface = IMathSurface3D

class MeshCopyObjectParam(CoClassBaseClass): # A CoClass
	# ѕараметры копировани€ объектов.
	CLSID = IID('{FF54BE1B-3B35-4B01-985D-8D696086F7E7}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ICopyObjectParam,
		IMeshCopyObjectParam,
	]
	default_interface = IMeshCopyObjectParam

class MeshObject3D(CoClassBaseClass): # A CoClass
	# ѕространственный полигональный объект.
	CLSID = IID('{6774DD56-8666-4B40-B22F-74B43299342D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IMeshObject3D,
	]
	default_interface = IMeshObject3D

class MeshPointsSurface(CoClassBaseClass): # A CoClass
	# ѕоверхность по сети точек.
	CLSID = IID('{1A73D002-0BD3-4A73-801E-CA6A322CE562}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IMeshPointsSurface,
	]
	default_interface = IMeshPointsSurface

class MeshPointsSurfaces(CoClassBaseClass): # A CoClass
	#  оллекци€ поверхностей по сети точек.
	CLSID = IID('{372E58EE-C5AC-48B5-A535-BB490598D931}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IMeshPointsSurfaces,
	]
	default_interface = IMeshPointsSurfaces

class MirrorPattern(CoClassBaseClass): # A CoClass
	# »нтерфейс зеркального массива.
	CLSID = IID('{26383273-9991-4D0D-908B-2627F225D625}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IFeaturePattern,
		IMirrorPattern,
	]
	default_interface = IMirrorPattern

class ModelObject(CoClassBaseClass): # A CoClass
	# Ѕазовый интерфейс дл€ всех 3D объектов.
	CLSID = IID('{DB0070F0-C367-4DB5-B722-9CFE69895657}')
	coclass_sources = [
		ksModelObjectNotify,
	]
	default_source = ksModelObjectNotify
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
	]
	default_interface = IModelObject

class ModelObjects(CoClassBaseClass): # A CoClass
	#  оллекци€ 3D объектов.
	CLSID = IID('{B0223EED-4659-4EAC-BDA2-20B0FDD4E7B7}')
	coclass_sources = [
		ksModelObjectNotify,
	]
	default_source = ksModelObjectNotify
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
	]
	default_interface = IModelObjects

class MoldCavities(CoClassBaseClass): # A CoClass
	#  оллекци€ операций вычитани€ компонентов.
	CLSID = IID('{C334E4DD-61DC-402E-BB85-0DC7C89B9BC2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IMoldCavities,
	]
	default_interface = IMoldCavities

class MoldCavity(CoClassBaseClass): # A CoClass
	# ќперации вычитани€ компонентов.
	CLSID = IID('{CFDD8BF4-0D38-49E7-A859-CA3BFFCDB799}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IMoldCavity,
	]
	default_interface = IMoldCavity

class MouseEnterLeaveParameters7(CoClassBaseClass): # A CoClass
	# ѕараметры отображени€ точки позвол€ющей определить место применени€ контрола.
	CLSID = IID('{B05DF16E-5D90-4931-9197-815A2D1E365D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IMouseEnterLeaveParameters7,
	]
	default_interface = IMouseEnterLeaveParameters7

class MultiTextLeader(CoClassBaseClass): # A CoClass
	# ¬ыносна€ надпись к многослойным конструкци€м.
	CLSID = IID('{123D60BB-0331-4726-9707-777615E9D354}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IMultiTextLeader,
	]
	default_interface = IMultiTextLeader

class MultiTextLeaders(CoClassBaseClass): # A CoClass
	#  оллекци€ выносных надписей к многослойным конструкци€м.
	CLSID = IID('{AF30B851-0AE8-4F62-B7DB-1DF52D9316F2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IMultiTextLeaders,
	]
	default_interface = IMultiTextLeaders

class Multiline(CoClassBaseClass): # A CoClass
	# ћультилини€.
	CLSID = IID('{44A427DC-4604-43CA-9AF8-026C494CEC57}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IMultiline,
	]
	default_interface = IMultiline

class Multilines(CoClassBaseClass): # A CoClass
	#  оллекци€ мультилиний.
	CLSID = IID('{20023299-3104-4AF3-AC55-6D2B368896BB}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IMultilines,
	]
	default_interface = IMultilines

class NurbsSurface(CoClassBaseClass): # A CoClass
	# »нтерфейс NURBS-поверхности.
	CLSID = IID('{D2D5BC88-7991-4245-9968-6222F3993F45}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		INurbsSurface,
	]
	default_interface = INurbsSurface

class NurbsSurfaceByCurvesMesh(CoClassBaseClass): # A CoClass
	# —плайнова€ поверхность по сетке кривых.
	CLSID = IID('{53212E12-F293-4574-BB38-62967871A216}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		INurbsSurfaceByCurvesMesh,
	]
	default_interface = INurbsSurfaceByCurvesMesh

class NurbsSurfaces(CoClassBaseClass): # A CoClass
	#  оллекци€ NURBS-поверхностей.
	CLSID = IID('{FDCF85BA-4BB2-4A83-AF0D-73D967485BED}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		INurbsSurfaces,
	]
	default_interface = INurbsSurfaces

class NurbsSurfacesByCurvesMeshs(CoClassBaseClass): # A CoClass
	#  оллекци€ сплайновых поверхностей по сетке кривых.
	CLSID = IID('{0BB4E6A3-0BA0-4839-9F06-53179930918E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		INurbsSurfacesByCurvesMeshs,
	]
	default_interface = INurbsSurfacesByCurvesMeshs

class Nurbses(CoClassBaseClass): # A CoClass
	#  оллекци€ NURBS-кривых.
	CLSID = IID('{51E9EF87-E12D-48AF-9E0F-35A279878831}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		INurbses,
	]
	default_interface = INurbses

class OleDrawingObject(CoClassBaseClass): # A CoClass
	# OLE объект.
	CLSID = IID('{C5D9DA68-4574-40D5-B92A-838C235F1903}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IOleDrawingObject,
	]
	default_interface = IOleDrawingObject

class OleDrawingObjects(CoClassBaseClass): # A CoClass
	#  оллекци€ Ole объектов.
	CLSID = IID('{41E89E17-2FB8-4E08-A01A-CF9BB524A6A2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IOleDrawingObjects,
	]
	default_interface = IOleDrawingObjects

class OpenDocumentParam(CoClassBaseClass): # A CoClass
	# »нтерфейс параметров открыти€ документа.
	CLSID = IID('{FFBB62A8-CB09-4201-A85E-D22856D8BB8C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IOpenDocumentParam,
	]
	default_interface = IOpenDocumentParam

class OrientedEdge7(CoClassBaseClass): # A CoClass
	# ќриентированное ребро.
	CLSID = IID('{83ABCACD-F2CF-489C-BBE6-116069591839}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IOrientedEdge7,
	]
	default_interface = IOrientedEdge7

class ParametriticConstraint(CoClassBaseClass): # A CoClass
	# ѕараметрическое ограничение.
	CLSID = IID('{7536F0BF-2857-4A01-ACFA-5DDF1C9840A8}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IParametriticConstraint,
	]
	default_interface = IParametriticConstraint

class Part7(CoClassBaseClass): # A CoClass
	#  омпонент 3D документа.
	CLSID = IID('{314057D1-5EFD-4980-8AB8-4E0CC3F7E756}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IPart7,
	]
	default_interface = IPart7

class PartDocument(CoClassBaseClass): # A CoClass
	# »нтерфейс детали.
	CLSID = IID('{427D2E6B-8D4E-4F9F-99AC-F9E0FB22D25C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasDocument,
		IKompasDocument3D,
		IPartDocument,
	]
	default_interface = IPartDocument

class Parts7(CoClassBaseClass): # A CoClass
	#  оллекци€ компонентов 3D документа.
	CLSID = IID('{CB826C3D-9968-4546-BCD7-BA65F6B84902}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IParts7,
	]
	default_interface = IParts7

class PathPattern(CoClassBaseClass): # A CoClass
	# ќпераци€ копировани€ вдоль кривой.
	CLSID = IID('{6A4F281E-23AB-49C0-A0A3-B34695AA8A3D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IFeaturePattern,
		IPathPattern,
	]
	default_interface = IPathPattern

class Phantom2D(CoClassBaseClass): # A CoClass
	# ѕараметры фантома 2D.
	CLSID = IID('{C08B3775-2631-4D34-83E0-F18DAF855848}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IPhantom2D,
	]
	default_interface = IPhantom2D

class Placement3D(CoClassBaseClass): # A CoClass
	# »нтерфейс локальной системы координат (положение объекта).
	CLSID = IID('{D30E2696-B263-4283-BACA-04471DF8311E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IPlacement3D,
	]
	default_interface = IPlacement3D

class Placement3DManipulator(CoClassBaseClass): # A CoClass
	# ћанипул€тор системы координат.
	CLSID = IID('{575C0551-83D0-475C-B6A9-49E788A8EB41}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IBaseManipulator,
		IPlacement3DManipulator,
	]
	default_interface = IPlacement3DManipulator

class Plane3D(CoClassBaseClass): # A CoClass
	# ѕлоскость 3D.
	CLSID = IID('{DEBC9CF4-AD07-42F6-A795-176EB0EB8C75}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IPlane3D,
	]
	default_interface = IPlane3D

class Plane3DBy2Edge(CoClassBaseClass): # A CoClass
	# ѕлоскость через ребро параллельно /перпендикул€рно другому ребру 3D.
	CLSID = IID('{C7DDD05C-D299-46E9-8CD6-3E167A060F21}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IPlane3D,
		IPlane3DBy2Edge,
	]
	default_interface = IPlane3DBy2Edge

class Plane3DBy3Points(CoClassBaseClass): # A CoClass
	#  ѕлоскость, проход€ща€ через три вершины.
	CLSID = IID('{775B6240-2AD6-432F-8F65-A54F945F93F1}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IPlane3D,
		IPlane3DBy3Points,
	]
	default_interface = IPlane3DBy3Points

class Plane3DByAngle(CoClassBaseClass): # A CoClass
	# ѕлоскость, под углом к другой плоскости.
	CLSID = IID('{D0E15CC6-5630-42B3-8706-8B205C7E7D11}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IPlane3D,
		IPlane3DByAngle,
	]
	default_interface = IPlane3DByAngle

class Plane3DByEdgeAndPlane(CoClassBaseClass): # A CoClass
	# ѕлоскость через ребро параллельно / перпендикул€рно грани 3D.
	CLSID = IID('{1DEE85E1-D2DE-4981-A605-2D0AE6393F61}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IPlane3D,
		IPlane3DByEdgeAndPlane,
	]
	default_interface = IPlane3DByEdgeAndPlane

class Plane3DByEdgeAndPoint(CoClassBaseClass): # A CoClass
	# ѕлоскость через ребро и вершину.
	CLSID = IID('{F2373BF1-DC0F-4B94-B0AE-48265C028D19}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IPlane3D,
		IPlane3DByEdgeAndPoint,
	]
	default_interface = IPlane3DByEdgeAndPoint

class Plane3DByOffset(CoClassBaseClass): # A CoClass
	# —мещенна€ плоскость.
	CLSID = IID('{3D67D60E-A4CC-4714-8439-9EC6846E8934}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IPlane3D,
		IPlane3DByOffset,
	]
	default_interface = IPlane3DByOffset

class Plane3DByPlaneCurve(CoClassBaseClass): # A CoClass
	# ѕлоскость через плоскую кривую.
	CLSID = IID('{762D8288-0893-4B8D-A434-99E44405ADE2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IPlane3D,
		IPlane3DByPlaneCurve,
	]
	default_interface = IPlane3DByPlaneCurve

class Plane3DMiddle(CoClassBaseClass): # A CoClass
	# —редн€€ плоскость 3D.
	CLSID = IID('{A928037A-11D4-4DD7-93AF-491C9D5AD907}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IPlane3D,
		IPlane3DMiddle,
	]
	default_interface = IPlane3DMiddle

class Plane3DNormalToSurface(CoClassBaseClass): # A CoClass
	# Ќормальна€ плоскость.
	CLSID = IID('{7EEDFD78-29A9-40D6-87B8-ABD0DCA86774}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IPlane3D,
		IPlane3DNormalToSurface,
	]
	default_interface = IPlane3DNormalToSurface

class Plane3DParallelByPoint(CoClassBaseClass): # A CoClass
	# ѕлоскость через вершину параллельно другой плоскости.
	CLSID = IID('{451057BB-DD5E-44C5-8BC4-15F6A2D24CFC}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IPlane3D,
		IPlane3DParallelByPoint,
	]
	default_interface = IPlane3DParallelByPoint

class Plane3DPerpendicularByEdge(CoClassBaseClass): # A CoClass
	# ѕлоскость, проход€ща€ через вершину перпендикул€рно ребру 3D.
	CLSID = IID('{01A5298A-1472-4D90-9441-8E0591501D9C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IPlane3D,
		IPlane3DPerpendicularByEdge,
	]
	default_interface = IPlane3DPerpendicularByEdge

class Plane3DTangentToFace(CoClassBaseClass): # A CoClass
	# ѕлоскость касательна€ к грани 3D.
	CLSID = IID('{A905B4F2-52D9-4E4C-B9BC-09A56035F751}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IPlane3D,
		IPlane3DTangentToFace,
	]
	default_interface = IPlane3DTangentToFace

class Plane3DTangentToFaceInPoint(CoClassBaseClass): # A CoClass
	# ѕлоскость касательна€ к грани в точке 3D.
	CLSID = IID('{5A341BD4-9A7F-4DC5-8721-88C544530F09}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IPlane3D,
		IPlane3DTangentToFaceInPoint,
	]
	default_interface = IPlane3DTangentToFaceInPoint

class Planes3D(CoClassBaseClass): # A CoClass
	#  оллекци€ плоскостей.
	CLSID = IID('{02943F10-AFC8-4BE9-86B0-ACE0929A2DCC}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IPlanes3D,
	]
	default_interface = IPlanes3D

class Point3D(CoClassBaseClass): # A CoClass
	# ѕространсвенна€ точка.
	CLSID = IID('{A4CA403F-B960-4E41-A350-C07D15115DC2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IPoint3D,
	]
	default_interface = IPoint3D

class Point3DParamByCylinder(CoClassBaseClass): # A CoClass
	# »нтерфейс параметров пространственной точки, заданной по цилиндрическим координатам.
	CLSID = IID('{EC22584A-6FA6-4A66-B8DE-21605ED1D12B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IPoint3DParamByCylinder,
	]
	default_interface = IPoint3DParamByCylinder

class Point3DParamBySphere(CoClassBaseClass): # A CoClass
	# »нтерфейс параметров пространственной точки, заданной по сферическим координатам.
	CLSID = IID('{CD7DA97A-87F8-4B2E-B5D4-750D6150291E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IPoint3DParamBySphere,
	]
	default_interface = IPoint3DParamBySphere

class Point3DParamCenter(CoClassBaseClass): # A CoClass
	# »нтерфейс параметров пространственной точки заданной в центре опорного объекта.
	CLSID = IID('{02DA512F-097F-4911-8E27-8C546ED4B22A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IPoint3DParamCenter,
	]
	default_interface = IPoint3DParamCenter

class Point3DParamCurve(CoClassBaseClass): # A CoClass
	# »нтерфейс параметров пространственной точки заданной на кривой со смещением.
	CLSID = IID('{AAC9EE7F-C69F-48DD-9A38-8E38C38BAB28}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IPoint3DParamCurve,
	]
	default_interface = IPoint3DParamCurve

class Point3DParamDisplace(CoClassBaseClass): # A CoClass
	# »нтерфейс параметров пространственной точки заданной по смещению от опорного объекта.
	CLSID = IID('{7E00821A-E79B-412B-9A51-ADB9664C23A0}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IPoint3DParamDisplace,
	]
	default_interface = IPoint3DParamDisplace

class Point3DParamIntersect(CoClassBaseClass): # A CoClass
	# »нтерфейс параметров пространственной точки заданной на пересечении опорных объектов.
	CLSID = IID('{DE8A8774-6705-4971-BA1F-F889E7E3752C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IPoint3DParamIntersect,
	]
	default_interface = IPoint3DParamIntersect

class Point3DParamProjection(CoClassBaseClass): # A CoClass
	# »нтерфейс параметров пространственной точки заданной проецированием.
	CLSID = IID('{BD60E7D5-0E9E-4E00-A27B-08C11CFD41BD}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IPoint3DParamProjection,
	]
	default_interface = IPoint3DParamProjection

class Point3DParamSurface(CoClassBaseClass): # A CoClass
	# »нтерфейс параметров пространственной точки заданной на поверхности.
	CLSID = IID('{E5490B1D-49E8-4042-BEAA-C666952D3B1B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IPoint3DParamSurface,
	]
	default_interface = IPoint3DParamSurface

class PointDrivenPattern(CoClassBaseClass): # A CoClass
	# ќпераци€ копировани€ по точкам.
	CLSID = IID('{EC056028-53EA-48C2-9DE2-77CEF64F4C1C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IFeaturePattern,
		IPointDrivenPattern,
	]
	default_interface = IPointDrivenPattern

class Points(CoClassBaseClass): # A CoClass
	#  оллекци€ 2D точек.
	CLSID = IID('{4B8726C5-E743-48A5-9C5F-506F5D57DB7F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IPoints,
	]
	default_interface = IPoints

class Points3D(CoClassBaseClass): # A CoClass
	#  оллекци€ элементов 'ѕространственна€ точка'.
	CLSID = IID('{2B0C2912-59D7-4976-9E57-20D83CDA9038}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IPoints3D,
	]
	default_interface = IPoints3D

class PointsArrFromFile(CoClassBaseClass): # A CoClass
	# √руппа точек из файла.
	CLSID = IID('{02155ADC-2F79-497F-9E33-9E3496050C71}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IPointsArrFromFile,
	]
	default_interface = IPointsArrFromFile

class PointsArrOnCurve(CoClassBaseClass): # A CoClass
	# √руппа точек по кривой.
	CLSID = IID('{CE1A13CE-C56C-4BCA-94CE-45D2C36B7EAA}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IPointsArrOnCurve,
	]
	default_interface = IPointsArrOnCurve

class PointsArrOnSurface(CoClassBaseClass): # A CoClass
	# √руппа точек по поверхности.
	CLSID = IID('{E70927B9-FAA5-4149-B751-946A1E0E0EFE}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IPointsArrOnSurface,
	]
	default_interface = IPointsArrOnSurface

class PointsArrsFromFiles(CoClassBaseClass): # A CoClass
	#  оллекци€ групп точек из файлов.
	CLSID = IID('{6DAB2B49-9659-411B-ABEB-5EB049AA817C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IPointsArrsFromFiles,
	]
	default_interface = IPointsArrsFromFiles

class PointsArrsOnCurves(CoClassBaseClass): # A CoClass
	#  оллекци€ групп точек по кривым.
	CLSID = IID('{CFA80033-A78C-43EA-9CEA-B26D1A18FA80}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IPointsArrsOnCurves,
	]
	default_interface = IPointsArrsOnCurves

class PointsArrsOnSurfaces(CoClassBaseClass): # A CoClass
	#  оллекци€ групп точек по поверхност€м.
	CLSID = IID('{B4E7DDF0-E62A-4957-B477-B3B5797BF85A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IPointsArrsOnSurfaces,
	]
	default_interface = IPointsArrsOnSurfaces

class PolyLine(CoClassBaseClass): # A CoClass
	# 3D ломана€.
	CLSID = IID('{1F490D96-2098-40E6-BB73-52DD0A71111A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IPolyLine,
	]
	default_interface = IPolyLine

class PolyLine2D(CoClassBaseClass): # A CoClass
	# ѕолилини€.
	CLSID = IID('{FFC3A04A-C9BD-44C2-9485-41F4A655653C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IPolyLine2D,
	]
	default_interface = IPolyLine2D

class PolyLines(CoClassBaseClass): # A CoClass
	#  оллекци€ элементов 'ломана€'.
	CLSID = IID('{1DC144A1-0F9F-4D93-98EC-53BFCCF795FE}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IPolyLines,
	]
	default_interface = IPolyLines

class PolyLines2D(CoClassBaseClass): # A CoClass
	#  оллекци€ полилиний.
	CLSID = IID('{6A3B4FB6-FB8D-40D2-B3CA-2DFE4FF725B5}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IPolyLines2D,
	]
	default_interface = IPolyLines2D

class PrintJob(CoClassBaseClass): # A CoClass
	# «адание на печать
	CLSID = IID('{87DAB0E6-B749-47FC-8E02-76DAC0439C81}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IPrintJob,
	]
	default_interface = IPrintJob

class PrintJob_Sheet(CoClassBaseClass): # A CoClass
	# «адание на печать
	CLSID = IID('{F035E79B-1F65-42C6-AB49-498C65CC2E1F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IPrintJob_Sheet,
	]
	default_interface = IPrintJob_Sheet

class Procedure(CoClassBaseClass): # A CoClass
	# ѕроцедура прикладной библиотеки  ќћѕј—.
	CLSID = IID('{5D9929F6-3D65-4DAF-B146-A85FA98F2356}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IProcedure,
	]
	default_interface = IProcedure

class Procedures(CoClassBaseClass): # A CoClass
	#  оллекци€ процедур прикладной библиотеки  ќћѕј—.
	CLSID = IID('{0EA0000E-9328-488D-B611-9F72EECCD92D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IProcedures,
	]
	default_interface = IProcedures

class ProceduresLibraries(CoClassBaseClass): # A CoClass
	#  оллекци€ прикладных библиотек  ќћѕј—.
	CLSID = IID('{DBC3AC55-2823-4661-9740-54843BA72B12}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IProceduresLibraries,
	]
	default_interface = IProceduresLibraries

class ProceduresLibrary(CoClassBaseClass): # A CoClass
	# ѕрикладна€ библиотека  ќћѕј—.
	CLSID = IID('{E865B51E-8276-4F7E-A20B-509DC25679B1}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ILibrary,
		IProceduresLibrary,
	]
	default_interface = IProceduresLibrary

class Process2D(CoClassBaseClass): # A CoClass
	# »нтерфейс процесса 2D
	CLSID = IID('{A54A786D-FBBA-45F6-BAFB-18E6D2CE96FF}')
	coclass_sources = [
		ksProcess2DNotify,
	]
	default_source = ksProcess2DNotify
	coclass_interfaces = [
		IKompasAPIObject,
		IProcess,
		IProcess2D,
	]
	default_interface = IProcess2D

class Process3D(CoClassBaseClass): # A CoClass
	# »нтерфейс процесса 3D
	CLSID = IID('{172114B0-F8B7-4BED-A38B-62BFC490A3AF}')
	coclass_sources = [
		ksProcess3DNotify,
	]
	default_source = ksProcess3DNotify
	coclass_interfaces = [
		IKompasAPIObject,
		IProcess,
		IProcess3D,
	]
	default_interface = IProcess3D

class ProcessParam(CoClassBaseClass): # A CoClass
	# »нтерфейс параметров процесса
	CLSID = IID('{4C33DE6E-FEAC-4C28-9EE0-32C37F8E7A48}')
	coclass_sources = [
		ksPropertyManagerNotify,
	]
	default_source = ksPropertyManagerNotify
	coclass_interfaces = [
		IKompasAPIObject,
		IProcessParam,
	]
	default_interface = IProcessParam

class ProgressBarIndicator(CoClassBaseClass): # A CoClass
	# »нтерфейс индикатора процесса .
	CLSID = IID('{9361276C-70A0-4000-82D2-90FB546C98D4}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IProgressBarIndicator,
	]
	default_interface = IProgressBarIndicator

class ProjectionCurve(CoClassBaseClass): # A CoClass
	# ѕроекционна€ крива€.
	CLSID = IID('{1C5024E9-8F3F-49D5-9B66-42E26A03614B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IProjectionCurve,
	]
	default_interface = IProjectionCurve

class ProjectionCurves(CoClassBaseClass): # A CoClass
	#  оллекци€ проекционных кривых.
	CLSID = IID('{31D3EACE-36E4-4C17-9E47-20555B0B7F07}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IProjectionCurves,
	]
	default_interface = IProjectionCurves

class PropertyAggregateControl(CoClassBaseClass): # A CoClass
	# —оставной контрол.
	CLSID = IID('{E3643E08-6371-413B-8E4A-99C56BD41D47}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IPropertyControl,
		IPropertyAggregateControl,
	]
	default_interface = IPropertyAggregateControl

class PropertyBasePoint(CoClassBaseClass): # A CoClass
	# Ёлемент панели свойств - Ѕазова€ точка
	CLSID = IID('{0912865E-0DEB-4C6A-8AA0-70A512603E9E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IPropertyControl,
		IPropertyBasePoint,
	]
	default_interface = IPropertyBasePoint

class PropertyBmpList(CoClassBaseClass): # A CoClass
	# Ёлемент панели свойств -  омбобокс со строкой и битмапом
	CLSID = IID('{76A04B67-394F-4B63-BC9C-67C52A36F98A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IPropertyControl,
		IPropertyBmpList,
	]
	default_interface = IPropertyBmpList

class PropertyCheckBox(CoClassBaseClass): # A CoClass
	# Ёлемент панели свойств - „екбокс
	CLSID = IID('{8CF06399-B7EB-46EB-8B08-5603C589FE0F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IPropertyControl,
		IPropertyCheckBox,
	]
	default_interface = IPropertyCheckBox

class PropertyColor(CoClassBaseClass): # A CoClass
	# Ёлемент панели свойств - ¬ыбор цвета.
	CLSID = IID('{77E6E019-A5A1-4318-B98E-CD970D248EA0}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IPropertyColor,
	]
	default_interface = IPropertyColor

class PropertyControls(CoClassBaseClass): # A CoClass
	#  оллекци€ контролов панели свойств.
	CLSID = IID('{74D54FDD-62D0-4544-89C9-999612EF6DEF}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IPropertyControls,
	]
	default_interface = IPropertyControls

class PropertyEdit(CoClassBaseClass): # A CoClass
	# Ёлемент панели свойств - –едактор
	CLSID = IID('{E4AFCB78-574F-4960-9D92-B23888D700CD}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IPropertyControl,
		IPropertyEdit,
	]
	default_interface = IPropertyEdit

class PropertyFileName(CoClassBaseClass): # A CoClass
	# Ёлемент панели свойств - ¬ыбор файла.
	CLSID = IID('{BBB62BA6-AC05-4D05-BFF2-BC8579A2C5FC}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IPropertyFileName,
	]
	default_interface = IPropertyFileName

class PropertyGrid(CoClassBaseClass): # A CoClass
	# Ёлемент панели свойств - —етка.
	CLSID = IID('{F0F9573F-BE07-4251-86E5-2AA24AA3D43A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IPropertyControl,
		IPropertyGrid,
	]
	default_interface = IPropertyGrid

class PropertyGroupBegin(CoClassBaseClass): # A CoClass
	# Ёлемент панели свойств - Ќачало группы контролов.
	CLSID = IID('{4591067E-C29A-4548-96B6-B455AF7006DC}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IPropertyControl,
		IPropertyGroupBegin,
	]
	default_interface = IPropertyGroupBegin

class PropertyGroupEnd(CoClassBaseClass): # A CoClass
	# Ёлемент панели свойств -  онец группы контролов.
	CLSID = IID('{7B10BC9A-6A9A-4D5E-B896-294134FB680F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IPropertyControl,
		IPropertyGroupEnd,
	]
	default_interface = IPropertyGroupEnd

class PropertyLibExplorer(CoClassBaseClass): # A CoClass
	# Ёлемент панели свойств - ќтображение библиотеки документов
	CLSID = IID('{F89065E8-D547-452F-8723-24DB2304BC29}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IPropertyControl,
		IPropertyLibExplorer,
	]
	default_interface = IPropertyLibExplorer

class PropertyLinkButton(CoClassBaseClass): # A CoClass
	# Ёлемент панели свойств - Ќабор кнопок ввиде ссылок.
	CLSID = IID('{24D51CCA-A3F0-4055-86A5-32077679DA60}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IPropertyControl,
		IPropertyLinkButton,
	]
	default_interface = IPropertyLinkButton

class PropertyList(CoClassBaseClass): # A CoClass
	# Ёлемент панели свойств -  омбобокс
	CLSID = IID('{404CF845-9BF6-4AAD-97A1-B9A173ACF96D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IPropertyControl,
		IPropertyList,
	]
	default_interface = IPropertyList

class PropertyManager(CoClassBaseClass): # A CoClass
	# »нтерфейс панели свойств.
	CLSID = IID('{1B9CBAB1-99DA-433E-8D4E-6761D1AB9B8A}')
	coclass_sources = [
		ksPropertyManagerNotify,
	]
	default_source = ksPropertyManagerNotify
	coclass_interfaces = [
		IKompasAPIObject,
		IPropertyManager,
	]
	default_interface = IPropertyManager

class PropertyMarking(CoClassBaseClass): # A CoClass
	# Ёлемент панели свойств - ќбозначение.
	CLSID = IID('{E4A732A0-3DA8-40E3-9E05-E65F22F080DA}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IPropertyControl,
		IPropertyMarking,
	]
	default_interface = IPropertyMarking

class PropertyMultiButton(CoClassBaseClass): # A CoClass
	# Ёлемент панели свойств - Ќабор кнопок.
	CLSID = IID('{B734CA6E-CA21-4CCD-AEE8-94BC8F9D4986}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IPropertyControl,
		IPropertyMultiButton,
	]
	default_interface = IPropertyMultiButton

class PropertyOpticalProps(CoClassBaseClass): # A CoClass
	# Ёлемент панели свойств -  онтрол оптических свойств
	CLSID = IID('{83ED9022-AF06-4E7C-A77B-E95B325DBC43}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IPropertyControl,
		IPropertyOpticalProps,
	]
	default_interface = IPropertyOpticalProps

class PropertyPoint3D(CoClassBaseClass): # A CoClass
	# Ёлемент панели свойств -  оординаты 3D точки
	CLSID = IID('{E32A2D46-75F5-4DA8-A40E-03EC806F20D1}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IPropertyControl,
		IPropertyPoint3D,
	]
	default_interface = IPropertyPoint3D

class PropertyPreviewText(CoClassBaseClass): # A CoClass
	# Ёлемент панели свойств - ѕредпросмотр текста
	CLSID = IID('{7F6A75B2-8C3D-46B1-8125-07BEB64B6BBB}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IPropertyControl,
		IPropertyPreviewText,
	]
	default_interface = IPropertyPreviewText

class PropertySeparator(CoClassBaseClass): # A CoClass
	# Ёлемент панели свойств - разделитель (сепаратор).
	CLSID = IID('{59DA09ED-130F-43AF-86B8-EAC8E0C7D0A2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IPropertyControl,
		IPropertySeparator,
	]
	default_interface = IPropertySeparator

class PropertySlideBox(CoClassBaseClass): # A CoClass
	# Ёлемент панели свойств - ќкно отображени€ слайда, битмапа, группы или файла документа  ќћѕј—.
	CLSID = IID('{9988AC8D-657B-4B2A-8338-EC315CBBA70E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IPropertyControl,
		IPropertySlideBox,
	]
	default_interface = IPropertySlideBox

class PropertySpinEdit(CoClassBaseClass): # A CoClass
	# Ёлемент панели свойств - —пин c редактором
	CLSID = IID('{F4710743-A53B-4256-A450-16D0D40C87AA}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IPropertyControl,
		IPropertySpinEdit,
	]
	default_interface = IPropertySpinEdit

class PropertyStyleList(CoClassBaseClass): # A CoClass
	# Ёлемент панели свойств -  омбобокс со стилем
	CLSID = IID('{C2792BEE-4F86-4610-908E-8E4B31B603FC}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IPropertyControl,
		IPropertyStyleList,
	]
	default_interface = IPropertyStyleList

class PropertyTab(CoClassBaseClass): # A CoClass
	# »нтерфейс закладки панели свойств.
	CLSID = IID('{1C2A5766-B80A-4752-8509-217574965BF3}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IPropertyTab,
	]
	default_interface = IPropertyTab

class PropertyTabs(CoClassBaseClass): # A CoClass
	#  оллекци€ закладок панели свойств.
	CLSID = IID('{52110F5F-7BF2-4079-B3AE-A7B716A7EB1E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IPropertyTabs,
	]
	default_interface = IPropertyTabs

class PropertyTextButton(CoClassBaseClass): # A CoClass
	# Ёлемент панели свойств -  нопка с текстом.
	CLSID = IID('{D4F68E4E-2092-436A-B6FB-B8A335A671FD}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IPropertyControl,
		IPropertyTextButton,
	]
	default_interface = IPropertyTextButton

class PropertyTwinSwitcher(CoClassBaseClass): # A CoClass
	# Ёлемент панели свойств - переключатель
	CLSID = IID('{67D6F78E-4F92-4809-9894-6FA7DA814EFA}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IPropertyControl,
		IPropertyTwinSwitcher,
	]
	default_interface = IPropertyTwinSwitcher

class PropertyUserControl(CoClassBaseClass): # A CoClass
	# Ёлемент панели свойств - ѕользовательский элемент управлени€.
	CLSID = IID('{725A98DC-9987-4A79-BDA2-F5024E2D0FF3}')
	coclass_sources = [
		ksPropertyUserControlNotify,
	]
	default_source = ksPropertyUserControlNotify
	coclass_interfaces = [
		IKompasAPIObject,
		IPropertyControl,
		IPropertyUserControl,
	]
	default_interface = IPropertyUserControl

class RadialBreakDimensions(CoClassBaseClass): # A CoClass
	#  оллекци€ радиальных размеров с изломом.
	CLSID = IID('{2782662C-D266-46D6-9BF5-6E4612D32D9F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IBreakRadialDimensions,
	]
	default_interface = IBreakRadialDimensions

class RadialDimension(CoClassBaseClass): # A CoClass
	# –адиальный размер.
	CLSID = IID('{F6910669-B8FC-4F05-872E-BA10DE0964A4}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IRadialDimension,
	]
	default_interface = IRadialDimension

class RadialDimension3D(CoClassBaseClass): # A CoClass
	# –адиальный размер 3D.
	CLSID = IID('{1072B7E5-9C4B-44F2-A8F0-1A60C59D4909}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IRadialDimension3D,
	]
	default_interface = IRadialDimension3D

class RadialDimensions(CoClassBaseClass): # A CoClass
	#  оллекци€ радиальных размеров.
	CLSID = IID('{BD3D6D8C-C5D8-42F0-926D-FD995EE6D232}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IRadialDimensions,
	]
	default_interface = IRadialDimensions

class RadialDimensions3D(CoClassBaseClass): # A CoClass
	#  оллекци€ радиальных размеров 3D.
	CLSID = IID('{7245F71F-E655-4102-8C2C-B4E6D2FA26D8}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IRadialDimensions3D,
	]
	default_interface = IRadialDimensions3D

class Rasters(CoClassBaseClass): # A CoClass
	#  оллекци€ растровых объектов.
	CLSID = IID('{F90677D1-9ED2-4BDF-8C68-6B241B2A09F2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IRasters,
	]
	default_interface = IRasters

class Rectangles(CoClassBaseClass): # A CoClass
	#  оллекци€ пр€моугольников.
	CLSID = IID('{FB692157-2A44-4313-BE9B-5C7AD70DB633}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IRectangles,
	]
	default_interface = IRectangles

class RegularPolygon(CoClassBaseClass): # A CoClass
	# ћногоугольник.
	CLSID = IID('{11D9782E-11E1-471B-82D1-8635B0861339}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IRegularPolygon,
	]
	default_interface = IRegularPolygon

class RegularPolygons(CoClassBaseClass): # A CoClass
	#  оллекци€ многоугольников.
	CLSID = IID('{C9204FDB-09B4-443E-9029-FE617CEE9106}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IRegularPolygons,
	]
	default_interface = IRegularPolygons

class RemoteElement(CoClassBaseClass): # A CoClass
	# ¬ыносной элемент.
	CLSID = IID('{79A4CAF1-F75C-47D5-A3AF-65D8B95AD17A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IUnitMarking,
		IRemoteElement,
	]
	default_interface = IRemoteElement

class RemoteElements(CoClassBaseClass): # A CoClass
	#  оллекци€ выносных элементов.
	CLSID = IID('{8B0949ED-637A-49BE-96D4-95CD37A80FCC}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IRemoteElements,
	]
	default_interface = IRemoteElements

class Report(CoClassBaseClass): # A CoClass
	# »нтерфейс таблицы отчетов.
	CLSID = IID('{C3E4216D-283E-40B6-8DF9-AF5C81B3CF2E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IReport,
	]
	default_interface = IReport

class ReportParam(CoClassBaseClass): # A CoClass
	# »нтерфейс параметров отчета.
	CLSID = IID('{11B32E53-A4EB-427A-873A-5651330AFC17}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IReportParam,
	]
	default_interface = IReportParam

class ReportProcess(CoClassBaseClass): # A CoClass
	# »нтерфейс дл€ управлени€ процессом —оздать отчет.
	CLSID = IID('{2A2F00CE-536E-462D-B554-5809CDE31095}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IReportProcess,
	]
	default_interface = IReportProcess

class ReportStyle(CoClassBaseClass): # A CoClass
	# Cтиль отчета.
	CLSID = IID('{6611F953-12F2-41EF-889D-B17E643D80E2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IReportStyle,
	]
	default_interface = IReportStyle

class ReportStyleColumn(CoClassBaseClass): # A CoClass
	#  олонка стил€ отчета.
	CLSID = IID('{748767B1-4A6F-4270-8EED-9810313DE348}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IReportStyleColumn,
	]
	default_interface = IReportStyleColumn

class RestoredSurface(CoClassBaseClass): # A CoClass
	# ¬осстановленна€ поверхность.
	CLSID = IID('{F2C7D9B1-C665-4C44-AEA8-BD2C6938E5A6}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IRestoredSurface,
	]
	default_interface = IRestoredSurface

class RestoredSurfaces(CoClassBaseClass): # A CoClass
	#  оллекци€ операций восстановленна€ поверхность.
	CLSID = IID('{F1603067-E7C1-43C2-9F8F-B83238D66454}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IRestoredSurfaces,
	]
	default_interface = IRestoredSurfaces

class Rib(CoClassBaseClass): # A CoClass
	# –ебро жесткости.
	CLSID = IID('{474FF0BA-E909-468C-BD6C-9A455B420350}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IRib,
	]
	default_interface = IRib

class Ribs(CoClassBaseClass): # A CoClass
	#  оллекци€ ребер жесткости.
	CLSID = IID('{7E0D8D58-3BF2-4437-BC0D-236261C706CC}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IRibs,
	]
	default_interface = IRibs

class Rotated(CoClassBaseClass): # A CoClass
	# Ёлемент вращени€.
	CLSID = IID('{300C9F03-56EF-482F-A685-B7950A6D3457}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IRotated,
	]
	default_interface = IRotated

class RotatedSurface(CoClassBaseClass): # A CoClass
	# Ёлемент поверхность вращени€.
	CLSID = IID('{9F594D5A-30B5-415A-ACE6-D568F186D144}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IRotated,
		IRotatedSurface,
	]
	default_interface = IRotatedSurface

class Rotateds(CoClassBaseClass): # A CoClass
	#  оллекци€ элементов вращени€.
	CLSID = IID('{5298A662-3440-4253-B15B-2580CEE7C618}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IRotateds,
	]
	default_interface = IRotateds

class Rough(CoClassBaseClass): # A CoClass
	# ќбозначение шероховатости.
	CLSID = IID('{1237C011-5D75-4EBF-B53A-744AA16D7EC7}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IRough,
	]
	default_interface = IRough

class Rough3D(CoClassBaseClass): # A CoClass
	# ќбозначение 3D шероховатости.
	CLSID = IID('{48398FC6-D508-4F69-A292-840AC4C7DB69}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IRough3D,
	]
	default_interface = IRough3D

class Roughs(CoClassBaseClass): # A CoClass
	#  оллекци€ обозначений шероховатости.
	CLSID = IID('{55912A9B-6387-4946-80B9-C30D1DD30D07}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IRoughs,
	]
	default_interface = IRoughs

class Roughs3D(CoClassBaseClass): # A CoClass
	#  оллекци€ 3D обозначений шероховатости.
	CLSID = IID('{D2ED0BEB-1705-4D5F-B8C4-F0D88B49AB2D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IRoughs3D,
	]
	default_interface = IRoughs3D

class RuledSurface(CoClassBaseClass): # A CoClass
	# Ћинейчата€ поверхность.
	CLSID = IID('{76921B78-7B2A-4E77-8647-6C4B26A1CE4C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IRuledSurface,
	]
	default_interface = IRuledSurface

class RuledSurfaces(CoClassBaseClass): # A CoClass
	#  оллекци€ операций создани€ линейчатой поверхности.
	CLSID = IID('{F74E75C2-F5F9-482F-A30E-9B0DBFC7F426}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IRuledSurfaces,
	]
	default_interface = IRuledSurfaces

class Scaling3D(CoClassBaseClass): # A CoClass
	# ќпераци€ масштабировани€.
	CLSID = IID('{3D5B953B-4EFD-4C55-9433-7205028F38D6}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IScaling3D,
	]
	default_interface = IScaling3D

class Scalings3D(CoClassBaseClass): # A CoClass
	#  оллекци€ операций масштабировани€.
	CLSID = IID('{0B02FD29-1FB4-4C7B-9C0B-B63F6415C960}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IScalings3D,
	]
	default_interface = IScalings3D

class SelectionManager(CoClassBaseClass): # A CoClass
	# »нтерфейс менеджера селектированных объектов.
	CLSID = IID('{45615DBB-7842-436C-9B84-063A13C061E8}')
	coclass_sources = [
		ksSelectionMngNotify,
	]
	default_source = ksSelectionMngNotify
	coclass_interfaces = [
		IKompasAPIObject,
		ISelectionManager,
	]
	default_interface = ISelectionManager

class Serializer(CoClassBaseClass): # A CoClass
	# »нтерфейс сериализации.
	CLSID = IID('{7979B891-59D0-44BB-A643-16C340259E77}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ISerializer,
	]
	default_interface = ISerializer

class SheetFormat(CoClassBaseClass): # A CoClass
	# ‘ормат листа.
	CLSID = IID('{B872A3A8-C21F-487B-A44D-B168398E014A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ISheetFormat,
	]
	default_interface = ISheetFormat

class SheetMetalBend(CoClassBaseClass): # A CoClass
	# Ёлемент листового тела '—гиб'.
	CLSID = IID('{C84C5989-2AE1-4E61-9C29-88028C8873A2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		ISheetMetalBend,
	]
	default_interface = ISheetMetalBend

class SheetMetalBendedStraighten(CoClassBaseClass): # A CoClass
	# —огнуть/–азогнуть.
	CLSID = IID('{81ABF9FE-165D-4975-AAEA-59AE4989885B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		ISheetMetalBendedStraighten,
	]
	default_interface = ISheetMetalBendedStraighten

class SheetMetalBendedStraightens(CoClassBaseClass): # A CoClass
	#  оллекци€ элементов ѕластина.
	CLSID = IID('{2A0B422F-D150-4A4B-BE25-2AE2F97068EF}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ISheetMetalBendedStraightens,
	]
	default_interface = ISheetMetalBendedStraightens

class SheetMetalBends(CoClassBaseClass): # A CoClass
	#  оллекци€ элементов 'сгиб'.
	CLSID = IID('{E82B9381-1BA1-4CD8-8F0A-0F7AAB0777CE}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ISheetMetalBends,
	]
	default_interface = ISheetMetalBends

class SheetMetalBodies(CoClassBaseClass): # A CoClass
	#  оллекци€ элементов 'листовое тело'.
	CLSID = IID('{DC4C565F-935D-4F7A-97A5-DB4D252F6B91}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ISheetMetalBodies,
	]
	default_interface = ISheetMetalBodies

class SheetMetalBody(CoClassBaseClass): # A CoClass
	# Ёлемент 'Ћистовое тело'.
	CLSID = IID('{1301DC0F-CDF1-4EB1-90B4-D06EA2610F0B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		ISheetMetalBody,
	]
	default_interface = ISheetMetalBody

class SheetMetalClosedCorner(CoClassBaseClass): # A CoClass
	# «амыканике углов.
	CLSID = IID('{D3FA6C9C-DAC5-4E55-A1B0-5A47AD9F5B40}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		ISheetMetalClosedCorner,
	]
	default_interface = ISheetMetalClosedCorner

class SheetMetalClosedCorners(CoClassBaseClass): # A CoClass
	#  оллекци€ элементов «амыканике углов.
	CLSID = IID('{2371BFB4-D216-4BAB-8DA8-F050BDAC0554}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ISheetMetalClosedCorners,
	]
	default_interface = ISheetMetalClosedCorners

class SheetMetalCut(CoClassBaseClass): # A CoClass
	# Ёлемент листового тела '¬ырез'.
	CLSID = IID('{17CDFC21-A515-4011-BCC6-A3420219E19D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		ISheetMetalCut,
	]
	default_interface = ISheetMetalCut

class SheetMetalCuts(CoClassBaseClass): # A CoClass
	#  оллекци€ элементов '¬ырез'.
	CLSID = IID('{A0C32567-9107-4695-A9B0-4D991B58689E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ISheetMetalCuts,
	]
	default_interface = ISheetMetalCuts

class SheetMetalHole(CoClassBaseClass): # A CoClass
	# Ёлемент листового тела 'ќтверстие'.
	CLSID = IID('{6D725058-9A30-49B2-8BA6-466F2807E232}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		ISheetMetalHole,
	]
	default_interface = ISheetMetalHole

class SheetMetalHoles(CoClassBaseClass): # A CoClass
	#  оллекци€ элементов 'ќтверстие'.
	CLSID = IID('{D11BBACB-3A8A-4B3F-9DEC-C17CC9989083}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ISheetMetalHoles,
	]
	default_interface = ISheetMetalHoles

class SheetMetalJalousie(CoClassBaseClass): # A CoClass
	# ∆алюзи.
	CLSID = IID('{0F80305A-F369-4406-9519-8EC17AAA8FD6}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		ISheetMetalJalousie,
	]
	default_interface = ISheetMetalJalousie

class SheetMetalJalousies(CoClassBaseClass): # A CoClass
	#  оллекци€ элементов ∆алюзи.
	CLSID = IID('{64EDA2CF-1A52-4766-AABF-DD451EF185CB}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ISheetMetalJalousies,
	]
	default_interface = ISheetMetalJalousies

class SheetMetalLineBend(CoClassBaseClass): # A CoClass
	# Ёлемент листового тела '—гиб по линии'.
	CLSID = IID('{DCA09F8B-187B-400B-AFFA-D1EC84251EC2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		ISheetMetalLineBend,
	]
	default_interface = ISheetMetalLineBend

class SheetMetalLineBends(CoClassBaseClass): # A CoClass
	#  оллекци€ элементов '—гиб по линии'.
	CLSID = IID('{C7DF1AFE-A3EF-427A-B732-70DEFDDB351D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ISheetMetalLineBends,
	]
	default_interface = ISheetMetalLineBends

class SheetMetalPlate(CoClassBaseClass): # A CoClass
	# ѕластина.
	CLSID = IID('{0D764BEA-4BA1-440B-8930-62E675DFBB84}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		ISheetMetalPlate,
	]
	default_interface = ISheetMetalPlate

class SheetMetalPlates(CoClassBaseClass): # A CoClass
	#  оллекци€ элементов ѕластина.
	CLSID = IID('{76D215CE-F548-488C-ABD0-FDFE794F505F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ISheetMetalPlates,
	]
	default_interface = ISheetMetalPlates

class SheetMetalPressForming(CoClassBaseClass): # A CoClass
	# ќткрыта€ или закрыта€ штамповка.
	CLSID = IID('{4757F80E-8981-4ED5-ADF9-BCF14E592B6F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		ISheetMetalPressForming,
	]
	default_interface = ISheetMetalPressForming

class SheetMetalPressFormings(CoClassBaseClass): # A CoClass
	#  оллекци€ элементов ќткрыта€ или закрыта€ штамповка.
	CLSID = IID('{C974E025-46FB-4EED-9456-78876DDCC4FB}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ISheetMetalPressFormings,
	]
	default_interface = ISheetMetalPressFormings

class SheetMetalRib(CoClassBaseClass): # A CoClass
	# –ебро усилени€.
	CLSID = IID('{9DC3E672-5B83-459B-AA24-052E1C8F138A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		ISheetMetalRib,
	]
	default_interface = ISheetMetalRib

class SheetMetalRibs(CoClassBaseClass): # A CoClass
	#  оллекци€ элементов –ебро усилени€.
	CLSID = IID('{E7C8CA4E-0110-45EF-B5CF-3A3D85ABCFE3}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ISheetMetalRibs,
	]
	default_interface = ISheetMetalRibs

class SheetMetalShoulder(CoClassBaseClass): # A CoClass
	# Ѕуртик.
	CLSID = IID('{5F2DC19A-C995-40DC-A6C5-BF5CA453E1EB}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		ISheetMetalShoulder,
	]
	default_interface = ISheetMetalShoulder

class SheetMetalShoulders(CoClassBaseClass): # A CoClass
	#  оллекци€ элементов Ѕуртик.
	CLSID = IID('{FABB909B-C4BC-4632-8566-B7F358FD3FE0}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ISheetMetalShoulders,
	]
	default_interface = ISheetMetalShoulders

class SheetMetalSketchBend(CoClassBaseClass): # A CoClass
	# —гиб по эскизу.
	CLSID = IID('{4A2700F2-2A3F-443B-9140-E631AEE572DA}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		ISheetMetalSketchBend,
	]
	default_interface = ISheetMetalSketchBend

class SheetMetalSketchBends(CoClassBaseClass): # A CoClass
	#  оллекци€ элементов '—гиб по эскизу'.
	CLSID = IID('{E7BD79CF-F9EC-4EEF-8431-D0B61B54E8B6}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ISheetMetalSketchBends,
	]
	default_interface = ISheetMetalSketchBends

class Shells(CoClassBaseClass): # A CoClass
	#  оллекци€ оболочек.
	CLSID = IID('{6CFFE821-37CA-476C-9A65-6E011459752A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IShells,
	]
	default_interface = IShells

class Sketch(CoClassBaseClass): # A CoClass
	# Ёлемент 'Ёскиз'.
	CLSID = IID('{FC43EA04-ADED-4D42-883A-11073E2E68EC}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		ISketch,
	]
	default_interface = ISketch

class Sketchs(CoClassBaseClass): # A CoClass
	#  оллекци€ элементов 'Ёскиз'.
	CLSID = IID('{6F94D909-E9C7-4496-8F5B-01F0B03FF409}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ISketchs,
	]
	default_interface = ISketchs

class SpecRough3D(CoClassBaseClass): # A CoClass
	# Ќеуказанна€ шероховатость 3D.
	CLSID = IID('{86EB116E-6926-4376-AE57-8F26D823B306}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ISpecRough3D,
	]
	default_interface = ISpecRough3D

class SpecificationBaseObject(CoClassBaseClass): # A CoClass
	# Ѕазовый объект спецификации.
	CLSID = IID('{41FCDD59-6012-4E46-84DC-04934683B098}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ISpecificationObject,
		ISpecificationBaseObject,
	]
	default_interface = ISpecificationBaseObject

class SpecificationBaseObjects(CoClassBaseClass): # A CoClass
	#  оллекци€ базовых объектов спецификации.
	CLSID = IID('{E2FD0C57-3E8A-4EC2-A1E9-7BEB75E3AB7C}')
	coclass_sources = [
		ksSpecificationObjectNotify,
	]
	default_source = ksSpecificationObjectNotify
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		ISpecificationBaseObjects,
	]
	default_interface = ISpecificationBaseObjects

class SpecificationColumn(CoClassBaseClass): # A CoClass
	#  олонка объекта спецификации.
	CLSID = IID('{B5216B74-0577-41D5-9B62-C71674EC9330}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ISpecificationColumn,
	]
	default_interface = ISpecificationColumn

class SpecificationColumnItem(CoClassBaseClass): # A CoClass
	# Ёлемент колонки объекта спецификации.
	CLSID = IID('{D1A46669-AF0C-43EE-ACB6-E765D06BED4A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ISpecificationColumnItem,
	]
	default_interface = ISpecificationColumnItem

class SpecificationColumnItems(CoClassBaseClass): # A CoClass
	#  оллекци€ элементов колонки объекта спецификации.
	CLSID = IID('{86172CF0-0BED-46E0-B2E1-DD43ABF09290}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		ISpecificationColumnItems,
	]
	default_interface = ISpecificationColumnItems

class SpecificationColumnStyle(CoClassBaseClass): # A CoClass
	# —тиль колонки спецификации.
	CLSID = IID('{FF5E4685-8914-4382-97C9-C73FFED73449}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ISpecificationColumnStyle,
	]
	default_interface = ISpecificationColumnStyle

class SpecificationColumnStyles(CoClassBaseClass): # A CoClass
	#  оллекци€ стилей колонок спецификации.
	CLSID = IID('{EC3F7C56-6A3B-45AC-BF81-614B7B045BAA}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		ISpecificationColumnStyles,
	]
	default_interface = ISpecificationColumnStyles

class SpecificationColumns(CoClassBaseClass): # A CoClass
	#  оллекци€ колонок объекта спецификации.
	CLSID = IID('{A641E019-073F-49F5-97BC-A9D5FFB063D8}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		ISpecificationColumns,
	]
	default_interface = ISpecificationColumns

class SpecificationCommentObject(CoClassBaseClass): # A CoClass
	# ¬спомогательный объект спецификации.
	CLSID = IID('{6F0354E0-9AB0-47AC-80E8-10FB48C59340}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ISpecificationObject,
		ISpecificationCommentObject,
	]
	default_interface = ISpecificationCommentObject

class SpecificationCommentObjects(CoClassBaseClass): # A CoClass
	#  оллекци€ вспомогательных объектов спецификации.
	CLSID = IID('{77CFDEBF-2DF0-4B67-8825-78DF712A0497}')
	coclass_sources = [
		ksSpecificationObjectNotify,
	]
	default_source = ksSpecificationObjectNotify
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		ISpecificationCommentObjects,
	]
	default_interface = ISpecificationCommentObjects

class SpecificationDescription(CoClassBaseClass): # A CoClass
	# ќписание спецификации.
	CLSID = IID('{AD076943-BF97-4802-9D4F-D28C6C41E966}')
	coclass_sources = [
		ksSpecificationDescriptionNotify,
	]
	default_source = ksSpecificationDescriptionNotify
	coclass_interfaces = [
		IKompasAPIObject,
		ISpecificationDescription,
	]
	default_interface = ISpecificationDescription

class SpecificationDescriptions(CoClassBaseClass): # A CoClass
	#  оллекци€ описаний спецификации.
	CLSID = IID('{77168B66-5A17-4694-ADDF-848E314EE0D1}')
	coclass_sources = [
		ksSpecificationDescriptionNotify,
	]
	default_source = ksSpecificationDescriptionNotify
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		ISpecificationDescriptions,
	]
	default_interface = ISpecificationDescriptions

class SpecificationDocument(CoClassBaseClass): # A CoClass
	# »нтерфейс документа спецификации.
	CLSID = IID('{2D43B764-4F8A-47A6-AAAB-52B59CE5A08D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasDocument,
		ISpecificationDocument,
	]
	default_interface = ISpecificationDocument

class SpecificationObject(CoClassBaseClass): # A CoClass
	# ќбъект спецификации.
	CLSID = IID('{77A64147-06A5-4843-8C6F-F0E35F0ED951}')
	coclass_sources = [
		ksSpecificationObjectNotify,
	]
	default_source = ksSpecificationObjectNotify
	coclass_interfaces = [
		IKompasAPIObject,
		ISpecificationObject,
	]
	default_interface = ISpecificationObject

class SpecificationSectionStyle(CoClassBaseClass): # A CoClass
	# —тиль раздела спецификации.
	CLSID = IID('{A862B550-CAED-48FD-889D-C1507A30D241}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ISpecificationSectionStyle,
	]
	default_interface = ISpecificationSectionStyle

class SpecificationSectionStyles(CoClassBaseClass): # A CoClass
	#  оллекци€ стилей разделов спецификации.
	CLSID = IID('{25B2EDD7-FB95-4FE6-BA9C-B296531EA6C7}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		ISpecificationSectionStyles,
	]
	default_interface = ISpecificationSectionStyles

class SpecificationStyle(CoClassBaseClass): # A CoClass
	# —тиль спецификации.
	CLSID = IID('{7E9787DC-72ED-452D-8EF5-FD3D21259712}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ISpecificationStyle,
	]
	default_interface = ISpecificationStyle

class SpecificationSubsection(CoClassBaseClass): # A CoClass
	# ѕодраздел спецификации.
	CLSID = IID('{C82A6A36-CF62-43CE-A180-FA1268AE0116}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ISpecificationSubsection,
	]
	default_interface = ISpecificationSubsection

class SpecificationSubsections(CoClassBaseClass): # A CoClass
	#  оллекци€ подразделов спецификации.
	CLSID = IID('{79130306-1FB8-49FD-85D2-A6C235B91638}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		ISpecificationSubsections,
	]
	default_interface = ISpecificationSubsections

class SpecificationTuning(CoClassBaseClass): # A CoClass
	# Ќастройки спецификации.
	CLSID = IID('{C6410109-2800-476B-82EE-202C766B515D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ISpecificationTuning,
	]
	default_interface = ISpecificationTuning

class SpecificationTuningSection(CoClassBaseClass): # A CoClass
	# Ќастройка раздела спецификации.
	CLSID = IID('{03D146C9-35D2-4FBF-B051-053711FCA51B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ISpecificationTuningSection,
	]
	default_interface = ISpecificationTuningSection

class SpecificationTuningSections(CoClassBaseClass): # A CoClass
	#  оллекци€ настроек разделов спецификации.
	CLSID = IID('{B64E5FBC-99D3-4CBF-989F-0F832F3C7B5F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		ISpecificationTuningSections,
	]
	default_interface = ISpecificationTuningSections

class Spirals3D(CoClassBaseClass): # A CoClass
	#  оллекци€ спиралей 3D.
	CLSID = IID('{C926E817-2B20-48A1-AB97-F63972FBA07A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ISpirals3D,
	]
	default_interface = ISpirals3D

class Spline3D(CoClassBaseClass): # A CoClass
	# —плайн.
	CLSID = IID('{CF10FB1D-FE72-48A2-A36B-19B63594D674}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		ISpline3D,
	]
	default_interface = ISpline3D

class SplineOnSurface(CoClassBaseClass): # A CoClass
	# —плайн на поверхности.
	CLSID = IID('{FE7D22F2-17ED-4446-A031-67D67AC47F29}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		ISplineOnSurface,
	]
	default_interface = ISplineOnSurface

class Splines3D(CoClassBaseClass): # A CoClass
	#  оллекци€ элементов 'сплайн'.
	CLSID = IID('{A7899FAC-ECF5-40AC-9267-97B98B849570}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ISplines3D,
	]
	default_interface = ISplines3D

class SplinesOnSurfaces(CoClassBaseClass): # A CoClass
	#  оллекци€ сплайнов по поверхност€м.
	CLSID = IID('{83AE651B-838C-4292-9B82-20918F192841}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ISplinesOnSurfaces,
	]
	default_interface = ISplinesOnSurfaces

class SplitLine(CoClassBaseClass): # A CoClass
	# Ћини€ разъема.
	CLSID = IID('{606AD1D9-FE0C-44EF-AB97-EE65EF26BC08}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		ISplitLine,
	]
	default_interface = ISplitLine

class SplitLines(CoClassBaseClass): # A CoClass
	#  оллекци€ линий разъема.
	CLSID = IID('{452F7CD4-5C9C-48F5-956F-E07E0B1CC30D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ISplitLines,
	]
	default_interface = ISplitLines

class SpotfacingHoleParameters(CoClassBaseClass): # A CoClass
	# ќтверстие с цековкой.
	CLSID = IID('{E588E23F-6AC1-4770-B184-309B13180E18}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ISpotfacingHoleParameters,
	]
	default_interface = ISpotfacingHoleParameters

class StraightAxis(CoClassBaseClass): # A CoClass
	# ѕр€ма€ ось.
	CLSID = IID('{04728D73-A533-4C98-B0BF-92A8A02E6F4C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IBuildingAxis,
		IStraightAxis,
	]
	default_interface = IStraightAxis

class Styles(CoClassBaseClass): # A CoClass
	#  оллекци€ стилей.
	CLSID = IID('{937A14C5-7FB0-4675-80D5-AE99A73D5254}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IStyles,
	]
	default_interface = IStyles

class SurfacePatch(CoClassBaseClass): # A CoClass
	# «аплатка.
	CLSID = IID('{E61F549B-2E9E-45B6-A647-71730E3EEA49}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		ISurfacePatch,
	]
	default_interface = ISurfacePatch

class SurfacePatches(CoClassBaseClass): # A CoClass
	#  оллекци€ заплаток.
	CLSID = IID('{F77E276E-6F68-4A23-AF68-EEF29603B1AD}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ISurfacePatches,
	]
	default_interface = ISurfacePatches

class SurfaceSewer(CoClassBaseClass): # A CoClass
	# ќпераци€ сшивки поверхностей.
	CLSID = IID('{9541E720-DED1-4A04-A6F0-F11C2512C932}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		ISurfaceSewer,
	]
	default_interface = ISurfaceSewer

class SurfaceSewers(CoClassBaseClass): # A CoClass
	#  оллекци€ операций сшивки поверхностей.
	CLSID = IID('{98702E0A-C12C-49F3-A188-FBC453B4B88C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ISurfaceSewers,
	]
	default_interface = ISurfaceSewers

class SurfaceThickening(CoClassBaseClass): # A CoClass
	# ќпераци€ придани€ толщины поверхности.
	CLSID = IID('{63974EE5-CB94-44B2-8FA0-A13F4264BAF5}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		ISurfaceThickening,
	]
	default_interface = ISurfaceThickening

class SurfaceThickenings(CoClassBaseClass): # A CoClass
	#  оллукци€ операций придани€ толщины поверхности.
	CLSID = IID('{B9101BEB-76D3-44F9-8224-0005FF0E5593}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ISurfaceThickenings,
	]
	default_interface = ISurfaceThickenings

class SurfacesIntersectionCurve(CoClassBaseClass): # A CoClass
	#  рива€ пересечени€ поверхностей
	CLSID = IID('{CE94C01B-ED23-43FC-98BB-D7BD85EE0D47}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		ISurfacesIntersectionCurve,
	]
	default_interface = ISurfacesIntersectionCurve

class SurfacesIntersectionCurves(CoClassBaseClass): # A CoClass
	#  оллекци€ кривых пересечений поверхностей.
	CLSID = IID('{BDD167C1-8439-412E-8A41-4A01576CBC79}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ISurfacesIntersectionCurves,
	]
	default_interface = ISurfacesIntersectionCurves

class SystemSettings(CoClassBaseClass): # A CoClass
	# ѕарамеры системы.
	CLSID = IID('{31C4845E-508F-43F0-A57F-E7602A0E45E6}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ISystemSettings,
	]
	default_interface = ISystemSettings

class TableCell(CoClassBaseClass): # A CoClass
	# ячейка таблицы.
	CLSID = IID('{7C3AD6F0-625E-4756-8C64-A04783653A72}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ITableCell,
	]
	default_interface = ITableCell

class TablePattern(CoClassBaseClass): # A CoClass
	# »нтерфейс зеркального массива.
	CLSID = IID('{345103DC-4694-4A5E-AB0E-9652B62646CD}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IFeaturePattern,
		ITablePattern,
	]
	default_interface = ITablePattern

class Tabulator(CoClassBaseClass): # A CoClass
	# ѕозици€ табул€тора.
	CLSID = IID('{D65E21E0-4B98-401D-86B5-712E0AA56CEC}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ITabulator,
	]
	default_interface = ITabulator

class Tabulators(CoClassBaseClass): # A CoClass
	#  оллекци€ позиции табул€торов.
	CLSID = IID('{C0D50C82-511E-4554-8296-EDFF2AE66C4C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		ITabulators,
	]
	default_interface = ITabulators

class TechnicalDemand(CoClassBaseClass): # A CoClass
	# “ехнические требовани€.
	CLSID = IID('{281276EB-C88D-4F54-9C13-E6DDB8C2530D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ITechnicalDemand,
	]
	default_interface = ITechnicalDemand

class TechnicalDemand3D(CoClassBaseClass): # A CoClass
	# “ехнические требовани€ 3D.
	CLSID = IID('{848B7259-B5FE-4CF1-A5BC-6AD3704D8F2F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ITechnicalDemand3D,
	]
	default_interface = ITechnicalDemand3D

class Text(CoClassBaseClass): # A CoClass
	# “екст.
	CLSID = IID('{393AB030-F683-470C-8F4E-AA93BF3162CC}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IText,
	]
	default_interface = IText

class TextDocument(CoClassBaseClass): # A CoClass
	# »нтерфейс текстового документа.
	CLSID = IID('{F5CF81CF-F6C3-4D9C-B393-6DF532BFB45D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasDocument,
		ITextDocument,
	]
	default_interface = ITextDocument

class TextDocumentSection(CoClassBaseClass): # A CoClass
	# ѕараметры листа оформлени€.
	CLSID = IID('{40A3F4A8-E1FE-4A31-8922-B47C8097F14F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ITextDocumentSection,
	]
	default_interface = ITextDocumentSection

class TextDocumentSectionsManager(CoClassBaseClass): # A CoClass
	# »нтерфейс менеджера разделов текстового документа.
	CLSID = IID('{87749A4B-353E-4A5A-862A-F025B49609B5}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ITextDocumentSectionsManager,
	]
	default_interface = ITextDocumentSectionsManager

class TextFont(CoClassBaseClass): # A CoClass
	# ѕараметры шрифта.
	CLSID = IID('{7F52DDDE-FD30-40DF-97E9-B606A005FD14}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ITextFont,
	]
	default_interface = ITextFont

class TextItem(CoClassBaseClass): # A CoClass
	#  омпонент строки текста.
	CLSID = IID('{58CED17B-2AA8-4DF8-B215-811DDE72DF3C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ITextItem,
	]
	default_interface = ITextItem

class TextLine(CoClassBaseClass): # A CoClass
	# Cтрока текста.
	CLSID = IID('{FDFD93BC-11C4-42A9-9C8F-A4FB206274B6}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ITextLine,
	]
	default_interface = ITextLine

class TextStyle(CoClassBaseClass): # A CoClass
	# ѕараметры стил€ текста.
	CLSID = IID('{92523524-1E11-4193-AD5F-E2381555DCC6}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ITextStyle,
	]
	default_interface = ITextStyle

class TextTable(CoClassBaseClass): # A CoClass
	# “аблица в тексте тестового документа.
	CLSID = IID('{94AA20BC-33CF-40F0-B0EE-8DAD194F49D4}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ITextTable,
	]
	default_interface = ITextTable

class TexturesParam(CoClassBaseClass): # A CoClass
	# ѕараметры наложени€ текстур.
	CLSID = IID('{B0AA22BA-3F8B-4DC7-97FF-688AE467179D}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ITexturesParam,
	]
	default_interface = ITexturesParam

class Thread(CoClassBaseClass): # A CoClass
	# ”словное обозначение резьбы.
	CLSID = IID('{606263B5-E920-46FB-930E-4107CC0FBA1B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IThreadsParameters,
		IThread,
	]
	default_interface = IThread

class ThreadDialogParam(CoClassBaseClass): # A CoClass
	# ѕараметры диалога выбора стандартной резбы.
	CLSID = IID('{7AD229F8-CC73-4FF2-A611-02782B6DDC75}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IThreadDialogParam,
	]
	default_interface = IThreadDialogParam

class ThreadPattern(CoClassBaseClass): # A CoClass
	# ѕараметры стандартной резьбы.
	CLSID = IID('{A795DEC9-D9BD-4275-B553-44855BB59D71}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IThreadPattern,
	]
	default_interface = IThreadPattern

class Threads(CoClassBaseClass): # A CoClass
	#  оллекци€ условных обозначений резьбы.
	CLSID = IID('{ABA1BF7E-8138-4DC3-8EFB-A240E2B8B36E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IThreads,
	]
	default_interface = IThreads

class Tolerance3D(CoClassBaseClass): # A CoClass
	# ƒопуск формы в 3D.
	CLSID = IID('{68C4A672-8029-40E8-9203-E50046072BCF}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		ITolerance3D,
	]
	default_interface = ITolerance3D

class ToleranceRecalc(CoClassBaseClass): # A CoClass
	# ѕересчет модели.
	CLSID = IID('{B1B69577-AA04-41AC-A98E-F7DDEF40AFC0}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IToleranceRecalc,
	]
	default_interface = IToleranceRecalc

class Tolerances(CoClassBaseClass): # A CoClass
	#  оллекци€ допусков формы.
	CLSID = IID('{6E4F37E5-2F92-4A22-97EF-F5AEC374343A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		ITolerances,
	]
	default_interface = ITolerances

class Tolerances3D(CoClassBaseClass): # A CoClass
	#  оллекци€ допусков формы 3D.
	CLSID = IID('{EE1CF4A7-CB7E-42C2-854D-32EB10E28C78}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ITolerances3D,
	]
	default_interface = ITolerances3D

class TrimmedCurve(CoClassBaseClass): # A CoClass
	# ќпераци€ усеченни€ кривой.
	CLSID = IID('{46DCF819-A2E0-4D7C-BFCD-F0181F6358EF}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		ITrimmedCurve,
	]
	default_interface = ITrimmedCurve

class TrimmedCurves(CoClassBaseClass): # A CoClass
	#  оллекци€ ќпераций усеченни€ кривой
	CLSID = IID('{FFC3BE29-A93A-47AA-9733-362C120E87D6}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ITrimmedCurves,
	]
	default_interface = ITrimmedCurves

class TrimmedSurface(CoClassBaseClass): # A CoClass
	# ќпераци€ усечени€ поверхности.
	CLSID = IID('{5B3A39A9-82EB-4997-8279-6641009E9C9E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		ITrimmedSurface,
	]
	default_interface = ITrimmedSurface

class TrimmedSurfaces(CoClassBaseClass): # A CoClass
	#  оллекци€ ќпераций усечени€ поверхности.
	CLSID = IID('{7C809F8B-4BF4-42AF-B1CE-7CBEFA653730}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		ITrimmedSurfaces,
	]
	default_interface = ITrimmedSurfaces

class UnhistoredCurve3D(CoClassBaseClass): # A CoClass
	#  рива€ без истории.
	CLSID = IID('{DFA86296-3244-47D5-A306-D115FFC45DA1}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IUnhistoredCurve3D,
	]
	default_interface = IUnhistoredCurve3D

class UnhistoredCurves3D(CoClassBaseClass): # A CoClass
	#  оллекци€ кривых без истории.
	CLSID = IID('{FC9E1D2C-CE09-45E7-B95B-BF060ED6B597}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IUnhistoredCurves3D,
	]
	default_interface = IUnhistoredCurves3D

class UnionComponents(CoClassBaseClass): # A CoClass
	# ќперации объединение компонентов.
	CLSID = IID('{D8AF682B-5F03-4CCE-9E77-787A76D2B55F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IUnionComponents,
	]
	default_interface = IUnionComponents

class UnionsComponents(CoClassBaseClass): # A CoClass
	#  оллекци€ операций объединение компонентов.
	CLSID = IID('{801B8CC1-1735-4448-BE29-A16E578D9851}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IUnionsComponents,
	]
	default_interface = IUnionsComponents

class UnitMarking(CoClassBaseClass): # A CoClass
	# ќбозначение узла.
	CLSID = IID('{82BE653C-832A-4611-941F-D27BE733530B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IUnitMarking,
	]
	default_interface = IUnitMarking

class UnitMarkings(CoClassBaseClass): # A CoClass
	#  оллекци€ обозначений узлов.
	CLSID = IID('{2156B173-A854-4714-BE90-6F9ADE48E2AF}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IUnitMarkings,
	]
	default_interface = IUnitMarkings

class UnitNumber(CoClassBaseClass): # A CoClass
	# Ќомер узла.
	CLSID = IID('{515C7A0D-0120-4CC4-A5F0-67473D7D95D3}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IUnitNumber,
	]
	default_interface = IUnitNumber

class UnitNumbers(CoClassBaseClass): # A CoClass
	#  оллекци€ номеров узлов.
	CLSID = IID('{624E4C7C-156C-4FD9-8DA8-CEB9750860D1}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IUnitNumbers,
	]
	default_interface = IUnitNumbers

class UserDataStorage(CoClassBaseClass): # A CoClass
	# ќбъект пользовательского хранилища данных
	CLSID = IID('{4C7C5A7E-AD2C-4B1F-82B9-73476837E020}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IUserDataStorage,
	]
	default_interface = IUserDataStorage

class UserDataStorages(CoClassBaseClass): # A CoClass
	#  оллекци€ объектов пользовательского хранилища
	CLSID = IID('{1B57D1CF-CBEA-4DBC-9452-50E367784958}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IUserDataStorages,
	]
	default_interface = IUserDataStorages

class UserDataStoragesMng(CoClassBaseClass): # A CoClass
	# ћенеджер пользовательских хранилищ
	CLSID = IID('{13BCC1C9-C582-4616-89EE-4CD250595CC4}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IUserDataStoragesMng,
	]
	default_interface = IUserDataStoragesMng

class UserDesignationCompObj(CoClassBaseClass): # A CoClass
	# —оставной объект дл€ пользовательских объектов обозначений 3D.
	CLSID = IID('{2A26A1B6-9B08-4F28-8828-58CA667AD6DF}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IUserDesignationCompObj,
	]
	default_interface = IUserDesignationCompObj

class UserFolder(CoClassBaseClass): # A CoClass
	# »нтерфейс пользовательской директории.
	CLSID = IID('{FF3B01C1-0693-45AE-A641-8BCAAE5C99B2}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IUserFolder,
	]
	default_interface = IUserFolder

class UserFolders(CoClassBaseClass): # A CoClass
	# »нтерфейс коллекции пользовательских директорий.
	CLSID = IID('{BD6A9CD5-210A-41A7-9AA0-D07064ED460E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IUserFolders,
	]
	default_interface = IUserFolders

class UserObject3D(CoClassBaseClass): # A CoClass
	# ѕользовательский объект 3D.
	CLSID = IID('{DE5CD3C8-0B9B-4B42-A1B7-12690B74D64E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IUserObject3D,
	]
	default_interface = IUserObject3D

class UserObjects3D(CoClassBaseClass): # A CoClass
	# »нтерфейс коллекции пользовательских объектов 3D.
	CLSID = IID('{BF632568-4E7A-4D21-BA18-AE708775E92E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IModelObjects,
		IUserObjects3D,
	]
	default_interface = IUserObjects3D

class Variable7(CoClassBaseClass): # A CoClass
	# ѕараметрическа€ переменна€ модели.
	CLSID = IID('{DF582F9B-E350-4EF8-A6EA-5D8D32D43CA1}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IVariable7,
	]
	default_interface = IVariable7

class VariableTable(CoClassBaseClass): # A CoClass
	# »нтерфейс таблицы переменных .
	CLSID = IID('{B49FD0E4-26AC-48DE-AD0E-7DFA902DF2B7}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IVariableTable,
	]
	default_interface = IVariableTable

class Vector3D(CoClassBaseClass): # A CoClass
	# »нтерфейс параметров вектора 3D.
	CLSID = IID('{F47C641C-E59B-4B44-9168-A156B15FEF69}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IVector3D,
	]
	default_interface = IVector3D

class Vector3DAlongSurfaceNormalParameters(CoClassBaseClass): # A CoClass
	# »нтерфейс параметров вектора, перпендикул€рного грани в указанной точке.
	CLSID = IID('{AEFAE454-A1D8-4E22-BEA9-AF2D79DF6BE9}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IVector3DAlongSurfaceNormalParameters,
	]
	default_interface = IVector3DAlongSurfaceNormalParameters

class Vector3DBy2AnglesParameters(CoClassBaseClass): # A CoClass
	# »нтерфейс параметров вектора по двум углам.
	CLSID = IID('{65CA2B10-06A5-4684-AC5F-EB51AA0BCF28}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IVector3DBy2AnglesParameters,
	]
	default_interface = IVector3DBy2AnglesParameters

class Vector3DBy2VertexesParameters(CoClassBaseClass): # A CoClass
	# »нтерфейс параметров вектора 3D по двум вершинам.
	CLSID = IID('{4DC7A9C1-C7A0-421B-8481-62147127994B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IVector3DBy2VertexesParameters,
	]
	default_interface = IVector3DBy2VertexesParameters

class Vector3DByCoefficientsParameters(CoClassBaseClass): # A CoClass
	# »нтерфейс параметров вектора по коэффициентам.
	CLSID = IID('{2347BFD1-F8FB-4AF3-A3DE-1769AC24E158}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IVector3DByCoefficientsParameters,
	]
	default_interface = IVector3DByCoefficientsParameters

class Vector3DByCurveParameters(CoClassBaseClass): # A CoClass
	# »нтерфейс параметров вектора по базисному вектору в точке кривой (кроме пр€молинейных объектов).
	CLSID = IID('{01DED71C-8500-47A1-9879-E7D1E955152C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IVector3DByCurveParameters,
	]
	default_interface = IVector3DByCurveParameters

class Vector3DByLocalCSParameters(CoClassBaseClass): # A CoClass
	# »нтерфейс параметров вектора по углу в плоскости —  и по оси — .
	CLSID = IID('{5C0BE8E4-A07B-4315-9EBF-933172ED1540}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IVector3DByLocalCSParameters,
	]
	default_interface = IVector3DByLocalCSParameters

class Vector3DByObjectParameters(CoClassBaseClass): # A CoClass
	# »нтерфейс параметров вектора  по ребру или плоскости.
	CLSID = IID('{9F24FA16-76BE-4F5E-9DEE-DBD86FA9903E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IVector3DByObjectParameters,
	]
	default_interface = IVector3DByObjectParameters

class Vector3DByScreenNormalParameters(CoClassBaseClass): # A CoClass
	# »нтерфейс параметров вектора перпендикул€рно плоскости экрана.
	CLSID = IID('{431C567C-FA69-4DEE-B6EE-C46156A0F2B3}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IVector3DByScreenNormalParameters,
	]
	default_interface = IVector3DByScreenNormalParameters

class Vertex(CoClassBaseClass): # A CoClass
	# »нтерфейс вершины.
	CLSID = IID('{D3E2C967-AB5A-4732-A7C1-D185DF7A0ED6}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IVertex,
	]
	default_interface = IVertex

class View(CoClassBaseClass): # A CoClass
	# ¬ид.
	CLSID = IID('{ADBF03AF-24D4-4CA8-BF0E-7F6E403D4E55}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IView,
	]
	default_interface = IView

class ViewPointer(CoClassBaseClass): # A CoClass
	# —трелка взгл€да.
	CLSID = IID('{E437188E-6071-4C50-9E43-FB53E63D9EE9}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IViewPointer,
	]
	default_interface = IViewPointer

class ViewPointers(CoClassBaseClass): # A CoClass
	#  оллекци€ стрелок взгл€да.
	CLSID = IID('{A3035980-E806-4458-BF4E-4BD8BC54D592}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IViewPointers,
	]
	default_interface = IViewPointers

class Views(CoClassBaseClass): # A CoClass
	#  оллекци€ видов.
	CLSID = IID('{675CDFC9-4ED8-4689-8A15-BE9CC85CFBDC}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IViews,
	]
	default_interface = IViews

class ViewsAndLayersManager(CoClassBaseClass): # A CoClass
	# ћенеджер слоев и видов 2D документа.
	CLSID = IID('{2E3092B1-3B1A-4060-B202-B0C6F4177973}')
	coclass_sources = [
		ksViewsAndLayersManagerNotify,
	]
	default_source = ksViewsAndLayersManagerNotify
	coclass_interfaces = [
		IKompasAPIObject,
		IViewsAndLayersManager,
	]
	default_interface = IViewsAndLayersManager

class WaveLine(CoClassBaseClass): # A CoClass
	# ¬олниста€ лини€.
	CLSID = IID('{1D709F94-C02D-4DAD-8E74-B9E7434A8E62}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IWaveLine,
	]
	default_interface = IWaveLine

class WaveLines(CoClassBaseClass): # A CoClass
	#  оллекци€ волнистых линий.
	CLSID = IID('{A5B25423-BA42-47B3-B0BD-AF8CC911B767}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IKompasCollection,
		IDrawingObjects,
		IWaveLines,
	]
	default_interface = IWaveLines

class Zone(CoClassBaseClass): # A CoClass
	# «она.
	CLSID = IID('{A81F2ABB-4F55-4C82-BDC8-78D10BAA8C15}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IZone,
	]
	default_interface = IZone

class ZoneDivision(CoClassBaseClass): # A CoClass
	# –азбиение зон.
	CLSID = IID('{39E54D0F-3D65-43CD-BCA5-B8D46FE19077}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IZoneDivision,
	]
	default_interface = IZoneDivision

class ZoneDivisionParametersByPlanes(CoClassBaseClass): # A CoClass
	# ѕараметры разбиени€ зоны дл€ способа по набору плоскостей.
	CLSID = IID('{2D21B406-9933-4038-9196-5111472C5099}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IZoneDivisionParametersByPlanes,
	]
	default_interface = IZoneDivisionParametersByPlanes

class ZoneDivisionParametersRegular(CoClassBaseClass): # A CoClass
	# ѕараметры разбиени€ зоны дл€ способа –авномерно по ос€м.
	CLSID = IID('{00F35E8B-F196-4447-9546-CA9D21ECD3B7}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IZoneDivisionParametersRegular,
	]
	default_interface = IZoneDivisionParametersRegular

class ZoneParametersByBorderPoints(CoClassBaseClass): # A CoClass
	# ѕараметры зоны заданных габаритным параллелепипедом.
	CLSID = IID('{CB8A3B37-B26D-400C-AE24-1395176FDC87}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IZoneParametersByBorderPoints,
	]
	default_interface = IZoneParametersByBorderPoints

class ZoneParametersByObjects(CoClassBaseClass): # A CoClass
	# ѕараметры зоны по суммарному габариту объектов.
	CLSID = IID('{C41922E4-E46F-48C2-8EF3-3A52598AFF26}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IZoneParametersByObjects,
	]
	default_interface = IZoneParametersByObjects

class ZonesManager(CoClassBaseClass): # A CoClass
	# ћенеджер зон.
	CLSID = IID('{D45C07B1-E8FE-43F8-8396-5BDB05937155}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IZonesManager,
	]
	default_interface = IZonesManager

# This CoClass is known by the name 'KOMPAS.Application.7'
class _Application(CoClassBaseClass): # A CoClass
	# »нтерфейс приложени€  ќћѕј— 3D
	CLSID = IID('{8C3719B5-0DF2-4C12-9CA8-3AF4827A3BBB}')
	coclass_sources = [
		ksKompasObjectNotify,
	]
	default_source = ksKompasObjectNotify
	coclass_interfaces = [
		IKompasAPIObject,
		IApplication,
	]
	default_interface = IApplication

class _Arc(CoClassBaseClass): # A CoClass
	# ƒуга.
	CLSID = IID('{6BA18A3D-28A8-47C3-A97C-E324282F93FD}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IArc,
	]
	default_interface = IArc

class _Arc3D(CoClassBaseClass): # A CoClass
	# 3D дуга.
	CLSID = IID('{D26BAED3-E5C6-422F-A6E9-C5FAB91C39DB}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IArc3D,
	]
	default_interface = IArc3D

class _Attribute(CoClassBaseClass): # A CoClass
	# јттрибут.
	CLSID = IID('{AEC9CA96-A058-49DF-B566-195C82FE3576}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IAttribute,
	]
	default_interface = IAttribute

class _AttributeType(CoClassBaseClass): # A CoClass
	# ѕараметры типа атрибута.
	CLSID = IID('{949BD5DD-A728-4009-8176-222DFEC7B7FC}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IAttributeType,
	]
	default_interface = IAttributeType

class _Base(CoClassBaseClass): # A CoClass
	# ќбозначение базы.
	CLSID = IID('{700819A4-82B8-4E32-B516-DB0ED48D1D05}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IBase,
	]
	default_interface = IBase

class _Bezier(CoClassBaseClass): # A CoClass
	#  рива€ Ѕезье.
	CLSID = IID('{BC4A8E55-C5C4-405C-9B78-AA36CA5B1156}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IBezier,
	]
	default_interface = IBezier

class _Boolean(CoClassBaseClass): # A CoClass
	# Ѕулева операци€ .
	CLSID = IID('{340A4B80-C3EA-4C3D-9DA2-50BB2B4ADFEE}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IBoolean,
	]
	default_interface = IBoolean

class _Circle(CoClassBaseClass): # A CoClass
	# ќкружность.
	CLSID = IID('{9F1D8D78-C0CD-446D-877F-79330B01B8FA}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		ICircle,
	]
	default_interface = ICircle

class _Colouring(CoClassBaseClass): # A CoClass
	# «аливка.
	CLSID = IID('{E51E0641-4F58-48A1-83D8-F77355DB4E5E}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IColouring,
	]
	default_interface = IColouring

class _ColumnInfo(CoClassBaseClass): # A CoClass
	# ѕараметры столбца табличного атрибута.
	CLSID = IID('{A92D056B-1D1F-4C2B-97E9-77A5F837A68A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IColumnInfo,
	]
	default_interface = IColumnInfo

class _CopyObjectParam(CoClassBaseClass): # A CoClass
	# ѕараметры копировани€ объектов.
	CLSID = IID('{6DE8A8F7-28C6-42C7-A579-C24BDFA6B73F}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ICopyObjectParam,
	]
	default_interface = ICopyObjectParam

class _Ellipse(CoClassBaseClass): # A CoClass
	# Ёллипс.
	CLSID = IID('{209A2979-6F0C-4D27-B157-CFC74BA53F14}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IEllipse,
	]
	default_interface = IEllipse

class _EllipseArc(CoClassBaseClass): # A CoClass
	# ƒуга эллипса.
	CLSID = IID('{D79ADD45-A3FD-4376-A5E4-BD6E31C193C4}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IEllipseArc,
	]
	default_interface = IEllipseArc

class _Equidistant(CoClassBaseClass): # A CoClass
	# Ёквидистанта.
	CLSID = IID('{5EB10E2C-0D66-4AC2-9619-93B437CBECE7}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IEquidistant,
	]
	default_interface = IEquidistant

class _Hatch(CoClassBaseClass): # A CoClass
	# Ўтриховка.
	CLSID = IID('{7627E43F-0B5A-410F-9456-81E7C130AC5B}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IHatch,
	]
	default_interface = IHatch

class _Line(CoClassBaseClass): # A CoClass
	# Ћини€.
	CLSID = IID('{BCA8BBB8-CCAA-4865-918F-7D035BD9E0D4}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		ILine,
	]
	default_interface = ILine

class _Nurbs(CoClassBaseClass): # A CoClass
	# NURBS-крива€.
	CLSID = IID('{A71C349D-BAFC-498C-AC18-B372CB2FD4B1}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		INurbs,
	]
	default_interface = INurbs

class _Point(CoClassBaseClass): # A CoClass
	# 2D точка.
	CLSID = IID('{AF3188C2-CD4D-45F6-BCB2-5F44F30200D1}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IPoint,
	]
	default_interface = IPoint

class _Property(CoClassBaseClass): # A CoClass
	# —войство.
	CLSID = IID('{9699D02A-6FF3-4C25-8974-5EB527024315}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IProperty,
	]
	default_interface = IProperty

class _Raster(CoClassBaseClass): # A CoClass
	# –астровый объект.
	CLSID = IID('{ACAB7ABA-EC2F-4E2B-A742-19BB5BC4441A}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IRaster,
	]
	default_interface = IRaster

class _Rectangle(CoClassBaseClass): # A CoClass
	# ѕр€моугольник.
	CLSID = IID('{28C7998F-BB9D-4EDC-90EF-D810F40481B7}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		IRectangle,
	]
	default_interface = IRectangle

class _Shell(CoClassBaseClass): # A CoClass
	# ќболочка.
	CLSID = IID('{0290BA8F-2F72-4CBB-B7AD-D0437F6BB15C}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IModelObject,
		IShell,
	]
	default_interface = IShell

class _SpecRough(CoClassBaseClass): # A CoClass
	# Ќеуказанна€ шероховатость.
	CLSID = IID('{11BA32BC-D5A2-474B-BA91-E38EE0A2C567}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		ISpecRough,
	]
	default_interface = ISpecRough

class _Stamp(CoClassBaseClass): # A CoClass
	# Ўтамп.
	CLSID = IID('{79CB82D9-6EA1-49D2-8479-C7005D87EC77}')
	coclass_sources = [
		ksStampNotify,
	]
	default_source = ksStampNotify
	coclass_interfaces = [
		IKompasAPIObject,
		IStamp,
	]
	default_interface = IStamp

class _Tolerance(CoClassBaseClass): # A CoClass
	# ƒопуск формы.
	CLSID = IID('{BD78C015-15E7-45F6-AD21-D737007ED7C1}')
	coclass_sources = [
	]
	coclass_interfaces = [
		IKompasAPIObject,
		IDrawingObject,
		ITolerance,
	]
	default_interface = ITolerance

IAdditionalBlockSectionTuning_vtables_dispatch_ = 1
IAdditionalBlockSectionTuning_vtables_ = [
	(( 'Number' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Use' , 'PVal' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Use' , 'PVal' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IAdditionalBlockSectionTunings_vtables_dispatch_ = 1
IAdditionalBlockSectionTunings_vtables_ = [
	(( 'Item' , 'Index' , 'Result' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E04B8464-C8D6-4BAC-99B5-AE79EBBDB205}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IAdditionalBlockStyle_vtables_dispatch_ = 1
IAdditionalBlockStyle_vtables_ = [
	(( 'Name' , 'PVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Number' , 'PVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IAdditionalBlockStyles_vtables_dispatch_ = 1
IAdditionalBlockStyles_vtables_ = [
	(( 'Item' , 'Index' , 'Result' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{B2A43FA6-9BCE-4468-9662-811A6255E220}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IAdditionalBlockTuning_vtables_dispatch_ = 1
IAdditionalBlockTuning_vtables_ = [
	(( 'Number' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'DocumentName' , 'PVal' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'DocumentName' , 'PVal' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Use' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Use' , 'PVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'FirstOnSheet' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'FirstOnSheet' , 'PVal' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Sections' , 'PVal' , ), 5, (5, (), [ (16393, 10, None, "IID('{43EFA203-F956-43D6-B603-87807DDEFD0A}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'IndependentPosition' , 'PVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'IndependentPosition' , 'PVal' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'MarkOn' , 'PVal' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'MarkOn' , 'PVal' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Mark' , 'PVal' , ), 8, (8, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Mark' , 'PVal' , ), 8, (8, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
]

IAdditionalBlockTunings_vtables_dispatch_ = 1
IAdditionalBlockTunings_vtables_ = [
	(( 'Item' , 'Index' , 'Result' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{9CD5B016-9CE9-4E0A-8902-196D11360536}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IAngleDimension_vtables_dispatch_ = 1
IAngleDimension_vtables_ = [
	(( 'Xc' , 'PVal' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Xc' , 'PVal' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Yc' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Yc' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Angle1' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Angle1' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Angle2' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Angle2' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'X1' , 'PVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'X1' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'PVal' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'PVal' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'PVal' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'PVal' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'PVal' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'PVal' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'BaseObject1' , 'Object1' , ), 10, (10, (), [ (16393, 10, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'BaseObject1' , 'Object1' , ), 10, (10, (), [ (9, 1, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'BaseObject2' , 'Object1' , ), 11, (11, (), [ (16393, 10, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'BaseObject2' , 'Object1' , ), 11, (11, (), [ (9, 1, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'DimensionType' , 'PVal' , ), 12, (12, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'DimensionType' , 'PVal' , ), 12, (12, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'ShelfX' , 'PVal' , ), 13, (13, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'ShelfX' , 'PVal' , ), 13, (13, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'ShelfY' , 'PVal' , ), 14, (14, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'ShelfY' , 'PVal' , ), 14, (14, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 15, (15, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'X3' , 'PVal' , ), 16, (16, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'X3' , 'PVal' , ), 16, (16, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'Y3' , 'PVal' , ), 17, (17, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'Y3' , 'PVal' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
]

IAngleDimension3D_vtables_dispatch_ = 1
IAngleDimension3D_vtables_ = [
	(( 'Object1' , 'Object1' , ), 1, (1, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Object1' , 'Object1' , ), 1, (1, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Object2' , 'Object2' , ), 2, (2, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Object2' , 'Object2' , ), 2, (2, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Length' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Length' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'DimensionType' , 'PVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'DimensionType' , 'PVal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Inverse' , 'Result' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'GetCenterPoint' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 6, (6, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'SetCenterPoint' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 7, (7, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
]

IAngleDimensions_vtables_dispatch_ = 1
IAngleDimensions_vtables_ = [
	(( 'AngleDimension' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{0F2CE9EC-5D2A-4B21-B96A-46201C120ED1}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'DimType' , 'Value' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{0F2CE9EC-5D2A-4B21-B96A-46201C120ED1}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IAngleDimensions3D_vtables_dispatch_ = 1
IAngleDimensions3D_vtables_ = [
	(( 'AngleDimension3D' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{C22870B5-F002-4C76-9E67-46854E938824}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{C22870B5-F002-4C76-9E67-46854E938824}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IAnnotativeContainer_vtables_dispatch_ = 1
IAnnotativeContainer_vtables_ = [
	(( 'Item' , 'Index' , 'Result' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{0DBD7BCD-F78E-4BDA-BCAD-3004C60B6D06}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'Result' , ), 7001, (7001, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Type' , 'Result' , ), 7002, (7002, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{0DBD7BCD-F78E-4BDA-BCAD-3004C60B6D06}')") , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'CreateByGeomObject' , 'Obj' , 'Result' , ), 7003, (7003, (), [ (9, 1, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , 
			 (16393, 10, None, "IID('{0DBD7BCD-F78E-4BDA-BCAD-3004C60B6D06}')") , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

IAnnotativeObject_vtables_dispatch_ = 1
IAnnotativeObject_vtables_ = [
	(( 'Sign1' , 'Result' , ), 1501, (1501, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Sign1' , 'Result' , ), 1501, (1501, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Sign2' , 'Result' , ), 1502, (1502, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Sign2' , 'Result' , ), 1502, (1502, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

IApplication_vtables_dispatch_ = 1
IApplication_vtables_ = [
	(( 'Visible' , 'PVal' , ), 1, (1, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'PVal' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Documents' , 'Documents' , ), 2, (2, (), [ (16393, 10, None, "IID('{8BF39F08-5537-4910-84CE-B338E55F7BCF}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Quit' , ), 3, (3, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'CreateProcessParam' , 'PProcessParam' , ), 4, (4, (), [ (16393, 10, None, "IID('{CB5FDBC8-4DAE-4C4B-87D5-6FD1F2705C38}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'StopCurrentProcess' , 'PostMessage' , 'PDoc' , ), 5, (5, (), [ (11, 49, 'False', None) , 
			 (9, 49, '0', "IID('{5C6E318D-BD6E-4AFA-8A13-977EAA0845EF}')") , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'CreatePropertyManager' , 'NewManager' , 'PPropertyManager' , ), 6, (6, (), [ (11, 49, 'False', None) , 
			 (16393, 10, None, "IID('{34196EC3-58B2-436C-A353-427703740874}')") , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'ActiveDocument' , 'PDoc' , ), 7, (7, (), [ (9, 1, None, "IID('{5C6E318D-BD6E-4AFA-8A13-977EAA0845EF}')") , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'ActiveDocument' , 'PDoc' , ), 7, (7, (), [ (16393, 10, None, "IID('{5C6E318D-BD6E-4AFA-8A13-977EAA0845EF}')") , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'LibraryManager' , 'PRes' , ), 8, (8, (), [ (16393, 10, None, "IID('{53CDC510-99EA-4736-8542-194F4D8FB32B}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'KompasError' , 'PRes' , ), 9, (9, (), [ (16393, 10, None, "IID('{0A8B4CD1-7158-4CE6-96E0-885376F5DE1B}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Converter' , 'Library' , 'PVal' , ), 10, (10, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{642D03AB-4798-48A5-B075-3CD9AFA18554}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'CheckSum' , 'PRes' , ), 11, (11, (), [ (16393, 10, None, "IID('{2AA9F713-2328-4E8F-B996-9DFDABC67DC9}')") , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'ProgressBarIndicator' , 'PRes' , ), 12, (12, (), [ (16393, 10, None, "IID('{BE125ABA-EAB2-4A22-99D7-108C84B6DCC5}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'HideMessage' , 'PVal' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'HideMessage' , 'PVal' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'ExecuteKompasCommand' , 'CommandID' , 'PostMessage' , 'PRes' , ), 14, (14, (), [ 
			 (3, 1, None, None) , (11, 49, 'True', None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'IsKompasCommandEnable' , 'CommandID' , 'PRes' , ), 15, (15, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'IsKompasCommandCheck' , 'CommandID' , 'PRes' , ), 16, (16, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'SystemSettings' , 'PVal' , ), 17, (17, (), [ (16393, 10, None, "IID('{FFB66332-17FF-47EB-AC43-32084F8F6077}')") , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ApplicationName' , 'FullName' , 'PVal' , ), 18, (18, (), [ (11, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Math2D' , 'PRes' , ), 19, (19, (), [ (16393, 10, None, "IID('{0409EC8F-88F7-4242-81E7-965ABEAE932C}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'PrintJob' , 'PrintJob' , ), 20, (20, (), [ (16393, 10, None, "IID('{9D86880B-C004-475D-8221-B786FD5A228B}')") , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'MessageBoxEx' , 'Text' , 'Caption' , 'Flags' , 'Result' , 
			 ), 21, (21, (), [ (8, 1, None, None) , (8, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'MessageDlg' , 'Parent' , 'Text' , 'Caption' , 'Explanation' , 
			 'Flags' , 'PositiveButton' , 'NegativeButton' , 'CancelButton' , 'HelpId' , 
			 'HelpFileName' , 'Result' , ), 22, (22, (), [ (3, 1, None, None) , (8, 1, None, None) , 
			 (8, 1, None, None) , (8, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , (8, 1, None, None) , 
			 (8, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'CurrentDirectory' , 'PVal' , ), 23, (23, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'CurrentDirectory' , 'PVal' , ), 23, (23, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'LibraryStyles' , 'Path' , 'StylesType' , 'Result' , ), 24, (24, (), [ 
			 (8, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{E821AE61-FA05-4B39-8908-BD37D6D044A4}')") , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
]

IApplicationDialogs_vtables_dispatch_ = 1
IApplicationDialogs_vtables_ = [
	(( 'GetDialogParam' , 'ParamType' , 'Param' , ), 2001, (2001, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'SelectThread' , 'ParentHwnd' , 'DialogParam' , 'Result' , ), 2002, (2002, (), [ 
			 (3, 1, None, None) , (9, 1, None, "IID('{28C513EE-057A-4094-8C18-D3FD733D2C81}')") , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'ShowContentDialog' , 'ParentHwnd' , 'DialogParam' , 'Result' , ), 2003, (2003, (), [ 
			 (3, 1, None, None) , (9, 1, None, "IID('{B9362883-C8EC-4603-A6AA-7F4703AAA9D9}')") , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'WhatsWrongDlg' , 'Objs' , 'Result' , ), 2004, (2004, (), [ (12, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

IApplicationLicenseManager_vtables_dispatch_ = 1
IApplicationLicenseManager_vtables_ = [
	(( 'KompasVariant' , 'Result' , ), 8001, (8001, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'KompasModuleActive' , 'Module' , 'PVal' , ), 8002, (8002, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'KompasModuleActive' , 'Module' , 'PVal' , ), 8002, (8002, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'EnableKompasInvisible' , 'Key' , 'Signature' , 'PVal' , ), 8003, (8003, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'LibraryActive' , 'ProductNumber' , 'PVal' , ), 8004, (8004, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'LibraryActive' , 'ProductNumber' , 'PVal' , ), 8004, (8004, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'LibraryStatus' , 'ProductNumber' , 'PVal' , ), 8005, (8005, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'LibraryTrialStatus' , 'ProductNumber' , 'Result' , ), 8006, (8006, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'LibraryLocalStatus' , 'ProductNumber' , 'Result' , ), 8007, (8007, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'LibraryProductName' , 'ProductNumber' , 'Result' , ), 8008, (8008, (), [ (3, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'LibraryProductKeyInfo' , 'ProductNumber' , 'Result' , ), 8009, (8009, (), [ (3, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'RegisterLibraryNumber' , 'ProductNumber' , 'ProductNumbUnicueId' , ), 8010, (8010, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'UnRegisterLibraryNumber' , 'ProductNumbUnicueId' , 'Result' , ), 8011, (8011, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
]

IApplicationServises_vtables_dispatch_ = 1
IApplicationServises_vtables_ = [
	(( 'CheckDocumentMatchingNames' , 'Document' , 'Result' , ), 30001, (30001, (), [ (9, 1, None, "IID('{5C6E318D-BD6E-4AFA-8A13-977EAA0845EF}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'GetCurrentUniqueName' , 'Document' , 'Result' , ), 30002, (30002, (), [ (9, 1, None, "IID('{5C6E318D-BD6E-4AFA-8A13-977EAA0845EF}')") , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
]

IArc_vtables_dispatch_ = 1
IArc_vtables_ = [
	(( 'Radius' , 'PVal' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'PVal' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Xc' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Xc' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Yc' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Yc' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'X1' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'X1' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'PVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'PVal' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'PVal' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'PVal' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'PVal' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'X3' , 'PVal' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'X3' , 'PVal' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Y3' , 'PVal' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Y3' , 'PVal' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Angle1' , 'PVal' , ), 11, (11, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Angle1' , 'PVal' , ), 11, (11, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'Angle2' , 'PVal' , ), 12, (12, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'Angle2' , 'PVal' , ), 12, (12, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Result' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Result' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
]

IArc3D_vtables_dispatch_ = 1
IArc3D_vtables_ = [
	(( 'Closed' , 'Result' , ), 1, (1, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Closed' , 'Result' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'Result' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'Result' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'Result' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'Result' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'Result' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'Result' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Angle1' , 'Result' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Angle1' , 'Result' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Angle2' , 'Result' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Angle2' , 'Result' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'GetPoint' , 'Index' , 'X' , 'Y' , 'Z' , 
			 'Result' , ), 7, (7, (), [ (3, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'SetPoint' , 'Index' , 'X' , 'Y' , 'Z' , 
			 'Result' , ), 8, (8, (), [ (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'AssociationObject' , 'Index' , 'PVal' , ), 9, (9, (), [ (3, 1, None, None) , 
			 (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'AssociationObject' , 'Index' , 'PVal' , ), 9, (9, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'BuildingObject' , 'Result' , ), 10, (10, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'BuildingObject' , 'Result' , ), 10, (10, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'BuildingVectorParameters' , 'Val' , ), 11, (11, (), [ (16393, 10, None, "IID('{D51A4DCF-627D-44F5-89BA-46EF2449A212}')") , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'DirectionPointIndex' , 'Index' , ), 12, (12, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'DirectionPointIndex' , 'Index' , ), 12, (12, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'PointType' , 'Index' , 'PVal' , ), 13, (13, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'PointType' , 'Index' , 'PVal' , ), 13, (13, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'PointParameters' , 'Index' , 'Result' , ), 14, (14, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
]

IArcAxis_vtables_dispatch_ = 1
IArcAxis_vtables_ = [
	(( 'Xc' , 'PVal' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Xc' , 'PVal' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Yc' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Yc' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'X1' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'X1' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'PVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'Angle1' , 'PVal' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'Angle1' , 'PVal' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'Angle2' , 'PVal' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'Angle2' , 'PVal' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'PVal' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'PVal' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'Jut' , 'First' , 'PRes' , ), 11, (11, (), [ (11, 1, None, None) , 
			 (16393, 10, None, "IID('{5A22E024-F530-45DB-A3F2-CA0587BDA1B5}')") , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'MarkNodes' , 'PVal' , ), 12, (12, (), [ (16393, 10, None, "IID('{EB8ACD77-8008-4F89-A311-2F4712462F72}')") , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'X3' , 'PVal' , ), 13, (13, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'X3' , 'PVal' , ), 13, (13, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'Y3' , 'PVal' , ), 14, (14, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'Y3' , 'PVal' , ), 14, (14, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
]

IArcDimension_vtables_dispatch_ = 1
IArcDimension_vtables_ = [
	(( 'BaseObject' , 'Object1' , ), 1, (1, (), [ (16393, 10, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'BaseObject' , 'Object1' , ), 1, (1, (), [ (9, 1, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Xc' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Xc' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Yc' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Yc' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'X1' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'X1' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'PVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'PVal' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'PVal' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'X3' , 'PVal' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'X3' , 'PVal' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Y3' , 'PVal' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Y3' , 'PVal' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'ShelfX' , 'PVal' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'ShelfX' , 'PVal' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'ShelfY' , 'PVal' , ), 11, (11, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'ShelfY' , 'PVal' , ), 11, (11, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 12, (12, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'DimensionType' , 'PVal' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'DimensionType' , 'PVal' , ), 13, (13, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'TextPointer' , 'PVal' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'TextPointer' , 'PVal' , ), 14, (14, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
]

IArcDimensions_vtables_dispatch_ = 1
IArcDimensions_vtables_ = [
	(( 'ArcDimension' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{11487495-B18A-4877-9E85-3DC9016DF8BD}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Value' , ), 2, (2, (), [ (16393, 10, None, "IID('{11487495-B18A-4877-9E85-3DC9016DF8BD}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IArcs_vtables_dispatch_ = 1
IArcs_vtables_ = [
	(( 'Arc' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{A22DFB7E-21E0-4B28-9CA1-29B7950CF256}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{A22DFB7E-21E0-4B28-9CA1-29B7950CF256}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IArcs3D_vtables_dispatch_ = 1
IArcs3D_vtables_ = [
	(( 'Arc3D' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{79CC225F-C4F9-4721-9FE8-8AF3AA887523}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{79CC225F-C4F9-4721-9FE8-8AF3AA887523}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IAreaMeasurement3D_vtables_dispatch_ = 1
IAreaMeasurement3D_vtables_ = [
	(( 'Faces' , 'Result' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Faces' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Areas' , 'Result' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Sum' , 'Result' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IAreaMeasurements3D_vtables_dispatch_ = 1
IAreaMeasurements3D_vtables_ = [
	(( 'AreaMeasurement3D' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{02D1F030-8709-4602-8BAE-E47CE1C9C13D}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{02D1F030-8709-4602-8BAE-E47CE1C9C13D}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IAssemblyDocument_vtables_dispatch_ = 1
IAssemblyDocument_vtables_ = [
	(( 'DismantleMode' , 'PVal' , ), 2001, (2001, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'DismantleMode' , 'PVal' , ), 2001, (2001, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
]

IAssociationTable_vtables_dispatch_ = 1
IAssociationTable_vtables_ = [
	(( 'X' , 'Result' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'X' , 'Result' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'Result' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'Result' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'TablePlaceType' , 'PVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'TablePlaceType' , 'PVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Report' , 'Result' , ), 4, (4, (), [ (16393, 10, None, "IID('{37FD3C77-6032-4459-95E9-C8DFC43B85FF}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Actual' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Rebuild' , 'Result' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
]

IAssociationTables_vtables_dispatch_ = 1
IAssociationTables_vtables_ = [
	(( 'AssociationTable' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{44F0752E-E25B-4896-95B4-6376AC23A2A9}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Document' , 'Type' , 'Result' , ), 2, (2, (), [ 
			 (12, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{44F0752E-E25B-4896-95B4-6376AC23A2A9}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IAssociationView_vtables_dispatch_ = 1
IAssociationView_vtables_ = [
	(( 'SourceFileName' , 'Result' , ), 2000, (2000, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'SourceFileName' , 'Result' , ), 2000, (2000, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'ProjectionName' , 'Result' , ), 2001, (2001, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'ProjectionName' , 'Result' , ), 2001, (2001, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'ExplodedView' , 'Result' , ), 2002, (2002, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'ExplodedView' , 'Result' , ), 2002, (2002, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLayoutScaling' , ), 2003, (2003, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'ProjectionLink' , 'Result' , ), 2004, (2004, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'ProjectionLink' , 'Result' , ), 2004, (2004, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'Section' , 'Result' , ), 2005, (2005, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'Section' , 'Result' , ), 2005, (2005, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'Unfold' , 'Result' , ), 2006, (2006, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'Unfold' , 'Result' , ), 2006, (2006, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'VisibleLinesStyle' , 'Result' , ), 2007, (2007, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'VisibleLinesStyle' , 'Result' , ), 2007, (2007, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'HiddenLines' , 'Result' , ), 2008, (2008, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'HiddenLines' , 'Result' , ), 2008, (2008, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'HiddenLinesVisible' , 'Result' , ), 2009, (2009, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'HiddenLinesVisible' , 'Result' , ), 2009, (2009, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'HiddenLinesStyle' , 'Result' , ), 2010, (2010, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'HiddenLinesStyle' , 'Result' , ), 2010, (2010, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'BreakLinesVisible' , 'Result' , ), 2011, (2011, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'BreakLinesVisible' , 'Result' , ), 2011, (2011, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'BreakLinesStyle' , 'Result' , ), 2012, (2012, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'BreakLinesStyle' , 'Result' , ), 2012, (2012, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'BendLinesVisible' , 'Result' , ), 2013, (2013, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'BendLinesVisible' , 'Result' , ), 2013, (2013, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
	(( 'BendLinesStyle' , 'Result' , ), 2014, (2014, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'BendLinesStyle' , 'Result' , ), 2014, (2014, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
	(( 'BaseView' , 'Result' , ), 2015, (2015, (), [ (16393, 10, None, "IID('{21A7BA87-1C8B-41B4-8247-CDD593546F37}')") , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
	(( 'BaseView' , 'Result' , ), 2015, (2015, (), [ (9, 1, None, "IID('{21A7BA87-1C8B-41B4-8247-CDD593546F37}')") , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
	(( 'BaseObject' , 'Result' , ), 2016, (2016, (), [ (16393, 10, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
	(( 'BaseObject' , 'Result' , ), 2016, (2016, (), [ (9, 1, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
	(( 'Local' , 'Result' , ), 2017, (2017, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
	(( 'Local' , 'Result' , ), 2017, (2017, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
	(( 'CreateLocalView' , 'Contour' , 'Result' , ), 2018, (2018, (), [ (9, 1, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
	(( 'SameHatch' , 'Result' , ), 2019, (2019, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
	(( 'SameHatch' , 'Result' , ), 2019, (2019, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
	(( 'ProjectionMatrix' , 'Result' , ), 2020, (2020, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
	(( 'ProjectionMatrix' , 'Result' , ), 2020, (2020, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
	(( 'CenterLinesVisible' , 'Result' , ), 2021, (2021, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
	(( 'CenterLinesVisible' , 'Result' , ), 2021, (2021, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
	(( 'UseOcclusion' , 'Result' , ), 2022, (2022, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
	(( 'UseOcclusion' , 'Result' , ), 2022, (2022, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
]

IAssociationViewElements_vtables_dispatch_ = 1
IAssociationViewElements_vtables_ = [
	(( 'ProjectBodies' , 'Result' , ), 2500, (2500, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'ProjectBodies' , 'Result' , ), 2500, (2500, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'ProjectSurfaces' , 'Result' , ), 2501, (2501, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'ProjectSurfaces' , 'Result' , ), 2501, (2501, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'HiddenObjectsVisible' , 'Result' , ), 2502, (2502, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'HiddenObjectsVisible' , 'Result' , ), 2502, (2502, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ProjectThreads' , 'Result' , ), 2503, (2503, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'ProjectThreads' , 'Result' , ), 2503, (2503, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'ProjectDimensions' , 'Result' , ), 2504, (2504, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'ProjectDimensions' , 'Result' , ), 2504, (2504, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'ProjectRoughs' , 'Result' , ), 2505, (2505, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'ProjectRoughs' , 'Result' , ), 2505, (2505, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'ProjectBases' , 'Result' , ), 2506, (2506, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'ProjectBases' , 'Result' , ), 2506, (2506, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ProjectTolerances' , 'Result' , ), 2507, (2507, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ProjectTolerances' , 'Result' , ), 2507, (2507, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'ProjectPositions' , 'Result' , ), 2508, (2508, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'ProjectPositions' , 'Result' , ), 2508, (2508, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'ProjectLeaders' , 'Result' , ), 2509, (2509, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'ProjectLeaders' , 'Result' , ), 2509, (2509, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'ProjectMarkLeaders' , 'Result' , ), 2510, (2510, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'ProjectMarkLeaders' , 'Result' , ), 2510, (2510, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'ProjectBrandLeaders' , 'Result' , ), 2511, (2511, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ProjectBrandLeaders' , 'Result' , ), 2511, (2511, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ProjectHiddenComponents' , 'Result' , ), 2512, (2512, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'ProjectHiddenComponents' , 'Result' , ), 2512, (2512, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'ProjectStandartElements' , 'Result' , ), 2513, (2513, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ProjectStandartElements' , 'Result' , ), 2513, (2513, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'ProjectCurves' , 'Result' , ), 2514, (2514, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'ProjectCurves' , 'Result' , ), 2514, (2514, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'ProjectPoints' , 'Result' , ), 2515, (2515, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'ProjectPoints' , 'Result' , ), 2515, (2515, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'ProjectAllObjects' , 'Result' , ), 2516, (2516, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'ProjectAllObjects' , 'Result' , ), 2516, (2516, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'ProjectAllDesignations' , 'Result' , ), 2517, (2517, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'ProjectAllDesignations' , 'Result' , ), 2517, (2517, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'ProjectSpecRough' , 'Result' , ), 2518, (2518, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'ProjectSpecRough' , 'Result' , ), 2518, (2518, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'ProjectLayers' , 'Result' , ), 2519, (2519, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'ProjectLayers' , 'Result' , ), 2519, (2519, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'ProjectSketches' , 'Result' , ), 2520, (2520, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'ProjectSketches' , 'Result' , ), 2520, (2520, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'ProjectAxis' , 'Result' , ), 2521, (2521, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'ProjectAxis' , 'Result' , ), 2521, (2521, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'CreateAxis' , 'Result' , ), 2522, (2522, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'CreateAxis' , 'Result' , ), 2522, (2522, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'CreateCircularCentres' , 'Result' , ), 2523, (2523, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'CreateCircularCentres' , 'Result' , ), 2523, (2523, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'CreateLinearCentres' , 'Result' , ), 2524, (2524, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'CreateLinearCentres' , 'Result' , ), 2524, (2524, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'CreateCentresMarkers' , 'Result' , ), 2525, (2525, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'CreateCentresMarkers' , 'Result' , ), 2525, (2525, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
]

IAttachedDocument_vtables_dispatch_ = 1
IAttachedDocument_vtables_ = [
	(( 'Name' , 'PVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Transmit' , 'PVal' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Transmit' , 'PVal' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Comment' , 'PVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Comment' , 'PVal' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IAttachedDocuments_vtables_dispatch_ = 1
IAttachedDocuments_vtables_ = [
	(( 'Item' , 'Index' , 'Result' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{333E9E11-D161-49AE-9791-8BEDB58B4C78}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Name' , 'Transmit' , 'Result' , ), 1, (1, (), [ 
			 (8, 1, None, None) , (11, 1, None, None) , (16393, 10, None, "IID('{333E9E11-D161-49AE-9791-8BEDB58B4C78}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'AddDocument' , 'Name' , 'Transmit' , 'FillText' , 'EmbodimentMarking' , 
			 'Result' , ), 2, (2, (), [ (8, 1, None, None) , (11, 1, None, None) , (11, 1, None, None) , 
			 (8, 1, None, None) , (16393, 10, None, "IID('{333E9E11-D161-49AE-9791-8BEDB58B4C78}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IAttrTypeMng_vtables_dispatch_ = 1
IAttrTypeMng_vtables_ = [
	(( 'CreateAttrType' , 'Libname' , 'Res' , ), 500, (500, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{414CF83E-4FA3-42AB-BC26-6C6BBF91BB0F}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'GetAttrType' , 'AttrID' , 'Libname' , 'Res' , ), 501, (501, (), [ 
			 (5, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{414CF83E-4FA3-42AB-BC26-6C6BBF91BB0F}')") , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'ChoiceAttrTypes' , 'HWnd' , 'Libname' , 'Res' , ), 502, (502, (), [ 
			 (3, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{414CF83E-4FA3-42AB-BC26-6C6BBF91BB0F}')") , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'GetAttrTypes' , 'Libname' , 'Res' , ), 503, (503, (), [ (12, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

IAttribute_vtables_dispatch_ = 1
IAttribute_vtables_ = [
	(( 'Objects' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Objects' , 'Result' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Value' , 'RowNumb' , 'ColumnNumb' , 'Value' , ), 2, (2, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'SetValue' , 'Password' , 'RowNumb' , 'ColumnNumb' , 'Value' , 
			 'Res' , ), 3, (3, (), [ (8, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
			 (12, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Values' , 'Values' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'SetValues' , 'Password' , 'Values' , 'Res' , ), 5, (5, (), [ 
			 (8, 1, None, None) , (12, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'FlagVisible' , 'Values' , ), 6, (6, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'SetFlagVisible' , 'Password' , 'Values' , 'Res' , ), 7, (7, (), [ 
			 (8, 1, None, None) , (12, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'ColumnKey' , 'Values' , ), 8, (8, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'SetColumnKey' , 'Password' , 'Keys' , 'Res' , ), 9, (9, (), [ 
			 (8, 1, None, None) , (12, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'SetPassword' , 'OldPassword' , 'NewPassword' , 'Result' , ), 10, (10, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'AddRow' , 'Password' , 'RowNumb' , 'Result' , ), 11, (11, (), [ 
			 (8, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'DeleteRow' , 'Password' , 'RowNumb' , 'Result' , ), 12, (12, (), [ 
			 (8, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'GetKeysInfo' , 'Key1' , 'Key2' , 'Key3' , 'Key4' , 
			 'Numb' , 'Result' , ), 13, (13, (), [ (16387, 2, None, None) , (16387, 2, None, None) , 
			 (16387, 2, None, None) , (16387, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'SetKeysInfo' , 'Password' , 'Key1' , 'Key2' , 'Key3' , 
			 'Key4' , 'Result' , ), 14, (14, (), [ (8, 1, None, None) , (3, 1, None, None) , 
			 (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'AttributeType' , 'Result' , ), 15, (15, (), [ (16393, 10, None, "IID('{414CF83E-4FA3-42AB-BC26-6C6BBF91BB0F}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'RowsCount' , 'Val' , ), 16, (16, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'ColumnsCount' , 'Val' , ), 17, (17, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'Password' , 'Objects' , 'PRes' , ), 18, (18, (), [ 
			 (8, 1, None, None) , (12, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ViewEdit' , 'Parent' , 'Password' , 'ReadOnly' , 'Res' , 
			 ), 19, (19, (), [ (3, 1, None, None) , (8, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'RecordFlagVisible' , 'ColumnNumb' , 'Result' , ), 20, (20, (), [ (3, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'SetRecordFlagVisible' , 'Password' , 'ColumnNumb' , 'Values' , 'Res' , 
			 ), 21, (21, (), [ (8, 1, None, None) , (3, 1, None, None) , (12, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
]

IAttributeType_vtables_dispatch_ = 1
IAttributeType_vtables_ = [
	(( 'TypeName' , 'PVal' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'TypeName' , 'PVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'AttrType' , 'PVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'AttrType' , 'PVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'GetKeysInfo' , 'Key1' , 'Key2' , 'Key3' , 'Key4' , 
			 'Result' , ), 3, (3, (), [ (16387, 2, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , 
			 (16387, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'SetKeysInfo' , 'Key1' , 'Key2' , 'Key3' , 'Key4' , 
			 'Result' , ), 4, (4, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
			 (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'UniqueNumb' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'SetPassword' , 'OldPassword' , 'NewPassword' , 'Result' , ), 6, (6, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'ColumnInfo' , 'Index' , 'Result' , ), 7, (7, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{3FDE0F44-4459-49F3-A012-E64F9BFA454D}')") , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'AddColumn' , 'Index' , 'Type' , 'Name' , 'Result' , 
			 ), 8, (8, (), [ (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{3FDE0F44-4459-49F3-A012-E64F9BFA454D}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Update' , 'Password' , 'PRes' , ), 9, (9, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'Password' , 'PRes' , ), 10, (10, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'ViewEdit' , 'Parent' , 'Password' , 'ReadOnly' , 'Res' , 
			 ), 11, (11, (), [ (3, 1, None, None) , (8, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'RowsCount' , 'Count' , ), 12, (12, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'RowsCount' , 'Count' , ), 12, (12, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'FileName' , 'PVal' , ), 13, (13, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'ColumnsCount' , 'Count' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
]

IAuxiliaryGeomContainer_vtables_dispatch_ = 1
IAuxiliaryGeomContainer_vtables_ = [
	(( 'LocalCoordinateSystems' , 'PVal' , ), 14001, (14001, (), [ (16393, 10, None, "IID('{CC04CBF6-F0D4-456E-903A-C0B0D3551368}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Splines3D' , 'PVal' , ), 14002, (14002, (), [ (16393, 10, None, "IID('{C4BC0839-932F-4DBC-9A84-5D1FE8927351}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'PolyLines' , 'PVal' , ), 14003, (14003, (), [ (16393, 10, None, "IID('{0CF9B989-29F8-495F-9DDA-8C2CAD840BB6}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'ControlPoints' , 'PVal' , ), 14004, (14004, (), [ (16393, 10, None, "IID('{E22E30F6-05EE-4FB5-9EEB-E288234F256A}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'ConjunctivePoints' , 'PVal' , ), 14005, (14005, (), [ (16393, 10, None, "IID('{4DF343A0-8744-429D-A605-0EEABB7B5F23}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'SplitLines' , 'PVal' , ), 14006, (14006, (), [ (16393, 10, None, "IID('{986E4A45-362F-469D-A3AE-CE081B8EA93A}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'SurfacesIntersectionCurves' , 'PVal' , ), 14007, (14007, (), [ (16393, 10, None, "IID('{453E0E34-4D2D-47B2-8E95-EB05C731961D}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Equidistants3D' , 'PVal' , ), 14008, (14008, (), [ (16393, 10, None, "IID('{8B94F332-EEFD-4610-9C55-20A1F7336122}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'TrimmedCurves' , 'PVal' , ), 14009, (14009, (), [ (16393, 10, None, "IID('{E0916A32-60A7-4786-859F-C4B08402CC36}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'ConnectCurves' , 'PVal' , ), 14010, (14010, (), [ (16393, 10, None, "IID('{2E869CEE-5432-48C8-B750-5DAC8B6094D6}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'FilletCurves' , 'PVal' , ), 14011, (14011, (), [ (16393, 10, None, "IID('{E530740C-AB81-4DAA-AFB2-18E90121C8DC}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Arcs3D' , 'PVal' , ), 14012, (14012, (), [ (16393, 10, None, "IID('{0C7E7D56-F8AF-4803-9291-6351DDE52B69}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'CurveOutLines' , 'PVal' , ), 14013, (14013, (), [ (16393, 10, None, "IID('{491F65E7-F227-42FD-AB49-82487EAE7775}')") , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'CurveByLaws' , 'PVal' , ), 14014, (14014, (), [ (16393, 10, None, "IID('{7DD7BF03-5348-4345-A2A2-FC116C100B2E}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'IsoparametricCurves' , 'PVal' , ), 14015, (14015, (), [ (16393, 10, None, "IID('{6046FD5E-434A-4B9F-826F-37ECC1730AD4}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'IsoparametricCurvesSets' , 'PVal' , ), 14016, (14016, (), [ (16393, 10, None, "IID('{8A0AADFB-D56C-46BB-90E7-29BEEB42EA63}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'SplinesOnSurfaces' , 'PVal' , ), 14017, (14017, (), [ (16393, 10, None, "IID('{0E670E69-68AB-4075-9CE4-99E0A1547538}')") , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'ProjectionCurves' , 'PVal' , ), 14018, (14018, (), [ (16393, 10, None, "IID('{88819055-3211-47DD-908F-187B5826FE67}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'CurvesBy2Projectionses' , 'PVal' , ), 14019, (14019, (), [ (16393, 10, None, "IID('{8062145F-C6AC-4006-A89B-F1FC6A08FCC5}')") , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Contours3D' , 'PVal' , ), 14020, (14020, (), [ (16393, 10, None, "IID('{9C1419EE-E99E-47DD-8BA3-9132E03F1307}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'LineSegments3D' , 'PVal' , ), 14021, (14021, (), [ (16393, 10, None, "IID('{0DFA5C90-9674-4C27-9441-ACDCD46C0AF4}')") , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'UnhistoredCurves3D' , 'PVal' , ), 14022, (14022, (), [ (16393, 10, None, "IID('{AAADB4EE-6F26-4865-9A83-01E71A438621}')") , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Spirals3D' , 'PVal' , ), 14023, (14023, (), [ (16393, 10, None, "IID('{AFA7329D-E69C-4980-B3B3-8A2AA39DE979}')") , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'PointsArrsOnCurves' , 'PVal' , ), 14024, (14024, (), [ (16393, 10, None, "IID('{1A156DEF-0854-4FBD-9DC6-A6B415385C25}')") , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'PointsArrsOnSurfaces' , 'PVal' , ), 14025, (14025, (), [ (16393, 10, None, "IID('{5BD348D2-2E20-4A8D-87B7-C74EF22D0310}')") , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'PointsArrsFromFiles' , 'PVal' , ), 14026, (14026, (), [ (16393, 10, None, "IID('{7EA13B3A-7D45-4E40-A5C3-1920B53437A6}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Axes3D' , 'PVal' , ), 14027, (14027, (), [ (16393, 10, None, "IID('{F2645E37-5D28-4821-8716-86C3F0B13892}')") , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Planes3D' , 'PVal' , ), 14028, (14028, (), [ (16393, 10, None, "IID('{71B69C8B-FEAE-484F-BBDA-F7C71A94DDC7}')") , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
]

IAxes3D_vtables_dispatch_ = 1
IAxes3D_vtables_ = [
	(( 'Axis3D' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{BC67CE6C-C27B-4C72-A2BF-F850373D8E13}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Type' , 'Result' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{BC67CE6C-C27B-4C72-A2BF-F850373D8E13}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IAxis3D_vtables_dispatch_ = 1
IAxis3D_vtables_ = [
	(( 'MathCurve' , 'Result' , ), 1, (1, (), [ (16393, 10, None, "IID('{6D2112DD-F6E1-49CF-9678-89B0C6CC6ACA}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
]

IAxis3DBy2Planes_vtables_dispatch_ = 1
IAxis3DBy2Planes_vtables_ = [
	(( 'Plane1' , 'PVal' , ), 101, (101, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Plane1' , 'PVal' , ), 101, (101, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Plane2' , 'PVal' , ), 102, (102, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Plane2' , 'PVal' , ), 102, (102, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
]

IAxis3DBy2Points_vtables_dispatch_ = 1
IAxis3DBy2Points_vtables_ = [
	(( 'Point1' , 'PVal' , ), 101, (101, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Point1' , 'PVal' , ), 101, (101, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Point2' , 'PVal' , ), 102, (102, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Point2' , 'PVal' , ), 102, (102, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
]

IAxis3DByConeface_vtables_dispatch_ = 1
IAxis3DByConeface_vtables_ = [
	(( 'Face' , 'PVal' , ), 101, (101, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Face' , 'PVal' , ), 101, (101, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
]

IAxis3DByEdge_vtables_dispatch_ = 1
IAxis3DByEdge_vtables_ = [
	(( 'Edge' , 'PVal' , ), 101, (101, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Edge' , 'PVal' , ), 101, (101, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
]

IAxis3DByOperation_vtables_dispatch_ = 1
IAxis3DByOperation_vtables_ = [
	(( 'Operation' , 'PVal' , ), 101, (101, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Operation' , 'PVal' , ), 101, (101, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
]

IAxis3DByPointAndObject_vtables_dispatch_ = 1
IAxis3DByPointAndObject_vtables_ = [
	(( 'Point' , 'PVal' , ), 101, (101, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Point' , 'PVal' , ), 101, (101, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'DirectObject' , 'PVal' , ), 102, (102, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'DirectObject' , 'PVal' , ), 102, (102, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Vector3D' , 'Val' , ), 103, (103, (), [ (16393, 10, None, "IID('{D51A4DCF-627D-44F5-89BA-46EF2449A212}')") , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Parallel' , 'PVal' , ), 104, (104, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Parallel' , 'PVal' , ), 104, (104, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
]

IAxisJut_vtables_dispatch_ = 1
IAxisJut_vtables_ = [
	(( 'Length' , 'PVal' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Length' , 'PVal' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'MarkOffset' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'MarkOffset' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'BreakOffset' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'BreakOffset' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'BreakDirection' , 'PVal' , ), 4, (4, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'BreakDirection' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'MarkOn' , 'PVal' , ), 5, (5, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'MarkOn' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
]

IAxisLine_vtables_dispatch_ = 1
IAxisLine_vtables_ = [
	(( 'X1' , 'PVal' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'X1' , 'PVal' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Length' , 'PVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Length' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
]

IAxisLine3D_vtables_dispatch_ = 1
IAxisLine3D_vtables_ = [
	(( 'Object1' , 'PVal' , ), 101, (101, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Object1' , 'PVal' , ), 101, (101, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Object2' , 'PVal' , ), 102, (102, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Object2' , 'PVal' , ), 102, (102, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
]

IAxisLineParam_vtables_dispatch_ = 1
IAxisLineParam_vtables_ = [
	(( 'JutLength' , 'PVal' , ), 1501, (1501, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'JutLength' , 'PVal' , ), 1501, (1501, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'DottedLength' , 'PVal' , ), 1502, (1502, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'DottedLength' , 'PVal' , ), 1502, (1502, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Interval' , 'PVal' , ), 1503, (1503, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Interval' , 'PVal' , ), 1503, (1503, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'AutoDetectedDash' , 'PVal' , ), 1504, (1504, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'AutoDetectedDash' , 'PVal' , ), 1504, (1504, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'DashMaxLength' , 'PVal' , ), 1505, (1505, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'DashMaxLength' , 'PVal' , ), 1505, (1505, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'JutLengthModify' , 'PVal' , ), 1506, (1506, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'JutLengthModify' , 'PVal' , ), 1506, (1506, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'DottedLengthModify' , 'PVal' , ), 1507, (1507, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'DottedLengthModify' , 'PVal' , ), 1507, (1507, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'IntervalModify' , 'PVal' , ), 1508, (1508, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'IntervalModify' , 'PVal' , ), 1508, (1508, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'AutoDetectedDashModify' , 'PVal' , ), 1509, (1509, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'AutoDetectedDashModify' , 'PVal' , ), 1509, (1509, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'DashMaxLengthModify' , 'PVal' , ), 1510, (1510, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'DashMaxLengthModify' , 'PVal' , ), 1510, (1510, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'JutLength1' , 'PVal' , ), 1511, (1511, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'JutLength1' , 'PVal' , ), 1511, (1511, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'JutLength2' , 'PVal' , ), 1512, (1512, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'JutLength2' , 'PVal' , ), 1512, (1512, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
]

IAxisLines_vtables_dispatch_ = 1
IAxisLines_vtables_ = [
	(( 'AxisLine' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{5C5CAEBD-70A9-41DB-9F74-F9760D822D95}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{5C5CAEBD-70A9-41DB-9F74-F9760D822D95}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IBase_vtables_dispatch_ = 1
IBase_vtables_ = [
	(( 'BaseObject' , 'Object1' , ), 1, (1, (), [ (16393, 10, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'BaseObject' , 'Object1' , ), 1, (1, (), [ (9, 1, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'X0' , 'Result' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'X0' , 'Result' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Y0' , 'Result' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Y0' , 'Result' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'BranchX' , 'Result' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'BranchX' , 'Result' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'BranchY' , 'Result' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'BranchY' , 'Result' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'DrawType' , 'Result' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'DrawType' , 'Result' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'AutoSorted' , 'Result' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'AutoSorted' , 'Result' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Text' , 'PVal' , ), 8, (8, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
]

IBase3D_vtables_dispatch_ = 1
IBase3D_vtables_ = [
	(( 'BasePlane' , 'Val' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'BasePlane' , 'Val' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'PositionObject' , 'Val' , ), 2, (2, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'PositionObject' , 'Val' , ), 2, (2, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'GetPosition' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 3, (3, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'SetPosition' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 4, (4, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'BaseObject' , 'Object1' , ), 5, (5, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'DrawType' , 'Result' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'DrawType' , 'Result' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'AutoSorted' , 'Result' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'AutoSorted' , 'Result' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Text' , 'PVal' , ), 8, (8, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'GetBranchBeginPoint' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 9, (9, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'SetBranchBeginPoint' , 'X' , 'Y' , 'Z' , 'Object' , 
			 'Result' , ), 10, (10, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'GetBranchEndPoint' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 11, (11, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'SetBranchEndPoint' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 12, (12, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
]

IBaseLeader_vtables_dispatch_ = 1
IBaseLeader_vtables_ = [
	(( 'ArrowType' , 'Result' , ), 4001, (4001, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ArrowType' , 'Result' , ), 4001, (4001, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
]

IBaseLeader3D_vtables_dispatch_ = 1
IBaseLeader3D_vtables_ = [
	(( 'BasePlane' , 'Val' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'BasePlane' , 'Val' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'PositionObject' , 'Val' , ), 2, (2, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'PositionObject' , 'Val' , ), 2, (2, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'GetPosition' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 3, (3, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'SetPosition' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 4, (4, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'ArrowType' , 'Result' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'ArrowType' , 'Result' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
]

IBaseLineDimension3D_vtables_dispatch_ = 1
IBaseLineDimension3D_vtables_ = [
	(( 'Length' , 'PVal' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Length' , 'PVal' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Object1' , 'Object1' , ), 2, (2, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Object1' , 'Object1' , ), 2, (2, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Object2' , 'Object2' , ), 3, (3, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Object2' , 'Object2' , ), 3, (3, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IBaseManipulator_vtables_dispatch_ = 1
IBaseManipulator_vtables_ = [
	(( 'ManipulatorType' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Id' , 'PVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Id' , 'PVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Placement' , 'Result' , ), 3, (3, (), [ (16393, 10, None, "IID('{9C66DE49-529C-4678-9AF1-12710CB77804}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'UpdatePlacement' , 'Redraw' , 'Result' , ), 4, (4, (), [ (11, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'PVal' , ), 5, (5, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Active' , 'PVal' , ), 6, (6, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Active' , 'PVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Create' , 'PRes' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'PRes' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
]

IBases_vtables_dispatch_ = 1
IBases_vtables_ = [
	(( 'Base' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{01CDFD67-69EA-4289-8F42-5B01BB9BF70B}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Value' , ), 2, (2, (), [ (16393, 10, None, "IID('{01CDFD67-69EA-4289-8F42-5B01BB9BF70B}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IBases3D_vtables_dispatch_ = 1
IBases3D_vtables_ = [
	(( 'Base3D' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{D5B737F6-FD3D-49F8-B3D8-C8475E5E3D3A}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Value' , ), 2, (2, (), [ (16393, 10, None, "IID('{D5B737F6-FD3D-49F8-B3D8-C8475E5E3D3A}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IBezier_vtables_dispatch_ = 1
IBezier_vtables_ = [
	(( 'Closed' , 'Result' , ), 1, (1, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Closed' , 'Result' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'PointsCount' , 'Result' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Points' , 'AllPoints' , 'Points' , ), 3, (3, (), [ (11, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Points' , 'AllPoints' , 'Points' , ), 3, (3, (), [ (11, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'AddPoint' , 'Index' , 'XBase' , 'YBase' , 'XLeft' , 
			 'YLeft' , 'XRight' , 'YRight' , 'PVal' , ), 4, (4, (), [ 
			 (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16389, 1, None, None) , (16389, 1, None, None) , 
			 (16389, 1, None, None) , (16389, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'GetPoint' , 'Index' , 'XBase' , 'YBase' , 'XLeft' , 
			 'YLeft' , 'XRight' , 'YRight' , 'PVal' , ), 5, (5, (), [ 
			 (3, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'DeletePoint' , 'Index' , 'Result' , ), 6, (6, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Clear' , 'Result' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Result' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Result' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ReadFromFile' , 'FileName' , 'Result' , ), 9, (9, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'WriteToFile' , 'FileName' , 'Result' , ), 10, (10, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
]

IBeziers_vtables_dispatch_ = 1
IBeziers_vtables_ = [
	(( 'Bezier' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{6D51EC19-200C-47A2-AE55-0593AD746851}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{6D51EC19-200C-47A2-AE55-0593AD746851}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IBilletObsolete_vtables_dispatch_ = 1
IBilletObsolete_vtables_ = [
	(( 'FileName' , 'PVal' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'FileName' , 'PVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
]

IBilletsObsoletes_vtables_dispatch_ = 1
IBilletsObsoletes_vtables_ = [
	(( 'BilletObsolete' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{5F754BA9-1FB7-4AAE-A3F2-F36D7CF938BF}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'FileName' , 'Mirror' , 'Result' , ), 2, (2, (), [ 
			 (8, 1, None, None) , (11, 1, None, None) , (16393, 10, None, "IID('{5F754BA9-1FB7-4AAE-A3F2-F36D7CF938BF}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IBody7_vtables_dispatch_ = 1
IBody7_vtables_ = [
	(( 'GetGabarit' , 'X1' , 'Y1' , 'Z1' , 'X2' , 
			 'Y2' , 'Z2' , 'Result' , ), 1, (1, (), [ (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Marking' , 'PVal' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Marking' , 'PVal' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'PVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'PVal' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Update' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Hidden' , 'PVal' , ), 5, (5, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Hidden' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'HatchParam' , 'Result' , ), 6, (6, (), [ (16393, 10, None, "IID('{437D6587-7649-4A0C-80BB-7A6E89661839}')") , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'LayerNumber' , 'PVal' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'LayerNumber' , 'PVal' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Projected' , 'PVal' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Projected' , 'PVal' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'HiddenEx' , 'PVal' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'HiddenEx' , 'PVal' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Editable' , 'PVal' , ), 10, (10, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Editable' , 'PVal' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'UserParameters' , 'Val' , 'iParam' , ), 11, (11, (), [ (8, 1, None, None) , 
			 (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'BodyId' , 'PVal' , ), 12, (12, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'CreateSpcObjects' , 'PVal' , ), 13, (13, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'CreateSpcObjects' , 'PVal' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'BeginBodyId' , 'PVal' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'FinalBodyId' , 'PVal' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'OwnerBodyId' , 'PVal' , ), 16, (16, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
]

IBodyReposition_vtables_dispatch_ = 1
IBodyReposition_vtables_ = [
	(( 'RepositionBody' , 'Result' , ), 801, (801, (), [ (9, 1, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'RepositionBody' , 'Result' , ), 801, (801, (), [ (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'RepositionCentre' , 'PVal' , ), 802, (802, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'RepositionCentre' , 'PVal' , ), 802, (802, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'CopyBoby' , 'PVal' , ), 803, (803, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'CopyBoby' , 'PVal' , ), 803, (803, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Position' , 'PVal' , ), 804, (804, (), [ (16393, 10, None, "IID('{BA6395F5-3506-4483-8864-4EEC220AF316}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
]

IBodyRepositions_vtables_dispatch_ = 1
IBodyRepositions_vtables_ = [
	(( 'BodyReposition' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{621E42C8-0BF8-4CB8-8813-E45E2221694E}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{621E42C8-0BF8-4CB8-8813-E45E2221694E}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IBoolean_vtables_dispatch_ = 1
IBoolean_vtables_ = [
	(( 'BooleanType' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'BooleanType' , 'PVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Bodies' , 'PVal' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Bodies' , 'PVal' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IBooleans_vtables_dispatch_ = 1
IBooleans_vtables_ = [
	(( 'Boolean' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{1FE29BDF-0B8E-4E34-A7E5-418092C6C9C3}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{1FE29BDF-0B8E-4E34-A7E5-418092C6C9C3}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IBoundariesObject_vtables_dispatch_ = 1
IBoundariesObject_vtables_ = [
	(( 'Boundaries' , 'PVal' , ), 2001, (2001, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'AddBoundaries' , 'Objects' , 'DeleteSource' , 'Result' , ), 2002, (2002, (), [ 
			 (12, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Clear' , 'Result' , ), 2003, (2003, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
]

IBrace_vtables_dispatch_ = 1
IBrace_vtables_ = [
	(( 'X1' , 'PVal' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'X1' , 'PVal' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Length' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Length' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'Result' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'Result' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ShelfDirection' , 'Result' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'ShelfDirection' , 'Result' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'ShelfX' , 'Result' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'ShelfX' , 'Result' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'ShelfY' , 'Result' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'ShelfY' , 'Result' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'Result' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'Result' , ), 11, (11, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'Alignment' , 'Result' , ), 12, (12, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'Alignment' , 'Result' , ), 12, (12, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Result' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Result' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'Text' , 'PVal' , ), 14, (14, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'ShelfPoints' , 'PVal' , ), 15, (15, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'ShelfPoints' , 'PVal' , ), 15, (15, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
]

IBraces_vtables_dispatch_ = 1
IBraces_vtables_ = [
	(( 'Brace' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{7F328D28-76E9-4E04-A35C-AD60339998E4}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Value' , ), 2, (2, (), [ (16393, 10, None, "IID('{7F328D28-76E9-4E04-A35C-AD60339998E4}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IBranchs_vtables_dispatch_ = 1
IBranchs_vtables_ = [
	(( 'X0' , 'Result' , ), 5001, (5001, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'X0' , 'Result' , ), 5001, (5001, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Y0' , 'Result' , ), 5002, (5002, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Y0' , 'Result' , ), 5002, (5002, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'BranchCount' , 'Result' , ), 5003, (5003, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'BranchPoints' , 'Index' , 'PVal' , ), 5004, (5004, (), [ (3, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'BranchPoints' , 'Index' , 'PVal' , ), 5004, (5004, (), [ (3, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'BranchPointsCount' , 'Index' , 'Result' , ), 5005, (5005, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'BranchX' , 'Index' , 'PVal' , ), 5006, (5006, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'BranchX' , 'Index' , 'PVal' , ), 5006, (5006, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'BranchY' , 'Index' , 'PVal' , ), 5007, (5007, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'BranchY' , 'Index' , 'PVal' , ), 5007, (5007, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'AddBranch' , 'Index' , 'Points' , 'Result' , ), 5008, (5008, (), [ 
			 (3, 1, None, None) , (12, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'AddBranchByPoint' , 'Index' , 'X' , 'Y' , 'Result' , 
			 ), 5009, (5009, (), [ (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'DeleteBranch' , 'Index' , 'Result' , ), 5010, (5010, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
]

IBranchs3D_vtables_dispatch_ = 1
IBranchs3D_vtables_ = [
	(( 'BranchCount' , 'Result' , ), 5001, (5001, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'GetBranchBeginPoint' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 5002, (5002, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'SetBranchBeginPoint' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 5003, (5003, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'GetBranchEndPoint' , 'Index' , 'X' , 'Y' , 'Z' , 
			 'Result' , ), 5004, (5004, (), [ (3, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'SetBranchEndPoint' , 'Index' , 'X' , 'Y' , 'Z' , 
			 'Result' , ), 5005, (5005, (), [ (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'BranchPoints' , 'Index' , 'PVal' , ), 5006, (5006, (), [ (3, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'BranchPoints' , 'Index' , 'PVal' , ), 5006, (5006, (), [ (3, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'BranchPointsCount' , 'Index' , 'Result' , ), 5007, (5007, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'AddBranch' , 'Points' , 'Object' , 'Result' , ), 5008, (5008, (), [ 
			 (12, 1, None, None) , (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'AddBranchByPoint' , 'X' , 'Y' , 'Z' , 'Object' , 
			 'Result' , ), 5009, (5009, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'DeleteBranch' , 'Index' , 'Result' , ), 5010, (5010, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'BranchObject' , 'Index' , 'PVal' , ), 5011, (5011, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'BranchObjects' , 'PVal' , ), 5012, (5012, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'BranchEndPoints' , 'Points' , ), 5013, (5013, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
]

IBrandLeader_vtables_dispatch_ = 1
IBrandLeader_vtables_ = [
	(( 'TextOnBranch' , 'PVal' , ), 1501, (1501, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'TextUnderBranch' , 'PVal' , ), 1502, (1502, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Designation' , 'PVal' , ), 1503, (1503, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'Result' , ), 1504, (1504, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'Result' , ), 1504, (1504, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IBreakAngleDimension_vtables_dispatch_ = 1
IBreakAngleDimension_vtables_ = [
]

IBreakLineDimension_vtables_dispatch_ = 1
IBreakLineDimension_vtables_ = [
	(( 'X1' , 'PVal' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'X1' , 'PVal' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'X3' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'X3' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Y3' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Y3' , 'PVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'ShelfX' , 'PVal' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'ShelfX' , 'PVal' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ShelfY' , 'PVal' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'ShelfY' , 'PVal' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'BaseObject' , 'Object1' , ), 9, (9, (), [ (16393, 10, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'BaseObject' , 'Object1' , ), 9, (9, (), [ (9, 1, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
]

IBreakLineDimensions_vtables_dispatch_ = 1
IBreakLineDimensions_vtables_ = [
	(( 'BreakLineDimension' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{61164A26-855C-4220-88ED-C2BDAF49B2DB}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{61164A26-855C-4220-88ED-C2BDAF49B2DB}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IBreakRadialDimension_vtables_dispatch_ = 1
IBreakRadialDimension_vtables_ = [
	(( 'Xc' , 'PVal' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Xc' , 'PVal' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Yc' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Yc' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'BaseObject' , 'Object1' , ), 4, (4, (), [ (16393, 10, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'BaseObject' , 'Object1' , ), 4, (4, (), [ (9, 1, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'BreakLength' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'BreakLength' , 'PVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'TextOnLine' , 'PVal' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'TextOnLine' , 'PVal' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'BreakAngle' , 'PVal' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'BreakAngle' , 'PVal' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'BreakX1' , 'PVal' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'BreakX1' , 'PVal' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'BreakY1' , 'PVal' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'BreakY1' , 'PVal' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'BreakX2' , 'PVal' , ), 11, (11, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'BreakX2' , 'PVal' , ), 11, (11, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'BreakY2' , 'PVal' , ), 12, (12, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'BreakY2' , 'PVal' , ), 12, (12, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
]

IBreakRadialDimensions_vtables_dispatch_ = 1
IBreakRadialDimensions_vtables_ = [
	(( 'BreakRadialDimension' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{88491537-9E93-42F3-861C-761A75BB89D6}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Value' , ), 2, (2, (), [ (16393, 10, None, "IID('{88491537-9E93-42F3-861C-761A75BB89D6}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IBreakViewParam_vtables_dispatch_ = 1
IBreakViewParam_vtables_ = [
	(( 'AddBreakLine' , 'X1' , 'Y1' , 'X2' , 'Y2' , 
			 'Angle' , 'Index' , ), 4500, (4500, (), [ (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'DeleteBreakLine' , 'Index' , 'Result' , ), 4501, (4501, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'DeleteAllBreakLines' , 'Result' , ), 4502, (4502, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'SetBreakLinePosition' , 'Index' , 'X1' , 'Y1' , 'X2' , 
			 'Y2' , 'Result' , ), 4503, (4503, (), [ (3, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'GetBreakLinePosition' , 'Index' , 'X1' , 'Y1' , 'X2' , 
			 'Y2' , 'Result' , ), 4504, (4504, (), [ (3, 1, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'SetBreakLineParams' , 'Index' , 'Angle' , 'Clearance' , 'BreakLineType' , 
			 'Amplitude' , 'MaxAmplitude' , 'Result' , ), 4505, (4505, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'GetBreakLineParams' , 'Index' , 'Angle' , 'Clearance' , 'BreakLineType' , 
			 'Amplitude' , 'MaxAmplitude' , 'Result' , ), 4506, (4506, (), [ (3, 1, None, None) , 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16387, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'BreaksCount' , 'Result' , ), 4507, (4507, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'BreaksVisible' , 'Result' , ), 4508, (4508, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'BreaksVisible' , 'Result' , ), 4508, (4508, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IBrokenLine_vtables_dispatch_ = 1
IBrokenLine_vtables_ = [
	(( 'X1' , 'PVal' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'X1' , 'PVal' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Length' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Length' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Result' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Result' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'JutValue' , 'PVal' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'JutValue' , 'PVal' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'AutoJutValue' , 'PVal' , ), 9, (9, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'AutoJutValue' , 'PVal' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'BreaksCount' , 'PVal' , ), 10, (10, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'BreaksCount' , 'PVal' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'BreakAmplitude' , 'PVal' , ), 11, (11, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'BreakAmplitude' , 'PVal' , ), 11, (11, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'AutoBreakAmplitude' , 'PVal' , ), 12, (12, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'AutoBreakAmplitude' , 'PVal' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'BreakDisplacement' , 'PVal' , ), 13, (13, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'BreakDisplacement' , 'PVal' , ), 13, (13, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'Type1' , 'PVal' , ), 14, (14, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'Type1' , 'PVal' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
]

IBrokenLines_vtables_dispatch_ = 1
IBrokenLines_vtables_ = [
	(( 'BrokenLine' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{2482EB44-5625-4FB9-A46B-781426B02510}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{2482EB44-5625-4FB9-A46B-781426B02510}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IBuildingAxes_vtables_dispatch_ = 1
IBuildingAxes_vtables_ = [
	(( 'BuildingAxis' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{123C45BF-14DE-433E-B3B0-2FB642A9A418}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'AxisType' , 'Result' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{123C45BF-14DE-433E-B3B0-2FB642A9A418}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IBuildingAxis_vtables_dispatch_ = 1
IBuildingAxis_vtables_ = [
	(( 'DoubleMark' , 'PVal' , ), 2001, (2001, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'DoubleMark' , 'PVal' , ), 2001, (2001, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'MarkSize' , 'PVal' , ), 2002, (2002, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'MarkSize' , 'PVal' , ), 2002, (2002, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'DottedLength' , 'PVal' , ), 2003, (2003, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'DottedLength' , 'PVal' , ), 2003, (2003, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Interval' , 'PVal' , ), 2004, (2004, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Interval' , 'PVal' , ), 2004, (2004, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Stroke' , 'PVal' , ), 2005, (2005, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Stroke' , 'PVal' , ), 2005, (2005, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Text' , 'PVal' , ), 2006, (2006, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'TextBefore' , 'PVal' , ), 2007, (2007, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'TextAfter' , 'PVal' , ), 2008, (2008, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'AutoStroke' , 'PVal' , ), 2009, (2009, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'AutoStroke' , 'PVal' , ), 2009, (2009, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'GetInsertionPoints' , 'First' , 'Points' , 'Directions' , 'Nodes' , 
			 'RetVal' , ), 2010, (2010, (), [ (11, 1, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , 
			 (16396, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'GetNodeByPoint' , 'X' , 'Y' , 'Limit' , 'PVal' , 
			 ), 2011, (2011, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{5AC48E97-80B1-459F-9709-1F3F374559BE}')") , ], 1 , 1 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'AddNodeByPoint' , 'Type' , 'X' , 'Y' , 'PVal' , 
			 ), 2012, (2012, (), [ (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{5AC48E97-80B1-459F-9709-1F3F374559BE}')") , ], 1 , 1 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
]

IBuildingContainer_vtables_dispatch_ = 1
IBuildingContainer_vtables_ = [
	(( 'BuildingAxes' , 'PVal' , ), 5501, (5501, (), [ (16393, 10, None, "IID('{18072E1D-1802-41F5-A434-04BB9D3F157F}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Marks' , 'PVal' , ), 5502, (5502, (), [ (16393, 10, None, "IID('{47585370-56BD-4419-82D9-DB7CBFB1A252}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'CutUnitMarkings' , 'PVal' , ), 5503, (5503, (), [ (16393, 10, None, "IID('{23B00F94-98D3-4AD7-8827-F4088F4A9E5C}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'UnitMarkings' , 'PVal' , ), 5504, (5504, (), [ (16393, 10, None, "IID('{969AD901-FC09-47F5-94F5-1ABEB1A9C85C}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'MultiTextLeaders' , 'PVal' , ), 5505, (5505, (), [ (16393, 10, None, "IID('{233B2298-7A45-4CE1-AEF2-30B063FDB63C}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'UnitNumbers' , 'PVal' , ), 5506, (5506, (), [ (16393, 10, None, "IID('{598E649B-970C-454B-9162-1BB6C9FBFCBF}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Braces' , 'PVal' , ), 5507, (5507, (), [ (16393, 10, None, "IID('{99F27BD6-6294-45D9-AF78-A9D52E9DD799}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'BuildingCutLines' , 'PVal' , ), 5508, (5508, (), [ (16393, 10, None, "IID('{666DA5B4-324C-493C-9A91-37D9E078EB4E}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

ICellBoundaries_vtables_dispatch_ = 1
ICellBoundaries_vtables_ = [
	(( 'LineStyle' , 'Index' , 'Result' , ), 5501, (5501, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'LineStyle' , 'Index' , 'Result' , ), 5501, (5501, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'LineVisible' , 'Index' , 'Result' , ), 5502, (5502, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'LineVisible' , 'Index' , 'Result' , ), 5502, (5502, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

ICellFormat_vtables_dispatch_ = 1
ICellFormat_vtables_ = [
	(( 'TextStyle' , 'Result' , ), 4501, (4501, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'TextStyle' , 'Result' , ), 4501, (4501, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'ReadOnly' , 'Result' , ), 4502, (4502, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'ReadOnly' , 'Result' , ), 4502, (4502, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'OneLine' , 'Result' , ), 4503, (4503, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'OneLine' , 'Result' , ), 4503, (4503, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'LeftEdge' , 'Result' , ), 4504, (4504, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'LeftEdge' , 'Result' , ), 4504, (4504, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'RightEdge' , 'Result' , ), 4505, (4505, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'RightEdge' , 'Result' , ), 4505, (4505, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'SpaceBefore' , 'Result' , ), 4506, (4506, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'SpaceBefore' , 'Result' , ), 4506, (4506, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'SpaceAfter' , 'Result' , ), 4507, (4507, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'SpaceAfter' , 'Result' , ), 4507, (4507, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'Result' , ), 4508, (4508, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'Result' , ), 4508, (4508, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Result' , ), 4509, (4509, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Result' , ), 4509, (4509, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'HFormat' , 'Result' , ), 4510, (4510, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'HFormat' , 'Result' , ), 4510, (4510, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'VFormat' , 'Result' , ), 4511, (4511, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'VFormat' , 'Result' , ), 4511, (4511, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
]

ICentreMarker_vtables_dispatch_ = 1
ICentreMarker_vtables_ = [
	(( 'BaseObject' , 'Result' , ), 1, (1, (), [ (16393, 10, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'BaseObject' , 'Result' , ), 1, (1, (), [ (9, 1, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'X' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'X' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'SignType' , 'PVal' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'SignType' , 'PVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'SemiAxisAutoLength' , 'AxisType' , 'PVal' , ), 6, (6, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'SemiAxisAutoLength' , 'AxisType' , 'PVal' , ), 6, (6, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'SemiAxisLength' , 'AxisType' , 'PVal' , ), 7, (7, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'SemiAxisLength' , 'AxisType' , 'PVal' , ), 7, (7, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'CrosshairSize' , 'PVal' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'CrosshairSize' , 'PVal' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'CrosshairSizeModify' , 'PVal' , ), 9, (9, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'CrosshairSizeModify' , 'PVal' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
]

ICentreMarkers_vtables_dispatch_ = 1
ICentreMarkers_vtables_ = [
	(( 'CentreMarker' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{8FE1CADA-DE72-4A55-B303-EAF1F4748CF6}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{8FE1CADA-DE72-4A55-B303-EAF1F4748CF6}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IChamfer_vtables_dispatch_ = 1
IChamfer_vtables_ = [
	(( 'BuildingType' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'PVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'BaseObjects' , 'PVal' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'BaseObjects' , 'PVal' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Distance1' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Distance1' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Distance2' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Distance2' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Tangent' , 'PVal' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Tangent' , 'PVal' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
]

IChamfers_vtables_dispatch_ = 1
IChamfers_vtables_ = [
	(( 'Chamfer' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{59C6927B-FC6D-4494-9CDE-648276020929}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{59C6927B-FC6D-4494-9CDE-648276020929}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IChangeLeader_vtables_dispatch_ = 1
IChangeLeader_vtables_ = [
	(( 'SignType' , 'Result' , ), 1501, (1501, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'SignType' , 'Result' , ), 1501, (1501, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'SignHeight' , 'Result' , ), 1502, (1502, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'SignHeight' , 'Result' , ), 1502, (1502, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'LeaderLength' , 'Result' , ), 1503, (1503, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'LeaderLength' , 'Result' , ), 1503, (1503, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'FullLeaderLength' , 'Result' , ), 1504, (1504, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'FullLeaderLength' , 'Result' , ), 1504, (1504, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Designation' , 'PVal' , ), 1505, (1505, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ICheckSum_vtables_dispatch_ = 1
ICheckSum_vtables_ = [
	(( 'Add' , 'Value' , 'Com' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Result' , 'Value' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'StrResult' , 'StrVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'AddInterface' , 'Object' , 'Com' , 'Res' , ), 4, (4, (), [ 
			 (13, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'AddReference' , 'Object' , 'Doc' , 'Com' , 'Res' , 
			 ), 5, (5, (), [ (3, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Clear' , ), 6, (6, (), [ ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Version' , 'PVal' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Version' , 'PVal' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

IChooseBodies7_vtables_dispatch_ = 1
IChooseBodies7_vtables_ = [
	(( 'ChooseBodiesType' , 'Type' , ), 3001, (3001, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'ChooseBodiesType' , 'Type' , ), 3001, (3001, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Bodies' , 'Result' , ), 3002, (3002, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Bodies' , 'Result' , ), 3002, (3002, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

IChooseManager_vtables_dispatch_ = 1
IChooseManager_vtables_ = [
	(( 'Choose' , 'Objects' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Unchoose' , 'Objects' , 'Result' , ), 2, (2, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'UnchooseAll' , 'Result' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'IsChoosen' , 'Object' , 'Result' , ), 4, (4, (), [ (9, 1, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'ChoosenObjects' , 'Objects' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'CurrentManagerType' , 'PVal' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'CurrentManagerType' , 'PVal' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'GetManagerIndex' , 'Object' , 'PVal' , ), 7, (7, (), [ (9, 1, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

IChooseObjects_vtables_dispatch_ = 1
IChooseObjects_vtables_ = [
	(( 'ChooseType' , 'CurrentValue' , ), 3101, (3101, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'ChooseType' , 'CurrentValue' , ), 3101, (3101, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'ChoosePartsType' , 'Type' , ), 3102, (3102, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'ChoosePartsType' , 'Type' , ), 3102, (3102, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'ChooseBodies' , 'Result' , ), 3103, (3103, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ChooseBodies' , 'Result' , ), 3103, (3103, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ChooseParts' , 'Result' , ), 3104, (3104, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'ChooseParts' , 'Result' , ), 3104, (3104, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

ICircle_vtables_dispatch_ = 1
ICircle_vtables_ = [
	(( 'Xc' , 'PVal' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Xc' , 'PVal' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Yc' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Yc' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'X' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'X' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Result' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Result' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
]

ICircleAxis_vtables_dispatch_ = 1
ICircleAxis_vtables_ = [
	(( 'Xc' , 'PVal' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Xc' , 'PVal' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Yc' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Yc' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'MarkAngle' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'MarkAngle' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'MarkOn' , 'PVal' , ), 5, (5, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'MarkOn' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'BaseMarkNode' , 'PVal' , ), 6, (6, (), [ (16393, 10, None, "IID('{5AC48E97-80B1-459F-9709-1F3F374559BE}')") , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
]

ICircleCopyObjectParam_vtables_dispatch_ = 1
ICircleCopyObjectParam_vtables_ = [
	(( 'Xc' , 'Val' , ), 2001, (2001, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Xc' , 'Val' , ), 2001, (2001, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Yc' , 'Val' , ), 2002, (2002, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Yc' , 'Val' , ), 2002, (2002, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Step' , 'PVal' , ), 2003, (2003, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Step' , 'PVal' , ), 2003, (2003, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'PVal' , ), 2004, (2004, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'PVal' , ), 2004, (2004, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'ByStep' , 'PVal' , ), 2005, (2005, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'ByStep' , 'PVal' , ), 2005, (2005, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'PositiveDirection' , 'PVal' , ), 2006, (2006, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'PositiveDirection' , 'PVal' , ), 2006, (2006, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
]

ICircles_vtables_dispatch_ = 1
ICircles_vtables_ = [
	(( 'Circle' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{5C952F95-DFED-4EEE-B39A-6699EDE08676}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{5C952F95-DFED-4EEE-B39A-6699EDE08676}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ICircularCentres_vtables_dispatch_ = 1
ICircularCentres_vtables_ = [
	(( 'BaseObjects' , 'Result' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'BaseObjects' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'X0' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'X0' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Y0' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Y0' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'WithCenter' , 'PVal' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'WithCenter' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Closed' , 'PVal' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Closed' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Centres' , 'Result' , ), 6, (6, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Radiuses' , 'Result' , ), 7, (7, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'AddCentre' , 'X' , 'Y' , 'Radius' , 'Result' , 
			 ), 8, (8, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'AddCentreByObject' , 'Object' , 'Result' , ), 9, (9, (), [ (9, 1, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Clear' , 'Result' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'DeleteCentre' , 'Index' , 'Result' , ), 11, (11, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'DeleteCentreByPoint' , 'X' , 'Y' , 'Result' , ), 12, (12, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'AxisesCount' , 'WithCenter' , 'Result' , ), 13, (13, (), [ (11, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'SemiAxisAutoLength' , 'WithCenter' , 'Index' , 'AxisType' , 'PVal' , 
			 ), 14, (14, (), [ (11, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'SemiAxisAutoLength' , 'WithCenter' , 'Index' , 'AxisType' , 'PVal' , 
			 ), 14, (14, (), [ (11, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'SemiAxisLength' , 'WithCenter' , 'Index' , 'AxisType' , 'PVal' , 
			 ), 15, (15, (), [ (11, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'SemiAxisLength' , 'WithCenter' , 'Index' , 'AxisType' , 'PVal' , 
			 ), 15, (15, (), [ (11, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
]

ICircularCopyObjectParam_vtables_dispatch_ = 1
ICircularCopyObjectParam_vtables_ = [
	(( 'Radius' , 'Val' , ), 2001, (2001, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'Val' , ), 2001, (2001, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Step1' , 'PVal' , ), 2002, (2002, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Step1' , 'PVal' , ), 2002, (2002, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'StepFactor1' , 'PVal' , ), 2003, (2003, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'StepFactor1' , 'PVal' , ), 2003, (2003, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Count1' , 'Val' , ), 2004, (2004, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Count1' , 'Val' , ), 2004, (2004, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Angle2' , 'PVal' , ), 2005, (2005, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Angle2' , 'PVal' , ), 2005, (2005, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Step2' , 'PVal' , ), 2006, (2006, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Step2' , 'PVal' , ), 2006, (2006, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'StepFactor2' , 'PVal' , ), 2007, (2007, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'StepFactor2' , 'PVal' , ), 2007, (2007, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'Count2' , 'PVal' , ), 2008, (2008, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'Count2' , 'PVal' , ), 2008, (2008, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'SaveCentreCopy' , 'PVal' , ), 2009, (2009, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'SaveCentreCopy' , 'PVal' , ), 2009, (2009, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'TurnObject' , 'PVal' , ), 2010, (2010, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'TurnObject' , 'PVal' , ), 2010, (2010, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
]

ICircularPattern_vtables_dispatch_ = 1
ICircularPattern_vtables_ = [
	(( 'Axis' , 'PVal' , ), 101, (101, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Axis' , 'PVal' , ), 101, (101, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Step1' , 'PVal' , ), 102, (102, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Step1' , 'PVal' , ), 102, (102, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'BoundaryInstancesStepFactor1' , 'PVal' , ), 103, (103, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'BoundaryInstancesStepFactor1' , 'PVal' , ), 103, (103, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'Count1' , 'Val' , ), 104, (104, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'Count1' , 'Val' , ), 104, (104, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'Step2' , 'PVal' , ), 105, (105, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'Step2' , 'PVal' , ), 105, (105, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'BoundaryInstancesStepFactor2' , 'PVal' , ), 106, (106, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'BoundaryInstancesStepFactor2' , 'PVal' , ), 106, (106, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'Count2' , 'PVal' , ), 107, (107, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'Count2' , 'PVal' , ), 107, (107, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'SaveInitialOrientation' , 'PVal' , ), 108, (108, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'SaveInitialOrientation' , 'PVal' , ), 108, (108, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'ReverseDirection' , 'PVal' , ), 109, (109, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'ReverseDirection' , 'PVal' , ), 109, (109, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'SetBaseExemplarPlacement' , 'Index1' , 'Index2' , 'Result' , ), 110, (110, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'GetBaseExemplarPlacement' , 'Index1' , 'Index2' , 'Result' , ), 111, (111, (), [ 
			 (16387, 2, None, None) , (16387, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'PVal' , ), 112, (112, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'PVal' , ), 112, (112, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'StepByAxis' , 'PVal' , ), 113, (113, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'StepByAxis' , 'PVal' , ), 113, (113, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
]

ICircularsCentries_vtables_dispatch_ = 1
ICircularsCentries_vtables_ = [
	(( 'CircularCentres' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{43812A86-37CD-4C6C-AE86-78576EC7E834}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'BaseObjects' , 'AutoFindOtherObjects' , 'Closed' , 'WithCenter' , 
			 'Result' , ), 2, (2, (), [ (12, 1, None, None) , (11, 1, None, None) , (11, 1, None, None) , 
			 (11, 1, None, None) , (16393, 10, None, "IID('{43812A86-37CD-4C6C-AE86-78576EC7E834}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'AddByPoint' , 'X0' , 'Y0' , 'BaseObjects' , 'AutoFindOtherObjects' , 
			 'Closed' , 'WithCenter' , 'Result' , ), 3, (3, (), [ (5, 1, None, None) , 
			 (5, 1, None, None) , (12, 1, None, None) , (11, 1, None, None) , (11, 1, None, None) , (11, 1, None, None) , 
			 (16393, 10, None, "IID('{43812A86-37CD-4C6C-AE86-78576EC7E834}')") , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

ICloudPointsSurface_vtables_dispatch_ = 1
ICloudPointsSurface_vtables_ = [
	(( 'BuildingType' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'PVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Points' , 'Points' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Points' , 'Points' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Degree' , 'PVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Degree' , 'PVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'CloudType' , 'Type' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'CloudType' , 'Type' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'CloudLCS' , 'Object' , ), 5, (5, (), [ (16393, 10, None, "IID('{BA6395F5-3506-4483-8864-4EEC220AF316}')") , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'CloudLCS' , 'Object' , ), 5, (5, (), [ (9, 1, None, "IID('{BA6395F5-3506-4483-8864-4EEC220AF316}')") , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'FixedPosition' , 'PVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'FixedPosition' , 'PVal' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'AddPoint' , 'X' , 'Y' , 'Z' , 'PVal' , 
			 'AssociationObject' , 'Result' , ), 7, (7, (), [ (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (3, 1, None, None) , (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'PointsCount' , 'PVal' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'PointType' , 'Index' , 'PVal' , ), 9, (9, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'PointType' , 'Index' , 'PVal' , ), 9, (9, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'PointParameters' , 'Index' , 'Result' , ), 10, (10, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'AssociationObject' , 'Index' , 'PVal' , ), 11, (11, (), [ (3, 1, None, None) , 
			 (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'AssociationObject' , 'Index' , 'PVal' , ), 11, (11, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'CheckSelfIntersection' , 'PVal' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'CheckSelfIntersection' , 'PVal' , ), 12, (12, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'ClearPoints' , 'Result' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'AddPoints' , 'Points' , 'Result' , ), 14, (14, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'GetPoint' , 'Index' , 'X' , 'Y' , 'Z' , 
			 'Result' , ), 15, (15, (), [ (3, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'SetPoint' , 'Index' , 'X' , 'Y' , 'Z' , 
			 'Result' , ), 16, (16, (), [ (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'DeletePoint' , 'Index' , 'Result' , ), 17, (17, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
]

ICloudPointsSurfaces_vtables_dispatch_ = 1
ICloudPointsSurfaces_vtables_ = [
	(( 'CloudPointsSurface' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{F820F8C4-9C93-4513-8BBD-CC028DAAE41D}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{F820F8C4-9C93-4513-8BBD-CC028DAAE41D}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Load' , 'FileName' , 'Result' , ), 3, (3, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{F820F8C4-9C93-4513-8BBD-CC028DAAE41D}')") , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

ICollectionGeometry_vtables_dispatch_ = 1
ICollectionGeometry_vtables_ = [
	(( 'Geometry' , 'Objects' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Geometry' , 'Objects' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
]

ICollectionsGeometry_vtables_dispatch_ = 1
ICollectionsGeometry_vtables_ = [
	(( 'CollectionGeometry' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{CC78F834-4A97-4F69-9207-215308F0ABB0}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{CC78F834-4A97-4F69-9207-215308F0ABB0}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IColorParam7_vtables_dispatch_ = 1
IColorParam7_vtables_ = [
	(( 'UseColor' , 'PVal' , ), 6001, (6001, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'UseColor' , 'PVal' , ), 6001, (6001, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Color' , 'PVal' , ), 6002, (6002, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Color' , 'PVal' , ), 6002, (6002, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Ambient' , 'PVal' , ), 6003, (6003, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Ambient' , 'PVal' , ), 6003, (6003, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Diffuse' , 'PVal' , ), 6004, (6004, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Diffuse' , 'PVal' , ), 6004, (6004, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Specularity' , 'PVal' , ), 6005, (6005, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Specularity' , 'PVal' , ), 6005, (6005, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Shininess' , 'PVal' , ), 6006, (6006, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Shininess' , 'PVal' , ), 6006, (6006, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Transparency' , 'PVal' , ), 6007, (6007, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Transparency' , 'PVal' , ), 6007, (6007, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Emission' , 'PVal' , ), 6008, (6008, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Emission' , 'PVal' , ), 6008, (6008, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'GetAdvancedColor' , 'Color' , 'Ambient' , 'Diffuse' , 'Specularity' , 
			 'Shininess' , 'Transparency' , 'Emission' , 'Result' , ), 6009, (6009, (), [ 
			 (16387, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'SetAdvancedColor' , 'Color' , 'Ambient' , 'Diffuse' , 'Specularity' , 
			 'Shininess' , 'Transparency' , 'Emission' , 'Result' , ), 6010, (6010, (), [ 
			 (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
]

IColouring_vtables_dispatch_ = 1
IColouring_vtables_ = [
	(( 'ColouringType' , 'Result' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ColouringType' , 'Result' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Color1' , 'Result' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Color1' , 'Result' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Color2' , 'Result' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Color2' , 'Result' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Transparency1' , 'PVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Transparency1' , 'PVal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Transparency2' , 'PVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Transparency2' , 'PVal' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'GradientType' , 'Result' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'GradientType' , 'Result' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'GradientCount' , 'Result' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'GradientCount' , 'Result' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'GradientAngle' , 'Result' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'GradientAngle' , 'Result' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Xc' , 'Result' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Xc' , 'Result' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Yc' , 'Result' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Yc' , 'Result' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'GetGradations' , 'Positions' , 'Colors' , 'Transparences' , 'Interpolations' , 
			 'Result' , ), 11, (11, (), [ (16396, 2, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , 
			 (16396, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'SetGradations' , 'Positions' , 'Colors' , 'Transparences' , 'Interpolations' , 
			 'Result' , ), 12, (12, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , 
			 (12, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'AddGradation' , 'Position' , 'Color' , 'Transparency' , 'Interpolation' , 
			 'Result' , ), 13, (13, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
			 (11, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'ClearGradations' , 'Result' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'GradationsCount' , 'Result' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'GetGradation' , 'Index' , 'Position' , 'Color' , 'Transparency' , 
			 'Interpolation' , 'Result' , ), 16, (16, (), [ (3, 1, None, None) , (16387, 2, None, None) , 
			 (16387, 2, None, None) , (16387, 2, None, None) , (16395, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'SetGradation' , 'Index' , 'Position' , 'Color' , 'Transparency' , 
			 'Interpolation' , 'Result' , ), 17, (17, (), [ (3, 1, None, None) , (3, 1, None, None) , 
			 (3, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'DeleteGradation' , 'Index' , 'Result' , ), 18, (18, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'FindPosition' , 'Position' , 'Result' , ), 19, (19, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
]

IColourings_vtables_dispatch_ = 1
IColourings_vtables_ = [
	(( 'Colouring' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{1E0EF1B5-08D3-40B6-893E-3EE7E4FAEC98}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{1E0EF1B5-08D3-40B6-893E-3EE7E4FAEC98}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IColumnInfo_vtables_dispatch_ = 1
IColumnInfo_vtables_ = [
	(( 'Caption' , 'PVal' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Caption' , 'PVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ColType' , 'PVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'ColType' , 'PVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Key' , 'PVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Key' , 'PVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'DefValue' , 'PVal' , ), 4, (4, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'DefValue' , 'PVal' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'ListValue' , 'PVal' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'ListValue' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'SortListValue' , 'PVal' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'SortListValue' , 'PVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Range' , 'PVal' , ), 7, (7, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Range' , 'PVal' , ), 7, (7, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'RecordColumnInfo' , 'Index' , 'Result' , ), 8, (8, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{3FDE0F44-4459-49F3-A012-E64F9BFA454D}')") , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'AddRecordColumn' , 'Index' , 'Type' , 'Name' , 'Result' , 
			 ), 9, (9, (), [ (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{3FDE0F44-4459-49F3-A012-E64F9BFA454D}')") , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'PRes' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'RecordColumnsCount' , 'PVal' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
]

IConditionIntersect_vtables_dispatch_ = 1
IConditionIntersect_vtables_ = [
	(( 'GetIntersectPoint' , 'X' , 'Y' , 'PVal' , ), 1, (1, (), [ 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'GetCurvePoint' , 'FirstCurve' , 'X' , 'Y' , 'PVal' , 
			 ), 2, (2, (), [ (11, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'RemoteLine1Visible' , 'PVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'RemoteLine1Visible' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'RemoteLine2Visible' , 'PVal' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'RemoteLine2Visible' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Gap' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Gap' , 'PVal' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'GapValue' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'GapValue' , 'PVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'PointVisible' , 'PVal' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'PointVisible' , 'PVal' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'PointStyle' , 'PVal' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'PointStyle' , 'PVal' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'InitByObjects' , 'Curve1' , 'Curve2' , 'X1' , 'Y1' , 
			 'X2' , 'Y2' , 'RemoteLine1Visible' , 'RemoteLine2Visible' , 'Result' , 
			 ), 9, (9, (), [ (9, 1, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , (9, 1, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , (16389, 3, None, None) , (16389, 3, None, None) , 
			 (16389, 3, None, None) , (16389, 3, None, None) , (11, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'AssociationObject' , 'First' , 'PVal' , ), 10, (10, (), [ (11, 1, None, None) , 
			 (16393, 10, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
]

IConditionIntersects_vtables_dispatch_ = 1
IConditionIntersects_vtables_ = [
	(( 'ConditionIntersect' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{8E844A00-FC0A-47FA-9167-37BE6C77D032}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{8E844A00-FC0A-47FA-9167-37BE6C77D032}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IConicCurve_vtables_dispatch_ = 1
IConicCurve_vtables_ = [
	(( 'GetPoint' , 'PointIndex' , 'X' , 'Y' , 'PVal' , 
			 ), 1, (1, (), [ (3, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'SetPoint' , 'PointIndex' , 'X' , 'Y' , 'PVal' , 
			 ), 2, (2, (), [ (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Coefficient' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Coefficient' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Angle1' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Angle1' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Angle2' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Angle2' , 'PVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Result' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Result' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
]

IConicCurves_vtables_dispatch_ = 1
IConicCurves_vtables_ = [
	(( 'ConicCurve' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{83312BFE-F373-4994-B4B8-EA989FAD0E3C}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{83312BFE-F373-4994-B4B8-EA989FAD0E3C}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IConicHoleParameters_vtables_dispatch_ = 1
IConicHoleParameters_vtables_ = [
	(( 'ConicType' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ConicType' , 'PVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ConicDiameter' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'ConicDiameter' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'ConicAngle' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'ConicAngle' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IConicSpiral3D_vtables_dispatch_ = 1
IConicSpiral3D_vtables_ = [
	(( 'Diameter1' , 'PVal' , ), 101, (101, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'Diameter1' , 'PVal' , ), 101, (101, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'DiameterType1' , 'PVal' , ), 102, (102, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'DiameterType1' , 'PVal' , ), 102, (102, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'DiameterBaseObject1' , 'PVal' , ), 103, (103, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'DiameterBaseObject1' , 'PVal' , ), 103, (103, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'Diameter2' , 'PVal' , ), 104, (104, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'Diameter2' , 'PVal' , ), 104, (104, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'DiameterType2' , 'PVal' , ), 105, (105, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'DiameterType2' , 'PVal' , ), 105, (105, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'DiameterBaseObject2' , 'PVal' , ), 106, (106, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'DiameterBaseObject2' , 'PVal' , ), 106, (106, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'GeneratrixTiltAngle' , 'PVal' , ), 107, (107, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'GeneratrixTiltAngle' , 'PVal' , ), 107, (107, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'GeneratrixTiltAngleHow' , 'PVal' , ), 108, (108, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'GeneratrixTiltAngleHow' , 'PVal' , ), 108, (108, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'HeightCorrectionType' , 'PVal' , ), 15, (15, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'HeightCorrectionType' , 'PVal' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
]

IConjunctivePoint_vtables_dispatch_ = 1
IConjunctivePoint_vtables_ = [
	(( 'SetDirectionObject1' , 'NewVal' , 'Result' , ), 101, (101, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'DirectionObject1' , 'Result' , ), 102, (102, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'SetDirectionObject2' , 'NewVal' , 'Result' , ), 103, (103, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'DirectionObject2' , 'Result' , ), 104, (104, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Direction1' , 'Val' , ), 105, (105, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Direction1' , 'Val' , ), 105, (105, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Direction2' , 'Val' , ), 106, (106, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Direction2' , 'Val' , ), 106, (106, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Axis' , 'Val' , 'Result' , ), 107, (107, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'Vector3D' , 'First' , 'PVal' , ), 108, (108, (), [ (11, 1, None, None) , 
			 (16393, 10, None, "IID('{D51A4DCF-627D-44F5-89BA-46EF2449A212}')") , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'Val' , ), 109, (109, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'Val' , ), 109, (109, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'InitByMatrix3D' , 'mtr' , 'Result' , ), 110, (110, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'GetVector' , 'Axis' , 'X' , 'Y' , 'Z' , 
			 'Result' , ), 111, (111, (), [ (3, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'UseDirection2' , 'Result' , ), 112, (112, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'UseDirection2' , 'Result' , ), 112, (112, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
]

IConjunctivePoints_vtables_dispatch_ = 1
IConjunctivePoints_vtables_ = [
	(( 'ConjunctivePoint' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{BC7AD518-9599-490B-9E2B-9711FD9B8D4C}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{BC7AD518-9599-490B-9E2B-9711FD9B8D4C}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IConnectCurve_vtables_dispatch_ = 1
IConnectCurve_vtables_ = [
	(( 'Curve1' , 'PVal' , ), 1, (1, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Curve1' , 'PVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Curve2' , 'PVal' , ), 2, (2, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Curve2' , 'PVal' , ), 2, (2, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Curve1ConnectType' , 'PVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Curve1ConnectType' , 'PVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Curve2ConnectType' , 'PVal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Curve2ConnectType' , 'PVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Curve1ConnectVertex' , 'Result' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Curve1ConnectVertex' , 'Result' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Curve2ConnectVertex' , 'Result' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Curve2ConnectVertex' , 'Result' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Tension' , 'Result' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Tension' , 'Result' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
]

IConnectCurves_vtables_dispatch_ = 1
IConnectCurves_vtables_ = [
	(( 'ConnectCurve' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{C3BBE1B9-976C-45EF-805F-DDA2BA801567}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{C3BBE1B9-976C-45EF-805F-DDA2BA801567}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IContentDialogParam_vtables_dispatch_ = 1
IContentDialogParam_vtables_ = [
	(( 'Title' , 'PVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Title' , 'PVal' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'UpperCaseTitle' , 'PVal' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'UpperCaseTitle' , 'PVal' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Resizable' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Resizable' , 'PVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'PositiveButton' , 'PVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'PositiveButton' , 'PVal' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'NegativeButton' , 'PVal' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'NegativeButton' , 'PVal' , ), 5, (5, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'CancelButton' , 'PVal' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'CancelButton' , 'PVal' , ), 6, (6, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'AdditionalButton' , 'PVal' , ), 7, (7, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'AdditionalButton' , 'PVal' , ), 7, (7, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'HelpId' , 'PVal' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'HelpId' , 'PVal' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'HelpFileName' , 'PVal' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'HelpFileName' , 'PVal' , ), 9, (9, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'CheckBoxTitle' , 'PVal' , ), 10, (10, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'CheckBoxTitle' , 'PVal' , ), 10, (10, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'CheckBoxChecked' , 'PVal' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'CheckBoxChecked' , 'PVal' , ), 11, (11, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'PVal' , ), 12, (12, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'PVal' , ), 12, (12, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'PVal' , ), 13, (13, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'PVal' , ), 13, (13, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'MinWidth' , 'PVal' , ), 14, (14, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'MinWidth' , 'PVal' , ), 14, (14, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'MinHeight' , 'PVal' , ), 15, (15, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'MinHeight' , 'PVal' , ), 15, (15, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'MaxWidth' , 'PVal' , ), 16, (16, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'MaxWidth' , 'PVal' , ), 16, (16, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'MaxHeight' , 'PVal' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'MaxHeight' , 'PVal' , ), 17, (17, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'AddLeftToolButton' , 'Header' , 'HeaderVisible' , 'CommandID' , 'IconId' , 
			 'IconFont' , 'ButtonType' , 'Result' , ), 18, (18, (), [ (8, 1, None, None) , 
			 (11, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'AddRightToolButton' , 'Header' , 'HeaderVisible' , 'CommandID' , 'IconId' , 
			 'IconFont' , 'ButtonType' , 'Result' , ), 19, (19, (), [ (8, 1, None, None) , 
			 (11, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'AddLeftSeparator' , 'Result' , ), 20, (20, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'AddRightSeparator' , 'Result' , ), 21, (21, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
]

IContour_vtables_dispatch_ = 1
IContour_vtables_ = [
	(( 'Closed' , 'Result' , ), 2001, (2001, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Closed' , 'Result' , ), 2001, (2001, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'AddSegment' , 'Type' , 'Result' , ), 2002, (2002, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Segment' , 'Index' , 'Result' , ), 2003, (2003, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'CopyCurve' , 'Curve' , 'DeleteSource' , 'Result' , ), 2004, (2004, (), [ 
			 (9, 1, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'PVal' , ), 2005, (2005, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'TmpObjects' , 'Result' , ), 2006, (2006, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'CopySegments' , 'Val' , 'DeleteSource' , 'Result' , ), 2007, (2007, (), [ 
			 (12, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Clear' , 'Result' , ), 2008, (2008, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'RemoveContourGaps' , 'Accuracy' , 'CanInsert' , 'CanReplace' , 'Result' , 
			 ), 2009, (2009, (), [ (5, 1, None, None) , (11, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
]

IContour3D_vtables_dispatch_ = 1
IContour3D_vtables_ = [
	(( 'Contour3DType' , 'PVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Contour3DType' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Edges' , 'PVal' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Edges' , 'PVal' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'CutMode' , 'PVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'CutMode' , 'PVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'EdgesVisibility' , 'PVal' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'EdgesVisibility' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'AddEdge' , 'Object' , 'PVal' , ), 6, (6, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'RemoveEdge' , 'Index' , 'Result' , ), 7, (7, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'EdgesCount' , 'PVal' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'PVal' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'PVal' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Equidistant' , 'Result' , ), 10, (10, (), [ (16393, 10, None, "IID('{C25DDBF4-3CC1-467D-B996-E30ED4D529B6}')") , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'PointsCount' , 'Count' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'VarRadius' , 'PointNum' , 'PVal' , ), 12, (12, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'VarRadius' , 'PointNum' , 'PVal' , ), 12, (12, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'DelVarRadius' , 'PointNum' , 'Result' , ), 13, (13, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'GetIntersectionPoint' , 'PointNum' , 'X' , 'Y' , 'Z' , 
			 'Result' , ), 14, (14, (), [ (3, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
]

IContourArc_vtables_dispatch_ = 1
IContourArc_vtables_ = [
	(( 'Radius' , 'PVal' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'PVal' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Xc' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Xc' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Yc' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Yc' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'X1' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'X1' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'PVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'PVal' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'PVal' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'PVal' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'PVal' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'X3' , 'PVal' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'X3' , 'PVal' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Y3' , 'PVal' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Y3' , 'PVal' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Angle1' , 'PVal' , ), 11, (11, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Angle1' , 'PVal' , ), 11, (11, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Angle2' , 'PVal' , ), 12, (12, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Angle2' , 'PVal' , ), 12, (12, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
]

IContourLineSegment_vtables_dispatch_ = 1
IContourLineSegment_vtables_ = [
	(( 'X1' , 'PVal' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'X1' , 'PVal' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Length' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Length' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
]

IContourSegment_vtables_dispatch_ = 1
IContourSegment_vtables_ = [
	(( 'SegmentType' , 'Result' , ), 2001, (2001, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Curve2D' , 'Result' , ), 2002, (2002, (), [ (16393, 10, None, "IID('{65C82884-C41B-47A1-8C07-E8820D6718EA}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IContours3D_vtables_dispatch_ = 1
IContours3D_vtables_ = [
	(( 'Contour3D' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{05FD7844-EA39-497D-B00B-7A1154830524}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{05FD7844-EA39-497D-B00B-7A1154830524}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IControlPoint_vtables_dispatch_ = 1
IControlPoint_vtables_ = [
]

IControlPoints_vtables_dispatch_ = 1
IControlPoints_vtables_ = [
	(( 'ControlPoint' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{39F4FC2C-99E7-411B-9036-9C756A71E211}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{39F4FC2C-99E7-411B-9036-9C756A71E211}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IConverter_vtables_dispatch_ = 1
IConverter_vtables_ = [
	(( 'ConverterParameters' , 'Command' , 'PVal' , ), 1, (1, (), [ (3, 1, None, None) , 
			 (16397, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'GetFilter' , 'DocType' , 'SaveAs' , 'Command' , 'Result' , 
			 ), 2, (2, (), [ (3, 1, None, None) , (11, 1, None, None) , (16387, 2, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Convert' , 'InputFile' , 'Outfile' , 'Command' , 'ShowParam' , 
			 'Result' , ), 3, (3, (), [ (8, 1, None, None) , (8, 1, None, None) , (3, 1, None, None) , 
			 (11, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'VisualEditConvertParam' , 'ParentHwnd' , 'Command' , 'Val' , ), 4, (4, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

ICopiesGeometry_vtables_dispatch_ = 1
ICopiesGeometry_vtables_ = [
	(( 'CopyGeometry' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{63E5636B-0661-4635-A902-6E8727E75D93}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{63E5636B-0661-4635-A902-6E8727E75D93}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ICopyGeometry_vtables_dispatch_ = 1
ICopyGeometry_vtables_ = [
	(( 'InitialObjects' , 'Objects' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'InitialObjects' , 'Objects' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Destroy' , 'Result' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'IsInitialObject' , 'Object' , 'Result' , ), 3, (3, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'AddInitialObjects' , 'Objects' , 'Result' , ), 4, (4, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'AddInitialObjectsFromExternalDocument' , 'ExternalDocument' , 'ExternalLocalCS' , 'Objects' , 'Result' , 
			 ), 5, (5, (), [ (9, 1, None, "IID('{7B60E769-06C3-4FDC-9677-7B5EF5180308}')") , (9, 1, None, "IID('{BA6395F5-3506-4483-8864-4EEC220AF316}')") , (12, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Clear' , 'Result' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'IsSuitableObject' , 'Object' , 'Result' , ), 7, (7, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'ContextObjects' , 'PVal' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'ContextObjects' , 'PVal' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'DocumentFileName' , 'PVal' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'OpenDocument' , 'Visible' , 'ReadOnly' , 'Result' , ), 10, (10, (), [ 
			 (11, 49, 'True', None) , (11, 49, 'False', None) , (16393, 10, None, "IID('{7B60E769-06C3-4FDC-9677-7B5EF5180308}')") , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'LocalCS' , 'PVal' , ), 11, (11, (), [ (16393, 10, None, "IID('{BA6395F5-3506-4483-8864-4EEC220AF316}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'LocalCS' , 'PVal' , ), 11, (11, (), [ (9, 1, None, "IID('{BA6395F5-3506-4483-8864-4EEC220AF316}')") , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ExternalLocalCS' , 'PVal' , ), 12, (12, (), [ (16393, 10, None, "IID('{BA6395F5-3506-4483-8864-4EEC220AF316}')") , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'ExternalLocalCS' , 'PVal' , ), 12, (12, (), [ (9, 1, None, "IID('{BA6395F5-3506-4483-8864-4EEC220AF316}')") , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'ByCollectionGeometry' , 'PVal' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'ByCollectionGeometry' , 'PVal' , ), 13, (13, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'CollectionGeometry' , 'PVal' , ), 14, (14, (), [ (16393, 10, None, "IID('{CC78F834-4A97-4F69-9207-215308F0ABB0}')") , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'CollectionGeometry' , 'PVal' , ), 14, (14, (), [ (9, 1, None, "IID('{CC78F834-4A97-4F69-9207-215308F0ABB0}')") , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'MirrorCopy' , 'PVal' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'MirrorCopy' , 'PVal' , ), 15, (15, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'PVal' , ), 16, (16, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'PVal' , ), 16, (16, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'AutoUpdate' , 'PVal' , ), 17, (17, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'AutoUpdate' , 'PVal' , ), 17, (17, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'WatchForSourceChange' , 'PVal' , ), 18, (18, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'WatchForSourceChange' , 'PVal' , ), 18, (18, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'Synhronise' , 'PVal' , ), 19, (19, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
]

ICopyObjectParam_vtables_dispatch_ = 1
ICopyObjectParam_vtables_ = [
	(( 'XOld' , 'PVal' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'XOld' , 'PVal' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'YOld' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'YOld' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'XNew' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'XNew' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'YNew' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'YNew' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Scale' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Scale' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'AttributeCopy' , 'PVal' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'AttributeCopy' , 'PVal' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineScale' , 'PVal' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineScale' , 'PVal' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'SpecificationObjectCopy' , 'PVal' , ), 9, (9, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'SpecificationObjectCopy' , 'PVal' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
]

ICopyObjectParam1_vtables_dispatch_ = 1
ICopyObjectParam1_vtables_ = [
	(( 'StoragesCopy' , 'PVal' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'StoragesCopy' , 'PVal' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'HyperLinksCopy' , 'PVal' , ), 11, (11, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'HyperLinksCopy' , 'PVal' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

ICountersinkHoleParameters_vtables_dispatch_ = 1
ICountersinkHoleParameters_vtables_ = [
	(( 'CountersinkType' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'CountersinkType' , 'PVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'CountersinkDiameter' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'CountersinkDiameter' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'CountersinkAngle' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'CountersinkAngle' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'CountersinkDepth' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'CountersinkDepth' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

ICountersinkSpotfacingHoleParameters_vtables_dispatch_ = 1
ICountersinkSpotfacingHoleParameters_vtables_ = [
	(( 'SpotfacingCountersinkDiameter' , 'PVal' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'SpotfacingCountersinkDiameter' , 'PVal' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'SpotfacingDepth' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'SpotfacingDepth' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'CountersinkAngle' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'CountersinkAngle' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

ICoupling_vtables_dispatch_ = 1
ICoupling_vtables_ = [
	(( 'Count' , 'Result' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Sketch' , 'Index' , 'NewObject' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'PositionObject' , 'Index' , 'NewObject' , ), 3, (3, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'PositionObject' , 'Index' , 'NewObject' , ), 3, (3, (), [ (3, 1, None, None) , 
			 (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Position' , 'Index' , 'PVal' , ), 4, (4, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Position' , 'Index' , 'PVal' , ), 4, (4, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'PositionOffset' , 'Index' , 'PVal' , ), 5, (5, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'PositionOffset' , 'Index' , 'PVal' , ), 5, (5, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'GetPoint' , 'Index' , 'X' , 'Y' , 'Z' , 
			 'PVal' , ), 6, (6, (), [ (3, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'SetPoint' , 'Index' , 'X' , 'Y' , 'Z' , 
			 'PVal' , ), 7, (7, (), [ (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'Result' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
]

ICurve2D_vtables_dispatch_ = 1
ICurve2D_vtables_ = [
	(( 'Intersect' , 'Curve2' , 'Result' , ), 1, (1, (), [ (9, 1, None, "IID('{65C82884-C41B-47A1-8C07-E8820D6718EA}')") , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Tangent' , 'Curve2' , 'Curve1Points' , 'Curve2Points' , 'Result' , 
			 ), 2, (2, (), [ (9, 1, None, "IID('{65C82884-C41B-47A1-8C07-E8820D6718EA}')") , (16396, 2, None, None) , (16396, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'TangentLinePoint' , 'X' , 'Y' , 'Result' , ), 3, (3, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'CouplingCurvCurv' , 'Curve2' , 'Radius' , 'Result' , ), 4, (4, (), [ 
			 (9, 1, None, "IID('{65C82884-C41B-47A1-8C07-E8820D6718EA}')") , (5, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'PointProjection' , 'X' , 'Y' , 'Kx' , 'Ky' , 
			 'T' , 'Angle' , 'Result' , ), 5, (5, (), [ (5, 1, None, None) , 
			 (5, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'CalculatePolygonByStep' , 'Step' , 'Result' , ), 7, (7, (), [ (5, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'MovePoint' , 'X' , 'Y' , 'Lenght' , 'Direction' , 
			 'Result' , ), 8, (8, (), [ (16389, 3, None, None) , (16389, 3, None, None) , (5, 1, None, None) , 
			 (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Length' , 'Result' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'GetDistancePointPoint' , 'X1' , 'Y1' , 'X2' , 'Y2' , 
			 'Result' , ), 10, (10, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'GetDistanceToPoint' , 'X' , 'Y' , 'Result' , ), 11, (11, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'PointOn' , 'T' , 'X' , 'Y' , 'Result' , 
			 ), 12, (12, (), [ (5, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'GetMetricLength' , 'T1' , 'T2' , 'Result' , ), 14, (14, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'ParamMin' , 'Result' , ), 15, (15, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'ParamMax' , 'Result' , ), 16, (16, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'IsClosed' , 'Result' , ), 17, (17, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'GetNurbsParams' , 'Closed' , 'Points' , 'Weights' , 'Knots' , 
			 'TMin' , 'TMax' , 'Result' , ), 18, (18, (), [ (11, 1, None, None) , 
			 (16396, 2, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'IsSelfIntersect' , 'Result' , ), 19, (19, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'GetPointLocation' , 'X' , 'Y' , 'Result' , ), 20, (20, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
]

ICurveBy2Projections_vtables_dispatch_ = 1
ICurveBy2Projections_vtables_ = [
	(( 'Projection1' , 'PVal' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Projection1' , 'PVal' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Projection2' , 'PVal' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Projection2' , 'PVal' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'AutoCheck' , 'CheckValue' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'AutoCheck' , 'CheckValue' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'EdgesChecks' , 'Checks' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'EdgesChecks' , 'Checks' , ), 4, (4, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'EdgesArraysCount' , 'Count' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Edges' , 'Index' , 'Edges' , ), 6, (6, (), [ (3, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'EdgesCheck' , 'ContourIndex' , 'CheckValue' , ), 7, (7, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'EdgesCheck' , 'ContourIndex' , 'CheckValue' , ), 7, (7, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'EdgesChecksCount' , 'Count' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
]

ICurveByLaw_vtables_dispatch_ = 1
ICurveByLaw_vtables_ = [
	(( 'PointsType' , 'Type' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'PointsType' , 'Type' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'LawType' , 'coord' , 'Type' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'LawType' , 'coord' , 'Type' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'TMin' , 'coord' , 'T' , ), 3, (3, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'TMin' , 'coord' , 'T' , ), 3, (3, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'TMax' , 'coord' , 'T' , ), 4, (4, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'TMax' , 'coord' , 'T' , ), 4, (4, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Expression' , 'coord' , 'PVal' , ), 5, (5, (), [ (3, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Expression' , 'coord' , 'PVal' , ), 5, (5, (), [ (3, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'UserVariables' , 'Variables' , ), 6, (6, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'IntervalExpression' , 'coord' , 'PVal' , ), 7, (7, (), [ (3, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'IntervalExpression' , 'coord' , 'PVal' , ), 7, (7, (), [ (3, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
]

ICurveByLaws_vtables_dispatch_ = 1
ICurveByLaws_vtables_ = [
	(( 'CurveByLaw' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{D875D25C-B52B-47C8-B04C-8CBA73623F17}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{D875D25C-B52B-47C8-B04C-8CBA73623F17}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ICurveCopyObjectParam_vtables_dispatch_ = 1
ICurveCopyObjectParam_vtables_ = [
	(( 'BaseCurve' , 'Curve' , ), 2001, (2001, (), [ (9, 1, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'BaseCurve' , 'Curve' , ), 2001, (2001, (), [ (16393, 10, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Step' , 'PVal' , ), 2002, (2002, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Step' , 'PVal' , ), 2002, (2002, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'PVal' , ), 2003, (2003, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'PVal' , ), 2003, (2003, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'TurnToNormal' , 'PVal' , ), 2004, (2004, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'TurnToNormal' , 'PVal' , ), 2004, (2004, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'PositiveDirection' , 'PVal' , ), 2005, (2005, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'PositiveDirection' , 'PVal' , ), 2005, (2005, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'StepFactor' , 'PVal' , ), 2006, (2006, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'StepFactor' , 'PVal' , ), 2006, (2006, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
]

ICurveOutLine_vtables_dispatch_ = 1
ICurveOutLine_vtables_ = [
	(( 'Faces' , 'Faces' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Faces' , 'Faces' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Vector3D' , 'Val' , ), 2, (2, (), [ (16393, 10, None, "IID('{D51A4DCF-627D-44F5-89BA-46EF2449A212}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'AutoCheck' , 'CheckValue' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'AutoCheck' , 'CheckValue' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'EdgesChecks' , 'Checks' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'EdgesChecks' , 'Checks' , ), 4, (4, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'EdgesArraysCount' , 'Count' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Edges' , 'Index' , 'Edges' , ), 6, (6, (), [ (3, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'EdgesCheck' , 'ContourIndex' , 'CheckValue' , ), 7, (7, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'EdgesCheck' , 'ContourIndex' , 'CheckValue' , ), 7, (7, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'EdgesChecksCount' , 'Count' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
]

ICurveOutLines_vtables_dispatch_ = 1
ICurveOutLines_vtables_ = [
	(( 'CurveOutLine' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{BC64A05C-0078-44EB-9492-ABAD7AD38E86}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{BC64A05C-0078-44EB-9492-ABAD7AD38E86}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ICurveStyle_vtables_dispatch_ = 1
ICurveStyle_vtables_ = [
	(( 'CurveStyleType' , 'PVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'CurveStyleType' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'CurvePenType' , 'PVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'CurvePenType' , 'PVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'ForHatch' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'ForHatch' , 'PVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Color' , 'PVal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Color' , 'PVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'PaperWidth' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'PaperWidth' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ScreenWidth' , 'PVal' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'ScreenWidth' , 'PVal' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'SmartParts' , 'PVal' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'SmartParts' , 'PVal' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'IgnoreFragmentStyle' , 'PVal' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'IgnoreFragmentStyle' , 'PVal' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'PatternsCount' , 'PVal' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'AddPattern' , 'VisibleSegmentLenght' , 'invisibleSegmentLenght' , 'Result' , ), 10, (10, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'DeletePattern' , 'PatternIndex' , 'Result' , ), 11, (11, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'ClearPatterns' , 'Result' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'PatternVisibleSegmentLenght' , 'PatternIndex' , 'Result' , ), 13, (13, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'PatternVisibleSegmentLenght' , 'PatternIndex' , 'Result' , ), 13, (13, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'PatternInvisibleSegmentLenght' , 'PatternIndex' , 'Result' , ), 14, (14, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'PatternInvisibleSegmentLenght' , 'PatternIndex' , 'Result' , ), 14, (14, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'PatternFragmentDx' , 'PatternIndex' , 'Result' , ), 15, (15, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'PatternFragmentDx' , 'PatternIndex' , 'Result' , ), 15, (15, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'PatternFragmentDy' , 'PatternIndex' , 'Result' , ), 16, (16, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'PatternFragmentDy' , 'PatternIndex' , 'Result' , ), 16, (16, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'PatternFragmentPoligonsCount' , 'PatternIndex' , 'Result' , ), 17, (17, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'PatternFragmentPoligon' , 'PatternIndex' , 'PoligonIndex' , 'PVal' , ), 18, (18, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'PatternFragmentPoligon' , 'PatternIndex' , 'PoligonIndex' , 'PVal' , ), 18, (18, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'AddPatternFragmentPoligon' , 'PatternIndex' , 'Points' , 'Result' , ), 19, (19, (), [ 
			 (3, 1, None, None) , (12, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'DeletePatternFragmentPoligon' , 'PatternIndex' , 'PoligonIndex' , 'Result' , ), 20, (20, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'ClearPatternFragmentPoligons' , 'PatternIndex' , 'Result' , ), 21, (21, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'PatternFragmentFilletsPoligonsCount' , 'PatternIndex' , 'Result' , ), 22, (22, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'PatternFragmentFilletsPoligon' , 'PatternIndex' , 'PoligonIndex' , 'PVal' , ), 23, (23, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'PatternFragmentFilletsPoligon' , 'PatternIndex' , 'PoligonIndex' , 'PVal' , ), 23, (23, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'AddPatternFragmentFilletsPoligon' , 'PatternIndex' , 'Points' , 'Result' , ), 24, (24, (), [ 
			 (3, 1, None, None) , (12, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'DeletePatternFragmentFilletsPoligon' , 'PatternIndex' , 'PoligonIndex' , 'Result' , ), 25, (25, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'ClearPatternFragmentFilletsPoligons' , 'PatternIndex' , 'Result' , ), 26, (26, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'LoadPatternFragment' , 'PatternIndex' , 'FileName' , 'Result' , ), 27, (27, (), [ 
			 (3, 1, None, None) , (8, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'SetPatternFragment' , 'PatternIndex' , 'Geom' , 'Result' , ), 28, (28, (), [ 
			 (3, 1, None, None) , (12, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
]

ICurveVertexParam_vtables_dispatch_ = 1
ICurveVertexParam_vtables_ = [
	(( 'BuildingType' , 'Result' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'Result' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'BuildingObject' , 'Result' , ), 2, (2, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'BuildingObject' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'AssociationVertex' , 'Result' , ), 3, (3, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'AssociationVertex' , 'Result' , ), 3, (3, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Vertex' , 'Result' , ), 4, (4, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Index' , 'Result' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'PointParameters' , 'Result' , ), 6, (6, (), [ (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'PointType' , 'Result' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'PointType' , 'Result' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'GetParamVertex' , 'X' , 'Y' , 'Z' , 'Value' , 
			 'PVal' , ), 8, (8, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'SetParamVertex' , 'X' , 'Y' , 'Z' , 'Value' , 
			 'PVal' , ), 9, (9, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'SetParamByVertex' , 'Obj' , 'Value' , 'PVal' , ), 10, (10, (), [ 
			 (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'GetParamByDistance' , 'Distance' , 'Value' , 'PVal' , ), 11, (11, (), [ 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'SetParamByDistance' , 'Distance' , 'Value' , 'PVal' , ), 12, (12, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Vector3D' , 'PVal' , ), 13, (13, (), [ (16393, 10, None, "IID('{D51A4DCF-627D-44F5-89BA-46EF2449A212}')") , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Update' , 'PVal' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
]

ICurvesBy2Projectionses_vtables_dispatch_ = 1
ICurvesBy2Projectionses_vtables_ = [
	(( 'CurveBy2Projections' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{75250D2E-1A02-4593-9002-09872F65F1CB}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{75250D2E-1A02-4593-9002-09872F65F1CB}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ICut_vtables_dispatch_ = 1
ICut_vtables_ = [
	(( 'CutObject' , 'CurrentObject' , ), 1, (1, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'CutObject' , 'CurrentObject' , ), 1, (1, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'ChooseType' , 'CurrentValue' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'ChooseType' , 'CurrentValue' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'ChoosePartsType' , 'CurrentValue' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'ChoosePartsType' , 'CurrentValue' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'ChooseBodies' , 'Result' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'ChooseBodies' , 'Result' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ChooseParts' , 'Result' , ), 6, (6, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ChooseParts' , 'Result' , ), 6, (6, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'Value' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'Value' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
]

ICutExtrusion_vtables_dispatch_ = 1
ICutExtrusion_vtables_ = [
	(( 'Cut' , 'PVal' , ), 101, (101, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Cut' , 'PVal' , ), 101, (101, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
]

ICutLine_vtables_dispatch_ = 1
ICutLine_vtables_ = [
	(( 'ArrowPos' , 'Result' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ArrowPos' , 'Result' , ), 1, (1, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'X1' , 'Result' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'X1' , 'Result' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'Result' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'Result' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'Result' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'Result' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'Result' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'Result' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Points' , 'PVal' , ), 6, (6, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Points' , 'PVal' , ), 6, (6, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'AutoSorted' , 'Result' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'AutoSorted' , 'Result' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Text' , 'PVal' , ), 8, (8, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'AdditionalText' , 'PVal' , ), 9, (9, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'AutoSheet' , 'Result' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'AutoSheet' , 'Result' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'AutoZone' , 'Result' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'AutoZone' , 'Result' , ), 11, (11, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'AdditionalTextPos' , 'Result' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'AdditionalTextPos' , 'Result' , ), 12, (12, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'ArrowType' , 'PVal' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'ArrowType' , 'PVal' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
]

ICutLines_vtables_dispatch_ = 1
ICutLines_vtables_ = [
	(( 'CutLine' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{26E86124-DC1C-41A2-8075-E73F3EAD8474}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Value' , ), 2, (2, (), [ (16393, 10, None, "IID('{26E86124-DC1C-41A2-8075-E73F3EAD8474}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ICutRotated_vtables_dispatch_ = 1
ICutRotated_vtables_ = [
	(( 'Cut' , 'PVal' , ), 101, (101, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Cut' , 'PVal' , ), 101, (101, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
]

ICutUnitMarking_vtables_dispatch_ = 1
ICutUnitMarking_vtables_ = [
	(( 'StrokeCount' , 'Result' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'StrokeX' , 'Index' , 'PVal' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'StrokeX' , 'Index' , 'PVal' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'StrokeY' , 'Index' , 'PVal' , ), 3, (3, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'StrokeY' , 'Index' , 'PVal' , ), 3, (3, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Stroke' , 'Index' , 'PVal' , ), 4, (4, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Stroke' , 'Index' , 'PVal' , ), 4, (4, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'Result' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'Result' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'ShelfDirection' , 'Result' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ShelfDirection' , 'Result' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ShelfX' , 'Result' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'ShelfX' , 'Result' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'ShelfY' , 'Result' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ShelfY' , 'Result' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'TextUp' , 'PVal' , ), 9, (9, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'TextDown' , 'PVal' , ), 10, (10, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'AddStroke' , 'X' , 'Y' , 'Length' , 'Result' , 
			 ), 11, (11, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'DeleteStroke' , 'Index' , 'Result' , ), 12, (12, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
]

ICutUnitMarkings_vtables_dispatch_ = 1
ICutUnitMarkings_vtables_ = [
	(( 'CutUnitMarking' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{2EDA58EE-DBDA-44CC-AD10-6895006D498C}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Value' , ), 2, (2, (), [ (16393, 10, None, "IID('{2EDA58EE-DBDA-44CC-AD10-6895006D498C}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ICutViewParam_vtables_dispatch_ = 1
ICutViewParam_vtables_ = [
	(( 'AddCut' , 'Name' , 'Number' , 'X' , 'Y' , 
			 'ModelCut' , 'Contour' , 'View' , 'Index' , ), 3500, (3500, (), [ 
			 (8, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (11, 1, None, None) , 
			 (9, 1, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , (9, 1, None, "IID('{21A7BA87-1C8B-41B4-8247-CDD593546F37}')") , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'DeleteCut' , 'Index' , 'Result' , ), 3501, (3501, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'DeleteAllCuts' , 'Result' , ), 3502, (3502, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'SetCutPlanePosition' , 'Index' , 'X' , 'Y' , 'Result' , 
			 ), 3503, (3503, (), [ (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'GetCutPlanePosition' , 'Index' , 'X' , 'Y' , 'Result' , 
			 ), 3504, (3504, (), [ (3, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'SetCutParams' , 'Index' , 'Name' , 'Number' , 'ModelCut' , 
			 'Result' , ), 3505, (3505, (), [ (3, 1, None, None) , (8, 1, None, None) , (3, 1, None, None) , 
			 (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'GetCutParams' , 'Index' , 'Name' , 'Number' , 'ModelCut' , 
			 'Contour' , ), 3506, (3506, (), [ (3, 1, None, None) , (16392, 2, None, None) , (16387, 2, None, None) , 
			 (16395, 2, None, None) , (16393, 10, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'CutsCount' , 'Result' , ), 3507, (3507, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'LocalCut' , 'Index' , 'Result' , ), 3508, (3508, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'LocalCut' , 'Index' , 'Result' , ), 3508, (3508, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'HatchParam' , 'Index' , 'Result' , ), 3509, (3509, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{437D6587-7649-4A0C-80BB-7A6E89661839}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

ICuts_vtables_dispatch_ = 1
ICuts_vtables_ = [
	(( 'Cut' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{D76BE44A-2AB3-4B5A-B893-3C27E227DF4D}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{D76BE44A-2AB3-4B5A-B893-3C27E227DF4D}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ICylindricSpiral3D_vtables_dispatch_ = 1
ICylindricSpiral3D_vtables_ = [
	(( 'Diameter' , 'PVal' , ), 101, (101, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'Diameter' , 'PVal' , ), 101, (101, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'DiameterType' , 'PVal' , ), 102, (102, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'DiameterType' , 'PVal' , ), 102, (102, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'DiameterBaseObject' , 'PVal' , ), 103, (103, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'DiameterBaseObject' , 'PVal' , ), 103, (103, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'HeightCorrectionType' , 'PVal' , ), 15, (15, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'HeightCorrectionType' , 'PVal' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
]

IDerivedPattern_vtables_dispatch_ = 1
IDerivedPattern_vtables_ = [
	(( 'MasterPattern' , 'Object' , ), 101, (101, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'MasterPattern' , 'Object' , ), 101, (101, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'OrientBySample' , 'PVal' , ), 102, (102, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'OrientBySample' , 'PVal' , ), 102, (102, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'SampleExemplar' , 'Object' , ), 103, (103, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'SampleExemplar' , 'Object' , ), 103, (103, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'AllowNesting' , 'PVal' , ), 104, (104, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'AllowNesting' , 'PVal' , ), 104, (104, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'AllowDeleted' , 'PVal' , ), 105, (105, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'AllowDeleted' , 'PVal' , ), 105, (105, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
]

IDiametralDimension_vtables_dispatch_ = 1
IDiametralDimension_vtables_ = [
	(( 'Xc' , 'PVal' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Xc' , 'PVal' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Yc' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Yc' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'DimensionType' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'DimensionType' , 'PVal' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'BaseObject' , 'Object1' , ), 5, (5, (), [ (16393, 10, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'BaseObject' , 'Object1' , ), 5, (5, (), [ (9, 1, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
]

IDiametralDimension3D_vtables_dispatch_ = 1
IDiametralDimension3D_vtables_ = [
	(( 'Object1' , 'Object1' , ), 1, (1, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Object1' , 'Object1' , ), 1, (1, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'PlaneObject' , 'Object2' , ), 2, (2, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'PlaneObject' , 'Object2' , ), 2, (2, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'DimensionType' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'DimensionType' , 'PVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'GetSurfacePoint' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 5, (5, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'SetSurfacePoint' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 6, (6, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'GetCenterPoint' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 7, (7, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'SetCenterPoint' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 8, (8, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
]

IDiametralDimensions_vtables_dispatch_ = 1
IDiametralDimensions_vtables_ = [
	(( 'DiametralDimension' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{2B4CE92F-438D-4D3E-8F8D-4D14E5D0E214}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Value' , ), 2, (2, (), [ (16393, 10, None, "IID('{2B4CE92F-438D-4D3E-8F8D-4D14E5D0E214}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IDiametralDimensions3D_vtables_dispatch_ = 1
IDiametralDimensions3D_vtables_ = [
	(( 'DiametralDimension3D' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{261AE065-69B8-4B42-B103-C8746720C5BF}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{261AE065-69B8-4B42-B103-C8746720C5BF}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IDimensionParams_vtables_dispatch_ = 1
IDimensionParams_vtables_ = [
	(( 'RemoteLine1' , 'PVal' , ), 4001, (4001, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'RemoteLine1' , 'PVal' , ), 4001, (4001, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'RemoteLine2' , 'PVal' , ), 4002, (4002, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'RemoteLine2' , 'PVal' , ), 4002, (4002, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'ArrowType1' , 'PVal' , ), 4003, (4003, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ArrowType1' , 'PVal' , ), 4003, (4003, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ArrowType2' , 'PVal' , ), 4004, (4004, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'ArrowType2' , 'PVal' , ), 4004, (4004, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'ArrowPos' , 'PVal' , ), 4005, (4005, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'ArrowPos' , 'PVal' , ), 4005, (4005, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'TextPos' , 'PVal' , ), 4006, (4006, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'TextPos' , 'PVal' , ), 4006, (4006, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'TextType' , 'PVal' , ), 4007, (4007, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'TextType' , 'PVal' , ), 4007, (4007, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'TextOnLine' , 'PVal' , ), 4008, (4008, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'TextOnLine' , 'PVal' , ), 4008, (4008, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'TextBase' , 'PVal' , ), 4009, (4009, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'TextBase' , 'PVal' , ), 4009, (4009, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'ShelfDirection' , 'PVal' , ), 4010, (4010, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'ShelfDirection' , 'PVal' , ), 4010, (4010, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'ShelfAngle' , 'PVal' , ), 4011, (4011, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'ShelfAngle' , 'PVal' , ), 4011, (4011, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'ShelfLength' , 'PVal' , ), 4012, (4012, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ShelfLength' , 'PVal' , ), 4012, (4012, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Gap' , 'PVal' , ), 4013, (4013, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Gap' , 'PVal' , ), 4013, (4013, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'GapValue' , 'PVal' , ), 4014, (4014, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'GapValue' , 'PVal' , ), 4014, (4014, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'InitDefaultValues' , 'Result' , ), 4015, (4015, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
]

IDimensionText_vtables_dispatch_ = 1
IDimensionText_vtables_ = [
	(( 'Style' , 'Result' , ), 5001, (5001, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Result' , ), 5001, (5001, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Sign' , 'Result' , ), 5002, (5002, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Sign' , 'Result' , ), 5002, (5002, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'SignFont' , 'Result' , ), 5003, (5003, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'SignFont' , 'Result' , ), 5003, (5003, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'NominalValue' , 'Result' , ), 5004, (5004, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'NominalValue' , 'Result' , ), 5004, (5004, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'AutoNominalValue' , 'Result' , ), 5005, (5005, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'AutoNominalValue' , 'Result' , ), 5005, (5005, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceOn' , 'Result' , ), 5006, (5006, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceOn' , 'Result' , ), 5006, (5006, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'DeviationOn' , 'Result' , ), 5007, (5007, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'DeviationOn' , 'Result' , ), 5007, (5007, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'DeviationType' , 'Result' , ), 5008, (5008, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'DeviationType' , 'Result' , ), 5008, (5008, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Rectangle' , 'Result' , ), 5009, (5009, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Rectangle' , 'Result' , ), 5009, (5009, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Underline' , 'Result' , ), 5010, (5010, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Underline' , 'Result' , ), 5010, (5010, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Brackets' , 'Result' , ), 5011, (5011, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Brackets' , 'Result' , ), 5011, (5011, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'TextAlign' , 'Result' , ), 5012, (5012, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'TextAlign' , 'Result' , ), 5012, (5012, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Prefix' , 'PVal' , ), 5013, (5013, (), [ (16393, 10, None, "IID('{AAB72FE2-DEA3-4FB6-B0DD-B926249EF67C}')") , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'NominalText' , 'PVal' , ), 5014, (5014, (), [ (16393, 10, None, "IID('{AAB72FE2-DEA3-4FB6-B0DD-B926249EF67C}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Tolerance' , 'PVal' , ), 5015, (5015, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Tolerance' , 'PVal' , ), 5015, (5015, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'HighDeviation' , 'PVal' , ), 5016, (5016, (), [ (16393, 10, None, "IID('{AAB72FE2-DEA3-4FB6-B0DD-B926249EF67C}')") , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'LowDeviation' , 'PVal' , ), 5017, (5017, (), [ (16393, 10, None, "IID('{AAB72FE2-DEA3-4FB6-B0DD-B926249EF67C}')") , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Unit' , 'PVal' , ), 5018, (5018, (), [ (16393, 10, None, "IID('{AAB72FE2-DEA3-4FB6-B0DD-B926249EF67C}')") , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Suffix' , 'PVal' , ), 5019, (5019, (), [ (16393, 10, None, "IID('{AAB72FE2-DEA3-4FB6-B0DD-B926249EF67C}')") , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'TextUnder' , 'PVal' , ), 5020, (5020, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'TextFormat' , 'PVal' , ), 5021, (5021, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'TextFormat' , 'PVal' , ), 5021, (5021, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'HasTolerance' , 'Result' , ), 5022, (5022, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'HasTolerance' , 'Result' , ), 5022, (5022, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'HighDeviationValue' , 'PVal' , ), 5023, (5023, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'LowDeviationValue' , 'PVal' , ), 5024, (5024, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'InitDeviations' , 'HighDeviationValue' , 'LowDeviationValue' , 'Result' , ), 5025, (5025, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'Accuracy' , 'Result' , ), 5026, (5026, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'Accuracy' , 'Result' , ), 5026, (5026, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'AccuracyDecimalsCount' , 'Result' , ), 5027, (5027, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
]

IDistanceAngleMeasurement3D_vtables_dispatch_ = 1
IDistanceAngleMeasurement3D_vtables_ = [
	(( 'Object1' , 'Result' , ), 1, (1, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Object1' , 'Result' , ), 1, (1, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Object2' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Object2' , 'Result' , ), 2, (2, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Briefly' , 'Result' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Briefly' , 'Result' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'MeasureResult' , 'Result' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Lmin' , 'Result' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Lmax' , 'Result' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'LNormal' , 'Result' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'IsAngleValid' , 'Result' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'Result' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'GetMinPoint1' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 10, (10, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'GetMinPoint2' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 11, (11, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'GetMaxPoint1' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 12, (12, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'GetMaxPoint2' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 13, (13, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'GetNormalPoint1' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 14, (14, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'GetNormalPoint2' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 15, (15, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
]

IDistanceAngleMeasurements3D_vtables_dispatch_ = 1
IDistanceAngleMeasurements3D_vtables_ = [
	(( 'DistanceAngleMeasurement3D' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{FF326C86-55CD-49FB-BBCE-BC033F762CF7}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{FF326C86-55CD-49FB-BBCE-BC033F762CF7}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IDocument2DSettings_vtables_dispatch_ = 1
IDocument2DSettings_vtables_ = [
	(( 'LayersGroupWay' , 'PVal' , ), 101, (101, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'LayersGroupWay' , 'PVal' , ), 101, (101, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'CompositionInherit' , 'PVal' , ), 102, (102, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'CompositionInherit' , 'PVal' , ), 102, (102, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IDocument3DManager_vtables_dispatch_ = 1
IDocument3DManager_vtables_ = [
	(( 'Layers3D' , 'PVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{D637078B-6498-40B6-9F41-83ED1EA40D1F}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'LayersGroups3D' , 'PVal' , ), 2, (2, (), [ (16393, 10, None, "IID('{D3F08D03-3BB2-4DE6-95A9-38B5C05D8C12}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'LayersDynamicGroups3D' , 'PVal' , ), 3, (3, (), [ (16393, 10, None, "IID('{D3F08D03-3BB2-4DE6-95A9-38B5C05D8C12}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Update' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IDocument3DSettings_vtables_dispatch_ = 1
IDocument3DSettings_vtables_ = [
	(( 'AccuracyModelDisplaying' , 'PVal' , ), 101, (101, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'AccuracyModelDisplaying' , 'PVal' , ), 101, (101, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'AccuracyMassProperties' , 'PVal' , ), 102, (102, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'AccuracyMassProperties' , 'PVal' , ), 102, (102, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IDocumentFrame_vtables_dispatch_ = 1
IDocumentFrame_vtables_ = [
	(( 'Regime' , 'PVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Regime' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Active' , 'PVal' , ), 2, (2, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Active' , 'PVal' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Caption' , 'PVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Zoom' , 'X1' , 'Y1' , 'X2' , 'Y2' , 
			 ), 4, (4, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'ZoomPrevNextOrAll' , 'Type' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'ZoomScale' , 'X' , 'Y' , 'Scale' , ), 6, (6, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'GetZoomScale' , 'X' , 'Y' , 'Scale' , ), 7, (7, (), [ 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'GetHWND' , 'HWnd' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'SetGabaritModifying' , ), 9, (9, (), [ ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'RefreshWindow' , ), 10, (10, (), [ ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'ConvertCoordinates' , 'Type' , 'LX' , 'LY' , 'X' , 
			 'Y' , 'Z' , 'Result' , ), 11, (11, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , (3, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'ExecuteKompasCommand' , 'CommandID' , 'PostMessage' , 'PRes' , ), 12, (12, (), [ 
			 (3, 1, None, None) , (11, 49, 'True', None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'IsKompasCommandEnable' , 'CommandID' , 'PRes' , ), 13, (13, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'IsKompasCommandCheck' , 'CommandID' , 'PRes' , ), 14, (14, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'GetFPSData' , 'PRes' , ), 15, (15, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'GetPickRay' , 'wx' , 'wy' , 'X' , 'Y' , 
			 'Z' , 'zx' , 'zy' , 'zz' , 'PRes' , 
			 ), 16, (16, (), [ (3, 1, None, None) , (3, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'RoundModeOn' , 'PVal' , ), 17, (17, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'CurrentCursorStep' , 'PVal' , ), 18, (18, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
]

IDocumentFrames_vtables_dispatch_ = 1
IDocumentFrames_vtables_ = [
	(( 'Item' , 'Index' , 'Result' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{4437FABA-990F-45E2-B1A2-7754FB326B76}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IDocumentSettings_vtables_dispatch_ = 1
IDocumentSettings_vtables_ = [
]

IDocuments_vtables_dispatch_ = 1
IDocuments_vtables_ = [
	(( 'Item' , 'Index' , 'Result' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{5C6E318D-BD6E-4AFA-8A13-977EAA0845EF}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Type' , 'Visible' , 'Result' , ), 1, (1, (), [ 
			 (3, 1, None, None) , (11, 49, 'True', None) , (16393, 10, None, "IID('{5C6E318D-BD6E-4AFA-8A13-977EAA0845EF}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Open' , 'PathName' , 'Visible' , 'ReadOnly' , 'Result' , 
			 ), 2, (2, (), [ (8, 1, None, None) , (11, 49, 'True', None) , (11, 49, 'False', None) , (16393, 10, None, "IID('{5C6E318D-BD6E-4AFA-8A13-977EAA0845EF}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'OpenEx' , 'PathName' , 'Visible' , 'ReadOnly' , 'LoadCombinationIndex' , 
			 'Result' , ), 3, (3, (), [ (8, 1, None, None) , (11, 1, None, None) , (11, 1, None, None) , 
			 (12, 1, None, None) , (16393, 10, None, "IID('{5C6E318D-BD6E-4AFA-8A13-977EAA0845EF}')") , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'GetLoadCombinations' , 'PathName' , 'CurrentIndex' , 'Value' , ), 4, (4, (), [ 
			 (8, 1, None, None) , (16387, 2, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'AddWithDefaultSettings' , 'Type' , 'Visible' , 'Result' , ), 5, (5, (), [ 
			 (3, 1, None, None) , (11, 49, 'True', None) , (16393, 10, None, "IID('{5C6E318D-BD6E-4AFA-8A13-977EAA0845EF}')") , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'DocumentSynchronize' , 'PVal' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'DocumentSynchronize' , 'PVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'RecoverMode' , 'PVal' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'RecoverMode' , 'PVal' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'RecoverError' , 'PVal' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'RecoverError' , 'PVal' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'GetLoadCombinationsParam' , 'PathName' , 'Value' , ), 9, (9, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{A70BF191-E1E1-4A92-8CA9-E6D3FEAD2D9A}')") , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'GetOpenDocumentParam' , 'Result' , ), 10, (10, (), [ (16393, 10, None, "IID('{FADCA157-95B1-4E3F-97AA-622E34DA3238}')") , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'OpenDocument' , 'FileName' , 'Param' , 'Result' , ), 11, (11, (), [ 
			 (8, 1, None, None) , (9, 1, None, "IID('{FADCA157-95B1-4E3F-97AA-622E34DA3238}')") , (16393, 10, None, "IID('{5C6E318D-BD6E-4AFA-8A13-977EAA0845EF}')") , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'GetEmbodimentsTree' , 'FileName' , 'MarkingType' , 'AddSystemDelimer' , 'AddSpaces' , 
			 'CurrentEmbodiment' , 'Tree' , ), 12, (12, (), [ (8, 1, None, None) , (3, 1, None, None) , 
			 (11, 1, None, None) , (11, 1, None, None) , (16387, 2, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'RecoverModeErrorList' , 'PVal' , ), 13, (13, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'AddCustomDocument' , 'DocumentTypeId' , 'Result' , ), 14, (14, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{5C6E318D-BD6E-4AFA-8A13-977EAA0845EF}')") , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'AddNewDocumentFromTemplate' , 'TemplateFileName' , 'Result' , ), 15, (15, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{5C6E318D-BD6E-4AFA-8A13-977EAA0845EF}')") , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
]

IDrawingContainer_vtables_dispatch_ = 1
IDrawingContainer_vtables_ = [
	(( 'Objects' , 'ObjType' , 'Result' , ), 5001, (5001, (), [ (12, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'DrawingTexts' , 'PVal' , ), 5002, (5002, (), [ (16393, 10, None, "IID('{C72E0E9D-7078-4AA7-95E4-E8C75CA9BCEC}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'LineSegments' , 'PVal' , ), 5003, (5003, (), [ (16393, 10, None, "IID('{B211C782-A830-468E-9F4F-C499A77078D8}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Arcs' , 'PVal' , ), 5004, (5004, (), [ (16393, 10, None, "IID('{4FCB4C17-3B9E-45E8-B83C-9284027BAA0D}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Multilines' , 'PVal' , ), 5005, (5005, (), [ (16393, 10, None, "IID('{968D7B84-2BC1-4354-AAFE-73192E405546}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'DrawingContours' , 'PVal' , ), 5006, (5006, (), [ (16393, 10, None, "IID('{DBA3626C-12BE-4BFF-8D42-B01A78666BC9}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Circles' , 'PVal' , ), 5007, (5007, (), [ (16393, 10, None, "IID('{C8CA9255-E5FE-4396-9C3F-75EE7377C508}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Points' , 'PVal' , ), 5008, (5008, (), [ (16393, 10, None, "IID('{8C6846A4-EE3B-4C00-A708-5C0FD01E21B7}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Beziers' , 'PVal' , ), 5009, (5009, (), [ (16393, 10, None, "IID('{57944ECC-5491-4551-9DB9-FABC45125A63}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'MacroObjects' , 'PVal' , ), 5010, (5010, (), [ (16393, 10, None, "IID('{5B3F5454-160A-4981-B093-890E9A719AE3}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Lines' , 'PVal' , ), 5011, (5011, (), [ (16393, 10, None, "IID('{889A9B9C-7533-4EC5-8E2C-5ECF8228B06F}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'PolyLines2D' , 'PVal' , ), 5012, (5012, (), [ (16393, 10, None, "IID('{D1A9CB2D-A259-4CCC-9CD4-FA006494BCA7}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Nurbses' , 'PVal' , ), 5013, (5013, (), [ (16393, 10, None, "IID('{88ECED7C-181C-4D9F-84DE-44B2E360F278}')") , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Rasters' , 'PVal' , ), 5014, (5014, (), [ (16393, 10, None, "IID('{C6E4E32D-E077-4B14-B9DE-041BD628C38C}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'OleDrawingObjects' , 'PVal' , ), 5015, (5015, (), [ (16393, 10, None, "IID('{E7A8DD07-CD6B-45A6-B6AF-155A674BC7E4}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Ellipses' , 'PVal' , ), 5016, (5016, (), [ (16393, 10, None, "IID('{47633C44-93BB-4F41-A6CA-4F8CCAEA0659}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'EllipseArcs' , 'PVal' , ), 5017, (5017, (), [ (16393, 10, None, "IID('{CC5B7FCB-B887-4A47-AE6B-2522DFA24433}')") , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Rectangles' , 'PVal' , ), 5018, (5018, (), [ (16393, 10, None, "IID('{D6BC2EE9-249F-4961-89A7-88DA854F35FE}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'RegularPolygons' , 'PVal' , ), 5019, (5019, (), [ (16393, 10, None, "IID('{80377CB2-073E-4C38-8532-C42A078BA719}')") , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Equidistants' , 'PVal' , ), 5020, (5020, (), [ (16393, 10, None, "IID('{86182E5E-8FA3-4283-9DC5-43D1673C80DA}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'InsertionObjects' , 'PVal' , ), 5021, (5021, (), [ (16393, 10, None, "IID('{C485550B-29E3-4F2A-A85C-C2795E0F1F86}')") , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Hatches' , 'PVal' , ), 5022, (5022, (), [ (16393, 10, None, "IID('{B7E776B0-9524-4254-9D1F-0CF8E0314A1B}')") , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Colourings' , 'PVal' , ), 5023, (5023, (), [ (16393, 10, None, "IID('{60437DAD-2688-4146-B765-3FCC55C39D0F}')") , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'NurbsesByPoints' , 'PVal' , ), 5024, (5024, (), [ (16393, 10, None, "IID('{88ECED7C-181C-4D9F-84DE-44B2E360F278}')") , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ConicCurves' , 'PVal' , ), 5025, (5025, (), [ (16393, 10, None, "IID('{D496F149-AB99-402B-B3D2-942B26069753}')") , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
]

IDrawingContour_vtables_dispatch_ = 1
IDrawingContour_vtables_ = [
	(( 'Style' , 'Result' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Result' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
]

IDrawingContours_vtables_dispatch_ = 1
IDrawingContours_vtables_ = [
	(( 'DrawingContour' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{25509C3A-7B46-4E3F-B0E8-0E61B7548664}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Value' , ), 2, (2, (), [ (16393, 10, None, "IID('{25509C3A-7B46-4E3F-B0E8-0E61B7548664}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'AddBooleanResultContours' , 'Contour1' , 'Contour2' , 'BooleanType' , 'RezultContours' , 
			 ), 3, (3, (), [ (9, 1, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , (9, 1, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , (3, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IDrawingDocument_vtables_dispatch_ = 1
IDrawingDocument_vtables_ = [
	(( 'ChangeListDescriptions' , 'PVal' , ), 5001, (5001, (), [ (16393, 10, None, "IID('{B9632C5C-86E1-4BC9-83A5-A954E407246A}')") , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'SpecRough' , 'PVal' , ), 5002, (5002, (), [ (16393, 10, None, "IID('{D723AAC1-0315-4AED-99BF-88A7E55B6E6D}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'TechnicalDemand' , 'PVal' , ), 5003, (5003, (), [ (16393, 10, None, "IID('{18C80AE5-BF92-482A-9C56-3D1638F5E5F5}')") , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
]

IDrawingDocumentSettings_vtables_dispatch_ = 1
IDrawingDocumentSettings_vtables_ = [
	(( 'SheetAutoNumber' , 'PVal' , ), 1, (1, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'SheetAutoNumber' , 'PVal' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'SheetFirstNumber' , 'PVal' , ), 2, (2, (), [ (3, 49, '1', None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'SheetFirstNumber' , 'PVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'SheetAutoCount' , 'PVal' , ), 3, (3, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'SheetAutoCount' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'SheetsCount' , 'PVal' , ), 4, (4, (), [ (3, 49, '1', None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'SheetsCount' , 'PVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'TechnicalDemandSynchronize' , 'Result' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'TechnicalDemandSynchronize' , 'Result' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IDrawingGroup_vtables_dispatch_ = 1
IDrawingGroup_vtables_ = [
	(( 'Name' , 'PVal' , ), 1, (1, (), [ (8, 49, "''", None) , ], 1 , 4 , 4 , 0 , 88 , (3, 32, None, None) , 0 , )),
	(( 'Name' , 'PVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Objects' , 'Type' , 'Objects' , ), 2, (2, (), [ (12, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'AddObjects' , 'Objects' , 'Result' , ), 3, (3, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'DetachObjects' , 'Objects' , 'DeleteTmp' , 'Result' , ), 4, (4, (), [ 
			 (12, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Clear' , 'DeleteTmp' , 'Result' , ), 5, (5, (), [ (11, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Store' , 'Result' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'ObjectsCount' , 'Result' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'ExistObject' , 'Object' , 'Result' , ), 8, (8, (), [ (9, 1, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'Result' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'AddRegion' , 'RegionType' , 'XMin' , 'YMin' , 'XMax' , 
			 'YMax' , 'Result' , ), 10, (10, (), [ (3, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ReadFragment' , 'FileName' , 'CurentLayer' , 'XBase' , 'YBase' , 
			 'Scale' , 'Angle' , 'ScaleProjLinesSize' , 'Result' , ), 11, (11, (), [ 
			 (8, 1, None, None) , (11, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'WriteFragment' , 'FileName' , 'Comment' , 'XBase' , 'YBase' , 
			 'Result' , ), 12, (12, (), [ (8, 1, None, None) , (8, 0, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'WriteToClip' , 'AttrCopy' , 'SpcObjCopy' , 'Result' , ), 13, (13, (), [ 
			 (11, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'ReadFromClip' , 'AttrCopy' , 'SpcObjCopy' , 'Result' , ), 14, (14, (), [ 
			 (11, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Draw' , 'HWnd' , 'Result' , ), 15, (15, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Open' , 'Result' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Close' , 'Result' , ), 17, (17, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Current' , 'Result' , ), 18, (18, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
]

IDrawingGroups_vtables_dispatch_ = 1
IDrawingGroups_vtables_ = [
	(( 'Item' , 'Index' , 'Result' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{2C96ACB2-4877-45D9-B62D-78BBAD704458}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Temp' , 'Name' , 'Result' , ), 1, (1, (), [ 
			 (11, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{2C96ACB2-4877-45D9-B62D-78BBAD704458}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IDrawingObject_vtables_dispatch_ = 1
IDrawingObject_vtables_ = [
	(( 'DrawingObjectType' , 'Type' , ), 3000, (3000, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'LayerNumber' , 'PVal' , ), 3001, (3001, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'LayerNumber' , 'PVal' , ), 3001, (3001, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Temp' , 'Type' , ), 3002, (3002, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Valid' , 'Type' , ), 3003, (3003, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Update' , 'PRes' , ), 3004, (3004, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'PRes' , ), 3005, (3005, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'DrawingObjectParamType' , 'PVal' , ), 3006, (3006, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'DrawingObjectParamType' , 'PVal' , ), 3006, (3006, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
]

IDrawingObject1_vtables_dispatch_ = 1
IDrawingObject1_vtables_ = [
	(( 'Constraints' , 'Result' , ), 6001, (6001, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'NewConstraint' , 'Result' , ), 6002, (6002, (), [ (16393, 10, None, "IID('{131069F4-A4E2-4DB4-A559-85EACCC74CE4}')") , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Associate' , 'Result' , ), 6003, (6003, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'DeleteConstraints' , 'Result' , ), 6004, (6004, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'TransparentBackground' , 'Value' , ), 6005, (6005, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'TransparentBackground' , 'Value' , ), 6005, (6005, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'AutoTransparentBackground' , 'Value' , ), 6006, (6006, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'AutoTransparentBackground' , 'Value' , ), 6006, (6006, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'IsGeometryObject' , 'Result' , ), 6007, (6007, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'IsAnnotativeObject' , 'Result' , ), 6008, (6008, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'IsCurve' , 'Result' , ), 6009, (6009, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'GetHyperLinkParam' , 'Type' , 'LinkObject' , 'Level' , 'Result' , 
			 ), 6010, (6010, (), [ (16387, 2, None, None) , (16393, 2, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , (16387, 2, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'DeleteHyperLink' , 'Result' , ), 6011, (6011, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'GetCurve2D' , 'Result' , ), 6012, (6012, (), [ (16393, 10, None, "IID('{65C82884-C41B-47A1-8C07-E8820D6718EA}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Id' , 'Result' , ), 6013, (6013, (), [ (16404, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
]

IDrawingObjects_vtables_dispatch_ = 1
IDrawingObjects_vtables_ = [
	(( 'Item' , 'Index' , 'Result' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IDrawingTable_vtables_dispatch_ = 1
IDrawingTable_vtables_ = [
	(( 'X' , 'Result' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'X' , 'Result' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'Result' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'Result' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'FixedCellsSize' , 'PVal' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'FixedCellsSize' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'FixedRowCount' , 'PVal' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'FixedRowCount' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'FixedColumnCount' , 'PVal' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'FixedColumnCount' , 'PVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Save' , 'FileName' , 'PVal' , ), 7, (7, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
]

IDrawingTables_vtables_dispatch_ = 1
IDrawingTables_vtables_ = [
	(( 'DrawingTable' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{9B421BDA-0444-4A68-B69C-1C05D05C9D28}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'RowsCount' , 'ColumnsCount' , 'RowHeigh' , 'ColumnsWidth' , 
			 'TitlePos' , 'Value' , ), 2, (2, (), [ (3, 1, None, None) , (3, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{9B421BDA-0444-4A68-B69C-1C05D05C9D28}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Load' , 'FileName' , 'PVal' , ), 3, (3, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{9B421BDA-0444-4A68-B69C-1C05D05C9D28}')") , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IDrawingText_vtables_dispatch_ = 1
IDrawingText_vtables_ = [
	(( 'X' , 'Result' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'X' , 'Result' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'Result' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'Result' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Result' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Result' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'Result' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'Result' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'HFormat' , 'Result' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'HFormat' , 'Result' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'VFormat' , 'Result' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'VFormat' , 'Result' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Allocation' , 'Result' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Allocation' , 'Result' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'MirrorSymmetry' , 'Result' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'MirrorSymmetry' , 'Result' , ), 9, (9, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
]

IDrawingTexts_vtables_dispatch_ = 1
IDrawingTexts_vtables_ = [
	(( 'DrawingText' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E32E5703-0141-41CF-9917-9565648FE331}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Value' , ), 2, (2, (), [ (16393, 10, None, "IID('{E32E5703-0141-41CF-9917-9565648FE331}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IDynamicCrossSection_vtables_dispatch_ = 1
IDynamicCrossSection_vtables_ = [
	(( 'FillCutPlanes' , 'Result' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'FillCutPlanes' , 'Result' , ), 1, (1, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'StepsCount' , 'Result' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'AddStep' , 'BuildingType' , 'Result' , ), 3, (3, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{4A8082D6-FC56-4FD4-A258-51E74A44510D}')") , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Step' , 'Index' , 'Result' , ), 4, (4, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{4A8082D6-FC56-4FD4-A258-51E74A44510D}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'Result' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IDynamicCrossSectionStep_vtables_dispatch_ = 1
IDynamicCrossSectionStep_vtables_ = [
	(( 'BuildingType' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'PVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Parameters' , 'PVal' , ), 2, (2, (), [ (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IDynamicCrossSectionStepParametersByBorderPoints_vtables_dispatch_ = 1
IDynamicCrossSectionStepParametersByBorderPoints_vtables_ = [
	(( 'BuildingType' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'PVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'GetPoint' , 'First' , 'X' , 'Y' , 'Z' , 
			 'Result' , ), 2, (2, (), [ (11, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'SetPoint' , 'First' , 'X' , 'Y' , 'Z' , 
			 'Result' , ), 3, (3, (), [ (11, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'AssociationObject' , 'First' , 'PVal' , ), 4, (4, (), [ (11, 1, None, None) , 
			 (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'AssociationObject' , 'First' , 'PVal' , ), 4, (4, (), [ (11, 1, None, None) , 
			 (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'PointType' , 'First' , 'PVal' , ), 5, (5, (), [ (11, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'PointType' , 'First' , 'PVal' , ), 5, (5, (), [ (11, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'PointParameters' , 'First' , 'Result' , ), 6, (6, (), [ (11, 1, None, None) , 
			 (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
]

IDynamicCrossSectionStepParametersByFreePlane_vtables_dispatch_ = 1
IDynamicCrossSectionStepParametersByFreePlane_vtables_ = [
	(( 'LocalCoordinateSystem' , 'PVal' , ), 801, (801, (), [ (16393, 10, None, "IID('{BA6395F5-3506-4483-8864-4EEC220AF316}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ReverseDirection' , 'Result' , ), 802, (802, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IDynamicCrossSectionStepParametersByOffsetPlane_vtables_dispatch_ = 1
IDynamicCrossSectionStepParametersByOffsetPlane_vtables_ = [
	(( 'OffsetPlane' , 'PVal' , ), 801, (801, (), [ (16393, 10, None, "IID('{5F5E0FA2-84D7-44D1-A946-018EBEB82926}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'PlaneBuildingType' , 'PVal' , ), 802, (802, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'PlaneBuildingType' , 'PVal' , ), 802, (802, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'BaseStep' , 'PVal' , ), 803, (803, (), [ (16393, 10, None, "IID('{4A8082D6-FC56-4FD4-A258-51E74A44510D}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'BaseStep' , 'PVal' , ), 803, (803, (), [ (9, 1, None, "IID('{4A8082D6-FC56-4FD4-A258-51E74A44510D}')") , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'ReverseDirection' , 'Result' , ), 804, (804, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IDynamicCrossSectionStepParametersByRotatedPlane_vtables_dispatch_ = 1
IDynamicCrossSectionStepParametersByRotatedPlane_vtables_ = [
	(( 'Plane' , 'PVal' , ), 801, (801, (), [ (16393, 10, None, "IID('{4AD8121E-95BB-4B0F-B1D8-E0394A72DEE2}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'PlaneBuildingType' , 'PVal' , ), 802, (802, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'PlaneBuildingType' , 'PVal' , ), 802, (802, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'BaseStep' , 'PVal' , ), 803, (803, (), [ (16393, 10, None, "IID('{4A8082D6-FC56-4FD4-A258-51E74A44510D}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'BaseStep' , 'PVal' , ), 803, (803, (), [ (9, 1, None, "IID('{4A8082D6-FC56-4FD4-A258-51E74A44510D}')") , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'ReverseDirection' , 'Result' , ), 804, (804, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IDynamicCrossSectionStepParametersByZone_vtables_dispatch_ = 1
IDynamicCrossSectionStepParametersByZone_vtables_ = [
	(( 'Zone' , 'PVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{05C71C4B-F8BC-42E9-89D5-B9BC0145ED36}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Zone' , 'PVal' , ), 1, (1, (), [ (9, 1, None, "IID('{05C71C4B-F8BC-42E9-89D5-B9BC0145ED36}')") , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IDynamicCrossSectionsManager_vtables_dispatch_ = 1
IDynamicCrossSectionsManager_vtables_ = [
	(( 'DynamicCrossSectionsCount' , 'Result' , ), 8501, (8501, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'DynamicCrossSection' , 'Index' , 'Result' , ), 8502, (8502, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{DC056BC2-64CD-4AFE-910E-97ACE56B647B}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'AddDynamicCrossSection' , 'Result' , ), 19003, (19003, (), [ (16393, 10, None, "IID('{DC056BC2-64CD-4AFE-910E-97ACE56B647B}')") , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'CurrentDynamicCrossSection' , 'Result' , ), 8504, (8504, (), [ (16393, 10, None, "IID('{DC056BC2-64CD-4AFE-910E-97ACE56B647B}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'CurrentDynamicCrossSection' , 'Result' , ), 8504, (8504, (), [ (9, 1, None, "IID('{DC056BC2-64CD-4AFE-910E-97ACE56B647B}')") , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'DynamicCrossSectionModeOn' , 'Result' , ), 8505, (8505, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'DynamicCrossSectionModeOn' , 'Result' , ), 8505, (8505, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IEdge_vtables_dispatch_ = 1
IEdge_vtables_ = [
	(( 'Curve3DType' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'BaseCurve3DType' , 'PVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'MathCurve' , 'Result' , ), 3, (3, (), [ (16393, 10, None, "IID('{6D2112DD-F6E1-49CF-9678-89B0C6CC6ACA}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'IsPeriodic' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'IsStraight' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'AdjacentFace' , 'FacePlus' , 'Result' , ), 6, (6, (), [ (11, 1, None, None) , 
			 (16393, 10, None, "IID('{299A549E-3F82-4F60-98A3-258D632AA635}')") , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Vertex' , 'Start' , 'Result' , ), 7, (7, (), [ (11, 1, None, None) , 
			 (16393, 10, None, "IID('{585E265F-0AAD-4A42-8030-3A69882A9B39}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'GetPoint' , 'Start' , 'X' , 'Y' , 'Z' , 
			 'PVal' , ), 8, (8, (), [ (11, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Edges' , 'Start' , 'Result' , ), 9, (9, (), [ (11, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'OrientedEdges' , 'Result' , ), 10, (10, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'GetLength' , 'BitVector' , 'Result' , ), 11, (11, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'IsSketchEdge' , 'PVal' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
]

IEdgeLengthMeasurement3D_vtables_dispatch_ = 1
IEdgeLengthMeasurement3D_vtables_ = [
	(( 'Edges' , 'Result' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Edges' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Lengths' , 'Result' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Sum' , 'Result' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IEdgeLengthMeasurements3D_vtables_dispatch_ = 1
IEdgeLengthMeasurements3D_vtables_ = [
	(( 'EdgeLengthMeasurement3D' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{93154762-202B-41E4-9ADA-7792EC3E6481}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{93154762-202B-41E4-9ADA-7792EC3E6481}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IEditDoubleManipulator_vtables_dispatch_ = 1
IEditDoubleManipulator_vtables_ = [
	(( 'EditValue' , 'PVal' , ), 2001, (2001, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'EditValue' , 'PVal' , ), 2001, (2001, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'SetValueRange' , 'MinVal' , 'MaxVal' , 'PVal' , ), 2002, (2002, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'IsEditCreated' , 'PVal' , ), 2003, (2003, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

IEllipse_vtables_dispatch_ = 1
IEllipse_vtables_ = [
	(( 'Xc' , 'PVal' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Xc' , 'PVal' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Yc' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Yc' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'X1' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'X1' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'PVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'SemiAxisA' , 'PVal' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'SemiAxisA' , 'PVal' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'SemiAxisB' , 'PVal' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'SemiAxisB' , 'PVal' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Result' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Result' , ), 10, (10, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
]

IEllipseArc_vtables_dispatch_ = 1
IEllipseArc_vtables_ = [
	(( 'Xc' , 'PVal' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Xc' , 'PVal' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Yc' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Yc' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'T1' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'T1' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'T2' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'T2' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Angle1' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Angle1' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Angle2' , 'PVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Angle2' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'SemiAxisA' , 'PVal' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'SemiAxisA' , 'PVal' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'SemiAxisB' , 'PVal' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'SemiAxisB' , 'PVal' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Result' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Result' , ), 11, (11, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
]

IEllipseArcs_vtables_dispatch_ = 1
IEllipseArcs_vtables_ = [
	(( 'EllipseArc' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{320D837F-0B27-45B0-98B4-9D21156E9857}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{320D837F-0B27-45B0-98B4-9D21156E9857}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IEllipses_vtables_dispatch_ = 1
IEllipses_vtables_ = [
	(( 'Ellipse' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{F60C9107-D8E2-433C-A0E3-A4E508D09353}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{F60C9107-D8E2-433C-A0E3-A4E508D09353}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IEmbodiment_vtables_dispatch_ = 1
IEmbodiment_vtables_ = [
	(( 'Name' , 'PVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'PVal' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'GetMarking' , 'MarkingType' , 'AddSystemDelimer' , 'Marking' , ), 2, (2, (), [ 
			 (3, 1, None, None) , (11, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'SetMarking' , 'MarkingType' , 'Marking' , 'Result' , ), 3, (3, (), [ 
			 (3, 1, None, None) , (8, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Mass' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Density' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Material' , 'PVal' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'SetMaterial' , 'Name' , 'Density' , 'PVal' , ), 7, (7, (), [ 
			 (8, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Update' , 'PVal' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'PVal' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'IsCurrent' , 'PVal' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'IsCurrent' , 'PVal' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Owner' , 'PVal' , ), 11, (11, (), [ (16393, 10, None, "IID('{83DBB66A-83B8-47D9-93FE-2A90992193E8}')") , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Embodiment' , 'Index' , 'PVal' , ), 12, (12, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{83DBB66A-83B8-47D9-93FE-2A90992193E8}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'EmbodimentsCount' , 'Count' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'SpecRough' , 'PVal' , ), 14, (14, (), [ (16393, 10, None, "IID('{AED8F9FC-E493-4CBD-9341-9D9E39E14FDC}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'LeftHandedCS' , 'PVal' , ), 15, (15, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'LeftHandedCS' , 'PVal' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Part' , 'PVal' , ), 16, (16, (), [ (16393, 10, None, "IID('{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}')") , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
]

IEmbodimentsManager_vtables_dispatch_ = 1
IEmbodimentsManager_vtables_ = [
	(( 'GetEmbodimentsTree' , 'MarkingType' , 'AddSystemDelimer' , 'AddSpaces' , 'Tree' , 
			 ), 8001, (8001, (), [ (3, 1, None, None) , (11, 1, None, None) , (11, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'GetCurrentEmbodimentMarking' , 'MarkingType' , 'AddSystemDelimer' , 'Marking' , ), 8002, (8002, (), [ 
			 (3, 1, None, None) , (11, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'CurrentEmbodimentIndex' , 'Index' , ), 8003, (8003, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'SetCurrentEmbodiment' , 'Index' , 'Result' , ), 8004, (8004, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'AddEmbodiment' , 'ParentIndex' , 'Depended' , 'BaseMarking' , 'EmbodimentNumber' , 
			 'AdditionalNumber' , 'Result' , ), 8005, (8005, (), [ (12, 1, None, None) , (11, 1, None, None) , 
			 (8, 1, None, None) , (8, 1, None, None) , (8, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'DeleteEmbodiment' , 'Index' , 'Result' , ), 8006, (8006, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'GetEmbodimentMarking' , 'Index' , 'MarkingType' , 'AddSystemDelimer' , 'Marking' , 
			 ), 8007, (8007, (), [ (3, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'SetEmbodimentMarking' , 'Index' , 'MarkingType' , 'Marking' , 'Result' , 
			 ), 8008, (8008, (), [ (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'EmbodimentCount' , 'Count' , ), 8009, (8009, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Embodiment' , 'Index' , 'PVal' , ), 8010, (8010, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{83DBB66A-83B8-47D9-93FE-2A90992193E8}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'TopEmbodiment' , 'PVal' , ), 8011, (8011, (), [ (16393, 10, None, "IID('{83DBB66A-83B8-47D9-93FE-2A90992193E8}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'CurrentEmbodiment' , 'PVal' , ), 8012, (8012, (), [ (16393, 10, None, "IID('{83DBB66A-83B8-47D9-93FE-2A90992193E8}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'AddMirrorEmbodiment' , 'ParentIndex' , 'BaseMarking' , 'EmbodimentNumber' , 'AdditionalNumber' , 
			 'Result' , ), 8013, (8013, (), [ (12, 1, None, None) , (8, 1, None, None) , (8, 1, None, None) , 
			 (8, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'EmbodimentAdditionalNumber' , 'PVal' , ), 8014, (8014, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'EmbodimentAdditionalNumber' , 'PVal' , ), 8014, (8014, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
]

IEquidistant_vtables_dispatch_ = 1
IEquidistant_vtables_ = [
	(( 'BaseObject' , 'Result' , ), 1, (1, (), [ (16393, 10, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'BaseObject' , 'Result' , ), 1, (1, (), [ (9, 1, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Side' , 'PVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Side' , 'PVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'CutMode' , 'PVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'CutMode' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'DegenerateSegment' , 'PVal' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'DegenerateSegment' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'LeftRadius' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'LeftRadius' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'RightRadius' , 'PVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'RightRadius' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Result' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Result' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
]

IEquidistant3D_vtables_dispatch_ = 1
IEquidistant3D_vtables_ = [
	(( 'Edges' , 'PVal' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Edges' , 'PVal' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'OnFace' , 'PVal' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'OnFace' , 'PVal' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'BaseObject' , 'Result' , ), 3, (3, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'BaseObject' , 'Result' , ), 3, (3, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Distance' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Distance' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'CutMode' , 'PVal' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'CutMode' , 'PVal' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'KeepRadius' , 'PVal' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'KeepRadius' , 'PVal' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'DirFromBegin' , 'PVal' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'DirFromBegin' , 'PVal' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Vector3D' , 'PVal' , ), 9, (9, (), [ (16393, 10, None, "IID('{D51A4DCF-627D-44F5-89BA-46EF2449A212}')") , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'AddEdge' , 'Object' , 'PVal' , ), 10, (10, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'RemoveEdge' , 'Index' , 'Result' , ), 11, (11, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'EdgesCount' , 'PVal' , ), 12, (12, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
]

IEquidistantSurface_vtables_dispatch_ = 1
IEquidistantSurface_vtables_ = [
	(( 'BaseSurface' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'BaseSurface' , 'Result' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Distance' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Distance' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IEquidistantSurfaces_vtables_dispatch_ = 1
IEquidistantSurfaces_vtables_ = [
	(( 'EquidistantSurface' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{F665724F-7177-4B93-B51A-063BAF70CED4}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{F665724F-7177-4B93-B51A-063BAF70CED4}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IEquidistants_vtables_dispatch_ = 1
IEquidistants_vtables_ = [
	(( 'Equidistant' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{EE6713F9-AD9A-466D-9FB9-D19235E42C95}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{EE6713F9-AD9A-466D-9FB9-D19235E42C95}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IEquidistants3D_vtables_dispatch_ = 1
IEquidistants3D_vtables_ = [
	(( 'Equidistant3D' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{C25DDBF4-3CC1-467D-B996-E30ED4D529B6}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{C25DDBF4-3CC1-467D-B996-E30ED4D529B6}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IEvolution_vtables_dispatch_ = 1
IEvolution_vtables_ = [
	(( 'OperationResult' , 'Result' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'OperationResult' , 'Result' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Sketch' , 'Result' , ), 2, (2, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Sketch' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Edges' , 'Result' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Edges' , 'Result' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'SketchShiftType' , 'Result' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'SketchShiftType' , 'Result' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'GetPathLength' , 'Unit' , 'Result' , ), 5, (5, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'BySurfaceNormal' , 'PVal' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'BySurfaceNormal' , 'PVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
]

IEvolutions_vtables_dispatch_ = 1
IEvolutions_vtables_ = [
	(( 'Evolution' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{9AE8A34A-DE20-4C56-A793-BFCBB9343903}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'EvolutionType' , 'Result' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{9AE8A34A-DE20-4C56-A793-BFCBB9343903}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IExtensionSurface_vtables_dispatch_ = 1
IExtensionSurface_vtables_ = [
	(( 'Edges' , 'PVal' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Edges' , 'PVal' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionType' , 'PVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionType' , 'PVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLimitType' , 'PVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionLimitType' , 'PVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Length' , 'Result' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Length' , 'Result' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'SideEdges' , 'Result' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'SideEdges' , 'Result' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'DirObject' , 'PVal' , ), 6, (6, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'DirObject' , 'PVal' , ), 6, (6, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'TargetObject' , 'PVal' , ), 7, (7, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'TargetObject' , 'PVal' , ), 7, (7, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Sense' , 'Result' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Sense' , 'Result' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'BuildingVectorParameters' , 'Val' , ), 9, (9, (), [ (16393, 10, None, "IID('{D51A4DCF-627D-44F5-89BA-46EF2449A212}')") , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
]

IExtensionSurfaces_vtables_dispatch_ = 1
IExtensionSurfaces_vtables_ = [
	(( 'ExtensionSurface' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{27FE71E1-C84D-4F59-8F9B-F0C144314C83}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{27FE71E1-C84D-4F59-8F9B-F0C144314C83}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IExternalGDIObject_vtables_dispatch_ = 1
IExternalGDIObject_vtables_ = [
	(( 'ObjectID' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'SetTexts' , 'Texts' , 'Points' , 'Colors' , 'Fonts' , 
			 'Is3DPoints' , 'Res' , ), 2, (2, (), [ (12, 1, None, None) , (12, 1, None, None) , 
			 (12, 1, None, None) , (12, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'Frame' , ), 3, (3, (), [ (9, 1, None, "IID('{4437FABA-990F-45E2-B1A2-7754FB326B76}')") , (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'Frame' , ), 3, (3, (), [ (9, 1, None, "IID('{4437FABA-990F-45E2-B1A2-7754FB326B76}')") , (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'Result' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'SetPlace' , 'Place' , 'Res' , ), 5, (5, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'NonScalableX' , 'PVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'NonScalableX' , 'PVal' , ), 6, (6, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'NonScalableY' , 'PVal' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'NonScalableY' , 'PVal' , ), 7, (7, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'NonScalableZ' , 'PVal' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'NonScalableZ' , 'PVal' , ), 8, (8, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'AlwaysDrawInScreenPlane' , 'PVal' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'AlwaysDrawInScreenPlane' , 'PVal' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'SetTextsAlign' , 'TextsAlign' , 'Res' , ), 10, (10, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'SetBkColors' , 'BkColors' , 'Res' , ), 11, (11, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'NonPickable' , 'PVal' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'NonPickable' , 'PVal' , ), 12, (12, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'SetTextColors' , 'textColors' , 'Res' , ), 13, (13, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'SetTextOrientation' , 'textOrients' , 'Res' , ), 14, (14, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ScalableText' , 'PVal' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ScalableText' , 'PVal' , ), 15, (15, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
]

IExternalTessellationManager_vtables_dispatch_ = 1
IExternalTessellationManager_vtables_ = [
	(( 'Add' , 'PVal' , ), 7501, (7501, (), [ (16393, 10, None, "IID('{9D5CDE37-7833-4359-B25A-FE7011EA771A}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'TessellationObject' , 'Id' , 'PVal' , ), 7502, (7502, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{9D5CDE37-7833-4359-B25A-FE7011EA771A}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'ObjectsVisible' , 'Ids' , 'Frame' , ), 7503, (7503, (), [ (12, 1, None, None) , 
			 (9, 1, None, "IID('{4437FABA-990F-45E2-B1A2-7754FB326B76}')") , (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'DeleteObjects' , 'Id' , 'Result' , ), 7504, (7504, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Clear' , 'Result' , ), 7505, (7505, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'AddGDIObject' , 'PVal' , ), 7506, (7506, (), [ (16393, 10, None, "IID('{C234E81D-4232-41FD-980D-8E7E6EA7B733}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'GDIObject' , 'Id' , 'PVal' , ), 7507, (7507, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{C234E81D-4232-41FD-980D-8E7E6EA7B733}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'CreateTextureImage' , 'Width' , 'Heigh' , 'RGBA' , 'WrapMode' , 
			 'FiltMode' , 'ImageData' , 'Res' , ), 7508, (7508, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , (11, 1, None, None) , (11, 1, None, None) , (11, 1, None, None) , (12, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'DeleteTextureImage' , 'TexImgId' , 'Result' , ), 7509, (7509, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'PickObjects' , 'Frame' , 'PickRay' , 'Visible' , 'PickedObjs' , 
			 'PickedPars' , 'Result' , ), 7510, (7510, (), [ (9, 1, None, "IID('{4437FABA-990F-45E2-B1A2-7754FB326B76}')") , (12, 1, None, None) , 
			 (11, 1, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'DisableModelDrawing' , 'ForElements' , 'Result' , ), 7511, (7511, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'EnableModelDrawing' , 'Result' , ), 7512, (7512, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'IsModelDrawingEnabled' , 'ForElements' , 'Result' , ), 7513, (7513, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'DisableModelRotation' , 'Result' , ), 7514, (7514, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'DisableModelRotation' , 'Result' , ), 7514, (7514, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
]

IExternalTessellationObject_vtables_dispatch_ = 1
IExternalTessellationObject_vtables_ = [
	(( 'ObjectID' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'SetTessellation' , 'Points' , 'Indexes' , 'Normals' , 'Colors' , 
			 'Res' , ), 2, (2, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , 
			 (12, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'Frame' , ), 3, (3, (), [ (9, 1, None, "IID('{4437FABA-990F-45E2-B1A2-7754FB326B76}')") , (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'Frame' , ), 3, (3, (), [ (9, 1, None, "IID('{4437FABA-990F-45E2-B1A2-7754FB326B76}')") , (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'Result' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'SetAdvancedColor' , 'Color' , 'Ambient' , 'Diffuse' , 'Specularity' , 
			 'Shininess' , 'Transparency' , 'Emission' , 'Result' , ), 5, (5, (), [ 
			 (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'SetEdges' , 'Points' , 'Edges' , 'Colors' , 'Res' , 
			 ), 6, (6, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'SetPlaces' , 'Places' , 'Res' , ), 7, (7, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'SetEdgeStyles' , 'Styles' , 'Res' , ), 8, (8, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'SetEdgeWidths' , 'Widths' , 'Res' , ), 9, (9, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'SetTextureImage' , 'Width' , 'Heigh' , 'RGBA' , 'WrapMode' , 
			 'FiltMode' , 'ImageData' , 'Res' , ), 10, (10, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , (11, 1, None, None) , (11, 1, None, None) , (11, 1, None, None) , (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'SetTexturePoints' , 'Image2D' , 'ImagePoints' , 'Res' , ), 11, (11, (), [ 
			 (11, 1, None, None) , (12, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'SetFacetMode' , 'SideMode' , 'CullingMode' , 'Res' , ), 12, (12, (), [ 
			 (11, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'DisableDepthTest' , 'PVal' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'DisableDepthTest' , 'PVal' , ), 13, (13, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'NonScalableX' , 'PVal' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'NonScalableX' , 'PVal' , ), 14, (14, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'NonScalableY' , 'PVal' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'NonScalableY' , 'PVal' , ), 15, (15, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'NonScalableZ' , 'PVal' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'NonScalableZ' , 'PVal' , ), 16, (16, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'AlwaysDrawInScreenPlane' , 'PVal' , ), 17, (17, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'AlwaysDrawInScreenPlane' , 'PVal' , ), 17, (17, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'NonGeometry' , 'PVal' , ), 18, (18, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'NonGeometry' , 'PVal' , ), 18, (18, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'SelectTextureImage' , 'TexImgId' , 'Res' , ), 19, (19, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'NonPickable' , 'PVal' , ), 20, (20, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'NonPickable' , 'PVal' , ), 20, (20, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'SetEdgeColors' , 'Colors' , 'Res' , ), 21, (21, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
]

IExtrusion_vtables_dispatch_ = 1
IExtrusion_vtables_ = [
	(( 'Sketch' , 'Result' , ), 1, (1, (), [ (9, 1, None, "IID('{E6BBF50D-8401-4FB3-A6B6-153D3F447255}')") , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Sketch' , 'Result' , ), 1, (1, (), [ (16393, 10, None, "IID('{E6BBF50D-8401-4FB3-A6B6-153D3F447255}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'ExtrusionType' , 'Normal' , 'PVal' , ), 3, (3, (), [ (11, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'ExtrusionType' , 'Normal' , 'PVal' , ), 3, (3, (), [ (11, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Depth' , 'Normal' , 'PVal' , ), 4, (4, (), [ (11, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Depth' , 'Normal' , 'PVal' , ), 4, (4, (), [ (11, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'DraftValue' , 'Normal' , 'PVal' , ), 5, (5, (), [ (11, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'DraftValue' , 'Normal' , 'PVal' , ), 5, (5, (), [ (11, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'DraftOutward' , 'Normal' , 'PVal' , ), 6, (6, (), [ (11, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'DraftOutward' , 'Normal' , 'PVal' , ), 6, (6, (), [ (11, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'DepthObject' , 'Normal' , 'PVal' , ), 7, (7, (), [ (11, 1, None, None) , 
			 (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'DepthObject' , 'Normal' , 'PVal' , ), 7, (7, (), [ (11, 1, None, None) , 
			 (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'GetSideParameters' , 'Normal' , 'ExtrusionType' , 'Depth' , 'DraftValue' , 
			 'DraftOutward' , 'DepthObject' , 'PVal' , ), 8, (8, (), [ (11, 1, None, None) , 
			 (16387, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 2, None, None) , (16393, 2, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'SetSideParameters' , 'Normal' , 'ExtrusionType' , 'Depth' , 'DraftValue' , 
			 'DraftOutward' , 'DepthObject' , 'PVal' , ), 9, (9, (), [ (11, 1, None, None) , 
			 (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (11, 1, None, None) , (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
]

IExtrusion1_vtables_dispatch_ = 1
IExtrusion1_vtables_ = [
	(( 'Profile' , 'Result' , ), 10, (10, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Profile' , 'Result' , ), 10, (10, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'DirectionObject' , 'Result' , ), 11, (11, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'DirectionObject' , 'Result' , ), 11, (11, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Vector3D' , 'Val' , ), 12, (12, (), [ (16393, 10, None, "IID('{D51A4DCF-627D-44F5-89BA-46EF2449A212}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'CutOffByPoint' , 'Normal' , 'PVal' , ), 13, (13, (), [ (11, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'CutOffByPoint' , 'Normal' , 'PVal' , ), 13, (13, (), [ (11, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'OperationResult' , 'Result' , ), 14, (14, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'OperationResult' , 'Result' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IExtrusionSurface_vtables_dispatch_ = 1
IExtrusionSurface_vtables_ = [
	(( 'ClosedShell' , 'PVal' , ), 301, (301, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'ClosedShell' , 'PVal' , ), 301, (301, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
]

IExtrusions_vtables_dispatch_ = 1
IExtrusions_vtables_ = [
	(( 'Extrusion' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{0D7FFE70-33EB-442C-A9B6-A205EA85A237}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'ExtrusionType' , 'Result' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{0D7FFE70-33EB-442C-A9B6-A205EA85A237}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IFace_vtables_dispatch_ = 1
IFace_vtables_ = [
	(( 'Surface3DType' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'BaseSurface3DType' , 'PVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'MathSurface' , 'Result' , ), 3, (3, (), [ (16393, 10, None, "IID('{25675C2F-10FD-4CE7-9E73-D3915D3E894E}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'NormalOrientation' , 'Result' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Loops' , 'Result' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'ConnectedFaces' , 'Result' , ), 6, (6, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'LimitingEdges' , 'Result' , ), 7, (7, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'IsConnectedWith' , 'OtherFace' , 'PVal' , ), 8, (8, (), [ (9, 1, None, "IID('{299A549E-3F82-4F60-98A3-258D632AA635}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'PVal' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'GetConeParam' , 'Height' , 'Angle' , 'Radius' , 'PVal' , 
			 ), 10, (10, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'GetArea' , 'Unit' , 'PVal' , ), 11, (11, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Tessellation' , 'PVal' , ), 12, (12, (), [ (16393, 10, None, "IID('{CA597AE6-2ECE-4483-A997-1AFD5ABF9D3A}')") , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
]

IFaceRemover_vtables_dispatch_ = 1
IFaceRemover_vtables_ = [
	(( 'Faces' , 'PVal' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Faces' , 'PVal' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
]

IFaceRemovers_vtables_dispatch_ = 1
IFaceRemovers_vtables_ = [
	(( 'FaceRemover' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{4CAE21E3-4183-47A6-94B8-8AD14D5775EE}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{4CAE21E3-4183-47A6-94B8-8AD14D5775EE}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IFeature7_vtables_dispatch_ = 1
IFeature7_vtables_ = [
	(( 'Name' , 'PVal' , ), 2001, (2001, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'UpdateStamp' , 'PVal' , ), 2002, (2002, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'OwnerFeature' , 'Result' , ), 2003, (2003, (), [ (16393, 10, None, "IID('{EF4343FA-985D-4FE9-AD5F-439BC8F92958}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Valid' , 'PVal' , ), 2004, (2004, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Excluded' , 'PVal' , ), 2005, (2005, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Excluded' , 'PVal' , ), 2005, (2005, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ModelObjects' , 'ObjType' , 'Result' , ), 2006, (2006, (), [ (12, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'FeatureType' , 'Type' , ), 2007, (2007, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'PVal' , ), 2008, (2008, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'SubFeatures' , 'TreeType' , 'Through' , 'LibObject' , 'Result' , 
			 ), 2009, (2009, (), [ (3, 1, None, None) , (11, 1, None, None) , (11, 1, None, None) , (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'ResultBodies' , 'Result' , ), 2010, (2010, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Variables' , 'ExternalOnly' , 'InSource' , 'Result' , ), 2011, (2011, (), [ 
			 (11, 1, None, None) , (11, 1, None, None) , (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Variable' , 'External' , 'InSource' , 'Index' , 'Result' , 
			 ), 2012, (2012, (), [ (11, 1, None, None) , (11, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{8BAB52D9-8EF6-43A6-A1B8-AF42D5961A94}')") , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'VariablesCount' , 'External' , 'InSource' , 'Result' , ), 2013, (2013, (), [ 
			 (11, 1, None, None) , (11, 1, None, None) , (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ObjectError' , 'PVal' , ), 2014, (2014, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'State' , 'PVal' , ), 2015, (2015, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
]

IFeaturePattern_vtables_dispatch_ = 1
IFeaturePattern_vtables_ = [
	(( 'InitialObjects' , 'Objects' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'InitialObjects' , 'Objects' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'InstanceDeletedIndexes' , 'PVal' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'InstanceDeletedIndexes' , 'PVal' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Destroy' , 'Result' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'IsInitialObject' , 'Object' , 'Result' , ), 4, (4, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'AddInitialObjects' , 'Objects' , 'Result' , ), 5, (5, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Clear' , 'Result' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'IsSuitableObject' , 'Object' , 'Result' , ), 7, (7, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'GeometryPattern' , 'PVal' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'GeometryPattern' , 'PVal' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'BasePointType' , 'PVal' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'BasePointType' , 'PVal' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'BasePoint' , 'PVal' , ), 10, (10, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'BasePoint' , 'PVal' , ), 10, (10, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Exemplar' , 'Index1' , 'Index2' , 'PVal' , ), 11, (11, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'GetExemplarsCounts' , 'Count1' , 'Count2' , 'Result' , ), 12, (12, (), [ 
			 (16387, 2, None, None) , (16387, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
]

IFeaturePatterns_vtables_dispatch_ = 1
IFeaturePatterns_vtables_ = [
	(( 'FeaturePattern' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{C020E994-FB7F-449A-A3D9-2181135F4200}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Type' , 'Result' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{C020E994-FB7F-449A-A3D9-2181135F4200}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IFillet_vtables_dispatch_ = 1
IFillet_vtables_ = [
	(( 'BuildingType' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'PVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'BaseObjects' , 'PVal' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'BaseObjects' , 'PVal' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Radius1' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Radius1' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Radius2' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Radius2' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Coefficient' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Coefficient' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Chord' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Chord' , 'PVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Tangent' , 'PVal' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Tangent' , 'PVal' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'SmoothCorner' , 'PVal' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'SmoothCorner' , 'PVal' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'RoundCorners' , 'PVal' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'RoundCorners' , 'PVal' , ), 9, (9, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'AutoSaveEdge' , 'PVal' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'AutoSaveEdge' , 'PVal' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'SaveEdge' , 'PVal' , ), 11, (11, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'SaveEdge' , 'PVal' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'StopFilletOn' , 'First' , 'PVal' , ), 12, (12, (), [ (11, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'StopFilletOn' , 'First' , 'PVal' , ), 12, (12, (), [ (11, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'StopFilletOffsetMode' , 'First' , 'PVal' , ), 13, (13, (), [ (11, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'StopFilletOffsetMode' , 'First' , 'PVal' , ), 13, (13, (), [ (11, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'StopFilletOffset' , 'First' , 'PVal' , ), 14, (14, (), [ (11, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'StopFilletOffset' , 'First' , 'PVal' , ), 14, (14, (), [ (11, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'StopFilletCutObject' , 'First' , 'PVal' , ), 15, (15, (), [ (11, 1, None, None) , 
			 (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'StopFilletCutObject' , 'First' , 'PVal' , ), 15, (15, (), [ (11, 1, None, None) , 
			 (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'StopFilletCutByObject' , 'First' , 'PVal' , ), 16, (16, (), [ (11, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'StopFilletCutByObject' , 'First' , 'PVal' , ), 16, (16, (), [ (11, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'StopFilletCutPointIndex' , 'First' , 'PVal' , ), 17, (17, (), [ (11, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'StopFilletCutPointIndex' , 'First' , 'PVal' , ), 17, (17, (), [ (11, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'StopFilletDirection' , 'PVal' , ), 18, (18, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'StopFilletDirection' , 'PVal' , ), 18, (18, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'VariableRadiusOn' , 'PVal' , ), 19, (19, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'VariableRadiusOn' , 'PVal' , ), 19, (19, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'VariableRadiusCount' , 'PVal' , ), 20, (20, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'AddVariableRadius' , 'PointObject' , 'Radius' , 'Position' , 'PositionType' , 
			 'Result' , ), 21, (21, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , (5, 1, None, None) , (5, 1, None, None) , 
			 (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'VariableRadiusClear' , 'PVal' , ), 22, (22, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'VariableRadiusDelete' , 'Index' , 'PVal' , ), 23, (23, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'VariableRadius' , 'Index' , 'PVal' , ), 24, (24, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'VariableRadius' , 'Index' , 'PVal' , ), 24, (24, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'VariableRadiusPosition' , 'Index' , 'PVal' , ), 25, (25, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'VariableRadiusPosition' , 'Index' , 'PVal' , ), 25, (25, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'VariableRadiusPositionLenght' , 'Index' , 'PVal' , ), 26, (26, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'VariableRadiusPositionLenght' , 'Index' , 'PVal' , ), 26, (26, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'VariableRadiusEdge' , 'Index' , 'PVal' , ), 27, (27, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
]

IFilletCurve_vtables_dispatch_ = 1
IFilletCurve_vtables_ = [
	(( 'Curve1' , 'PVal' , ), 1, (1, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Curve1' , 'PVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Curve2' , 'PVal' , ), 2, (2, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Curve2' , 'PVal' , ), 2, (2, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'TrimCurve1' , 'PVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'TrimCurve1' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'TrimCurve2' , 'PVal' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'TrimCurve2' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'Val' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'Val' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'Result' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'Result' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'GetCurve1CutPoint' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 7, (7, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'SetCurve1CutPoint' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 8, (8, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'GetCurve2CutPoint' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 9, (9, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'SetCurve2CutPoint' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 10, (10, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'OnSurface' , 'Val' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'OnSurface' , 'Val' , ), 11, (11, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
]

IFilletCurves_vtables_dispatch_ = 1
IFilletCurves_vtables_ = [
	(( 'FilletCurve' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{962810E4-0C48-4886-8B80-AEA166B1952B}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{962810E4-0C48-4886-8B80-AEA166B1952B}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IFillets_vtables_dispatch_ = 1
IFillets_vtables_ = [
	(( 'Fillet' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{15E3132F-4D4E-451F-B104-478A4E3E0128}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{15E3132F-4D4E-451F-B104-478A4E3E0128}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IFindObjectParameters_vtables_dispatch_ = 1
IFindObjectParameters_vtables_ = [
	(( 'FindObjectsType' , 'PVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'FindObjectsType' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'DrawingObjectType' , 'Type' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'DrawingObjectType' , 'Type' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'FindInBackgroundViewsAndLayers' , 'PVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'FindInBackgroundViewsAndLayers' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'GeometryOnly' , 'PVal' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'GeometryOnly' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'DisabledObjects' , 'PVal' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'DisabledObjects' , 'PVal' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'DisabledViews' , 'PVal' , ), 6, (6, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'DisabledViews' , 'PVal' , ), 6, (6, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Clear' , 'Result' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IFragmentDocument_vtables_dispatch_ = 1
IFragmentDocument_vtables_ = [
	(( 'IsSketch' , 'Result' , ), 5001, (5001, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
]

IFragmentDocumentSettings_vtables_dispatch_ = 1
IFragmentDocumentSettings_vtables_ = [
]

IFrameTreesManager_vtables_dispatch_ = 1
IFrameTreesManager_vtables_ = [
	(( 'AddTab' , 'TabCaption' , 'OcxClassID' , 'PVal' , ), 2001, (2001, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'RemoveTab' , 'Ocx' , 'PVal' , ), 2002, (2002, (), [ (9, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'ActiveTab' , 'Ocx' , ), 2003, (2003, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'ActiveTab' , 'Ocx' , ), 2003, (2003, (), [ (9, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'TabsVisible' , 'PVal' , ), 2004, (2004, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'TabsVisible' , 'PVal' , ), 2004, (2004, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'TreeCaption' , 'Ocx' , 'PVal' , ), 2005, (2005, (), [ (9, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'TreeCaption' , 'Ocx' , 'PVal' , ), 2005, (2005, (), [ (9, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'AddTabEx' , 'TabCaption' , 'TreeCaption' , 'OcxClassID' , 'Active' , 
			 'Layout' , 'PVal' , ), 2006, (2006, (), [ (8, 1, None, None) , (8, 1, None, None) , 
			 (8, 1, None, None) , (11, 1, None, None) , (3, 1, None, None) , (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'TabVisible' , 'Ocx' , 'PVal' , ), 2007, (2007, (), [ (9, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'TabVisible' , 'Ocx' , 'PVal' , ), 2007, (2007, (), [ (9, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

IFullFillet_vtables_dispatch_ = 1
IFullFillet_vtables_ = [
	(( 'Side1Faces' , 'PVal' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Side1Faces' , 'PVal' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Side2Faces' , 'PVal' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Side2Faces' , 'PVal' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'CenterFaces' , 'PVal' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'CenterFaces' , 'PVal' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Tangent' , 'PVal' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Tangent' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
]

IFullFillets_vtables_dispatch_ = 1
IFullFillets_vtables_ = [
	(( 'FullFillet' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{7FEA11B5-B4D3-4481-AB09-B0DE0A699189}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{7FEA11B5-B4D3-4481-AB09-B0DE0A699189}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IGabaritObject_vtables_dispatch_ = 1
IGabaritObject_vtables_ = [
	(( 'GetCurrentGabarit' , 'NPage' , 'P1X' , 'P1Y' , 'P1Z' , 
			 'P2X' , 'P2Y' , 'P2Z' , 'PVal' , ), 1, (1, (), [ 
			 (3, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'AddGabarit' , 'X1' , 'Y1' , 'Z1' , 'X2' , 
			 'Y2' , 'Z2' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'GetGabaritModifying' , 'DocGabaritModify' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
]

IHatch_vtables_dispatch_ = 1
IHatch_vtables_ = [
	(( 'X' , 'Result' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'X' , 'Result' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'Result' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'Result' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Side' , 'Result' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Side' , 'Result' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IHatchParam_vtables_dispatch_ = 1
IHatchParam_vtables_ = [
	(( 'Style' , 'Result' , ), 6500, (6500, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Result' , ), 6500, (6500, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'HatchColor' , 'Result' , ), 6501, (6501, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'HatchColor' , 'Result' , ), 6501, (6501, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Step' , 'Result' , ), 6502, (6502, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Step' , 'Result' , ), 6502, (6502, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'HatchAngle' , 'Result' , ), 6503, (6503, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'HatchAngle' , 'Result' , ), 6503, (6503, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'HatchType' , 'Result' , ), 6504, (6504, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'HatchType' , 'Result' , ), 6504, (6504, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'Result' , ), 6505, (6505, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'Result' , ), 6505, (6505, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'IsSheetAngle' , 'Result' , ), 6506, (6506, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'IsSheetAngle' , 'Result' , ), 6506, (6506, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'HatchFileName' , 'Result' , ), 6507, (6507, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'LibraryStyleNumber' , 'Result' , ), 6508, (6508, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'AddStyleFromLibrary' , 'FileName' , 'StyleNumber' , 'Result' , ), 6509, (6509, (), [ 
			 (8, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IHatchStyle_vtables_dispatch_ = 1
IHatchStyle_vtables_ = [
	(( 'Angle' , 'Result' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'Result' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'KeepAngle' , 'Result' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'KeepAngle' , 'Result' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Scale' , 'Result' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Scale' , 'Result' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'KeepScale' , 'Result' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'KeepScale' , 'Result' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'HatchType' , 'Result' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'HatchType' , 'Result' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'Result' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'Result' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'CurvesStyles' , 'Result' , ), 7, (7, (), [ (16393, 10, None, "IID('{E821AE61-FA05-4B39-8908-BD37D6D044A4}')") , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'LinesCount' , 'Result' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'AddLine' , 'Style' , 'X' , 'Y' , 'Angle' , 
			 'DX' , 'DY' , 'Result' , ), 9, (9, (), [ (9, 1, None, "IID('{5046BF60-687A-4E5D-BBEF-3CB5D95F7A41}')") , 
			 (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'DeleteLine' , 'Index' , 'Result' , ), 10, (10, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'ClearLines' , 'Result' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'LineStyle' , 'Index' , 'Result' , ), 12, (12, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{5046BF60-687A-4E5D-BBEF-3CB5D95F7A41}')") , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'LineStyle' , 'Index' , 'Result' , ), 12, (12, (), [ (3, 1, None, None) , 
			 (9, 1, None, "IID('{5046BF60-687A-4E5D-BBEF-3CB5D95F7A41}')") , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'LineBeginX' , 'Index' , 'Result' , ), 13, (13, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'LineBeginX' , 'Index' , 'Result' , ), 13, (13, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'LineBeginY' , 'Index' , 'Result' , ), 14, (14, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'LineBeginY' , 'Index' , 'Result' , ), 14, (14, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'LineAngle' , 'Index' , 'Result' , ), 15, (15, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'LineAngle' , 'Index' , 'Result' , ), 15, (15, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'LineDx' , 'Index' , 'Result' , ), 16, (16, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'LineDx' , 'Index' , 'Result' , ), 16, (16, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'LineDy' , 'Index' , 'Result' , ), 17, (17, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'LineDy' , 'Index' , 'Result' , ), 17, (17, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
]

IHatches_vtables_dispatch_ = 1
IHatches_vtables_ = [
	(( 'Hatch' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{826C0B5B-0146-417A-8128-E581F8430F37}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{826C0B5B-0146-417A-8128-E581F8430F37}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IHeightDimension_vtables_dispatch_ = 1
IHeightDimension_vtables_ = [
	(( 'DimensionType' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'DimensionType' , 'PVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'X' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'X' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'X1' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'X1' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'PVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'PVal' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'PVal' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
]

IHeightDimensions_vtables_dispatch_ = 1
IHeightDimensions_vtables_ = [
	(( 'HeightDimension' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{938BE57F-55FF-469F-82A5-B1CD6CCF8340}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{938BE57F-55FF-469F-82A5-B1CD6CCF8340}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IHole3D_vtables_dispatch_ = 1
IHole3D_vtables_ = [
	(( 'Diameter' , 'PVal' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Diameter' , 'PVal' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Depth' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Depth' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'DepthType' , 'PVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'DepthType' , 'PVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'EndFaceType' , 'PVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'EndFaceType' , 'PVal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'EndFaceAngle' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'EndFaceAngle' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'HoleType' , 'PVal' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'HoleType' , 'PVal' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'DepthVertex' , 'PVal' , ), 7, (7, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'DepthVertex' , 'PVal' , ), 7, (7, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'DepthFace' , 'PVal' , ), 8, (8, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'DepthFace' , 'PVal' , ), 8, (8, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Axis' , 'PVal' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Axis' , 'PVal' , ), 9, (9, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Thread' , 'PVal' , ), 10, (10, (), [ (16393, 10, None, "IID('{BC710E4D-A679-40FC-B5AE-16302ABBFEB8}')") , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'HoleParameters' , 'PVal' , ), 11, (11, (), [ (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'ShowThread' , 'PVal' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'ShowThread' , 'PVal' , ), 12, (12, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
]

IHoleDisposal_vtables_dispatch_ = 1
IHoleDisposal_vtables_ = [
	(( 'BaseSurface' , 'PVal' , ), 201, (201, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'BaseSurface' , 'PVal' , ), 201, (201, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'OffsetType' , 'PVal' , ), 202, (202, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'OffsetType' , 'PVal' , ), 202, (202, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Point3DParamSurface' , 'PVal' , ), 203, (203, (), [ (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'AssociationVertex' , 'PVal' , ), 204, (204, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'AssociationVertex' , 'PVal' , ), 204, (204, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Perpendicular' , 'PVal' , ), 205, (205, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Perpendicular' , 'PVal' , ), 205, (205, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 206, (206, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 206, (206, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'ProcessCanopy' , 'PVal' , ), 207, (207, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'ProcessCanopy' , 'PVal' , ), 207, (207, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Vector' , 'PVal' , ), 208, (208, (), [ (16393, 10, None, "IID('{D51A4DCF-627D-44F5-89BA-46EF2449A212}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'DirectionObject' , 'PVal' , ), 209, (209, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'DirectionObject' , 'PVal' , ), 209, (209, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
]

IHoles3D_vtables_dispatch_ = 1
IHoles3D_vtables_ = [
	(( 'Hole3D' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{4C901765-3E0D-4A5D-B2F8-FA708E3CC605}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{4C901765-3E0D-4A5D-B2F8-FA708E3CC605}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IHypertextReferenceParam_vtables_dispatch_ = 1
IHypertextReferenceParam_vtables_ = [
	(( 'LinkObject' , 'PVal' , ), 3001, (3001, (), [ (9, 1, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'LinkObject' , 'PVal' , ), 3001, (3001, (), [ (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'HypertextType' , 'PVal' , ), 3002, (3002, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'HypertextType' , 'PVal' , ), 3002, (3002, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'TextLineIndex' , 'PVal' , ), 3003, (3003, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'TextLineIndex' , 'PVal' , ), 3003, (3003, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Brackets' , 'PVal' , ), 3004, (3004, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Brackets' , 'PVal' , ), 3004, (3004, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Precission' , 'PVal' , ), 3005, (3005, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Precission' , 'PVal' , ), 3005, (3005, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Destroy' , 'Result' , ), 3006, (3006, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'PropertyId' , 'PVal' , ), 3007, (3007, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'PropertyId' , 'PVal' , ), 3007, (3007, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
]

IImportedSurface_vtables_dispatch_ = 1
IImportedSurface_vtables_ = [
	(( 'GetPoints' , 'UPCount' , 'VPCount' , 'Points' , ), 1, (1, (), [ 
			 (16387, 2, None, None) , (16387, 2, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'SetPoints' , 'UPCount' , 'VPCount' , 'Points' , 'Result' , 
			 ), 2, (2, (), [ (3, 1, None, None) , (3, 1, None, None) , (12, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ClearPointsSeries' , 'Result' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'BeginPointsSeries' , 'UV' , 'IndexAt' , 'Result' , ), 4, (4, (), [ 
			 (11, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'AddPoint' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 5, (5, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'EndPointsSeries' , 'Result' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'AddPointsSeries' , 'UV' , 'IndexAt' , 'Arr' , 'Result' , 
			 ), 7, (7, (), [ (11, 1, None, None) , (3, 1, None, None) , (12, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'PointsVCount' , 'PVal' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'PointsUCount' , 'PVal' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'GetPoint' , 'UIndex' , 'VIndex' , 'X' , 'Y' , 
			 'Z' , 'Result' , ), 10, (10, (), [ (3, 1, None, None) , (3, 1, None, None) , 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'SetPoint' , 'UIndex' , 'VIndex' , 'X' , 'Y' , 
			 'Z' , 'Result' , ), 11, (11, (), [ (3, 1, None, None) , (3, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'DeletePointsSeries' , 'UV' , 'Index' , 'Result' , ), 12, (12, (), [ 
			 (11, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
]

IImportedSurfaces_vtables_dispatch_ = 1
IImportedSurfaces_vtables_ = [
	(( 'ImportedSurface' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{2B98DEE2-3352-4F9B-85B7-F0D94742EFA7}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{2B98DEE2-3352-4F9B-85B7-F0D94742EFA7}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Load' , 'FileName' , 'SewSurfaces' , 'Result' , ), 3, (3, (), [ 
			 (8, 1, None, None) , (11, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IIncline_vtables_dispatch_ = 1
IIncline_vtables_ = [
	(( 'Faces' , 'PVal' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Faces' , 'PVal' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Plane' , 'PVal' , ), 4, (4, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Plane' , 'PVal' , ), 4, (4, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
]

IInclines_vtables_dispatch_ = 1
IInclines_vtables_ = [
	(( 'Incline' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{2DB9E3CE-7603-4C88-8FF5-F8985AD26C58}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{2DB9E3CE-7603-4C88-8FF5-F8985AD26C58}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IInsert_vtables_dispatch_ = 1
IInsert_vtables_ = [
	(( 'Name' , 'PVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'PVal' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Comment' , 'PVal' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Comment' , 'PVal' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'LibraryFolder' , 'PVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'PathName' , 'PVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Edit' , 'PVal' , ), 5, (5, (), [ (16393, 10, None, "IID('{5C6E318D-BD6E-4AFA-8A13-977EAA0845EF}')") , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'PVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'InsertType' , 'PVal' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
]

IInsertionDefinition_vtables_dispatch_ = 1
IInsertionDefinition_vtables_ = [
	(( 'InsertionType' , 'Val' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'PVal' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'PVal' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'FileName' , 'PVal' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'FileName' , 'PVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Open' , 'Visible' , 'ReadOnly' , 'Result' , ), 4, (4, (), [ 
			 (11, 49, 'True', None) , (11, 49, 'False', None) , (16393, 10, None, "IID('{096E62B3-7184-4998-9925-74BB710D8D8E}')") , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'InsertionObjectsCount' , 'PVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

IInsertionFragment_vtables_dispatch_ = 1
IInsertionFragment_vtables_ = [
	(( 'Scale' , 'PVal' , ), 2001, (2001, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Scale' , 'PVal' , ), 2001, (2001, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'MultiLayer' , 'PVal' , ), 2002, (2002, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'MultiLayer' , 'PVal' , ), 2002, (2002, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Variables' , 'Result' , ), 2003, (2003, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Variable' , 'Index' , 'Result' , ), 2004, (2004, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{8BAB52D9-8EF6-43A6-A1B8-AF42D5961A94}')") , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'VariablesCount' , 'Result' , ), 2005, (2005, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'VariableTable' , 'Result' , ), 2006, (2006, (), [ (16393, 10, None, "IID('{2B8B154E-ED76-4FF0-B3E4-FEE691D014A4}')") , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'CreateSpcObjects' , 'PVal' , ), 2007, (2007, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'CreateSpcObjects' , 'PVal' , ), 2007, (2007, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'BreakObjectsEnabled' , 'PVal' , ), 2008, (2008, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'BreakObjectsEnabled' , 'PVal' , ), 2008, (2008, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
]

IInsertionObject_vtables_dispatch_ = 1
IInsertionObject_vtables_ = [
	(( 'GetPlacement' , 'X' , 'Y' , 'Angle' , 'MirrorSymmetry' , 
			 'Result' , ), 1, (1, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16395, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'SetPlacement' , 'X' , 'Y' , 'Angle' , 'MirrorSymmetry' , 
			 'Result' , ), 2, (2, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'PVal' , ), 3, (3, (), [ (8, 49, "''", None) , ], 1 , 4 , 4 , 0 , 176 , (3, 32, None, None) , 0 , )),
	(( 'Name' , 'PVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'FileName' , 'PVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'InsertionType' , 'PVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineScale' , 'PVal' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'DimensionLineScale' , 'PVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'InsertionDefinition' , 'PVal' , ), 7, (7, (), [ (16393, 10, None, "IID('{66907239-09BA-4456-AC9A-318804099628}')") , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'InsertionDefinition' , 'PVal' , ), 7, (7, (), [ (9, 1, None, "IID('{66907239-09BA-4456-AC9A-318804099628}')") , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
]

IInsertionObjects_vtables_dispatch_ = 1
IInsertionObjects_vtables_ = [
	(( 'InsertionObject' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{B9E9CE68-371D-4600-9233-84D89A015C55}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Definition' , 'Result' , ), 2, (2, (), [ (9, 1, None, "IID('{66907239-09BA-4456-AC9A-318804099628}')") , 
			 (16393, 10, None, "IID('{B9E9CE68-371D-4600-9233-84D89A015C55}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IInsertionParameters_vtables_dispatch_ = 1
IInsertionParameters_vtables_ = [
	(( 'FileName' , 'PVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'SourceHeight' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'SourceWidth' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Scale' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Scale' , 'PVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'AutoScale' , 'ByHeight' , 'PVal' , ), 7, (7, (), [ (11, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'InsertionDefinition' , 'PVal' , ), 9, (9, (), [ (16393, 10, None, "IID('{66907239-09BA-4456-AC9A-318804099628}')") , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'InsertionDefinition' , 'PVal' , ), 9, (9, (), [ (9, 1, None, "IID('{66907239-09BA-4456-AC9A-318804099628}')") , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'ImageResolution' , 'PVal' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'ImageResolution' , 'PVal' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Palette' , 'PVal' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
]

IInsertionView_vtables_dispatch_ = 1
IInsertionView_vtables_ = [
	(( 'ViewNumber' , 'PVal' , ), 2001, (2001, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ViewNumber' , 'PVal' , ), 2001, (2001, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'ViewName' , 'PVal' , ), 2002, (2002, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'ThinLines' , 'PVal' , ), 2003, (2003, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ThinLines' , 'PVal' , ), 2003, (2003, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'OwnerDocumentParams' , 'PVal' , ), 2004, (2004, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'OwnerDocumentParams' , 'PVal' , ), 2004, (2004, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'CreateSpcObjects' , 'PVal' , ), 2005, (2005, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'CreateSpcObjects' , 'PVal' , ), 2005, (2005, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
]

IInsertionsManager_vtables_dispatch_ = 1
IInsertionsManager_vtables_ = [
	(( 'InsertionDefinitions' , 'Type' , 'PVal' , ), 501, (501, (), [ (3, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'InsertionDefinition' , 'Type' , 'Index' , 'PVal' , ), 502, (502, (), [ 
			 (3, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{66907239-09BA-4456-AC9A-318804099628}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'AddDefinition' , 'Type' , 'Name' , 'FileName' , 'PVal' , 
			 ), 503, (503, (), [ (3, 1, None, None) , (8, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{66907239-09BA-4456-AC9A-318804099628}')") , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'DefinitionsCount' , 'Type' , 'PVal' , ), 504, (504, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

IInserts_vtables_dispatch_ = 1
IInserts_vtables_ = [
	(( 'Item' , 'Index' , 'Result' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{D6A6D305-6B5C-4392-B61D-D669C092EEF2}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Name' , 'DocType' , 'Result' , ), 1, (1, (), [ 
			 (8, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{D6A6D305-6B5C-4392-B61D-D669C092EEF2}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IInsertsLibraries_vtables_dispatch_ = 1
IInsertsLibraries_vtables_ = [
	(( 'Item' , 'Index' , 'Result' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{885CAD68-B42B-45CF-8620-E0138558EFE3}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'PathName' , 'LibManagerFolder' , 'Result' , ), 1, (1, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{885CAD68-B42B-45CF-8620-E0138558EFE3}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IInsertsLibrary_vtables_dispatch_ = 1
IInsertsLibrary_vtables_ = [
	(( 'ActiveFolder' , 'PVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'SetActiveFolder' , 'PathFolder' , 'LastIsFile' , 'HaveLibName' , 'PVal' , 
			 ), 2, (2, (), [ (8, 1, None, None) , (11, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Inserts' , 'PVal' , ), 3, (3, (), [ (16393, 10, None, "IID('{FCBF6340-119D-4736-BB95-F1EAB4BEF1B8}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'AddFolder' , 'PathFolder' , 'PVal' , ), 4, (4, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'RemoveFolder' , 'PathFolder' , 'PVal' , ), 5, (5, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'PVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
]

IIsoparametricCurve_vtables_dispatch_ = 1
IIsoparametricCurve_vtables_ = [
	(( 'SurfaceObject' , 'PVal' , ), 1, (1, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'SurfaceObject' , 'PVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'U' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'U' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'V' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'V' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'AssociationObject' , 'PVal' , ), 4, (4, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'AssociationObject' , 'PVal' , ), 4, (4, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'UDirection' , 'PVal' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'UDirection' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'GetPoint' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 6, (6, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'SetPoint' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 7, (7, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
]

IIsoparametricCurves_vtables_dispatch_ = 1
IIsoparametricCurves_vtables_ = [
	(( 'IsoparametricCurve' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{D7E519C3-EA15-43CA-A2EB-D5F119A70051}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{D7E519C3-EA15-43CA-A2EB-D5F119A70051}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IIsoparametricCurvesSet_vtables_dispatch_ = 1
IIsoparametricCurvesSet_vtables_ = [
	(( 'SurfaceObject' , 'PVal' , ), 1, (1, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'SurfaceObject' , 'PVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'UCount' , 'PVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'UCount' , 'PVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'VCount' , 'PVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'VCount' , 'PVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'SaveBoundaries' , 'PVal' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'SaveBoundaries' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Destroy' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
]

IIsoparametricCurvesSets_vtables_dispatch_ = 1
IIsoparametricCurvesSets_vtables_ = [
	(( 'IsoparametricCurvesSet' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{F6768800-D726-4530-8966-CA1DC1AC2927}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{F6768800-D726-4530-8966-CA1DC1AC2927}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IJointSurface_vtables_dispatch_ = 1
IJointSurface_vtables_ = [
	(( 'Curves1' , 'PVal' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Curves1' , 'PVal' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Curves2' , 'PVal' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Curves2' , 'PVal' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Face1' , 'PVal' , ), 3, (3, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Face1' , 'PVal' , ), 3, (3, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Face2' , 'PVal' , ), 4, (4, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Face2' , 'PVal' , ), 4, (4, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Face1ConnectType' , 'PVal' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Face1ConnectType' , 'PVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Face2ConnectType' , 'PVal' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Face2ConnectType' , 'PVal' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Sense1' , 'Result' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Sense1' , 'Result' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Sense2' , 'Result' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Sense2' , 'Result' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Tension1' , 'PVal' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Tension1' , 'PVal' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Tension2' , 'PVal' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Tension2' , 'PVal' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'SideEdges1' , 'Result' , ), 11, (11, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'SideEdges1' , 'Result' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'SideEdges2' , 'Result' , ), 12, (12, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'SideEdges2' , 'Result' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'GeneralTension' , 'PVal' , ), 13, (13, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'GeneralTension' , 'PVal' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'CheckSelfIntersection' , 'PVal' , ), 14, (14, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'CheckSelfIntersection' , 'PVal' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'AutoSegmentation' , 'PVal' , ), 15, (15, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'AutoSegmentation' , 'PVal' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'AddNewEdge' , 'IndexAt' , 'Result' , ), 16, (16, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'DeleteEdge' , 'Index' , 'Result' , ), 17, (17, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'EdgesCount' , 'PVal' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'SetEdgePointParam' , 'EdgeIndex' , 'StartPoint' , 'X' , 'Y' , 
			 'Z' , 'T' , 'AssociateVertex' , 'Result' , ), 19, (19, (), [ 
			 (3, 1, None, None) , (11, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (16389, 1, None, None) , (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'GetEdgePointParam' , 'EdgeIndex' , 'StartPoint' , 'X' , 'Y' , 
			 'Z' , 'T' , 'AssociateVertex' , 'Result' , ), 20, (20, (), [ 
			 (3, 1, None, None) , (11, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16393, 2, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'GetEdgePointParams' , 'Points1' , 'T1' , 'AssociateVertexes1' , 'Points2' , 
			 'T2' , 'AssociateVertexes2' , 'Result' , ), 21, (21, (), [ (16396, 2, None, None) , 
			 (16396, 2, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
]

IJointSurfaces_vtables_dispatch_ = 1
IJointSurfaces_vtables_ = [
	(( 'JointSurface' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E9C8814E-A3C0-4E31-BFFD-ED8F3DD13016}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{E9C8814E-A3C0-4E31-BFFD-ED8F3DD13016}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IKompasAPIObject_vtables_dispatch_ = 1
IKompasAPIObject_vtables_ = [
	(( 'Parent' , 'PVal' , ), 1000, (1000, (), [ (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Application' , 'PVal' , ), 1001, (1001, (), [ (16393, 10, None, "IID('{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Type' , 'Type' , ), 1002, (1002, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Reference' , 'PVal' , ), 1003, (1003, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

IKompasCollection_vtables_dispatch_ = 1
IKompasCollection_vtables_ = [
	(( '_NewEnum' , 'PObject' , ), -4, (-4, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'PVal' , ), 2000, (2000, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IKompasDocument_vtables_dispatch_ = 1
IKompasDocument_vtables_ = [
	(( 'DocumentType' , 'Type' , ), 3000, (3000, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'DocumentFrames' , 'PFrames' , ), 3001, (3001, (), [ (16393, 10, None, "IID('{1D18C466-C085-4D68-A465-A85D0C8E3A0E}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Close' , 'closeOptions' , 'PRes' , ), 3002, (3002, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Save' , ), 3003, (3003, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'SaveAs' , 'PathName' , ), 3004, (3004, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'PVal' , ), 3005, (3005, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'PathName' , 'PVal' , ), 3006, (3006, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Path' , 'PVal' , ), 3007, (3007, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'PVal' , ), 3008, (3008, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Active' , 'PVal' , ), 3009, (3009, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Active' , 'PVal' , ), 3009, (3009, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ReadOnly' , 'PVal' , ), 3010, (3010, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'ReadOnly' , 'PVal' , ), 3010, (3010, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Changed' , 'PVal' , ), 3011, (3011, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'DocumentSettings' , 'PVal' , ), 3012, (3012, (), [ (16393, 10, None, "IID('{B35FF50E-2991-4630-8AB8-DC3153E7971A}')") , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'SpecificationDescriptions' , 'PVal' , ), 3013, (3013, (), [ (16393, 10, None, "IID('{B9632C5C-86E1-4BC9-83A5-A954E407246A}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'LayoutSheets' , 'PVal' , ), 3014, (3014, (), [ (16393, 10, None, "IID('{7AB54196-0B76-4B01-B769-7F47637173C4}')") , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'UserDataStoragesMng' , 'PVal' , ), 3015, (3015, (), [ (16393, 10, None, "IID('{77A6D4CA-6418-4DEE-B59C-400BFD052375}')") , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
]

IKompasDocument1_vtables_dispatch_ = 1
IKompasDocument1_vtables_ = [
	(( 'Delete' , 'Objects' , 'Result' , ), 10001, (10001, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Attributes' , 'Key1' , 'Key2' , 'Key3' , 'Key4' , 
			 'Numb' , 'Objects' , 'Result' , ), 10002, (10002, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , (12, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'ObjectsByAttr' , 'Key1' , 'Key2' , 'Key3' , 'Key4' , 
			 'Numb' , 'ObjectType' , 'Result' , ), 10003, (10003, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , (12, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'CreateAttr' , 'AttrID' , 'Libname' , 'Objects' , 'Result' , 
			 ), 10004, (10004, (), [ (5, 1, None, None) , (8, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{94F965B0-5ABB-4994-98C7-B08FA8515452}')") , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'ViewEditAttr' , 'HWnd' , 'Objects' , 'Result' , ), 10005, (10005, (), [ 
			 (3, 1, None, None) , (12, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'GetInterface' , 'Type' , 'Result' , ), 10006, (10006, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ExternalFilesNames' , 'allFiles' , 'Result' , ), 10007, (10007, (), [ (11, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'SaveAsEx' , 'PathName' , 'saveMode' , 'Result' , ), 10008, (10008, (), [ 
			 (8, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'CreationDate' , 'Result' , ), 10009, (10009, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'LastChangeDate' , 'Result' , ), 10010, (10010, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'GetExternalFilesNamesEx' , 'allFiles' , 'Files' , 'FilesTypes' , 'Result' , 
			 ), 10011, (10011, (), [ (11, 1, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Organization' , 'PVal' , ), 10012, (10012, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Organization' , 'PVal' , ), 10012, (10012, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'ReportPropertiesMultieditMode' , 'On' , 'UpdateProps' , 'Result' , ), 10013, (10013, (), [ 
			 (11, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Metadata' , 'PVal' , ), 10014, (10014, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Metadata' , 'PVal' , ), 10014, (10014, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'WriteMetadataToFile' , 'FileName' , 'Result' , ), 10015, (10015, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'ApplyMetadataFromFile' , 'FileName' , 'Result' , ), 10016, (10016, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'ActivateToolbarSet' , 'TolbrSetId' , 'Result' , ), 10017, (10017, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'RedrawDocument' , 'Mode' , 'Result' , ), 10018, (10018, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Author' , 'PVal' , ), 10019, (10019, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Author' , 'PVal' , ), 10019, (10019, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Comment' , 'PVal' , ), 10020, (10020, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Comment' , 'PVal' , ), 10020, (10020, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'DocumentTypeId' , 'PVal' , ), 10021, (10021, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'DocumentTypeId' , 'PVal' , ), 10021, (10021, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'OpenVersion' , 'Result' , ), 10022, (10022, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
]

IKompasDocument2D_vtables_dispatch_ = 1
IKompasDocument2D_vtables_ = [
	(( 'ViewsAndLayersManager' , 'Result' , ), 1, (1, (), [ (16393, 10, None, "IID('{A4737593-578B-4187-8CAD-E1056EB5404B}')") , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'GetDrawingObjectNotifyResult' , 'Result' , ), 2, (2, (), [ (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
]

IKompasDocument2D1_vtables_dispatch_ = 1
IKompasDocument2D1_vtables_ = [
	(( 'EditMacroObject' , 'PVal' , ), 11001, (11001, (), [ (16393, 10, None, "IID('{B21C70C9-53EC-4BB7-A9DB-BCE852CA6716}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'DrawingGroups' , 'PVal' , ), 11002, (11002, (), [ (16393, 10, None, "IID('{0ED06421-907C-4EF0-89F7-AEFC81BEF1DF}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'NamedGroups' , 'PVal' , ), 11003, (11003, (), [ (16393, 10, None, "IID('{0ED06421-907C-4EF0-89F7-AEFC81BEF1DF}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'CurrentGroup' , 'PVal' , ), 11004, (11004, (), [ (16393, 10, None, "IID('{2C96ACB2-4877-45D9-B62D-78BBAD704458}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'SelectionManager' , 'PVal' , ), 11005, (11005, (), [ (16393, 10, None, "IID('{E6DF688C-5B23-436B-A027-A96BFD5484CC}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ChooseManager' , 'PVal' , ), 11006, (11006, (), [ (16393, 10, None, "IID('{E2D9EAA6-F88C-4ADB-AC32-854E32E9FEE1}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'CopyObjects' , 'Objects' , 'Params' , 'Result' , ), 11007, (11007, (), [ 
			 (12, 1, None, None) , (9, 1, None, "IID('{58E1BACA-32D5-4EAB-87E9-D14816DAC29F}')") , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Variables' , 'ExternalOnly' , 'Result' , ), 11008, (11008, (), [ (11, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Variable' , 'External' , 'Index' , 'Result' , ), 11009, (11009, (), [ 
			 (11, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{8BAB52D9-8EF6-43A6-A1B8-AF42D5961A94}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'VariablesCount' , 'External' , 'Result' , ), 11010, (11010, (), [ (11, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'UpdateVariables' , 'Result' , ), 11011, (11011, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'VariableTable' , 'Result' , ), 11012, (11012, (), [ (16393, 10, None, "IID('{2B8B154E-ED76-4FF0-B3E4-FEE691D014A4}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'IsVariableNameValid' , 'Name' , 'Result' , ), 11013, (11013, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'AddVariable' , 'Name' , 'Value' , 'Note' , 'Result' , 
			 ), 11014, (11014, (), [ (8, 1, None, None) , (5, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{8BAB52D9-8EF6-43A6-A1B8-AF42D5961A94}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'RebuildDocument' , 'Result' , ), 11015, (11015, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'CreateHyperLink' , 'Objects' , 'Type' , 'Text' , 'LinkObject' , 
			 'Level' , 'Result' , ), 11016, (11016, (), [ (12, 1, None, None) , (3, 1, None, None) , 
			 (8, 1, None, None) , (9, 1, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'GetHyperLinkObjects' , 'Type' , 'LinkObject' , 'Level' , 'Text' , 
			 'Result' , ), 11017, (11017, (), [ (3, 1, None, None) , (9, 1, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , (3, 1, None, None) , 
			 (8, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'DeleteHyperLinks' , 'Objects' , 'Result' , ), 11018, (11018, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'EditMacroVisibleRegime' , 'Result' , ), 11019, (11019, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'GetObjectById' , 'Id' , 'Result' , ), 11020, (11020, (), [ (20, 1, None, None) , 
			 (16393, 10, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'LibProcess' , 'ProcessType' , 'Result' , ), 11021, (11021, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{C74D7419-0970-4904-907C-DCC5407C59B0}')") , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'FindObject' , 'X' , 'Y' , 'Limit' , 'Param' , 
			 'Result' , ), 11022, (11022, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (9, 1, None, "IID('{8F1A7123-BD4A-4A49-8E22-1502D59B1FE6}')") , (16393, 10, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'FindObjects' , 'X' , 'Y' , 'Limit' , 'Param' , 
			 'Result' , ), 11023, (11023, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (9, 1, None, "IID('{8F1A7123-BD4A-4A49-8E22-1502D59B1FE6}')") , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'SelectObjects' , 'RegionType' , 'XMin' , 'YMin' , 'XMax' , 
			 'YMax' , 'Result' , ), 11024, (11024, (), [ (3, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
]

IKompasDocument3D_vtables_dispatch_ = 1
IKompasDocument3D_vtables_ = [
	(( 'TopPart' , 'Result' , ), 5002, (5002, (), [ (16393, 10, None, "IID('{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}')") , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'HideAllPlanes' , 'PVal' , ), 5003, (5003, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'HideAllPlanes' , 'PVal' , ), 5003, (5003, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'HideAllAxis' , 'PVal' , ), 5004, (5004, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'HideAllAxis' , 'PVal' , ), 5004, (5004, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'HideAllSketches' , 'PVal' , ), 5005, (5005, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'HideAllSketches' , 'PVal' , ), 5005, (5005, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'HideAllPlaces' , 'PVal' , ), 5006, (5006, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'HideAllPlaces' , 'PVal' , ), 5006, (5006, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'HideAllSurfaces' , 'PVal' , ), 5007, (5007, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'HideAllSurfaces' , 'PVal' , ), 5007, (5007, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'HideAllThreads' , 'PVal' , ), 5008, (5008, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'HideAllThreads' , 'PVal' , ), 5008, (5008, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'HideAllCurves' , 'PVal' , ), 5009, (5009, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'HideAllCurves' , 'PVal' , ), 5009, (5009, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'HideAllControlPoints' , 'PVal' , ), 5010, (5010, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'HideAllControlPoints' , 'PVal' , ), 5010, (5010, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'Perspective' , 'PVal' , ), 5011, (5011, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'Perspective' , 'PVal' , ), 5011, (5011, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'DrawMode' , 'PVal' , ), 5012, (5012, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'DrawMode' , 'PVal' , ), 5012, (5012, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'ShadedWireframe' , 'PVal' , ), 5013, (5013, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'ShadedWireframe' , 'PVal' , ), 5013, (5013, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'CreateObjectsInCurrentLocalCS' , 'PVal' , ), 5014, (5014, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'CreateObjectsInCurrentLocalCS' , 'PVal' , ), 5014, (5014, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'HideAllDimensions' , 'PVal' , ), 5015, (5015, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'HideAllDimensions' , 'PVal' , ), 5015, (5015, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'HideAllDesignations' , 'PVal' , ), 5016, (5016, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'HideAllDesignations' , 'PVal' , ), 5016, (5016, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'HideAllAuxiliaryGeom' , 'PVal' , ), 5017, (5017, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'HideAllAuxiliaryGeom' , 'PVal' , ), 5017, (5017, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'HideInComponentsMode' , 'PVal' , ), 5018, (5018, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'HideInComponentsMode' , 'PVal' , ), 5018, (5018, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'SelectionManager' , 'PVal' , ), 5019, (5019, (), [ (16393, 10, None, "IID('{E6DF688C-5B23-436B-A027-A96BFD5484CC}')") , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'ChooseManager' , 'PVal' , ), 5020, (5020, (), [ (16393, 10, None, "IID('{E2D9EAA6-F88C-4ADB-AC32-854E32E9FEE1}')") , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'CreateAttrEx' , 'AttrID' , 'Libname' , 'Objects' , 'SourcePart' , 
			 'Result' , ), 5021, (5021, (), [ (5, 1, None, None) , (8, 1, None, None) , (12, 1, None, None) , 
			 (9, 1, None, "IID('{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}')") , (16393, 10, None, "IID('{94F965B0-5ABB-4994-98C7-B08FA8515452}')") , ], 1 , 1 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'AttributesEx' , 'Key1' , 'Key2' , 'Key3' , 'Key4' , 
			 'Numb' , 'Objects' , 'SourcePart' , 'Result' , ), 5022, (5022, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , 
			 (12, 1, None, None) , (9, 1, None, "IID('{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}')") , (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'RebuildDocument' , 'Result' , ), 5023, (5023, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'EnableUndo' , 'PVal' , ), 5024, (5024, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'EnableUndo' , 'PVal' , ), 5024, (5024, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'UndoContainer' , 'PVal' , ), 5025, (5025, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'UndoContainer' , 'PVal' , ), 5025, (5025, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'DeleteHistory' , 'Result' , ), 5026, (5026, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'TechnicalDemand3D' , 'Result' , ), 5027, (5027, (), [ (16393, 10, None, "IID('{CD435B3D-175C-4E18-BAA0-81FDD7EB6A86}')") , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceMode' , 'PVal' , ), 5028, (5028, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceMode' , 'PVal' , ), 5028, (5028, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
]

IKompasDocument3D1_vtables_dispatch_ = 1
IKompasDocument3D1_vtables_ = [
	(( 'HideLayoutGeometry' , 'PVal' , ), 5029, (5029, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'HideLayoutGeometry' , 'PVal' , ), 5029, (5029, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'EditObject' , 'Result' , ), 5030, (5030, (), [ (9, 1, None, "IID('{EF4343FA-985D-4FE9-AD5F-439BC8F92958}')") , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'EditObject' , 'Result' , ), 5030, (5030, (), [ (16393, 10, None, "IID('{EF4343FA-985D-4FE9-AD5F-439BC8F92958}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Document3DManager' , 'PVal' , ), 5031, (5031, (), [ (16393, 10, None, "IID('{75F1CA7E-5071-4C1F-8A9F-F76A6E05CAF6}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'SpecRough' , 'PVal' , ), 5032, (5032, (), [ (16393, 10, None, "IID('{AED8F9FC-E493-4CBD-9341-9D9E39E14FDC}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ClearUndo' , 'Result' , ), 5033, (5033, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'MateConstraints' , 'Result' , ), 5034, (5034, (), [ (16393, 10, None, "IID('{95F316E1-0A18-4F42-8B70-1423250F244D}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'ExcludeObjects' , 'Objects' , 'Excl' , 'Result' , ), 5035, (5035, (), [ 
			 (12, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'ExecuteProcessOfInsertComponentFromFile' , 'FileName' , 'ProcessType' , 'Result' , ), 5036, (5036, (), [ 
			 (8, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'LibProcess' , 'ProcessType' , 'Result' , ), 5037, (5037, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{77730022-3179-4674-AE49-604FABC0B6B1}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

IKompasDocument3DNotifyResult_vtables_dispatch_ = 1
IKompasDocument3DNotifyResult_vtables_ = [
	(( 'NotifyType' , 'PVal' , ), 4001, (4001, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'NotifyObjectType' , 'PVal' , ), 4002, (4002, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'NotifyObject' , 'PVal' , ), 4003, (4003, (), [ (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'RequestFilesType' , 'PVal' , ), 4004, (4004, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

IKompasError_vtables_dispatch_ = 1
IKompasError_vtables_ = [
	(( 'Code' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Description' , 'PVal' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Error3D' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Report' , ), 4, (4, (), [ ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Clear' , ), 5, (5, (), [ ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ILayer_vtables_dispatch_ = 1
ILayer_vtables_ = [
	(( 'Name' , 'PVal' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'PVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Background' , 'PVal' , ), 2, (2, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Background' , 'PVal' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'PVal' , ), 3, (3, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Current' , 'PVal' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Current' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Color' , 'PVal' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Color' , 'PVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Comment' , 'PVal' , ), 6, (6, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Comment' , 'PVal' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'ObjectCount' , 'PVal' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Printable' , 'PVal' , ), 8, (8, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Printable' , 'PVal' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
]

ILayer3D_vtables_dispatch_ = 1
ILayer3D_vtables_ = [
	(( 'Name' , 'PVal' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'PVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Number' , 'PVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Number' , 'PVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'PVal' , ), 3, (3, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Current' , 'PVal' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Current' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Color' , 'PVal' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Color' , 'PVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Comment' , 'PVal' , ), 6, (6, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Comment' , 'PVal' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Editable' , 'PVal' , ), 7, (7, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Editable' , 'PVal' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Projected' , 'PVal' , ), 8, (8, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Projected' , 'PVal' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'Result' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Update' , 'Result' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
]

ILayerFilterCondition_vtables_dispatch_ = 1
ILayerFilterCondition_vtables_ = [
	(( 'Number' , 'PVal' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Number' , 'PVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'PVal' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'PVal' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Background' , 'PVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Background' , 'PVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'PVal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'PVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'HaveObjects' , 'PVal' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'HaveObjects' , 'PVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Color' , 'PVal' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Color' , 'PVal' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Comment' , 'PVal' , ), 7, (7, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Comment' , 'PVal' , ), 7, (7, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Projected' , 'PVal' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Projected' , 'PVal' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
]

ILayerFilterConditions_vtables_dispatch_ = 1
ILayerFilterConditions_vtables_ = [
	(( 'Item' , 'Index' , 'Result' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{D743BC12-82A9-4E8F-85B2-7154A356ACC0}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{D743BC12-82A9-4E8F-85B2-7154A356ACC0}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

ILayerGroup_vtables_dispatch_ = 1
ILayerGroup_vtables_ = [
	(( 'OwnerGroup' , 'PVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{265BBB5A-7B8A-4AA5-A0BB-FF64D23BE62B}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'LayerGroups' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{DBFF6D98-8F79-453E-9B8B-81E40A6D8027}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Layers' , 'Result' , ), 3, (3, (), [ (16393, 10, None, "IID('{F6DC2898-D596-4418-A21A-D15AE07B9A40}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'PVal' , ), 4, (4, (), [ (8, 49, "''", None) , ], 1 , 4 , 4 , 0 , 112 , (3, 32, None, None) , 0 , )),
	(( 'Name' , 'PVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'LayerFilterConditions' , 'PVal' , ), 5, (5, (), [ (16393, 10, None, "IID('{BCA22E27-AB60-4BA6-87EE-92158AA6D366}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'GetLayerStates' , 'LayerIndex' , 'Visible' , 'Background' , 'Curent' , 
			 'Color' , 'PRes' , ), 6, (6, (), [ (12, 1, None, None) , (16395, 2, None, None) , 
			 (16395, 2, None, None) , (16395, 2, None, None) , (16387, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'SetLayerStates' , 'LayerIndex' , 'Visible' , 'Background' , 'Curent' , 
			 'Color' , 'PRes' , ), 7, (7, (), [ (12, 1, None, None) , (11, 1, None, None) , 
			 (11, 1, None, None) , (11, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Current' , 'PVal' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Current' , 'PVal' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'PVal' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'OwnerView' , 'PVal' , ), 10, (10, (), [ (16393, 10, None, "IID('{21A7BA87-1C8B-41B4-8247-CDD593546F37}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'OwnerView' , 'PVal' , ), 10, (10, (), [ (9, 49, '0', "IID('{21A7BA87-1C8B-41B4-8247-CDD593546F37}')") , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'PVal' , ), 11, (11, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
]

ILayerGroup3D_vtables_dispatch_ = 1
ILayerGroup3D_vtables_ = [
	(( 'OwnerGroup' , 'PVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{0B176BBC-51F5-4D31-A630-6A04207E4DA1}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'LayerGroups' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{D3F08D03-3BB2-4DE6-95A9-38B5C05D8C12}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Layers' , 'Result' , ), 3, (3, (), [ (16393, 10, None, "IID('{D637078B-6498-40B6-9F41-83ED1EA40D1F}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'PVal' , ), 4, (4, (), [ (8, 49, "''", None) , ], 1 , 4 , 4 , 0 , 112 , (3, 32, None, None) , 0 , )),
	(( 'Name' , 'PVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'LayerFilterConditions' , 'PVal' , ), 7, (7, (), [ (16393, 10, None, "IID('{BCA22E27-AB60-4BA6-87EE-92158AA6D366}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

ILayerGroups_vtables_dispatch_ = 1
ILayerGroups_vtables_ = [
	(( 'Item' , 'Index' , 'Result' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{265BBB5A-7B8A-4AA5-A0BB-FF64D23BE62B}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Owner' , 'Dinamic' , 'Result' , ), 1, (1, (), [ 
			 (9, 1, None, "IID('{21A7BA87-1C8B-41B4-8247-CDD593546F37}')") , (11, 1, None, None) , (16393, 10, None, "IID('{265BBB5A-7B8A-4AA5-A0BB-FF64D23BE62B}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Attach' , 'PGroup' , 'Result' , ), 2, (2, (), [ (9, 1, None, "IID('{265BBB5A-7B8A-4AA5-A0BB-FF64D23BE62B}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Detach' , 'PGroup' , 'Result' , ), 3, (3, (), [ (9, 1, None, "IID('{265BBB5A-7B8A-4AA5-A0BB-FF64D23BE62B}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

ILayerGroups3D_vtables_dispatch_ = 1
ILayerGroups3D_vtables_ = [
	(( 'LayerGroup3D' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{0B176BBC-51F5-4D31-A630-6A04207E4DA1}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{0B176BBC-51F5-4D31-A630-6A04207E4DA1}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

ILayers_vtables_dispatch_ = 1
ILayers_vtables_ = [
	(( 'Layer' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{9AD76C38-CC48-4901-AEE5-27B48F51563C}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'LayerByNumber' , 'Number' , 'Result' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{9AD76C38-CC48-4901-AEE5-27B48F51563C}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 3, (3, (), [ (16393, 10, None, "IID('{9AD76C38-CC48-4901-AEE5-27B48F51563C}')") , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Attach' , 'PVal' , 'Result' , ), 4, (4, (), [ (9, 1, None, "IID('{9AD76C38-CC48-4901-AEE5-27B48F51563C}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Detach' , 'PVal' , 'Result' , ), 5, (5, (), [ (9, 1, None, "IID('{9AD76C38-CC48-4901-AEE5-27B48F51563C}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

ILayers3D_vtables_dispatch_ = 1
ILayers3D_vtables_ = [
	(( 'Layer3D' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{D8ADF279-1CAC-4A2A-911B-9A44378407A0}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Layer3DByNumber' , 'Number' , 'Result' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{D8ADF279-1CAC-4A2A-911B-9A44378407A0}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 3, (3, (), [ (16393, 10, None, "IID('{D8ADF279-1CAC-4A2A-911B-9A44378407A0}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Attach' , 'PVal' , 'Result' , ), 4, (4, (), [ (9, 1, None, "IID('{D8ADF279-1CAC-4A2A-911B-9A44378407A0}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Detach' , 'PVal' , 'Result' , ), 5, (5, (), [ (9, 1, None, "IID('{D8ADF279-1CAC-4A2A-911B-9A44378407A0}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

ILayoutSheet_vtables_dispatch_ = 1
ILayoutSheet_vtables_ = [
	(( 'Format' , 'PVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{B9CDE694-4C33-4375-A6F6-AE94DC759510}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'LayoutLibraryFileName' , 'PVal' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'LayoutLibraryFileName' , 'PVal' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'LayoutStyleNumber' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'LayoutStyleNumber' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Update' , 'PRes' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Stamp' , 'PVal' , ), 6, (6, (), [ (16393, 10, None, "IID('{250CE350-7C21-47FD-8FF2-C44A9FF177DF}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'SheetType' , 'PVal' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'SheetType' , 'PVal' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'GetPlaceInsideFrames' , 'Left' , 'Top' , 'Right' , 'Bottom' , 
			 'Val' , ), 8, (8, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
]

ILayoutSheets_vtables_dispatch_ = 1
ILayoutSheets_vtables_ = [
	(( 'Item' , 'Index' , 'Result' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{D87B5A80-CF52-4510-ADD9-D1344FFFFC07}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'ItemByNumber' , 'Number' , 'Result' , ), 1, (1, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{D87B5A80-CF52-4510-ADD9-D1344FFFFC07}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{D87B5A80-CF52-4510-ADD9-D1344FFFFC07}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ILeader_vtables_dispatch_ = 1
ILeader_vtables_ = [
	(( 'ShelfDirection' , 'Result' , ), 1501, (1501, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'ShelfDirection' , 'Result' , ), 1501, (1501, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'SignType' , 'Result' , ), 1502, (1502, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'SignType' , 'Result' , ), 1502, (1502, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Arround' , 'Result' , ), 1503, (1503, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Arround' , 'Result' , ), 1503, (1503, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'TextOnShelf' , 'PVal' , ), 1504, (1504, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'TextUnderShelf' , 'PVal' , ), 1505, (1505, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'TextOnBranch' , 'PVal' , ), 1506, (1506, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'TextUnderBranch' , 'PVal' , ), 1507, (1507, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'TextAfterShelf' , 'PVal' , ), 1508, (1508, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'BranchBegin' , 'Index' , 'PVal' , ), 1509, (1509, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'BranchBegin' , 'Index' , 'PVal' , ), 1509, (1509, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'ParallelBranch' , 'PVal' , ), 1510, (1510, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ParallelBranch' , 'PVal' , ), 1510, (1510, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'AutoSorted' , 'Result' , ), 1511, (1511, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'AutoSorted' , 'Result' , ), 1511, (1511, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

ILeaders_vtables_dispatch_ = 1
ILeaders_vtables_ = [
	(( 'Leader' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{1AF590A9-C339-477A-9F22-799C04D20BB4}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'DimType' , 'Value' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{1AF590A9-C339-477A-9F22-799C04D20BB4}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ILeaders3D_vtables_dispatch_ = 1
ILeaders3D_vtables_ = [
	(( 'Leader3D' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{7170F38E-8230-4C9C-B36B-0BACBB27B123}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'DimType' , 'Value' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{7170F38E-8230-4C9C-B36B-0BACBB27B123}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ILibArraySettings_vtables_dispatch_ = 1
ILibArraySettings_vtables_ = [
	(( 'LibraryCount' , 'Count' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'GetLibrary' , 'Index' , 'Use' , 'Result' , ), 2, (2, (), [ 
			 (3, 1, None, None) , (16395, 2, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'SetLibraryUse' , 'Index' , 'Use' , 'Result' , ), 3, (3, (), [ 
			 (12, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'GetLibrarys' , 'FileNames' , 'Uses' , 'Result' , ), 4, (4, (), [ 
			 (16396, 2, None, None) , (16396, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'AddLibrary' , 'FileName' , 'Use' , 'Result' , ), 5, (5, (), [ 
			 (8, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'RemoveLibrary' , 'Index' , 'Result' , ), 6, (6, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

ILibItemSettings_vtables_dispatch_ = 1
ILibItemSettings_vtables_ = [
	(( 'ItemCount' , 'Count' , ), 500, (500, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'GetItem' , 'Index' , 'Use' , 'Result' , ), 501, (501, (), [ 
			 (12, 1, None, None) , (16395, 2, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'SetItem' , 'Index' , 'Use' , 'Result' , ), 502, (502, (), [ 
			 (12, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'GetItems' , 'UniqIds' , 'Uses' , 'Result' , ), 503, (503, (), [ 
			 (16396, 2, None, None) , (16396, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'GetItemsEx' , 'UniqIds' , 'Uses' , 'ItemNames' , 'FileNames' , 
			 'Result' , ), 504, (504, (), [ (16396, 2, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , 
			 (16396, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

ILibrary_vtables_dispatch_ = 1
ILibrary_vtables_ = [
	(( 'LibraryManagerFolder' , 'PVal' , ), 2001, (2001, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Attach' , 'PVal' , ), 2002, (2002, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Attach' , 'PVal' , ), 2002, (2002, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'LibraryType' , 'PVal' , ), 2003, (2003, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'PVal' , ), 2004, (2004, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'PathName' , 'PVal' , ), 2005, (2005, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Enable' , 'PVal' , ), 2006, (2006, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Execute' , 'Command' , 'External' , 'Post' , 'PVal' , 
			 ), 2007, (2007, (), [ (3, 1, None, None) , (9, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

ILibraryHoleParameters_vtables_dispatch_ = 1
ILibraryHoleParameters_vtables_ = [
	(( 'FileName' , 'PVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'FileName' , 'PVal' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Variables' , 'Result' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Variable' , 'Index' , 'Result' , ), 3, (3, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{8BAB52D9-8EF6-43A6-A1B8-AF42D5961A94}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'VariablesCount' , 'Result' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ILibraryManager_vtables_dispatch_ = 1
ILibraryManager_vtables_ = [
	(( 'ProceduresLibraries' , 'Result' , ), 1, (1, (), [ (16393, 10, None, "IID('{80F95B5B-DB8A-46B7-8C22-605A0AECD597}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'FragmentsLibraries' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{A6E82D68-69D5-40C0-9A85-275B22219135}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ModelsLibraries' , 'Result' , ), 3, (3, (), [ (16393, 10, None, "IID('{A6E82D68-69D5-40C0-9A85-275B22219135}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'PVal' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Layout' , 'PVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'ActiveFolder' , 'PVal' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'ActiveFolder' , 'PVal' , ), 6, (6, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'ActiveFolderComment' , 'PVal' , ), 7, (7, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'ActiveFolderComment' , 'PVal' , ), 7, (7, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'AddFolder' , 'PathFolder' , ), 8, (8, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'RemoveFolder' , 'PathFolder' , ), 9, (9, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'SystemControlStartLibrary' , 'PVal' , ), 10, (10, (), [ (16393, 10, None, "IID('{1AECE59E-DE4C-4FB9-B62B-7967573AD3B1}')") , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'CurrentLibrary' , 'PVal' , ), 11, (11, (), [ (16393, 10, None, "IID('{1AECE59E-DE4C-4FB9-B62B-7967573AD3B1}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'SetCurrentLibrary' , 'PVal' , 'Result' , ), 12, (12, (), [ (9, 1, None, "IID('{1AECE59E-DE4C-4FB9-B62B-7967573AD3B1}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'SystemControlStartResult' , 'PVal' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'DocumentsLibraries' , 'Result' , ), 14, (14, (), [ (16393, 10, None, "IID('{A6E82D68-69D5-40C0-9A85-275B22219135}')") , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
]

ILine_vtables_dispatch_ = 1
ILine_vtables_ = [
	(( 'X1' , 'PVal' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'X1' , 'PVal' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
]

ILineDimension_vtables_dispatch_ = 1
ILineDimension_vtables_ = [
	(( 'X1' , 'PVal' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'X1' , 'PVal' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'X3' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'X3' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Y3' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Y3' , 'PVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'ShelfX' , 'PVal' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'ShelfX' , 'PVal' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ShelfY' , 'PVal' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'ShelfY' , 'PVal' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'PVal' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'PVal' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
]

ILineDimension3D_vtables_dispatch_ = 1
ILineDimension3D_vtables_ = [
	(( 'Plane' , 'Plane' , ), 101, (101, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Plane' , 'Plane' , ), 101, (101, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
]

ILineDimensions_vtables_dispatch_ = 1
ILineDimensions_vtables_ = [
	(( 'LineDimension' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{A3767BDA-E605-4FC1-988D-81809DEB36F4}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Value' , ), 2, (2, (), [ (16393, 10, None, "IID('{A3767BDA-E605-4FC1-988D-81809DEB36F4}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ILineDimensions3D_vtables_dispatch_ = 1
ILineDimensions3D_vtables_ = [
	(( 'LineDimension3D' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{3514887E-321B-4CE3-A966-3EB1A02CEEF2}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'DimType' , 'Result' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{3514887E-321B-4CE3-A966-3EB1A02CEEF2}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ILineSegment_vtables_dispatch_ = 1
ILineSegment_vtables_ = [
	(( 'X1' , 'PVal' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'X1' , 'PVal' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Length' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Length' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Result' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Result' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
]

ILineSegment3D_vtables_dispatch_ = 1
ILineSegment3D_vtables_ = [
	(( 'GetPoint' , 'Begin' , 'X' , 'Y' , 'Z' , 
			 'Result' , ), 1, (1, (), [ (11, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'SetPoint' , 'Begin' , 'X' , 'Y' , 'Z' , 
			 'Result' , ), 2, (2, (), [ (11, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'AssociationObject' , 'Begin' , 'PVal' , ), 3, (3, (), [ (11, 1, None, None) , 
			 (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'AssociationObject' , 'Begin' , 'PVal' , ), 3, (3, (), [ (11, 1, None, None) , 
			 (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'PointType' , 'Begin' , 'PVal' , ), 4, (4, (), [ (11, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'PointType' , 'Begin' , 'PVal' , ), 4, (4, (), [ (11, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'PointParameters' , 'Begin' , 'Result' , ), 5, (5, (), [ (11, 1, None, None) , 
			 (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Lenght' , 'Result' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Lenght' , 'Result' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'PVal' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'PVal' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'BasePlane' , 'PVal' , ), 8, (8, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'BasePlane' , 'PVal' , ), 8, (8, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'Result' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'Result' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
]

ILineSegments_vtables_dispatch_ = 1
ILineSegments_vtables_ = [
	(( 'LineSegment' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{64ACC86F-4B10-4897-8552-BC0A556D228B}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{64ACC86F-4B10-4897-8552-BC0A556D228B}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ILineSegments3D_vtables_dispatch_ = 1
ILineSegments3D_vtables_ = [
	(( 'LineSegment3D' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{74880880-4F48-44CC-8FC3-83FE3CA7C44A}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{74880880-4F48-44CC-8FC3-83FE3CA7C44A}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ILinearCentres_vtables_dispatch_ = 1
ILinearCentres_vtables_ = [
	(( 'BaseObjects' , 'Result' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'BaseObjects' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'HasBreaks' , 'PVal' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'HasBreaks' , 'PVal' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'AxisAngle' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'AxisAngle' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'TurnAngle' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'TurnAngle' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Centres' , 'Result' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Radiuses' , 'Result' , ), 6, (6, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'AddCentre' , 'X' , 'Y' , 'Radius' , 'Result' , 
			 ), 7, (7, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'AddCentreByObject' , 'Object' , 'Result' , ), 8, (8, (), [ (9, 1, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Clear' , 'Result' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'DeleteCentre' , 'Index' , 'Result' , ), 10, (10, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'DeleteCentreByPoint' , 'X' , 'Y' , 'Result' , ), 11, (11, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
]

ILinearPattern_vtables_dispatch_ = 1
ILinearPattern_vtables_ = [
	(( 'Axis1' , 'PVal' , ), 101, (101, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Axis1' , 'PVal' , ), 101, (101, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Vector1' , 'Val' , ), 102, (102, (), [ (16393, 10, None, "IID('{D51A4DCF-627D-44F5-89BA-46EF2449A212}')") , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Angle1' , 'Val' , ), 103, (103, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Angle1' , 'Val' , ), 103, (103, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'Direction1' , 'Val' , ), 104, (104, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'Direction1' , 'Val' , ), 104, (104, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'Step1' , 'PVal' , ), 105, (105, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'Step1' , 'PVal' , ), 105, (105, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'BoundaryInstancesStepFactor1' , 'PVal' , ), 106, (106, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'BoundaryInstancesStepFactor1' , 'PVal' , ), 106, (106, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'Count1' , 'Val' , ), 107, (107, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'Count1' , 'Val' , ), 107, (107, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'Axis2' , 'PVal' , ), 108, (108, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'Axis2' , 'PVal' , ), 108, (108, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'Vector2' , 'Val' , ), 109, (109, (), [ (16393, 10, None, "IID('{D51A4DCF-627D-44F5-89BA-46EF2449A212}')") , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'Angle2' , 'PVal' , ), 110, (110, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'Angle2' , 'PVal' , ), 110, (110, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'Direction2' , 'Val' , ), 111, (111, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'Direction2' , 'Val' , ), 111, (111, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'Step2' , 'PVal' , ), 112, (112, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'Step2' , 'PVal' , ), 112, (112, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'BoundaryInstancesStepFactor2' , 'PVal' , ), 113, (113, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'BoundaryInstancesStepFactor2' , 'PVal' , ), 113, (113, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'Count2' , 'PVal' , ), 114, (114, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'Count2' , 'PVal' , ), 114, (114, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'PVal' , ), 115, (115, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'PVal' , ), 115, (115, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'SetBaseExemplarPlacement' , 'Index1' , 'Index2' , 'Result' , ), 116, (116, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'GetBaseExemplarPlacement' , 'Index1' , 'Index2' , 'Result' , ), 117, (117, (), [ 
			 (16387, 2, None, None) , (16387, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
]

ILinearsCentries_vtables_dispatch_ = 1
ILinearsCentries_vtables_ = [
	(( 'LinearCentres' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{C1E24970-64F0-4689-A3AB-CC34698378DC}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'BaseObjects' , 'AutoFindOtherObjects' , 'HasBreaks' , 'AxisAngle' , 
			 'TurnAngle' , 'Result' , ), 2, (2, (), [ (12, 1, None, None) , (11, 1, None, None) , 
			 (11, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{C1E24970-64F0-4689-A3AB-CC34698378DC}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ILines_vtables_dispatch_ = 1
ILines_vtables_ = [
	(( 'Line' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{3EA0DA9B-F2C0-40C4-BE36-7103509A9389}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{3EA0DA9B-F2C0-40C4-BE36-7103509A9389}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ILoadCombination_vtables_dispatch_ = 1
ILoadCombination_vtables_ = [
	(( 'CompletelyLoaded' , 'Type' , ), 6001, (6001, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'LoadCombinations' , 'Value' , ), 6002, (6002, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'CurrentIndex' , 'Value' , ), 6003, (6003, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Create' , 'CombinationName' , 'Value' , ), 6004, (6004, (), [ (8, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'LoadCombinationIndex' , 'Value' , ), 6005, (6005, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Apply' , 'LoadCombinationIndex' , 'Value' , ), 6006, (6006, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'DeleteEx' , 'LoadCombinationIndex' , 'Password' , 'DeleteDependant' , 'Result' , 
			 ), 6007, (6007, (), [ (12, 1, None, None) , (8, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'ApplyEx' , 'LoadCombinationIndex' , 'Password' , 'Result' , ), 6008, (6008, (), [ 
			 (12, 1, None, None) , (8, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'SetPassword' , 'LoadCombinationIndex' , 'OldPassword' , 'Password' , 'UnprotectUsers' , 
			 'Result' , ), 6009, (6009, (), [ (12, 1, None, None) , (8, 1, None, None) , (8, 1, None, None) , 
			 (11, 49, 'False', None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'UpdateByModel' , 'LoadCombinationIndex' , 'Password' , 'Result' , ), 6010, (6010, (), [ 
			 (12, 1, None, None) , (8, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'SetLoadCombinationComment' , 'LoadCombinationIndex' , 'NewVal' , 'Password' , 'Result' , 
			 ), 6011, (6011, (), [ (12, 1, None, None) , (8, 1, None, None) , (8, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'GetLoadCombinationComment' , 'LoadCombinationIndex' , 'Result' , ), 6012, (6012, (), [ (12, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'SetLoadCombinationName' , 'LoadCombinationIndex' , 'NewVal' , 'Password' , 'Result' , 
			 ), 6013, (6013, (), [ (12, 1, None, None) , (8, 1, None, None) , (8, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'GetLoadCombinationName' , 'LoadCombinationIndex' , 'Result' , ), 6014, (6014, (), [ (12, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ProtectedFlags' , 'Value' , ), 6015, (6015, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'CurrentIndex' , 'Value' , ), 6003, (6003, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
]

ILoadCombinationsParam_vtables_dispatch_ = 1
ILoadCombinationsParam_vtables_ = [
	(( 'LoadCombinations' , 'Value' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ProtectedFlags' , 'Value' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ApplyingIndex' , 'Result' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

ILocalCSAxesDirectionParam_vtables_dispatch_ = 1
ILocalCSAxesDirectionParam_vtables_ = [
	(( 'SetDirectingObject' , 'Axis' , 'Object' , 'Result' , ), 1, (1, (), [ 
			 (3, 1, None, None) , (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'DirectingObject' , 'Axis' , 'Result' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'RotateAxis' , 'Axis' , 'Result' , ), 3, (3, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'AngleByOwnAxis' , 'Axis' , ), 4, (4, (), [ (3, 1, None, None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

ILocalCSEulerParam_vtables_dispatch_ = 1
ILocalCSEulerParam_vtables_ = [
	(( 'NutationAngle' , 'Result' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'NutationAngle' , 'Result' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'PrecessionAngle' , 'Result' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'PrecessionAngle' , 'Result' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'RotationAngle' , 'Result' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'RotationAngle' , 'Result' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

ILocalCSObject_vtables_dispatch_ = 1
ILocalCSObject_vtables_ = [
	(( 'ModelObjectParamType' , 'PVal' , ), 901, (901, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'ModelObjectParamType' , 'PVal' , ), 901, (901, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'LocalCoordinateSystem' , 'PVal' , ), 902, (902, (), [ (16393, 10, None, "IID('{BA6395F5-3506-4483-8864-4EEC220AF316}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'CoordinateSystem' , 'PVal' , ), 903, (903, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'CoordinateSystem' , 'PVal' , ), 903, (903, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

ILocalCSOrientByObjectParam_vtables_dispatch_ = 1
ILocalCSOrientByObjectParam_vtables_ = [
	(( 'SetOrientationObject' , 'Object' , 'Result' , ), 1, (1, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'OrientationObject' , 'Object' , ), 2, (2, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

ILocalCoordinateSystem_vtables_dispatch_ = 1
ILocalCoordinateSystem_vtables_ = [
	(( 'SetDisplacementByAxis' , 'Axis' , 'NewVal' , 'Result' , ), 3001, (3001, (), [ 
			 (3, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'OrientationType' , 'Result' , ), 3002, (3002, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'OrientationType' , 'Result' , ), 3002, (3002, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'ReadFromFile' , 'FileName' , 'Result' , ), 3003, (3003, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'WriteToFile' , 'FileName' , 'Result' , ), 3004, (3004, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'SetStartingOrientation' , 'Result' , ), 3005, (3005, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'GetVector' , 'Axis' , 'X' , 'Y' , 'Z' , 
			 'Result' , ), 3006, (3006, (), [ (3, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'LocalCSParameters' , 'Result' , ), 3007, (3007, (), [ (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Current' , 'Result' , ), 3008, (3008, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'Current' , 'Result' , ), 3008, (3008, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'DefaultObject' , 'Val' , 'Result' , ), 3009, (3009, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'InitByMatrix3D' , 'mtr' , 'Result' , ), 3010, (3010, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'Vector3D' , 'Axis' , 'Val' , ), 3011, (3011, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{D51A4DCF-627D-44F5-89BA-46EF2449A212}')") , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
]

ILocalCoordinateSystem2D_vtables_dispatch_ = 1
ILocalCoordinateSystem2D_vtables_ = [
	(( 'Name' , 'Name' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'Name' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'X' , 'X' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'X' , 'X' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'Y' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'Y' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'A' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'A' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'AxisXLabel' , 'Name' , ), 5, (5, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'AxisXLabel' , 'Name' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'AxisYLabel' , 'Name' , ), 6, (6, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'AxisYLabel' , 'Name' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'Result' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

ILocalCoordinateSystems_vtables_dispatch_ = 1
ILocalCoordinateSystems_vtables_ = [
	(( 'LocalCoordinateSystem' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{BA6395F5-3506-4483-8864-4EEC220AF316}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{BA6395F5-3506-4483-8864-4EEC220AF316}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Current' , 'Result' , ), 3, (3, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'SetCurrent' , 'Object' , 'Result' , ), 4, (4, (), [ (9, 1, None, "IID('{BA6395F5-3506-4483-8864-4EEC220AF316}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

ILocalCoordinateSystems2D_vtables_dispatch_ = 1
ILocalCoordinateSystems2D_vtables_ = [
	(( 'Item' , 'Index' , 'Result' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{85EFCCC7-1667-48B7-A915-BB8149915EF8}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 1, (1, (), [ (16393, 10, None, "IID('{85EFCCC7-1667-48B7-A915-BB8149915EF8}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Current' , 'Result' , ), 2, (2, (), [ (9, 1, None, "IID('{85EFCCC7-1667-48B7-A915-BB8149915EF8}')") , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Current' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{85EFCCC7-1667-48B7-A915-BB8149915EF8}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

ILoft_vtables_dispatch_ = 1
ILoft_vtables_ = [
	(( 'OperationResult' , 'Result' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'OperationResult' , 'Result' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Sketchs' , 'Result' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Sketchs' , 'Result' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'AxisLine' , 'PVal' , ), 3, (3, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'AxisLine' , 'PVal' , ), 3, (3, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Closed' , 'PVal' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Closed' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'BeginSection' , 'Result' , ), 5, (5, (), [ (11, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'BeginSection' , 'Result' , ), 5, (5, (), [ (11, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'BuildingObject' , 'BeginSection' , 'Result' , ), 6, (6, (), [ (11, 1, None, None) , 
			 (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'BuildingObject' , 'BeginSection' , 'Result' , ), 6, (6, (), [ (11, 1, None, None) , 
			 (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'DirectionalLines' , 'PVal' , ), 7, (7, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'DirectionalLines' , 'PVal' , ), 7, (7, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'AddCoupling' , 'PVal' , ), 8, (8, (), [ (16393, 10, None, "IID('{FB39791B-2100-4F36-B352-AA4EB5FD9373}')") , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'CouplingsCount' , 'PVal' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Coupling' , 'Index' , 'PVal' , ), 10, (10, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{FB39791B-2100-4F36-B352-AA4EB5FD9373}')") , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'DeleteCoupling' , 'Index' , 'Result' , ), 11, (11, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'ClearCouplings' , 'Result' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
]

ILofts_vtables_dispatch_ = 1
ILofts_vtables_ = [
	(( 'Loft' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{DDB04ECF-12A9-496E-8069-405F7302E039}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'LoftType' , 'Result' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{DDB04ECF-12A9-496E-8069-405F7302E039}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ILoop7_vtables_dispatch_ = 1
ILoop7_vtables_ = [
	(( 'OrientedEdges' , 'Result' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Edges' , 'Result' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'IsOuter' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'GetLength' , 'Unit' , 'Result' , ), 4, (4, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IMacroObject_vtables_dispatch_ = 1
IMacroObject_vtables_ = [
	(( 'LibraryFileName' , 'PVal' , ), 1, (1, (), [ (8, 49, "''", None) , ], 1 , 4 , 4 , 0 , 160 , (3, 32, None, None) , 0 , )),
	(( 'LibraryFileName' , 'PVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'LibraryName' , 'PVal' , ), 2, (2, (), [ (8, 49, "''", None) , ], 1 , 4 , 4 , 0 , 176 , (3, 32, None, None) , 0 , )),
	(( 'LibraryName' , 'PVal' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Command' , 'PVal' , ), 3, (3, (), [ (3, 49, '0', None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Command' , 'PVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'DoubleClickEditable' , 'PVal' , ), 4, (4, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'DoubleClickEditable' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'HotPointsEditable' , 'PVal' , ), 5, (5, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'HotPointsEditable' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ExternalEditable' , 'PVal' , ), 6, (6, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ExternalEditable' , 'PVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'UserParams' , 'PVal' , ), 7, (7, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'UserParams' , 'PVal' , ), 7, (7, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'AddObjects' , 'Objects' , 'Result' , ), 8, (8, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'GetPlacement' , 'X' , 'Y' , 'Angle' , 'MirrorSymmetry' , 
			 'Result' , ), 9, (9, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16395, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'SetPlacement' , 'X' , 'Y' , 'Angle' , 'MirrorSymmetry' , 
			 'Relative' , 'Result' , ), 10, (10, (), [ (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (16395, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'PVal' , ), 11, (11, (), [ (8, 49, "''", None) , ], 1 , 4 , 4 , 0 , 296 , (3, 32, None, None) , 0 , )),
	(( 'Name' , 'PVal' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'AttachedLeaders' , 'PVal' , ), 12, (12, (), [ (16393, 10, None, "IID('{BA2D820C-0DB9-47C6-A32D-34C7D8BA1B2F}')") , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'DeleteAttachedLeaders' , 'Result' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'AddDefaultHotPoint' , 'X' , 'Y' , 'Result' , ), 14, (14, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'DeleteDefaultHotPoint' , 'Result' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'PropertyObjectEditable' , 'PVal' , ), 16, (16, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'PropertyObjectEditable' , 'PVal' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'CreateSpcObjects' , 'PVal' , ), 17, (17, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'CreateSpcObjects' , 'PVal' , ), 17, (17, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'BreakObjectsEnabled' , 'PVal' , ), 18, (18, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'BreakObjectsEnabled' , 'PVal' , ), 18, (18, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'FindObject' , 'X' , 'Y' , 'Limit' , 'Param' , 
			 'Result' , ), 19, (19, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (9, 1, None, "IID('{8F1A7123-BD4A-4A49-8E22-1502D59B1FE6}')") , (16393, 10, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 1 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
]

IMacroObject3D_vtables_dispatch_ = 1
IMacroObject3D_vtables_ = [
	(( 'Objects' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Objects' , 'Result' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'StaffVisible' , 'PVal' , ), 2, (2, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'StaffVisible' , 'PVal' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'DoubleClickEditable' , 'PVal' , ), 3, (3, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'DoubleClickEditable' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'PropertyObjectEditable' , 'PVal' , ), 4, (4, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'PropertyObjectEditable' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'AssociationObject' , 'Index' , 'PVal' , ), 5, (5, (), [ (3, 1, None, None) , 
			 (9, 1, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'AssociationObject' , 'Index' , 'PVal' , ), 5, (5, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'AssociationObjectCount' , 'PVal' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ClearAssociationObject' , 'Result' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Destroy' , 'Result' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
]

IMacroObjects_vtables_dispatch_ = 1
IMacroObjects_vtables_ = [
	(( 'MacroObject' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{B21C70C9-53EC-4BB7-A9DB-BCE852CA6716}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'MultyLayer' , 'Value' , ), 2, (2, (), [ (11, 49, 'False', None) , 
			 (16393, 10, None, "IID('{B21C70C9-53EC-4BB7-A9DB-BCE852CA6716}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IMacroObjects3D_vtables_dispatch_ = 1
IMacroObjects3D_vtables_ = [
	(( 'MacroObject3D' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{09DBAA1E-FC4C-4E16-B033-FB9B8F7995D8}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{09DBAA1E-FC4C-4E16-B033-FB9B8F7995D8}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IManipulators_vtables_dispatch_ = 1
IManipulators_vtables_ = [
	(( 'Item' , 'Index' , 'Result' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{606FD023-3944-4215-A426-1E4EB82A8E32}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Manipulator' , 'Id' , 'Result' , ), 1, (1, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{606FD023-3944-4215-A426-1E4EB82A8E32}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Type' , 'PControl' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{606FD023-3944-4215-A426-1E4EB82A8E32}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IMark_vtables_dispatch_ = 1
IMark_vtables_ = [
	(( 'X' , 'Result' , ), 2001, (2001, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'X' , 'Result' , ), 2001, (2001, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'Result' , ), 2002, (2002, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'Result' , ), 2002, (2002, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'AutoNumber' , 'Result' , ), 2003, (2003, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'AutoNumber' , 'Result' , ), 2003, (2003, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'PVal' , ), 2004, (2004, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Number' , 'PVal' , ), 2005, (2005, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'TextBefore' , 'PVal' , ), 2006, (2006, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'TextAfter' , 'PVal' , ), 2007, (2007, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'TextUnder' , 'PVal' , ), 2008, (2008, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Comment' , 'Result' , ), 2009, (2009, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Comment' , 'Result' , ), 2009, (2009, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
]

IMarkInsideForm_vtables_dispatch_ = 1
IMarkInsideForm_vtables_ = [
	(( 'Angle' , 'Result' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'Result' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Form' , 'NewVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Form' , 'NewVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'FormGabarit' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'FormGabarit' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'FormHeight' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'FormHeight' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'FormStyle' , 'PVal' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'FormStyle' , 'PVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
]

IMarkLeader_vtables_dispatch_ = 1
IMarkLeader_vtables_ = [
	(( 'TextOnBranch' , 'PVal' , ), 1501, (1501, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'TextUnderBranch' , 'PVal' , ), 1502, (1502, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Designation' , 'PVal' , ), 1503, (1503, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
]

IMarkNode_vtables_dispatch_ = 1
IMarkNode_vtables_ = [
	(( 'MarkType' , 'Val' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'MarkType' , 'Val' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'DoubleMark' , 'PVal' , ), 2, (2, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'DoubleMark' , 'PVal' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'RefLength' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'RefLength' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Text' , 'PVal' , ), 4, (4, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'MarkNodes' , 'Left' , 'PVal' , ), 5, (5, (), [ (11, 1, None, None) , 
			 (16393, 10, None, "IID('{EB8ACD77-8008-4F89-A311-2F4712462F72}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'PRes' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'GetInsertionPoints' , 'LeftJut' , 'Points' , 'Directions' , 'RetVal' , 
			 ), 7, (7, (), [ (11, 1, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
]

IMarkNodes_vtables_dispatch_ = 1
IMarkNodes_vtables_ = [
	(( 'Item' , 'Index' , 'Result' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{5AC48E97-80B1-459F-9709-1F3F374559BE}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Type' , 'Index' , 'Result' , ), 1, (1, (), [ 
			 (3, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{5AC48E97-80B1-459F-9709-1F3F374559BE}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Clear' , 'Result' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IMarkOnLeader_vtables_dispatch_ = 1
IMarkOnLeader_vtables_ = [
	(( 'ArrowType' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ArrowType' , 'PVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'ShelfDirection' , 'PVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'ShelfDirection' , 'PVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'ParallelBranch' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'ParallelBranch' , 'PVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'BranchCount' , 'PVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'BranchPoints' , 'Index' , 'PVal' , ), 5, (5, (), [ (3, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'BranchPoints' , 'Index' , 'PVal' , ), 5, (5, (), [ (3, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'BranchBegin' , 'Index' , 'PVal' , ), 6, (6, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'BranchBegin' , 'Index' , 'PVal' , ), 6, (6, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'BranchX' , 'Index' , 'PVal' , ), 7, (7, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'BranchX' , 'Index' , 'PVal' , ), 7, (7, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'BranchY' , 'Index' , 'PVal' , ), 8, (8, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'BranchY' , 'Index' , 'PVal' , ), 8, (8, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'BranchPointsCount' , 'Index' , 'Result' , ), 9, (9, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'AddBranch' , 'Index' , 'Begin' , 'Points' , 'Result' , 
			 ), 10, (10, (), [ (3, 1, None, None) , (11, 1, None, None) , (12, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'AddBranchByPoint' , 'Index' , 'Begin' , 'X' , 'Y' , 
			 'Result' , ), 11, (11, (), [ (3, 1, None, None) , (11, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'DeleteBranch' , 'Index' , 'Result' , ), 12, (12, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
]

IMarkOnLine_vtables_dispatch_ = 1
IMarkOnLine_vtables_ = [
	(( 'Position' , 'Result' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Position' , 'Result' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Line' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Line' , 'Result' , ), 2, (2, (), [ (9, 1, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
]

IMarks_vtables_dispatch_ = 1
IMarks_vtables_ = [
	(( 'Mark' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{B5D1A0BE-8F3C-4143-B9C5-66F0CF0FE74D}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'MarkType' , 'Result' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{B5D1A0BE-8F3C-4143-B9C5-66F0CF0FE74D}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IMassInertiaParam7_vtables_dispatch_ = 1
IMassInertiaParam7_vtables_ = [
	(( 'Xc' , 'PVal' , ), 3001, (3001, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Xc' , 'PVal' , ), 3001, (3001, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Yc' , 'PVal' , ), 3002, (3002, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Yc' , 'PVal' , ), 3002, (3002, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Zc' , 'PVal' , ), 3003, (3003, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Zc' , 'PVal' , ), 3003, (3003, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ManualMassCentre' , 'PVal' , ), 3004, (3004, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'ManualMassCentre' , 'PVal' , ), 3004, (3004, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'LengthUnits' , 'PVal' , ), 3005, (3005, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'LengthUnits' , 'PVal' , ), 3005, (3005, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'MassUnits' , 'PVal' , ), 3006, (3006, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'MassUnits' , 'PVal' , ), 3006, (3006, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'ManualMass' , ), 3007, (3007, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'CalculateMass' , 'PVal' , ), 3008, (3008, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'MassSettingMode' , 'PVal' , ), 3009, (3009, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'MassSettingMode' , 'PVal' , ), 3009, (3009, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'ManualDensity' , ), 3010, (3010, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'HandBookDensity' , 'PVal' , ), 3011, (3011, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'DensityMode' , 'PVal' , ), 3012, (3012, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'DensityMode' , 'PVal' , ), 3012, (3012, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Volume' , 'PVal' , ), 3013, (3013, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Area' , 'PVal' , ), 3014, (3014, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'SourceData' , 'PVal' , ), 3015, (3015, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'SourceData' , 'PVal' , ), 3015, (3015, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Actual' , 'PVal' , ), 3016, (3016, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Calculate' , 'PRes' , ), 3017, (3017, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'LX' , 'PVal' , ), 3018, (3018, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'LY' , 'PVal' , ), 3019, (3019, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Lz' , 'PVal' , ), 3020, (3020, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Lxy' , 'PVal' , ), 3021, (3021, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Lxz' , 'PVal' , ), 3022, (3022, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Lyz' , 'PVal' , ), 3023, (3023, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Jx' , 'PVal' , ), 3024, (3024, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Jy' , 'PVal' , ), 3025, (3025, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Jz' , 'PVal' , ), 3026, (3026, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'Jxy' , 'PVal' , ), 3027, (3027, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'Jxz' , 'PVal' , ), 3028, (3028, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'Jyz' , 'PVal' , ), 3029, (3029, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'Jx0' , 'PVal' , ), 3030, (3030, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'Jy0' , 'PVal' , ), 3031, (3031, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'Jz0' , 'PVal' , ), 3032, (3032, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'GetAxisX' , 'X' , 'Y' , 'Z' , 'PRes' , 
			 ), 3033, (3033, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'GetAxisY' , 'X' , 'Y' , 'Z' , 'PRes' , 
			 ), 3034, (3034, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'GetAxisZ' , 'X' , 'Y' , 'Z' , 'PRes' , 
			 ), 3035, (3035, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'Mass' , 'PVal' , ), 3036, (3036, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'Density' , 'PVal' , ), 3037, (3037, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'Material' , 'PVal' , ), 3038, (3038, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'SetMaterial' , 'Name' , 'Density' , 'PVal' , ), 3039, (3039, (), [ 
			 (8, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'MaterialLocation' , 'PVal' , ), 3040, (3040, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'MaterialLocation' , 'PVal' , ), 3040, (3040, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
]

IMate3DByAngle_vtables_dispatch_ = 1
IMate3DByAngle_vtables_ = [
	(( 'Angle3D' , 'PVal' , ), 201, (201, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Angle3D' , 'PVal' , ), 201, (201, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Axis' , 'PVal' , ), 202, (202, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Axis' , 'PVal' , ), 202, (202, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
]

IMate3DByTangent_vtables_dispatch_ = 1
IMate3DByTangent_vtables_ = [
	(( 'TangentType' , 'PVal' , ), 201, (201, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'TangentType' , 'PVal' , ), 201, (201, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
]

IMate3DCamGear_vtables_dispatch_ = 1
IMate3DCamGear_vtables_ = [
	(( 'CamFaces' , 'PVal' , ), 201, (201, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'CamFaces' , 'PVal' , ), 201, (201, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'RotationAxis' , 'PVal' , ), 202, (202, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'RotationAxis' , 'PVal' , ), 202, (202, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'FollowerFace' , 'PVal' , ), 203, (203, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'FollowerFace' , 'PVal' , ), 203, (203, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Trajectory' , 'PVal' , ), 204, (204, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Trajectory' , 'PVal' , ), 204, (204, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
]

IMate3DDependentPosition_vtables_dispatch_ = 1
IMate3DDependentPosition_vtables_ = [
	(( 'BySample' , 'PVal' , ), 201, (201, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'BySample' , 'PVal' , ), 201, (201, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'SampleObject1' , 'PVal' , ), 202, (202, (), [ (9, 1, None, "IID('{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}')") , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'SampleObject1' , 'PVal' , ), 202, (202, (), [ (16393, 10, None, "IID('{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}')") , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'SampleObject2' , 'PVal' , ), 203, (203, (), [ (9, 1, None, "IID('{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}')") , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'SampleObject2' , 'PVal' , ), 203, (203, (), [ (16393, 10, None, "IID('{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}')") , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
]

IMate3DSymmetry_vtables_dispatch_ = 1
IMate3DSymmetry_vtables_ = [
	(( 'Plane' , 'PVal' , ), 201, (201, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Plane' , 'PVal' , ), 201, (201, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
]

IMate3DTransmission_vtables_dispatch_ = 1
IMate3DTransmission_vtables_ = [
	(( 'MotionType1' , 'PVal' , ), 201, (201, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'MotionType1' , 'PVal' , ), 201, (201, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'MotionType2' , 'PVal' , ), 202, (202, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'MotionType2' , 'PVal' , ), 202, (202, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'RotationAxis1' , 'PVal' , ), 203, (203, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'RotationAxis1' , 'PVal' , ), 203, (203, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'RotationAxis2' , 'PVal' , ), 204, (204, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'RotationAxis2' , 'PVal' , ), 204, (204, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Trajectory1' , 'PVal' , ), 205, (205, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Trajectory1' , 'PVal' , ), 205, (205, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'Trajectory2' , 'PVal' , ), 206, (206, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'Trajectory2' , 'PVal' , ), 206, (206, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'Direction1' , 'PVal' , ), 207, (207, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'Direction1' , 'PVal' , ), 207, (207, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'Direction2' , 'PVal' , ), 208, (208, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'Direction2' , 'PVal' , ), 208, (208, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'Scale1' , 'PVal' , ), 209, (209, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'Scale2' , 'PVal' , ), 210, (210, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'SetScale' , 'Scale1' , 'Scale2' , 'PVal' , ), 211, (211, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
]

IMateConstraint3D_vtables_dispatch_ = 1
IMateConstraint3D_vtables_ = [
	(( 'ConstraintType' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'BaseObject1' , 'PVal' , ), 2, (2, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'BaseObject1' , 'PVal' , ), 2, (2, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'BaseObject2' , 'PVal' , ), 3, (3, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'BaseObject2' , 'PVal' , ), 3, (3, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Fixed' , 'PVal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Fixed' , 'PVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Alignment' , 'PVal' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Alignment' , 'PVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'ParamValue' , 'PVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ParamValue' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'GetMateParams' , 'Index' , 'Params' , 'Type' , ), 7, (7, (), [ 
			 (3, 1, None, None) , (16396, 2, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
]

IMateConstraints3D_vtables_dispatch_ = 1
IMateConstraints3D_vtables_ = [
	(( 'MateConstraint3D' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{9E37E1F5-F770-473A-B996-A6753EDA73A5}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Type' , 'Result' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{9E37E1F5-F770-473A-B996-A6753EDA73A5}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'ObjectConstraints' , 'Object' , 'Result' , ), 3, (3, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'AddUserMate' , 'Type' , 'Result' , ), 4, (4, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{9E37E1F5-F770-473A-B996-A6753EDA73A5}')") , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

IMath2D_vtables_dispatch_ = 1
IMath2D_vtables_ = [
	(( 'Line' , 'X' , 'Y' , 'Angle' , 'PRes' , 
			 ), 1, (1, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{65C82884-C41B-47A1-8C07-E8820D6718EA}')") , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'LineSeg' , 'X1' , 'Y1' , 'X2' , 'Y2' , 
			 'PRes' , ), 2, (2, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (16393, 10, None, "IID('{65C82884-C41B-47A1-8C07-E8820D6718EA}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Arc' , 'Xc' , 'Yc' , 'Radius' , 'Angle1' , 
			 'Angle2' , 'Direction' , 'PRes' , ), 3, (3, (), [ (5, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (11, 1, None, None) , 
			 (16393, 10, None, "IID('{65C82884-C41B-47A1-8C07-E8820D6718EA}')") , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Circle' , 'Xc' , 'Yc' , 'Radius' , 'PRes' , 
			 ), 4, (4, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{65C82884-C41B-47A1-8C07-E8820D6718EA}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'PolyLine' , 'Points' , 'Closed' , 'PRes' , ), 5, (5, (), [ 
			 (12, 1, None, None) , (11, 1, None, None) , (16393, 10, None, "IID('{65C82884-C41B-47A1-8C07-E8820D6718EA}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Ellipse' , 'Xc' , 'Yc' , 'A' , 'B' , 
			 'Angle' , 'PRes' , ), 6, (6, (), [ (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{65C82884-C41B-47A1-8C07-E8820D6718EA}')") , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'EllipseArc' , 'Xc' , 'Yc' , 'A' , 'B' , 
			 'Angle' , 'Angle1' , 'Angle2' , 'Direction' , 'PRes' , 
			 ), 7, (7, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (11, 1, None, None) , (16393, 10, None, "IID('{65C82884-C41B-47A1-8C07-E8820D6718EA}')") , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Bezier' , 'Closed' , 'AllPoints' , 'Points' , 'PRes' , 
			 ), 8, (8, (), [ (11, 1, None, None) , (11, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{65C82884-C41B-47A1-8C07-E8820D6718EA}')") , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Nurbs' , 'Closed' , 'Degree' , 'Points' , 'Weights' , 
			 'Knots' , 'PRes' , ), 9, (9, (), [ (11, 1, None, None) , (3, 1, None, None) , 
			 (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{65C82884-C41B-47A1-8C07-E8820D6718EA}')") , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Symmetry' , 'X' , 'Y' , 'Curve' , 'Result' , 
			 ), 10, (10, (), [ (16389, 3, None, None) , (16389, 3, None, None) , (9, 1, None, "IID('{65C82884-C41B-47A1-8C07-E8820D6718EA}')") , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Rotate' , 'X' , 'Y' , 'Xc' , 'Yc' , 
			 'Angle' , 'Result' , ), 11, (11, (), [ (16389, 3, None, None) , (16389, 3, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'MovePoint' , 'X' , 'Y' , 'Angle' , 'Len' , 
			 'Result' , ), 12, (12, (), [ (16389, 3, None, None) , (16389, 3, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
]

IMathCurve3D_vtables_dispatch_ = 1
IMathCurve3D_vtables_ = [
	(( 'GetPoint' , 'ParamT' , 'X' , 'Y' , 'Z' , 
			 'Result' , ), 1, (1, (), [ (5, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'GetTangentVector' , 'ParamT' , 'X' , 'Y' , 'Z' , 
			 'Result' , ), 2, (2, (), [ (5, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'GetNormal' , 'ParamT' , 'X' , 'Y' , 'Z' , 
			 'Result' , ), 3, (3, (), [ (5, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'GetDerivativeT' , 'ParamT' , 'X' , 'Y' , 'Z' , 
			 'Result' , ), 4, (4, (), [ (5, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'GetDerivativeTT' , 'ParamT' , 'X' , 'Y' , 'Z' , 
			 'Result' , ), 5, (5, (), [ (5, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'GetDerivativeTTT' , 'ParamT' , 'X' , 'Y' , 'Z' , 
			 'Result' , ), 6, (6, (), [ (5, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'ParamMin' , 'PVal' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'ParamMax' , 'PVal' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Closed' , 'PVal' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Periodic' , 'PVal' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'GetMetricLength' , 'StartParam' , 'EndParam' , 'Result' , ), 11, (11, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'GetGabarit' , 'X1' , 'Y1' , 'Z1' , 'X2' , 
			 'Y2' , 'Z2' , 'Result' , ), 12, (12, (), [ (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Degenerate' , 'PVal' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'CurveType' , 'PVal' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'GetLength' , 'BitVector' , 'Result' , ), 15, (15, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'NearPointProjection' , 'X' , 'Y' , 'Z' , 'T' , 
			 'Ext' , 'Result' , ), 16, (16, (), [ (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (16389, 2, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'CalculatePolygon' , 'Step' , 'Points' , ), 17, (17, (), [ (5, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'GetCentre' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 18, (18, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'GetWeightCentre' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 19, (19, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'PVal' , ), 20, (20, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
]

IMathSurface3D_vtables_dispatch_ = 1
IMathSurface3D_vtables_ = [
	(( 'GetGabarit' , 'X1' , 'Y1' , 'Z1' , 'X2' , 
			 'Y2' , 'Z2' , 'Result' , ), 1, (1, (), [ (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'GetPoint' , 'ParamU' , 'ParamV' , 'X' , 'Y' , 
			 'Z' , 'Result' , ), 2, (2, (), [ (5, 1, None, None) , (5, 1, None, None) , 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'GetNormal' , 'ParamU' , 'ParamV' , 'X' , 'Y' , 
			 'Z' , 'Result' , ), 3, (3, (), [ (5, 1, None, None) , (5, 1, None, None) , 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'GetTangentVectorU' , 'ParamU' , 'ParamV' , 'X' , 'Y' , 
			 'Z' , 'Result' , ), 4, (4, (), [ (5, 1, None, None) , (5, 1, None, None) , 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'GetTangentVectorV' , 'ParamU' , 'ParamV' , 'X' , 'Y' , 
			 'Z' , 'Result' , ), 5, (5, (), [ (5, 1, None, None) , (5, 1, None, None) , 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'GetDerivativeU' , 'ParamU' , 'ParamV' , 'X' , 'Y' , 
			 'Z' , 'Result' , ), 6, (6, (), [ (5, 1, None, None) , (5, 1, None, None) , 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'GetDerivativeV' , 'ParamU' , 'ParamV' , 'X' , 'Y' , 
			 'Z' , 'Result' , ), 7, (7, (), [ (5, 1, None, None) , (5, 1, None, None) , 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'GetDerivativeUU' , 'ParamU' , 'ParamV' , 'X' , 'Y' , 
			 'Z' , 'Result' , ), 8, (8, (), [ (5, 1, None, None) , (5, 1, None, None) , 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'GetDerivativeVV' , 'ParamU' , 'ParamV' , 'X' , 'Y' , 
			 'Z' , 'Result' , ), 9, (9, (), [ (5, 1, None, None) , (5, 1, None, None) , 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'GetDerivativeUV' , 'ParamU' , 'ParamV' , 'X' , 'Y' , 
			 'Z' , 'Result' , ), 10, (10, (), [ (5, 1, None, None) , (5, 1, None, None) , 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'GetDerivativeUUU' , 'ParamU' , 'ParamV' , 'X' , 'Y' , 
			 'Z' , 'Result' , ), 11, (11, (), [ (5, 1, None, None) , (5, 1, None, None) , 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'GetDerivativeVVV' , 'ParamU' , 'ParamV' , 'X' , 'Y' , 
			 'Z' , 'Result' , ), 12, (12, (), [ (5, 1, None, None) , (5, 1, None, None) , 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'GetDerivativeUVV' , 'ParamU' , 'ParamV' , 'X' , 'Y' , 
			 'Z' , 'Result' , ), 13, (13, (), [ (5, 1, None, None) , (5, 1, None, None) , 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'GetDerivativeUUV' , 'ParamU' , 'ParamV' , 'X' , 'Y' , 
			 'Z' , 'Result' , ), 14, (14, (), [ (5, 1, None, None) , (5, 1, None, None) , 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'ParamUMin' , 'PVal' , ), 15, (15, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'ParamUMax' , 'PVal' , ), 16, (16, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'ParamVMin' , 'PVal' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'ParamVMax' , 'PVal' , ), 18, (18, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'ClosedU' , 'PVal' , ), 19, (19, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ClosedV' , 'PVal' , ), 20, (20, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Surface3DType' , 'PVal' , ), 21, (21, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'GetArea' , 'BitVector' , 'Result' , ), 22, (22, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'NearPointProjection' , 'X' , 'Y' , 'Z' , 'ParamU' , 
			 'ParamV' , 'Ext' , 'Result' , ), 23, (23, (), [ (5, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (11, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'GetBoundaryUVNurbs' , 'UV' , 'Closed' , 'LoopIndex' , 'EdgeIndex' , 
			 'Degree' , 'Points' , 'Weights' , 'Knots' , 'TMin' , 
			 'TMax' , 'Result' , ), 24, (24, (), [ (11, 1, None, None) , (11, 1, None, None) , 
			 (3, 1, None, None) , (3, 1, None, None) , (16387, 2, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , 
			 (16396, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'BoundaryCount' , 'PVal' , ), 25, (25, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'GetEdgesCount' , 'LoopIndex' , 'Result' , ), 26, (26, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
]

IMeasurementContainer_vtables_dispatch_ = 1
IMeasurementContainer_vtables_ = [
	(( 'DistanceAngleMeasurements3D' , 'PVal' , ), 18001, (18001, (), [ (16393, 10, None, "IID('{F16C388F-16DC-4498-8875-EC8B300CE4A0}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'EdgeLengthMeasurements3D' , 'PVal' , ), 18002, (18002, (), [ (16393, 10, None, "IID('{90749843-C25C-4E07-A432-F46201BEE90C}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'AreaMeasurements3D' , 'PVal' , ), 18003, (18003, (), [ (16393, 10, None, "IID('{12126558-EA51-46E0-BAED-07E523F4B7C6}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
]

IMeshAroundPointParam_vtables_dispatch_ = 1
IMeshAroundPointParam_vtables_ = [
	(( 'MeshType' , 'PVal' , ), 4001, (4001, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'MeshType' , 'PVal' , ), 4001, (4001, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'OffsetU' , 'PVal' , ), 4002, (4002, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'OffsetU' , 'PVal' , ), 4002, (4002, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'OffsetV' , 'PVal' , ), 4003, (4003, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'OffsetV' , 'PVal' , ), 4003, (4003, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'AssociationObject' , 'PVal' , ), 4004, (4004, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'AssociationObject' , 'PVal' , ), 4004, (4004, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'GetOffsetPoint' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 4005, (4005, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'SetOffsetPoint' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 4006, (4006, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Step1' , 'PVal' , ), 4007, (4007, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Step1' , 'PVal' , ), 4007, (4007, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Step2' , 'PVal' , ), 4008, (4008, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Step2' , 'PVal' , ), 4008, (4008, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'StepU' , 'PVal' , ), 4009, (4009, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'StepU' , 'PVal' , ), 4009, (4009, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'StepV' , 'PVal' , ), 4010, (4010, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'StepV' , 'PVal' , ), 4010, (4010, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Step' , 'PVal' , ), 4011, (4011, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Step' , 'PVal' , ), 4011, (4011, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'RayCount' , 'PVal' , ), 4012, (4012, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'RayCount' , 'PVal' , ), 4012, (4012, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'RadialStep' , 'PVal' , ), 4013, (4013, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'RadialStep' , 'PVal' , ), 4013, (4013, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'MeshAngle' , 'PVal' , ), 4014, (4014, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'MeshAngle' , 'PVal' , ), 4014, (4014, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
]

IMeshCopyObjectParam_vtables_dispatch_ = 1
IMeshCopyObjectParam_vtables_ = [
	(( 'Angle1' , 'Val' , ), 2001, (2001, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Angle1' , 'Val' , ), 2001, (2001, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Step1' , 'PVal' , ), 2002, (2002, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Step1' , 'PVal' , ), 2002, (2002, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'StepFactor1' , 'PVal' , ), 2003, (2003, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'StepFactor1' , 'PVal' , ), 2003, (2003, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Count1' , 'Val' , ), 2004, (2004, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Count1' , 'Val' , ), 2004, (2004, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Angle2' , 'PVal' , ), 2005, (2005, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Angle2' , 'PVal' , ), 2005, (2005, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Step2' , 'PVal' , ), 2006, (2006, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Step2' , 'PVal' , ), 2006, (2006, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'StepFactor2' , 'PVal' , ), 2007, (2007, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'StepFactor2' , 'PVal' , ), 2007, (2007, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'Count2' , 'PVal' , ), 2008, (2008, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'Count2' , 'PVal' , ), 2008, (2008, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'SaveCornersCopy' , 'PVal' , ), 2009, (2009, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'SaveCornersCopy' , 'PVal' , ), 2009, (2009, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'SaveCentreCopy' , 'PVal' , ), 2010, (2010, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'SaveCentreCopy' , 'PVal' , ), 2010, (2010, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
]

IMeshObject3D_vtables_dispatch_ = 1
IMeshObject3D_vtables_ = [
	(( 'InitByObjects' , 'Objects' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
]

IMeshPointsSurface_vtables_dispatch_ = 1
IMeshPointsSurface_vtables_ = [
	(( 'BuildingType' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'PVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'GetParams' , 'ClosedV' , 'ClosedU' , 'DegreeV' , 'DegreeU' , 
			 'RowsCount' , 'ColumsCount' , 'Points' , 'Weights' , 'Result' , 
			 ), 2, (2, (), [ (16395, 2, None, None) , (16395, 2, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , 
			 (16387, 2, None, None) , (16387, 2, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'SetParams' , 'ClosedV' , 'ClosedU' , 'DegreeV' , 'DegreeU' , 
			 'RowsCount' , 'ColumsCount' , 'Points' , 'Weights' , 'Result' , 
			 ), 3, (3, (), [ (11, 1, None, None) , (11, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
			 (3, 1, None, None) , (3, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'InitParamByFace' , 'Face' , 'Result' , ), 4, (4, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'ClosedU' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'ClosedU' , 'PVal' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'ClosedV' , 'PVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'ClosedV' , 'PVal' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'DegreeU' , 'PVal' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'DegreeU' , 'PVal' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'DegreeV' , 'PVal' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'DegreeV' , 'PVal' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'BeginPointsSeries' , 'AddNewRow' , 'IndexAt' , 'Result' , ), 9, (9, (), [ 
			 (11, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'AddPoint' , 'X' , 'Y' , 'Z' , 'Weight' , 
			 'PointType' , 'AssociationObject' , 'Result' , ), 10, (10, (), [ (5, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (3, 1, None, None) , (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , 
			 (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'EndPointsSeries' , 'Result' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'AddPointsSeries' , 'AddNewRow' , 'IndexAt' , 'Points' , 'Weights' , 
			 'Result' , ), 12, (12, (), [ (11, 1, None, None) , (3, 1, None, None) , (12, 1, None, None) , 
			 (12, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'DeletePointsSeries' , 'DeleteRow' , 'Index' , 'Result' , ), 13, (13, (), [ 
			 (11, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'ClearPointsSeries' , 'Result' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'RowsCount' , 'PVal' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'ColumnsCount' , 'PVal' , ), 16, (16, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'PointType' , 'IRow' , 'ICol' , 'PVal' , ), 17, (17, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'PointType' , 'IRow' , 'ICol' , 'PVal' , ), 17, (17, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'PointParameters' , 'IRow' , 'ICol' , 'Result' , ), 18, (18, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'GetPoint' , 'IRow' , 'ICol' , 'X' , 'Y' , 
			 'Z' , 'Weight' , 'Result' , ), 19, (19, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'SetPoint' , 'IRow' , 'ICol' , 'X' , 'Y' , 
			 'Z' , 'Weight' , 'Result' , ), 20, (20, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'CheckSelfIntersection' , 'PVal' , ), 21, (21, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'CheckSelfIntersection' , 'PVal' , ), 21, (21, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'AssociationObject' , 'IRow' , 'ICol' , 'PVal' , ), 22, (22, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'AssociationObject' , 'IRow' , 'ICol' , 'PVal' , ), 22, (22, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
]

IMeshPointsSurfaces_vtables_dispatch_ = 1
IMeshPointsSurfaces_vtables_ = [
	(( 'MeshPointsSurface' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{A1D85AB6-C3FD-415B-92DB-4EB4414CA78B}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{A1D85AB6-C3FD-415B-92DB-4EB4414CA78B}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Load' , 'FileName' , 'Result' , ), 3, (3, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{A1D85AB6-C3FD-415B-92DB-4EB4414CA78B}')") , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IMirrorPattern_vtables_dispatch_ = 1
IMirrorPattern_vtables_ = [
	(( 'Plane' , 'Object' , ), 101, (101, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Plane' , 'Object' , ), 101, (101, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'SaveInitialObjects' , 'PVal' , ), 102, (102, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'SaveInitialObjects' , 'PVal' , ), 102, (102, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
]

IModelContainer_vtables_dispatch_ = 1
IModelContainer_vtables_ = [
	(( 'Objects' , 'ObjType' , 'Result' , ), 10001, (10001, (), [ (12, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Sketchs' , 'PVal' , ), 10002, (10002, (), [ (16393, 10, None, "IID('{EE562963-395C-4748-9726-FCA9C531B1CA}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Extrusions' , 'PVal' , ), 10003, (10003, (), [ (16393, 10, None, "IID('{A160C032-CF96-4467-A682-CE2243DF76BD}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Points3D' , 'PVal' , ), 10004, (10004, (), [ (16393, 10, None, "IID('{81EBB128-3963-4759-9D4E-2829C3078B0F}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'FeaturePatterns' , 'PVal' , ), 10005, (10005, (), [ (16393, 10, None, "IID('{5CD7AC22-D8C2-42C4-96E5-5D64E44046F7}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'SurfaceThickenings' , 'PVal' , ), 10006, (10006, (), [ (16393, 10, None, "IID('{7A9B6FCC-2156-48C8-BC95-597242EE1B9E}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Rotateds' , 'PVal' , ), 10007, (10007, (), [ (16393, 10, None, "IID('{A9B14309-92B3-46BA-8841-233293A60310}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Scalings3D' , 'PVal' , ), 10008, (10008, (), [ (16393, 10, None, "IID('{B180FE26-ABEE-4F37-932F-24AAACF227A4}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'BilletsObsoletes' , 'PVal' , ), 10009, (10009, (), [ (16393, 10, None, "IID('{140DE7B8-8291-4220-B7FB-9F3C4FDFB649}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'CopiesGeometry' , 'PVal' , ), 10010, (10010, (), [ (16393, 10, None, "IID('{6CC5E3B7-B509-4B8E-87D1-0B936010120C}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'CollectionsGeometry' , 'PVal' , ), 10011, (10011, (), [ (16393, 10, None, "IID('{F1B04DDA-FAAC-4D51-9567-304CFE3EC094}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'UserObjects' , 'PVal' , ), 10012, (10012, (), [ (16393, 10, None, "IID('{1753E6BE-C57C-415E-931D-37EAD991D629}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Holes3D' , 'PVal' , ), 10013, (10013, (), [ (16393, 10, None, "IID('{A018E8CE-26F6-4DAE-801B-378ED08A6314}')") , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Chamfers' , 'PVal' , ), 10014, (10014, (), [ (16393, 10, None, "IID('{5E232224-2445-430F-9324-2C75BACE1D0C}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Fillets' , 'PVal' , ), 10015, (10015, (), [ (16393, 10, None, "IID('{7A0672EF-4C38-4FD7-8D06-DADD256E1E38}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Inclines' , 'PVal' , ), 10016, (10016, (), [ (16393, 10, None, "IID('{37E37D7D-58D1-4469-9B79-2254D2B9E112}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Ribs' , 'PVal' , ), 10017, (10017, (), [ (16393, 10, None, "IID('{70FF934F-D7A2-4D91-AB55-27174E90648B}')") , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Shells' , 'PVal' , ), 10018, (10018, (), [ (16393, 10, None, "IID('{0BA80020-AD0B-4442-B4C7-7AC75AA04CAC}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Booleans' , 'PVal' , ), 10019, (10019, (), [ (16393, 10, None, "IID('{1739583B-BFDA-4AD2-BFE3-14302133BB21}')") , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Cuts' , 'PVal' , ), 10020, (10020, (), [ (16393, 10, None, "IID('{85B81047-11F3-46D3-869D-EFE37A6A8588}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Lofts' , 'PVal' , ), 10021, (10021, (), [ (16393, 10, None, "IID('{AF5F922F-8C32-4949-A29A-BB5EC7A99D00}')") , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Evolutions' , 'PVal' , ), 10022, (10022, (), [ (16393, 10, None, "IID('{8D984124-C430-45B3-939A-B5264C5B1388}')") , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'UnionsComponents' , 'PVal' , ), 10023, (10023, (), [ (16393, 10, None, "IID('{2A449EF6-1554-4C66-8A98-2734DAB88E97}')") , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'MoldCavities' , 'PVal' , ), 10024, (10024, (), [ (16393, 10, None, "IID('{EF2EE8A8-BCC8-49BA-8FF5-3BBF627C1432}')") , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'MacroObjects3D' , 'PVal' , ), 10025, (10025, (), [ (16393, 10, None, "IID('{B4C41D1D-02E2-4A05-A493-7D25CEEC797C}')") , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'BodyRepositions' , 'PVal' , ), 10026, (10026, (), [ (16393, 10, None, "IID('{C42BE43C-5DE5-4293-9254-5AA7F3B2EC2B}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'AddObject' , 'ObjectType' , 'Result' , ), 10027, (10027, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'FullFillets' , 'PVal' , ), 10028, (10028, (), [ (16393, 10, None, "IID('{F36E8FBA-F786-4E65-8782-3F6BC2F9D006}')") , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
]

IModelCurve3D_vtables_dispatch_ = 1
IModelCurve3D_vtables_ = [
	(( 'VertexVisible' , 'Value' , ), 1501, (1501, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'VertexVisible' , 'Value' , ), 1501, (1501, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'VertexStyle' , 'Style' , ), 1502, (1502, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'VertexStyle' , 'Style' , ), 1502, (1502, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'EdgesStyle' , 'Style' , ), 1503, (1503, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'EdgesStyle' , 'Style' , ), 1503, (1503, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'GetVerticesParams' , 'Result' , ), 1504, (1504, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IModelObject_vtables_dispatch_ = 1
IModelObject_vtables_ = [
	(( 'Name' , 'PVal' , ), 501, (501, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'PVal' , ), 501, (501, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Hidden' , 'PVal' , ), 502, (502, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Hidden' , 'PVal' , ), 502, (502, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Update' , 'PVal' , ), 503, (503, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Valid' , 'PVal' , ), 504, (504, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Part' , 'Result' , ), 505, (505, (), [ (16393, 10, None, "IID('{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'ModelObjectType' , 'Type' , ), 506, (506, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Owner' , 'PVal' , ), 507, (507, (), [ (16393, 10, None, "IID('{EF4343FA-985D-4FE9-AD5F-439BC8F92958}')") , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
]

IModelObject1_vtables_dispatch_ = 1
IModelObject1_vtables_ = [
	(( 'Parents' , 'RelType' , 'Result' , ), 508, (508, (), [ (3, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Childrens' , 'RelType' , 'Result' , ), 509, (509, (), [ (3, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Links' , 'Result' , ), 510, (510, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'IsMyLink' , 'RelType' , 'Primitive' , 'Result' , ), 511, (511, (), [ 
			 (3, 1, None, None) , (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'LayerNumber' , 'PVal' , ), 512, (512, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'LayerNumber' , 'PVal' , ), 512, (512, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Projected' , 'PVal' , ), 513, (513, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Projected' , 'PVal' , ), 513, (513, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'HiddenEx' , 'PVal' , ), 514, (514, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'HiddenEx' , 'PVal' , ), 514, (514, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Editable' , 'PVal' , ), 515, (515, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Editable' , 'PVal' , ), 515, (515, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Reset' , 'Result' , ), 516, (516, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'MathObject' , 'PVal' , ), 517, (517, (), [ (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ConnectedWithInitialEmbodiment' , 'PVal' , ), 518, (518, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ConnectedWithInitialEmbodiment' , 'PVal' , ), 518, (518, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'IsEditableObject' , 'PVal' , ), 519, (519, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'IsExternalObject' , 'PVal' , ), 520, (520, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
]

IModelObjectNotifyResult_vtables_dispatch_ = 1
IModelObjectNotifyResult_vtables_ = [
	(( 'NotifyType' , 'PVal' , ), 4001, (4001, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'NotifyObjects' , 'PVal' , ), 4002, (4002, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'ProcessType' , 'PVal' , ), 4003, (4003, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'IsUndoMode' , 'Result' , ), 4004, (4004, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'IsRedoMode' , 'Result' , ), 4005, (4005, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IModelObjects_vtables_dispatch_ = 1
IModelObjects_vtables_ = [
	(( 'Item' , 'Index' , 'Result' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IMoldCavities_vtables_dispatch_ = 1
IMoldCavities_vtables_ = [
	(( 'MoldCavity' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{C4B6D128-8013-4AF4-B4D5-40E25F2CDBD0}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{C4B6D128-8013-4AF4-B4D5-40E25F2CDBD0}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IMoldCavity_vtables_dispatch_ = 1
IMoldCavity_vtables_ = [
	(( 'Parts' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Parts' , 'Result' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Scale' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Scale' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'ScaleCentre' , 'PVal' , ), 3, (3, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'ScaleCentre' , 'PVal' , ), 3, (3, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IMouseEnterLeaveParameters7_vtables_dispatch_ = 1
IMouseEnterLeaveParameters7_vtables_ = [
	(( 'X' , 'PVal' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'X' , 'PVal' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Offset' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Offset' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'OffsetAngle' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'OffsetAngle' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Symbol' , 'PVal' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Symbol' , 'PVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'SymbolFont' , 'PVal' , ), 6, (6, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'SymbolFont' , 'PVal' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'SymbolColor' , 'PVal' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'SymbolColor' , 'PVal' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'SymbolScale' , 'PVal' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'SymbolScale' , 'PVal' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
]

IMultiTextLeader_vtables_dispatch_ = 1
IMultiTextLeader_vtables_ = [
	(( 'ArrowType' , 'Result' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ArrowType' , 'Result' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'BranchCount' , 'Result' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'BranchPoints' , 'Index' , 'PVal' , ), 3, (3, (), [ (3, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'BranchPoints' , 'Index' , 'PVal' , ), 3, (3, (), [ (3, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'BranchPointsCount' , 'Index' , 'Result' , ), 4, (4, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'BranchX' , 'Index' , 'PVal' , ), 5, (5, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'BranchX' , 'Index' , 'PVal' , ), 5, (5, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'BranchY' , 'Index' , 'PVal' , ), 6, (6, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'BranchY' , 'Index' , 'PVal' , ), 6, (6, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'AddBranch' , 'Index' , 'Points' , 'Result' , ), 7, (7, (), [ 
			 (3, 1, None, None) , (12, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'AddBranchByPoint' , 'Index' , 'X' , 'Y' , 'Result' , 
			 ), 8, (8, (), [ (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'DeleteBranch' , 'Index' , 'Result' , ), 9, (9, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'ShelfX' , 'Result' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ShelfX' , 'Result' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'ShelfY' , 'Result' , ), 11, (11, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'ShelfY' , 'Result' , ), 11, (11, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'ShelfDirection' , 'Result' , ), 12, (12, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'ShelfDirection' , 'Result' , ), 12, (12, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'TextDirection' , 'Result' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'TextDirection' , 'Result' , ), 13, (13, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Form' , 'Result' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'Form' , 'Result' , ), 14, (14, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'Align' , 'Result' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'Align' , 'Result' , ), 15, (15, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'Text' , 'PVal' , ), 16, (16, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
]

IMultiTextLeaders_vtables_dispatch_ = 1
IMultiTextLeaders_vtables_ = [
	(( 'MultiTextLeader' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{1BFC5D3F-1483-4569-B4B5-7A12163A4655}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Value' , ), 2, (2, (), [ (16393, 10, None, "IID('{1BFC5D3F-1483-4569-B4B5-7A12163A4655}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IMultiThicknessGroupsManager_vtables_dispatch_ = 1
IMultiThicknessGroupsManager_vtables_ = [
	(( 'MultiThick' , 'PVal' , ), 7001, (7001, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'MultiThick' , 'PVal' , ), 7001, (7001, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'AddMultiThicknessGroup' , 'Type' , 'Objects' , 'Thickness' , 'Result' , 
			 ), 7002, (7002, (), [ (3, 1, None, None) , (12, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'MultiThicknessGroupsCount' , 'Type' , 'PVal' , ), 7003, (7003, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'MultiThicknessGroupsObjects' , 'Type' , 'Index' , 'Result' , ), 7004, (7004, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'MultiThicknessGroupsObjects' , 'Type' , 'Index' , 'Result' , ), 7004, (7004, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'MultiThicknessGroupsThickness' , 'Type' , 'Index' , 'Result' , ), 7005, (7005, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'MultiThicknessGroupsThickness' , 'Type' , 'Index' , 'Result' , ), 7005, (7005, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'DeleteMultiThicknessGroup' , 'Type' , 'Index' , 'Result' , ), 7006, (7006, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'DestroyMultiThicknessGroup' , 'Type' , 'Index' , 'Result' , ), 7007, (7007, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'ExcludeMultiThicknessGroupObjects' , 'Objects' , 'Result' , ), 7008, (7008, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'ClearMultiThicknessGroups' , 'Result' , ), 7009, (7009, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

IMultiline_vtables_dispatch_ = 1
IMultiline_vtables_ = [
	(( 'Closed' , 'Result' , ), 1, (1, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Closed' , 'Result' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'BaseContour' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{E79F5A53-F456-4996-B620-16B725F134FB}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'TrackingType' , 'VertexIndex' , 'Val' , ), 3, (3, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'TrackingType' , 'VertexIndex' , 'Val' , ), 3, (3, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'VertexLimiter' , 'VertexIndex' , 'PVal' , ), 4, (4, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'VertexLimiter' , 'VertexIndex' , 'PVal' , ), 4, (4, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'VertexDirection' , 'VertexIndex' , 'PVal' , ), 5, (5, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'VertexDirection' , 'VertexIndex' , 'PVal' , ), 5, (5, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'VertexRadius' , 'VertexIndex' , 'PVal' , ), 6, (6, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'VertexRadius' , 'VertexIndex' , 'PVal' , ), 6, (6, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'VertexStyle' , 'VertexIndex' , 'Result' , ), 7, (7, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'VertexStyle' , 'VertexIndex' , 'Result' , ), 7, (7, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'VertexCount' , 'PVal' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'EndLimiter' , 'First' , 'PVal' , ), 9, (9, (), [ (11, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'EndLimiter' , 'First' , 'PVal' , ), 9, (9, (), [ (11, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'EndParameter' , 'First' , 'PVal' , ), 10, (10, (), [ (11, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'EndParameter' , 'First' , 'PVal' , ), 10, (10, (), [ (11, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'EndStyle' , 'First' , 'Result' , ), 11, (11, (), [ (11, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'EndStyle' , 'First' , 'Result' , ), 11, (11, (), [ (11, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'AddLine' , 'Offset' , 'Style' , 'Result' , ), 12, (12, (), [ 
			 (5, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'DeleteLine' , 'LineIndex' , 'Result' , ), 13, (13, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'LineCount' , 'PVal' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'LineOffset' , 'LineIndex' , 'PVal' , ), 15, (15, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'LineOffset' , 'LineIndex' , 'PVal' , ), 15, (15, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'LineStyle' , 'LineIndex' , 'Result' , ), 16, (16, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'LineStyle' , 'LineIndex' , 'Result' , ), 16, (16, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'FindLine' , 'Offset' , 'Result' , ), 17, (17, (), [ (5, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'LineOffsets' , 'Result' , ), 18, (18, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
]

IMultilines_vtables_dispatch_ = 1
IMultilines_vtables_ = [
	(( 'Multiline' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{F6CCB098-5710-44E3-8198-8FAFD56C7A6F}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Value' , ), 2, (2, (), [ (16393, 10, None, "IID('{F6CCB098-5710-44E3-8198-8FAFD56C7A6F}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

INewDocument3DSettings_vtables_dispatch_ = 1
INewDocument3DSettings_vtables_ = [
	(( 'ColorParam' , 'Result' , ), 101, (101, (), [ (16393, 10, None, "IID('{BE6A80EE-38FE-4432-8331-BF864830761C}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
]

INewPartDocumentSettings_vtables_dispatch_ = 1
INewPartDocumentSettings_vtables_ = [
	(( 'Material' , 'PVal' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Material' , 'PVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Density' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Density' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'MaterialLocation' , 'PVal' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'MaterialLocation' , 'PVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'HatchParam' , 'Result' , ), 4, (4, (), [ (16393, 10, None, "IID('{437D6587-7649-4A0C-80BB-7A6E89661839}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

INurbs_vtables_dispatch_ = 1
INurbs_vtables_ = [
	(( 'Closed' , 'Result' , ), 1, (1, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Closed' , 'Result' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Degree' , 'Result' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Degree' , 'Result' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Periodic' , 'Result' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'PointsCount' , 'Result' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'SetNurbsParams' , 'Points' , 'Weight' , 'Knots' , 'Degree' , 
			 'Closed' , 'Result' , ), 5, (5, (), [ (12, 1, None, None) , (12, 1, None, None) , 
			 (12, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'GetNurbsParams' , 'Points' , 'Weight' , 'Knots' , 'Result' , 
			 ), 6, (6, (), [ (16396, 2, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'AddPoint' , 'Index' , 'X' , 'Y' , 'Weight' , 
			 'PVal' , ), 7, (7, (), [ (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'GetPoint' , 'Index' , 'X' , 'Y' , 'Weight' , 
			 'PVal' , ), 8, (8, (), [ (3, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'DeletePoint' , 'Index' , 'Result' , ), 9, (9, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Clear' , 'Result' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Result' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Result' , ), 11, (11, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ReadFromFile' , 'FileName' , 'Result' , ), 12, (12, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'WriteToFile' , 'FileName' , 'Result' , ), 13, (13, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
]

INurbsByPoints_vtables_dispatch_ = 1
INurbsByPoints_vtables_ = [
	(( 'PointsBuildingType' , 'PVal' , ), 101, (101, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'PointsBuildingType' , 'PVal' , ), 101, (101, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'AddPointByParam' , 'Index' , 'X' , 'Y' , 'ConstraintsType' , 
			 'DerivativeLenght' , 'DerivativeAngle' , 'Curvature' , 'Result' , ), 102, (102, (), [ 
			 (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (3, 1, None, None) , (16389, 1, None, None) , 
			 (16389, 1, None, None) , (16389, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'GetPointParam' , 'Index' , 'X' , 'Y' , 'ConstraintsType' , 
			 'DerivativeLenght' , 'DerivativeAngle' , 'Curvature' , 'Result' , ), 103, (103, (), [ 
			 (3, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16387, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'PointConstraints' , 'PointIndex' , 'PVal' , ), 104, (104, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'PointConstraints' , 'PointIndex' , 'PVal' , ), 104, (104, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'DerivativeLenghtInPoint' , 'PointIndex' , 'PVal' , ), 105, (105, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'DerivativeLenghtInPoint' , 'PointIndex' , 'PVal' , ), 105, (105, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'DerivativeAngleInPoint' , 'PointIndex' , 'PVal' , ), 106, (106, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'DerivativeAngleInPoint' , 'PointIndex' , 'PVal' , ), 106, (106, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'CurvatureInPoint' , 'PointIndex' , 'PVal' , ), 107, (107, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'CurvatureInPoint' , 'PointIndex' , 'PVal' , ), 107, (107, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
]

INurbsSurface_vtables_dispatch_ = 1
INurbsSurface_vtables_ = [
	(( 'GetNurbsParams' , 'ClosedV' , 'ClosedU' , 'DegreeV' , 'DegreeU' , 
			 'NPV' , 'NPU' , 'Points' , 'Weights' , 'KnotsV' , 
			 'KnotsU' , 'Result' , ), 1, (1, (), [ (11, 1, None, None) , (11, 1, None, None) , 
			 (16387, 2, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , (16396, 2, None, None) , 
			 (16396, 2, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'SetNurbsParams' , 'ClosedV' , 'ClosedU' , 'DegreeV' , 'DegreeU' , 
			 'NPV' , 'NPU' , 'Points' , 'Weights' , 'KnotsV' , 
			 'KnotsU' , 'Result' , ), 2, (2, (), [ (11, 1, None, None) , (11, 1, None, None) , 
			 (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (12, 1, None, None) , 
			 (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'InitParamByFace' , 'Face' , 'PVal' , ), 3, (3, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'ClosedU' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'ClosedU' , 'PVal' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'ClosedV' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'ClosedV' , 'PVal' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'BoundaryCount' , 'PVal' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'AddBoundary' , 'UV' , 'Closed' , 'Degree' , 'Points' , 
			 'Weights' , 'Knots' , 'TMin' , 'TMax' , 'Result' , 
			 ), 7, (7, (), [ (11, 1, None, None) , (11, 1, None, None) , (3, 1, None, None) , (12, 1, None, None) , 
			 (12, 1, None, None) , (12, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'GetBoundary' , 'UV' , 'Closed' , 'BoundaryIndex' , 'Degree' , 
			 'Points' , 'Weights' , 'Knots' , 'TMin' , 'TMax' , 
			 'Result' , ), 8, (8, (), [ (11, 1, None, None) , (11, 1, None, None) , (3, 1, None, None) , 
			 (16387, 2, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'DeleteBoundary' , 'BoundaryIndex' , 'PVal' , ), 9, (9, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
]

INurbsSurfaceByCurvesMesh_vtables_dispatch_ = 1
INurbsSurfaceByCurvesMesh_vtables_ = [
	(( 'UCurves' , 'Curves' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'UCurves' , 'Curves' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'VCurves' , 'Curves' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'VCurves' , 'Curves' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'CheckSelfIntersection' , 'PVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'CheckSelfIntersection' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'UClosed' , 'PVal' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'UClosed' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'VClosed' , 'PVal' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'VClosed' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ConnectSurface' , 'Index' , 'PVal' , ), 6, (6, (), [ (3, 1, None, None) , 
			 (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ConnectSurface' , 'Index' , 'PVal' , ), 6, (6, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'ConnectType' , 'Index' , 'PVal' , ), 7, (7, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'ConnectType' , 'Index' , 'PVal' , ), 7, (7, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
]

INurbsSurfaces_vtables_dispatch_ = 1
INurbsSurfaces_vtables_ = [
	(( 'NurbsSurface' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{5DAFC690-B3A7-4771-8E98-F83B5BF0D454}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{5DAFC690-B3A7-4771-8E98-F83B5BF0D454}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

INurbsSurfacesByCurvesMeshs_vtables_dispatch_ = 1
INurbsSurfacesByCurvesMeshs_vtables_ = [
	(( 'NurbsSurfaceByCurvesMesh' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{D06FC62C-A572-4E6B-9C85-0A7D0F971079}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{D06FC62C-A572-4E6B-9C85-0A7D0F971079}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

INurbses_vtables_dispatch_ = 1
INurbses_vtables_ = [
	(( 'Nurbs' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{EE1AB9F4-B127-4303-A30D-C3509F6D10CD}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{EE1AB9F4-B127-4303-A30D-C3509F6D10CD}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Convert' , 'Curve' , 'Result' , ), 3, (3, (), [ (9, 1, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , 
			 (16393, 10, None, "IID('{EE1AB9F4-B127-4303-A30D-C3509F6D10CD}')") , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'ConvertEx' , 'Curve' , 'AproximationType' , 'Step' , 'Result' , 
			 ), 4, (4, (), [ (9, 1, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , (3, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{EE1AB9F4-B127-4303-A30D-C3509F6D10CD}')") , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

IOleDrawingObject_vtables_dispatch_ = 1
IOleDrawingObject_vtables_ = [
	(( 'GetPlacement' , 'X' , 'Y' , 'Angle' , 'MirrorSymmetry' , 
			 'Result' , ), 1, (1, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16395, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'SetPlacement' , 'X' , 'Y' , 'Angle' , 'MirrorSymmetry' , 
			 'Result' , ), 2, (2, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Scale' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Scale' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'ClassId' , 'PVal' , ), 4, (4, (), [ (8, 49, "''", None) , ], 1 , 4 , 4 , 0 , 192 , (3, 32, None, None) , 0 , )),
	(( 'ClassId' , 'PVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'FileName' , 'PVal' , ), 5, (5, (), [ (8, 49, "''", None) , ], 1 , 4 , 4 , 0 , 208 , (3, 32, None, None) , 0 , )),
	(( 'FileName' , 'PVal' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Link' , 'PVal' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Link' , 'PVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'InsertionType' , 'PVal' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'InsertionType' , 'PVal' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'DoVerb' , 'iVerb' , 'Result' , ), 8, (8, (), [ (3, 1, None, None) , 
			 (16393, 10, None, None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Close' , 'Save' , 'Result' , ), 9, (9, (), [ (11, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
]

IOleDrawingObjects_vtables_dispatch_ = 1
IOleDrawingObjects_vtables_ = [
	(( 'OleDrawingObject' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{9A0ECE23-7B60-44E0-9728-C56CAAA455A2}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{9A0ECE23-7B60-44E0-9728-C56CAAA455A2}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IOpenDocumentParam_vtables_dispatch_ = 1
IOpenDocumentParam_vtables_ = [
	(( 'Visible' , 'PVal' , ), 1, (1, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'PVal' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ReadOnly' , 'PVal' , ), 2, (2, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'ReadOnly' , 'PVal' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'ApplyingIndex' , 'Result' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'ApplyingIndex' , 'Result' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Password' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

IOrientedEdge7_vtables_dispatch_ = 1
IOrientedEdge7_vtables_ = [
	(( 'Orientation' , 'PVal' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'SameSense' , 'PVal' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Edge' , 'PVal' , ), 3, (3, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Next' , 'PVal' , ), 4, (4, (), [ (16393, 10, None, "IID('{8E62D0EF-3A22-40C7-B5EA-D85FA0C9F25E}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'AdjacentFace' , 'FacePlus' , 'Result' , ), 5, (5, (), [ (11, 1, None, None) , 
			 (16393, 10, None, "IID('{299A549E-3F82-4F60-98A3-258D632AA635}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'IsStraight' , 'PVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'IsSeam' , 'PVal' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'IsPole' , 'PVal' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

IPLMObject_vtables_dispatch_ = 1
IPLMObject_vtables_ = [
	(( 'PLMStatus' , 'PVal' , ), 30001, (30001, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'PLMStatus' , 'PVal' , ), 30001, (30001, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'PLMChange' , 'PVal' , ), 30002, (30002, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'PLMChange' , 'PVal' , ), 30002, (30002, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
]

IPLMObjectsManager_vtables_dispatch_ = 1
IPLMObjectsManager_vtables_ = [
	(( 'SetPLMChangesAttrAvailability' , 'Available' , 'Enabled' , 'Result' , ), 30001, (30001, (), [ 
			 (11, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'SetPLMStatusAttrAvailability' , 'Available' , 'Enabled' , 'Result' , ), 30002, (30002, (), [ 
			 (11, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'PLMStatus' , 'FileName' , 'PVal' , ), 30003, (30003, (), [ (8, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'PLMStatus' , 'FileName' , 'PVal' , ), 30003, (30003, (), [ (8, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'PLMChange' , 'FileName' , 'PVal' , ), 30004, (30004, (), [ (8, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'PLMChange' , 'FileName' , 'PVal' , ), 30004, (30004, (), [ (8, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IPaintObject_vtables_dispatch_ = 1
IPaintObject_vtables_ = [
	(( 'GetHWND' , 'HWnd' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'GetTransformMatrix' , 'A11' , 'A12' , 'A13' , 'A14' , 
			 'A21' , 'A22' , 'A23' , 'A24' , ), 2, (2, (), [ 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'GetDIBForOutput' , 'MapFileName' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
]

IParametriticConstraint_vtables_dispatch_ = 1
IParametriticConstraint_vtables_ = [
	(( 'ConstraintType' , 'PVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ConstraintType' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Index' , 'PVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Index' , 'PVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Partner' , 'PVal' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Partner' , 'PVal' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'PartnerIndex' , 'PVal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'PartnerIndex' , 'PVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Value' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Value' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Expression' , 'PVal' , ), 6, (6, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Expression' , 'PVal' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Comment' , 'PVal' , ), 7, (7, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Comment' , 'PVal' , ), 7, (7, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Variable' , 'PVal' , ), 8, (8, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Variable' , 'PVal' , ), 8, (8, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Degrees' , 'PVal' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Degrees' , 'PVal' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Minutes' , 'PVal' , ), 10, (10, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Minutes' , 'PVal' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Seconds' , 'PVal' , ), 11, (11, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Seconds' , 'PVal' , ), 11, (11, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'PVal' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Create' , 'PVal' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Valid' , 'PVal' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Axis' , 'PVal' , ), 15, (15, (), [ (16393, 10, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Axis' , 'PVal' , ), 15, (15, (), [ (9, 1, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'BisectorVariant' , 'PVal' , ), 16, (16, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'BisectorVariant' , 'PVal' , ), 16, (16, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'SegmentIndex' , 'PVal' , ), 17, (17, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'SegmentIndex' , 'PVal' , ), 17, (17, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'PartnerSegmentIndex' , 'PVal' , ), 18, (18, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'PartnerSegmentIndex' , 'PVal' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'AxisSegmentIndex' , 'PVal' , ), 19, (19, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'AxisSegmentIndex' , 'PVal' , ), 19, (19, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
]

IPart7_vtables_dispatch_ = 1
IPart7_vtables_ = [
	(( 'Marking' , 'PVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Marking' , 'PVal' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'FileName' , 'PVal' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'FileName' , 'PVal' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Standard' , 'PVal' , ), 3, (3, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Standard' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Fixed' , 'PVal' , ), 4, (4, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Fixed' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Detail' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Mass' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Density' , 'PVal' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Material' , 'PVal' , ), 8, (8, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'SetMaterial' , 'Name' , 'Density' , 'PVal' , ), 9, (9, (), [ 
			 (8, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Parts' , 'Result' , ), 10, (10, (), [ (16393, 10, None, "IID('{42F8FCEF-E56F-466C-8814-BEBAC0719AE6}')") , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'VariableTable' , 'Result' , ), 11, (11, (), [ (16393, 10, None, "IID('{2B8B154E-ED76-4FF0-B3E4-FEE691D014A4}')") , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'PartsEx' , 'PartCollectionType' , 'Objects' , ), 12, (12, (), [ (12, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'InstanceCount' , 'Part' , 'Count' , ), 13, (13, (), [ (9, 1, None, "IID('{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}')") , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'SelectByPoint' , 'Objects' , 'X' , 'Y' , 'Z' , 
			 'Result' , ), 14, (14, (), [ (12, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'TransferObjects' , 'Objects' , 'Lcs' , 'HoldPosition' , 'Result' , 
			 ), 15, (15, (), [ (12, 1, None, None) , (9, 1, None, "IID('{BA6395F5-3506-4483-8864-4EEC220AF316}')") , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Load' , 'Full' , 'Result' , ), 16, (16, (), [ (11, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Unload' , 'Full' , 'Result' , ), 17, (17, (), [ (11, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'LoadState' , 'Type' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'DefaultObject' , 'Type' , 'Result' , ), 19, (19, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'IsVariableNameValid' , 'Name' , 'Result' , ), 20, (20, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'AddVariable' , 'Name' , 'Value' , 'Note' , 'Result' , 
			 ), 21, (21, (), [ (8, 1, None, None) , (5, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{8BAB52D9-8EF6-43A6-A1B8-AF42D5961A94}')") , ], 1 , 1 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'RebuildModel' , 'Redraw' , 'Result' , ), 22, (22, (), [ (11, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'ReadOnly' , 'PVal' , ), 23, (23, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'ReadOnly' , 'PVal' , ), 23, (23, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'StaffVisible' , 'PVal' , ), 24, (24, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'StaffVisible' , 'PVal' , ), 24, (24, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'SaveAs' , 'PathName' , 'Result' , ), 25, (25, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'FindObject' , 'Obj' , 'SourcePart' , 'Result' , ), 26, (26, (), [ 
			 (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , (9, 1, None, "IID('{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}')") , (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 1 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'CreateSpcObjects' , 'PVal' , ), 27, (27, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'CreateSpcObjects' , 'PVal' , ), 27, (27, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'IsLocal' , 'PVal' , ), 28, (28, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'IsLocal' , 'PVal' , ), 28, (28, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'GetOpenDocumentParam' , 'Result' , ), 29, (29, (), [ (16393, 10, None, "IID('{FADCA157-95B1-4E3F-97AA-622E34DA3238}')") , ], 1 , 1 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'BeginEdit' , 'Param' , 'Result' , ), 30, (30, (), [ (9, 1, None, "IID('{FADCA157-95B1-4E3F-97AA-622E34DA3238}')") , 
			 (16393, 10, None, "IID('{7B60E769-06C3-4FDC-9677-7B5EF5180308}')") , ], 1 , 1 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'EndEdit' , 'Rebuild' , 'Result' , ), 31, (31, (), [ (11, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'FindObjectsByPoint' , 'X' , 'Y' , 'Z' , 'FirstLevel' , 
			 'Result' , ), 32, (32, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (11, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'HatchParam' , 'Result' , ), 33, (33, (), [ (16393, 10, None, "IID('{437D6587-7649-4A0C-80BB-7A6E89661839}')") , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'UniqueNum' , 'OType' , 'Result' , ), 34, (34, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'UniqueNum' , 'OType' , 'Result' , ), 34, (34, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'ChangeObjectLinks' , 'SourceObjs' , 'DestObjs' , 'RebuildAll' , 'Result' , 
			 ), 35, (35, (), [ (12, 1, None, None) , (12, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'IsLayoutGeometry' , 'PVal' , ), 36, (36, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'IsLayoutGeometry' , 'PVal' , ), 36, (36, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'IsBillet' , 'PVal' , ), 37, (37, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'IsBillet' , 'PVal' , ), 37, (37, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'Placement' , 'Result' , ), 38, (38, (), [ (16393, 10, None, "IID('{9C66DE49-529C-4678-9AF1-12710CB77804}')") , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'UpdatePlacement' , 'Redraw' , 'Result' , ), 39, (39, (), [ (11, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'SpecRough' , 'PVal' , ), 40, (40, (), [ (16393, 10, None, "IID('{AED8F9FC-E493-4CBD-9341-9D9E39E14FDC}')") , ], 1 , 2 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'LeftHandedCS' , 'PVal' , ), 41, (41, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'LeftHandedCS' , 'PVal' , ), 41, (41, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'MirroringPlacement' , 'Axis' , 'Result' , ), 42, (42, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'DestroySubassembly' , 'Result' , ), 43, (43, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
	(( 'GetMaxSag' , 'Result' , ), 44, (44, (), [ (16389, 10, None, None) , ], 1 , 1 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'MateConstraints' , 'Result' , ), 45, (45, (), [ (16393, 10, None, "IID('{95F316E1-0A18-4F42-8B70-1423250F244D}')") , ], 1 , 2 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
	(( 'GetBodyById' , 'BodyId' , 'Result' , ), 46, (46, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{4F122E22-0AA6-46E1-841F-A2504B145995}')") , ], 1 , 1 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
	(( 'UserFolders' , 'Result' , ), 47, (47, (), [ (16393, 10, None, "IID('{0155AE59-92F4-4CEE-9633-8ADA943388CB}')") , ], 1 , 2 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceRecalcType' , 'PVal' , ), 48, (48, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceRecalcType' , 'PVal' , ), 48, (48, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
	(( 'UserToleranceRecalcId' , 'PVal' , ), 49, (49, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
	(( 'UserToleranceRecalcId' , 'PVal' , ), 49, (49, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
	(( 'UserToleranceRecalcName' , 'PVal' , ), 50, (50, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
	(( 'UserToleranceRecalcName' , 'PVal' , ), 50, (50, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
	(( 'UseDummy' , 'PVal' , ), 51, (51, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
	(( 'UseDummy' , 'PVal' , ), 51, (51, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
	(( 'DummyFileName' , 'PVal' , ), 52, (52, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
	(( 'DummyFileName' , 'PVal' , ), 52, (52, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
	(( 'DummyEmbodimentIndex' , 'Index' , ), 53, (53, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
	(( 'GetDummyEmbodimentMarking' , 'MarkingType' , 'AddSystemDelimer' , 'Marking' , ), 54, (54, (), [ 
			 (3, 1, None, None) , (11, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
	(( 'SetDummyEmbodiment' , 'Index' , 'Result' , ), 55, (55, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
	(( 'UnloadEx' , 'Type' , 'Result' , ), 56, (56, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
	(( 'OpenSourceDocument' , 'Param' , 'Result' , ), 57, (57, (), [ (9, 1, None, "IID('{FADCA157-95B1-4E3F-97AA-622E34DA3238}')") , 
			 (16393, 10, None, "IID('{7B60E769-06C3-4FDC-9677-7B5EF5180308}')") , ], 1 , 1 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
	(( 'ZonesManager' , 'PVal' , ), 58, (58, (), [ (16393, 10, None, "IID('{0B93D860-69EC-4D03-8A1D-EB0C936B1D45}')") , ], 1 , 2 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
	(( 'InheritExclude' , 'PVal' , ), 59, (59, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
	(( 'InheritExclude' , 'PVal' , ), 59, (59, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
]

IPartDocument_vtables_dispatch_ = 1
IPartDocument_vtables_ = [
]

IParts7_vtables_dispatch_ = 1
IParts7_vtables_ = [
	(( 'Part' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'AddFromFile' , 'FileName' , 'ExternalFile' , 'Redraw' , 'Result' , 
			 ), 2, (2, (), [ (8, 1, None, None) , (11, 49, 'False', None) , (11, 49, 'True', None) , (16393, 10, None, "IID('{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'FileName' , 'Plane' , 'Result' , ), 3, (3, (), [ 
			 (8, 1, None, None) , (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , (16393, 10, None, "IID('{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}')") , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'CreateDocument' , 'Type' , 'Local' , 'Redraw' , 'Result' , 
			 ), 4, (4, (), [ (3, 1, None, None) , (11, 49, 'True', None) , (11, 49, 'True', None) , (16393, 10, None, "IID('{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}')") , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'CreateDocumentEx' , 'StartFileName' , 'Type' , 'Local' , 'Redraw' , 
			 'Result' , ), 5, (5, (), [ (8, 1, None, None) , (3, 1, None, None) , (11, 49, 'True', None) , 
			 (11, 49, 'True', None) , (16393, 10, None, "IID('{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}')") , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

IPathPattern_vtables_dispatch_ = 1
IPathPattern_vtables_ = [
	(( 'Curves' , 'Curves' , ), 101, (101, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Curves' , 'Curves' , ), 101, (101, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'PVal' , ), 102, (102, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'PVal' , ), 102, (102, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'StartingPoint' , 'Object' , ), 103, (103, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'StartingPoint' , 'Object' , ), 103, (103, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'ByStep' , 'PVal' , ), 104, (104, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'ByStep' , 'PVal' , ), 104, (104, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'Step' , 'PVal' , ), 105, (105, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'Step' , 'PVal' , ), 105, (105, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'BoundaryInstancesStepFactor' , 'PVal' , ), 106, (106, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'BoundaryInstancesStepFactor' , 'PVal' , ), 106, (106, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'SaveInitialOrientation' , 'PVal' , ), 107, (107, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'SaveInitialOrientation' , 'PVal' , ), 107, (107, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'ReverseDirection' , 'PVal' , ), 108, (108, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'ReverseDirection' , 'PVal' , ), 108, (108, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
]

IPhantom2D_vtables_dispatch_ = 1
IPhantom2D_vtables_ = [
	(( 'PhantomType' , 'PVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'PhantomType' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'X' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'X' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Scale' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Scale' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'PhantomGroup' , 'PVal' , ), 6, (6, (), [ (9, 1, None, "IID('{2C96ACB2-4877-45D9-B62D-78BBAD704458}')") , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'PhantomGroup' , 'PVal' , ), 6, (6, (), [ (16393, 10, None, "IID('{2C96ACB2-4877-45D9-B62D-78BBAD704458}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Horizontal' , 'PVal' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Horizontal' , 'PVal' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Update' , 'PVal' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Show' , 'PVal' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Hide' , 'PVal' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
]

IPlacement3D_vtables_dispatch_ = 1
IPlacement3D_vtables_ = [
	(( 'GetOrigin' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 1, (1, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'SetOrigin' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 2, (2, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'GetVector' , 'Axis' , 'X' , 'Y' , 'Z' , 
			 'Result' , ), 3, (3, (), [ (3, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'SetVector' , 'Axis' , 'X' , 'Y' , 'Z' , 
			 'Result' , ), 4, (4, (), [ (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'InitByMatrix3D' , 'mtr' , 'Result' , ), 5, (5, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'GetMatrix3D' , 'Result' , ), 6, (6, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'GetPointProjectionToXY' , 'XIn' , 'YIn' , 'ZIn' , 'XOut' , 
			 'YOut' , 'Result' , ), 7, (7, (), [ (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'GetPoint3D' , 'XIn' , 'YIn' , 'XOut' , 'YOut' , 
			 'ZOut' , 'Result' , ), 8, (8, (), [ (5, 1, None, None) , (5, 1, None, None) , 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Rotate' , 'X0' , 'Y0' , 'Z0' , 'AxisZX' , 
			 'AxisZXY' , 'AxisZZ' , 'Angle' , 'Result' , ), 9, (9, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
]

IPlacement3DManipulator_vtables_dispatch_ = 1
IPlacement3DManipulator_vtables_ = [
	(( 'PrimitiveVisible' , 'Primitive' , 'PVal' , ), 2001, (2001, (), [ (3, 1, None, None) , 
			 (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'PrimitiveVisible' , 'Primitive' , 'PVal' , ), 2001, (2001, (), [ (3, 1, None, None) , 
			 (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'PrimitiveVisible' , 'Primitive' , 'PVal' , ), 2001, (2001, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'PrimitiveDisabled' , 'Primitive' , 'PVal' , ), 2002, (2002, (), [ (3, 1, None, None) , 
			 (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'PrimitiveDisabled' , 'Primitive' , 'PVal' , ), 2002, (2002, (), [ (3, 1, None, None) , 
			 (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'PrimitiveDisabled' , 'Primitive' , 'PVal' , ), 2002, (2002, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'PrimitiveSelected' , 'PVal' , ), 2003, (2003, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'PrimitiveSelected' , 'PVal' , ), 2003, (2003, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ReadOnly' , 'PVal' , ), 2004, (2004, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'ReadOnly' , 'PVal' , ), 2004, (2004, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Mode' , 'PVal' , ), 2005, (2005, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Mode' , 'PVal' , ), 2005, (2005, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'SetRotateRange' , 'Min' , 'Max' , 'Result' , ), 2006, (2006, (), [ 
			 (5, 1, None, None) , (5, 0, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'SetShiftRange' , 'Min' , 'Max' , 'Result' , ), 2007, (2007, (), [ 
			 (5, 1, None, None) , (5, 0, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'RotateStep' , 'PVal' , ), 2008, (2008, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'RotateStep' , 'PVal' , ), 2008, (2008, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ShiftStep' , 'PVal' , ), 2009, (2009, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ShiftStep' , 'PVal' , ), 2009, (2009, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'EditValue' , 'PVal' , ), 2010, (2010, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'EditValue' , 'PVal' , ), 2010, (2010, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'IsEditCreated' , 'PVal' , ), 2011, (2011, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IPlane3D_vtables_dispatch_ = 1
IPlane3D_vtables_ = [
	(( 'Surface' , 'Result' , ), 1, (1, (), [ (16393, 10, None, "IID('{25675C2F-10FD-4CE7-9E73-D3915D3E894E}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
]

IPlane3DBy2Edge_vtables_dispatch_ = 1
IPlane3DBy2Edge_vtables_ = [
	(( 'Edge1' , 'PVal' , ), 101, (101, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Edge1' , 'PVal' , ), 101, (101, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Edge2' , 'PVal' , ), 102, (102, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Edge2' , 'PVal' , ), 102, (102, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Parallel' , 'PVal' , ), 103, (103, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Parallel' , 'PVal' , ), 103, (103, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
]

IPlane3DBy3Points_vtables_dispatch_ = 1
IPlane3DBy3Points_vtables_ = [
	(( 'Point1' , 'PVal' , ), 101, (101, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Point1' , 'PVal' , ), 101, (101, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Point2' , 'PVal' , ), 102, (102, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Point2' , 'PVal' , ), 102, (102, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Point3' , 'PVal' , ), 103, (103, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Point3' , 'PVal' , ), 103, (103, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
]

IPlane3DByAngle_vtables_dispatch_ = 1
IPlane3DByAngle_vtables_ = [
	(( 'Angle' , 'PVal' , ), 101, (101, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 101, (101, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 102, (102, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 102, (102, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'BasePlane' , 'Result' , ), 103, (103, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'BasePlane' , 'Result' , ), 103, (103, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'BaseLine' , 'Result' , ), 104, (104, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'BaseLine' , 'Result' , ), 104, (104, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
]

IPlane3DByEdgeAndPlane_vtables_dispatch_ = 1
IPlane3DByEdgeAndPlane_vtables_ = [
	(( 'Plane' , 'PVal' , ), 101, (101, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Plane' , 'PVal' , ), 101, (101, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Edge' , 'PVal' , ), 102, (102, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Edge' , 'PVal' , ), 102, (102, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Parallel' , 'PVal' , ), 103, (103, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Parallel' , 'PVal' , ), 103, (103, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
]

IPlane3DByEdgeAndPoint_vtables_dispatch_ = 1
IPlane3DByEdgeAndPoint_vtables_ = [
	(( 'Point' , 'Result' , ), 101, (101, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Point' , 'Result' , ), 101, (101, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Edge' , 'Result' , ), 102, (102, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Edge' , 'Result' , ), 102, (102, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
]

IPlane3DByOffset_vtables_dispatch_ = 1
IPlane3DByOffset_vtables_ = [
	(( 'Offset' , 'PVal' , ), 101, (101, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Offset' , 'PVal' , ), 101, (101, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 102, (102, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 102, (102, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'BasePlane' , 'Result' , ), 103, (103, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'BasePlane' , 'Result' , ), 103, (103, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
]

IPlane3DByPlaneCurve_vtables_dispatch_ = 1
IPlane3DByPlaneCurve_vtables_ = [
	(( 'Curve' , 'PVal' , ), 101, (101, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Curve' , 'PVal' , ), 101, (101, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
]

IPlane3DMiddle_vtables_dispatch_ = 1
IPlane3DMiddle_vtables_ = [
	(( 'Object1' , 'PVal' , ), 101, (101, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Object1' , 'PVal' , ), 101, (101, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Object2' , 'PVal' , ), 102, (102, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Object2' , 'PVal' , ), 102, (102, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Oriention' , 'PVal' , ), 103, (103, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Oriention' , 'PVal' , ), 103, (103, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
]

IPlane3DNormalToSurface_vtables_dispatch_ = 1
IPlane3DNormalToSurface_vtables_ = [
	(( 'Angle' , 'PVal' , ), 101, (101, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 101, (101, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Plane' , 'Result' , ), 102, (102, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Plane' , 'Result' , ), 102, (102, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Face' , 'Result' , ), 103, (103, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Face' , 'Result' , ), 103, (103, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'AngleDirection' , 'PVal' , ), 104, (104, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'AngleDirection' , 'PVal' , ), 104, (104, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
]

IPlane3DParallelByPoint_vtables_dispatch_ = 1
IPlane3DParallelByPoint_vtables_ = [
	(( 'Point' , 'Result' , ), 101, (101, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Point' , 'Result' , ), 101, (101, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Plane' , 'Result' , ), 102, (102, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Plane' , 'Result' , ), 102, (102, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
]

IPlane3DPerpendicularByEdge_vtables_dispatch_ = 1
IPlane3DPerpendicularByEdge_vtables_ = [
	(( 'Point' , 'Result' , ), 101, (101, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Point' , 'Result' , ), 101, (101, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Edge' , 'Result' , ), 102, (102, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Edge' , 'Result' , ), 102, (102, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Vector3D' , 'Result' , ), 103, (103, (), [ (16393, 10, None, "IID('{D51A4DCF-627D-44F5-89BA-46EF2449A212}')") , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IPlane3DTangentToFace_vtables_dispatch_ = 1
IPlane3DTangentToFace_vtables_ = [
	(( 'Face' , 'PVal' , ), 101, (101, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Face' , 'PVal' , ), 101, (101, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Plane' , 'PVal' , ), 102, (102, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Plane' , 'PVal' , ), 102, (102, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 103, (103, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 103, (103, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'PVal' , ), 104, (104, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'PVal' , ), 104, (104, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
]

IPlane3DTangentToFaceInPoint_vtables_dispatch_ = 1
IPlane3DTangentToFaceInPoint_vtables_ = [
	(( 'Face' , 'PVal' , ), 101, (101, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Face' , 'PVal' , ), 101, (101, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Point' , 'PVal' , ), 102, (102, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Point' , 'PVal' , ), 102, (102, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'ParamU' , 'PVal' , ), 103, (103, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'ParamU' , 'PVal' , ), 103, (103, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'ParamV' , 'PVal' , ), 104, (104, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'ParamV' , 'PVal' , ), 104, (104, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
]

IPlanes3D_vtables_dispatch_ = 1
IPlanes3D_vtables_ = [
	(( 'Plane3D' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{D71C768D-89F1-4143-903A-AD2595FD8220}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'PlaneType' , 'Result' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{D71C768D-89F1-4143-903A-AD2595FD8220}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IPoint_vtables_dispatch_ = 1
IPoint_vtables_ = [
	(( 'X' , 'PVal' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'X' , 'PVal' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'PVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'PVal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
]

IPoint3D_vtables_dispatch_ = 1
IPoint3D_vtables_ = [
	(( 'X' , 'PVal' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'X' , 'PVal' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Z' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Z' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'SetAssociationObject' , 'NewVal' , 'Result' , ), 4, (4, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'AssociationObject' , 'PVal' , ), 5, (5, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Symbol' , 'PVal' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Symbol' , 'PVal' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ParameterType' , 'PVal' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ParameterType' , 'PVal' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Parameters' , 'Result' , ), 8, (8, (), [ (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
]

IPoint3DParamByCylinder_vtables_dispatch_ = 1
IPoint3DParamByCylinder_vtables_ = [
	(( 'R' , 'PVal' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'R' , 'PVal' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'A' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'A' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Z' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Z' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'AssociationObject' , 'Result' , ), 4, (4, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'AssociationObject' , 'Result' , ), 4, (4, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'RadiusObject' , 'Result' , ), 5, (5, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'RadiusObject' , 'Result' , ), 5, (5, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
]

IPoint3DParamBySphere_vtables_dispatch_ = 1
IPoint3DParamBySphere_vtables_ = [
	(( 'R' , 'PVal' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'R' , 'PVal' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'A' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'A' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'B' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'B' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'AssociationObject' , 'Result' , ), 4, (4, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'AssociationObject' , 'Result' , ), 4, (4, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'RadiusObject' , 'Result' , ), 5, (5, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'RadiusObject' , 'Result' , ), 5, (5, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
]

IPoint3DParamCenter_vtables_dispatch_ = 1
IPoint3DParamCenter_vtables_ = [
	(( 'SetObject' , 'NewVal' , 'Result' , ), 1, (1, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Object' , 'PVal' , ), 2, (2, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IPoint3DParamCurve_vtables_dispatch_ = 1
IPoint3DParamCurve_vtables_ = [
	(( 'SetCurveObject' , 'NewVal' , 'Result' , ), 1, (1, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'CurveObject' , 'PVal' , ), 2, (2, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'OffsetType' , 'PVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'OffsetType' , 'PVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Offset' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Offset' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

IPoint3DParamDisplace_vtables_dispatch_ = 1
IPoint3DParamDisplace_vtables_ = [
	(( 'DX' , 'PVal' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'DX' , 'PVal' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'DY' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'DY' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'DZ' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'DZ' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'SetAssociationVertex' , 'NewVal' , 'Result' , ), 4, (4, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'AssociationVertex' , 'PVal' , ), 5, (5, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'SetGuidingObject' , 'NewVal' , 'Result' , ), 6, (6, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'GuidingObject' , 'PVal' , ), 7, (7, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Distance' , 'PVal' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Distance' , 'PVal' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Vector3D' , 'PVal' , ), 9, (9, (), [ (16393, 10, None, "IID('{D51A4DCF-627D-44F5-89BA-46EF2449A212}')") , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IPoint3DParamIntersect_vtables_dispatch_ = 1
IPoint3DParamIntersect_vtables_ = [
	(( 'SetCurveObject' , 'NewVal' , 'Result' , ), 1, (1, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'CurveObject' , 'PVal' , ), 2, (2, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'SetSurfaceObject' , 'NewVal' , 'Result' , ), 3, (3, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'SurfaceObject' , 'PVal' , ), 4, (4, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'CartPointArray' , 'Result' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Index' , 'PVal' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Index' , 'PVal' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

IPoint3DParamProjection_vtables_dispatch_ = 1
IPoint3DParamProjection_vtables_ = [
	(( 'SetAssociationVertex' , 'NewVal' , 'Result' , ), 1, (1, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'AssociationVertex' , 'PVal' , ), 2, (2, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'SetSurfaceObject' , 'NewVal' , 'Result' , ), 3, (3, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'SurfaceObject' , 'PVal' , ), 4, (4, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'SetGuidingObject' , 'NewVal' , 'Result' , ), 5, (5, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'GuidingObject' , 'PVal' , ), 6, (6, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Vector3D' , 'PVal' , ), 7, (7, (), [ (16393, 10, None, "IID('{D51A4DCF-627D-44F5-89BA-46EF2449A212}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

IPoint3DParamSurface_vtables_dispatch_ = 1
IPoint3DParamSurface_vtables_ = [
	(( 'SetSurfaceObject' , 'NewVal' , 'Result' , ), 1, (1, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'SurfaceObject' , 'PVal' , ), 2, (2, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'OffsetType' , 'PVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'OffsetType' , 'PVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Offset1' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Offset1' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Offset2' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Offset2' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'SetObject1' , 'NewVal' , 'Result' , ), 6, (6, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Object1' , 'PVal' , ), 7, (7, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'SetObject2' , 'NewVal' , 'Result' , ), 8, (8, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Object2' , 'PVal' , ), 9, (9, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'AllowBoundaries' , 'PVal' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'AllowBoundaries' , 'PVal' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
]

IPointDrivenPattern_vtables_dispatch_ = 1
IPointDrivenPattern_vtables_ = [
	(( 'DrivenObjects' , 'Objects' , ), 101, (101, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'DrivenObjects' , 'Objects' , ), 101, (101, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'IsSuitableDrivenObject' , 'Object' , 'Result' , ), 102, (102, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'ClearDrivenObjects' , 'Result' , ), 103, (103, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'ProjectionPoints' , 'PVal' , ), 104, (104, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'ProjectionPoints' , 'PVal' , ), 104, (104, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'SaveInitialOrientation' , 'PVal' , ), 105, (105, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'SaveInitialOrientation' , 'PVal' , ), 105, (105, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'OrientationType' , 'PVal' , ), 106, (106, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'OrientationType' , 'PVal' , ), 106, (106, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'OrientationObject' , 'PVal' , ), 107, (107, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'OrientationObject' , 'PVal' , ), 107, (107, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
]

IPoints_vtables_dispatch_ = 1
IPoints_vtables_ = [
	(( 'Point' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{D0C19C87-14E7-401D-AEF5-A2E88E899F6E}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{D0C19C87-14E7-401D-AEF5-A2E88E899F6E}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IPoints3D_vtables_dispatch_ = 1
IPoints3D_vtables_ = [
	(( 'Point3D' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{D71AEDBE-01D4-4C7D-96DC-94981F2A1C37}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{D71AEDBE-01D4-4C7D-96DC-94981F2A1C37}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IPointsArrFromFile_vtables_dispatch_ = 1
IPointsArrFromFile_vtables_ = [
	(( 'PointsType' , 'PVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'PointsType' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'FileName' , 'PVal' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'FileName' , 'PVal' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Symbol' , 'PVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Symbol' , 'PVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Destroy' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
]

IPointsArrOnCurve_vtables_dispatch_ = 1
IPointsArrOnCurve_vtables_ = [
	(( 'Curve' , 'PVal' , ), 1, (1, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Curve' , 'PVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'PVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'PVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'PVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'PVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Step' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Step' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'ByStep' , 'PVal' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'ByStep' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ReverseDirection' , 'PVal' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ReverseDirection' , 'PVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'OnOffsets' , 'PVal' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'OnOffsets' , 'PVal' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'OffsetType' , 'FirstPoint' , 'PVal' , ), 8, (8, (), [ (11, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'OffsetType' , 'FirstPoint' , 'PVal' , ), 8, (8, (), [ (11, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Offset' , 'FirstPoint' , 'PVal' , ), 9, (9, (), [ (11, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Offset' , 'FirstPoint' , 'PVal' , ), 9, (9, (), [ (11, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'OffsetDirection' , 'FirstPoint' , 'PVal' , ), 10, (10, (), [ (11, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'OffsetDirection' , 'FirstPoint' , 'PVal' , ), 10, (10, (), [ (11, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Symbol' , 'PVal' , ), 11, (11, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Symbol' , 'PVal' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'Destroy' , 'PVal' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
]

IPointsArrOnSurface_vtables_dispatch_ = 1
IPointsArrOnSurface_vtables_ = [
	(( 'Face' , 'PVal' , ), 1, (1, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Face' , 'PVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'PVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'PVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'UCount' , 'PVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'UCount' , 'PVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'VCount' , 'PVal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'VCount' , 'PVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'LinearDeflection' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'LinearDeflection' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'AngularDeflection' , 'PVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'AngularDeflection' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'AllowBoundaries' , 'PVal' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'AllowBoundaries' , 'PVal' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Symbol' , 'PVal' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Symbol' , 'PVal' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Destroy' , 'PVal' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
]

IPointsArrsFromFiles_vtables_dispatch_ = 1
IPointsArrsFromFiles_vtables_ = [
	(( 'PointsArrFromFile' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{782932B2-8969-41E1-819C-2458EA6DC8C0}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{782932B2-8969-41E1-819C-2458EA6DC8C0}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IPointsArrsOnCurves_vtables_dispatch_ = 1
IPointsArrsOnCurves_vtables_ = [
	(( 'PointsArrOnCurve' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{13783B5E-3591-4173-8DA1-6F3095B88DB4}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{13783B5E-3591-4173-8DA1-6F3095B88DB4}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IPointsArrsOnSurfaces_vtables_dispatch_ = 1
IPointsArrsOnSurfaces_vtables_ = [
	(( 'PointsArrOnSurface' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{D385FED6-763E-4B1B-B8E5-8B1926389550}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{D385FED6-763E-4B1B-B8E5-8B1926389550}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IPolyLine_vtables_dispatch_ = 1
IPolyLine_vtables_ = [
	(( 'Closed' , 'Result' , ), 1, (1, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Closed' , 'Result' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'VertexVisible' , 'Result' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'VertexVisible' , 'Result' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'VertexCount' , 'Result' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Edges' , 'Result' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'VertexParams' , 'Index' , 'Result' , ), 5, (5, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{2AD2E4B4-B870-437A-8D57-5807729FCB05}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'ReadFromFile' , 'FileName' , 'Result' , ), 6, (6, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'WriteToFile' , 'FileName' , 'Result' , ), 7, (7, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'AddVertex' , 'Index' , 'Result' , ), 8, (8, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{2AD2E4B4-B870-437A-8D57-5807729FCB05}')") , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'DeleteVertex' , 'Index' , 'Result' , ), 9, (9, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Flush' , 'Result' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'VertexParamsArray' , 'Result' , ), 11, (11, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'GetVertexCoordinatesArray' , 'Coordinates' , 'Radiuses' , 'Result' , ), 12, (12, (), [ 
			 (16396, 2, None, None) , (16396, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ErrorIndexes' , 'Result' , ), 13, (13, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
]

IPolyLine2D_vtables_dispatch_ = 1
IPolyLine2D_vtables_ = [
	(( 'Closed' , 'Result' , ), 1, (1, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Closed' , 'Result' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'PointsCount' , 'Result' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Points' , 'Points' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Points' , 'Points' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'AddPoint' , 'Index' , 'X' , 'Y' , 'PVal' , 
			 ), 4, (4, (), [ (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'GetPoint' , 'Index' , 'X' , 'Y' , 'PVal' , 
			 ), 5, (5, (), [ (3, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'DeletePoint' , 'Index' , 'Result' , ), 6, (6, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Clear' , 'Result' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Result' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Result' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ReadFromFile' , 'FileName' , 'Result' , ), 9, (9, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'WriteToFile' , 'FileName' , 'Result' , ), 10, (10, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
]

IPolyLines_vtables_dispatch_ = 1
IPolyLines_vtables_ = [
	(( 'PolyLine' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{6CE7843D-9AFA-48FF-B444-61CDF036D118}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{6CE7843D-9AFA-48FF-B444-61CDF036D118}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IPolyLines2D_vtables_dispatch_ = 1
IPolyLines2D_vtables_ = [
	(( 'PolyLine2D' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{4D0DA413-9507-4795-896F-E049FA6E44DD}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{4D0DA413-9507-4795-896F-E049FA6E44DD}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IPositionLeader_vtables_dispatch_ = 1
IPositionLeader_vtables_ = [
	(( 'ShelfDirection' , 'Result' , ), 1501, (1501, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'ShelfDirection' , 'Result' , ), 1501, (1501, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'ShelfVisible' , 'Result' , ), 1502, (1502, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'ShelfVisible' , 'Result' , ), 1502, (1502, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'TextDirection' , 'Result' , ), 1503, (1503, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'TextDirection' , 'Result' , ), 1503, (1503, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Form' , 'Result' , ), 1504, (1504, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Form' , 'Result' , ), 1504, (1504, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Positions' , 'PVal' , ), 1505, (1505, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'UnderPositionText' , 'PVal' , ), 1506, (1506, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Horizontally' , 'Result' , ), 1507, (1507, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Horizontally' , 'Result' , ), 1507, (1507, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

IPrintJob_vtables_dispatch_ = 1
IPrintJob_vtables_ = [
	(( 'Clear' , 'Result' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ShowPreviewWindow' , 'Result' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Load' , 'FileName' , 'Errors' , 'Result' , ), 3, (3, (), [ 
			 (8, 1, None, None) , (16396, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Save' , 'FileName' , 'Result' , ), 4, (4, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Execute' , 'OutputFileName' , 'Result' , ), 5, (5, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'AddSheets' , 'FileName' , 'Sheets' , 'Range' , 'Result' , 
			 ), 6, (6, (), [ (8, 1, None, None) , (12, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'SheetsCount' , 'Count' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Sheet' , 'Index' , 'Sheet' , ), 8, (8, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{0EC985BC-81FC-498E-BF15-03DDC870AA33}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'RemoveSheets' , 'Index' , 'Result' , ), 9, (9, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'PagesCount' , 'Count' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'GetPageGabarites' , 'Width' , 'Height' , 'Result' , ), 11, (11, (), [ 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'GetPagesMapGabarites' , 'WPageCount' , 'HPageCount' , 'Result' , ), 12, (12, (), [ 
			 (16387, 2, None, None) , (16387, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'PagePrintableFlag' , 'WPage' , 'HPage' , 'Result' , ), 13, (13, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'PagePrintableFlag' , 'WPage' , 'HPage' , 'Result' , ), 13, (13, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'SpecialExecute' , 'OutputFileName' , 'Result' , ), 14, (14, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IPrintJob_OutputParameters_vtables_dispatch_ = 1
IPrintJob_OutputParameters_vtables_ = [
	(( 'NumberOfCopies' , 'PVal' , ), 2001, (2001, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'NumberOfCopies' , 'PVal' , ), 2001, (2001, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'CollateCopies' , 'PVal' , ), 2002, (2002, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'CollateCopies' , 'PVal' , ), 2002, (2002, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'PlotToFile' , 'PVal' , ), 2003, (2003, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'PlotToFile' , 'PVal' , ), 2003, (2003, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Color' , 'PVal' , ), 2004, (2004, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Color' , 'PVal' , ), 2004, (2004, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'OnlyThinLines' , 'PVal' , ), 2005, (2005, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'OnlyThinLines' , 'PVal' , ), 2005, (2005, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'AlternativeFillingOutput' , 'PVal' , ), 2006, (2006, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'AlternativeFillingOutput' , 'PVal' , ), 2006, (2006, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'AccuracyModelOutput' , 'PVal' , ), 2007, (2007, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'AccuracyModelOutput' , 'PVal' , ), 2007, (2007, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'PageOutputOrder' , 'PVal' , ), 2008, (2008, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'PageOutputOrder' , 'PVal' , ), 2008, (2008, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'DefaultScale' , 'PVal' , ), 2009, (2009, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'DefaultScale' , 'PVal' , ), 2009, (2009, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'AutoScale' , 'PVal' , ), 2010, (2010, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'AutoScale' , 'PVal' , ), 2010, (2010, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'UseCatchSpacing' , 'PVal' , ), 2011, (2011, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'UseCatchSpacing' , 'PVal' , ), 2011, (2011, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'CatchSpacing' , 'PVal' , ), 2012, (2012, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'CatchSpacing' , 'PVal' , ), 2012, (2012, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'UseHooking' , 'PVal' , ), 2013, (2013, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'UseHooking' , 'PVal' , ), 2013, (2013, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Hooking' , 'PVal' , ), 2014, (2014, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Hooking' , 'PVal' , ), 2014, (2014, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
]

IPrintJob_PrinterSettings_vtables_dispatch_ = 1
IPrintJob_PrinterSettings_vtables_ = [
	(( 'InitPrinterSettings' , 'DeviceName' , 'IsPortraitPage' , 'PaperSize' , 'PaperLength' , 
			 'PaperWidth' , 'PaperSource' , 'Result' , ), 3001, (3001, (), [ (8, 1, None, None) , 
			 (11, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'DeviceName' , 'PVal' , ), 3002, (3002, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Port' , 'PVal' , ), 3003, (3003, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'LoadPrinterConfig' , 'FileName' , 'Result' , ), 3004, (3004, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'SavePrinterConfig' , 'FileName' , 'Result' , ), 3005, (3005, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'IsPortraitPage' , 'PVal' , ), 3006, (3006, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'IsPortraitPage' , 'PVal' , ), 3006, (3006, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'PaperSize' , 'PVal' , ), 3007, (3007, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'PaperSize' , 'PVal' , ), 3007, (3007, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'PaperSource' , 'PVal' , ), 3008, (3008, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'PaperSource' , 'PVal' , ), 3008, (3008, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'PaperLength' , 'PVal' , ), 3009, (3009, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'PaperLength' , 'PVal' , ), 3009, (3009, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'PaperWidth' , 'PVal' , ), 3010, (3010, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'PaperWidth' , 'PVal' , ), 3010, (3010, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'PrinterType' , 'PVal' , ), 3011, (3011, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'PrinterType' , 'PVal' , ), 3011, (3011, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IPrintJob_Sheet_vtables_dispatch_ = 1
IPrintJob_Sheet_vtables_ = [
	(( 'DocumentName' , 'DocumentName' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Number' , 'Number' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'GetGabarites' , 'Width' , 'Height' , 'Result' , ), 3, (3, (), [ 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'Value' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Orientation' , 'Value' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'X' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'X' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'PVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Scale' , 'PVal' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Scale' , 'PVal' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ClipFlag' , 'Flag' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'ClipFlag' , 'Flag' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'GetClipFrameGabarites' , 'Left' , 'Bottom' , 'Right' , 'Top' , 
			 'Result' , ), 9, (9, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'SetClipFrameGabarites' , 'Left' , 'Bottom' , 'Right' , 'Top' , 
			 'Result' , ), 10, (10, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IProcedure_vtables_dispatch_ = 1
IProcedure_vtables_ = [
	(( 'Name' , 'PVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'LibraryFolder' , 'PVal' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Id' , 'PVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Execute' , 'External' , 'Post' , 'PVal' , ), 4, (4, (), [ 
			 (9, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IProcedures_vtables_dispatch_ = 1
IProcedures_vtables_ = [
	(( 'Item' , 'Index' , 'Result' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{7BF9DF08-D14D-4DA9-ABC2-FB458E7122D0}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'ItemByID' , 'Id' , 'Result' , ), 1, (1, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{7BF9DF08-D14D-4DA9-ABC2-FB458E7122D0}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IProceduresLibraries_vtables_dispatch_ = 1
IProceduresLibraries_vtables_ = [
	(( 'Item' , 'Index' , 'Result' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{1AECE59E-DE4C-4FB9-B62B-7967573AD3B1}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'PathName' , 'LibManagerFolder' , 'Result' , ), 1, (1, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{1AECE59E-DE4C-4FB9-B62B-7967573AD3B1}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IProceduresLibrary_vtables_dispatch_ = 1
IProceduresLibrary_vtables_ = [
	(( 'Style' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'PVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Procedures' , 'PVal' , ), 2, (2, (), [ (16393, 10, None, "IID('{1A77F076-2295-40F9-B1AA-2838C4CA0887}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'CurrentCommand' , 'PVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'SystemControlStop' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'SystemControlStart' , 'menuCommand' , 'PVal' , ), 5, (5, (), [ (8, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'UniqueId' , 'PVal' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Executable' , 'PVal' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'AddIns' , 'PVal' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'ExternalInterface' , 'PVal' , ), 9, (9, (), [ (16393, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'LibraryName' , 'PVal' , ), 10, (10, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'IconsFont' , 'PVal' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'PVal' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
]

IProcess_vtables_dispatch_ = 1
IProcess_vtables_ = [
	(( 'ProcessParam' , 'Param' , ), 1, (1, (), [ (9, 1, None, "IID('{CB5FDBC8-4DAE-4C4B-87D5-6FD1F2705C38}')") , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ProcessParam' , 'Param' , ), 1, (1, (), [ (16393, 10, None, "IID('{CB5FDBC8-4DAE-4C4B-87D5-6FD1F2705C38}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'CursorId' , 'PVal' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'CursorId' , 'PVal' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Caption' , 'PVal' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Caption' , 'PVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Prompt' , 'PVal' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Prompt' , 'PVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Menu' , 'PVal' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Menu' , 'PVal' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ResModule' , 'HInstance' , ), 6, (6, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ResModule' , 'HInstance' , ), 6, (6, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Dynamic' , 'PVal' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Dynamic' , 'PVal' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Run' , 'Modal' , 'PostMessage' , 'PRes' , ), 8, (8, (), [ 
			 (11, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Stop' , 'PRes' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'SetCursorText' , 'PVal' , 'PRes' , ), 10, (10, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Update' , 'PRes' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Critical' , 'PVal' , ), 12, (12, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Critical' , 'PVal' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
]

IProcess2D_vtables_dispatch_ = 1
IProcess2D_vtables_ = [
	(( 'X' , 'PVal' , ), 101, (101, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'X' , 'PVal' , ), 101, (101, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'PVal' , ), 102, (102, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'PVal' , ), 102, (102, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 103, (103, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 103, (103, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Phantom2D' , 'PVal' , ), 104, (104, (), [ (16393, 10, None, "IID('{A6E4F3B6-0554-4A67-A700-428090A6739A}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IProcess3D_vtables_dispatch_ = 1
IProcess3D_vtables_ = [
	(( 'Placement' , 'PVal' , ), 101, (101, (), [ (16393, 10, None, "IID('{9C66DE49-529C-4678-9AF1-12710CB77804}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'PhantomObject' , 'PVal' , ), 102, (102, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'PhantomObject' , 'PVal' , ), 102, (102, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'MateConstraintsObjects' , 'PVal' , ), 103, (103, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'MateConstraintsObjects' , 'PVal' , ), 103, (103, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'MateConstraints' , 'Result' , ), 104, (104, (), [ (16393, 10, None, "IID('{95F316E1-0A18-4F42-8B70-1423250F244D}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'RunTakeCreateObjectProcess' , 'ProcessType' , 'TakeObject' , 'NeedCreateTakeObj' , 'LostTakeObj' , 
			 'Result' , ), 105, (105, (), [ (3, 1, None, None) , (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , (11, 1, None, None) , 
			 (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'TakeProcessObject' , 'PVal' , ), 106, (106, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'TakeProcessObject' , 'PVal' , ), 106, (106, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Manipulators' , 'Result' , ), 107, (107, (), [ (16393, 10, None, "IID('{5FBB9528-B629-46DE-8BA6-13C5872BDD15}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'SelectionBandMode' , 'PVal' , ), 108, (108, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'SelectionBandMode' , 'PVal' , ), 108, (108, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'ObjectsFilter3D' , 'Type' , 'PVal' , ), 109, (109, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'ObjectsFilter3D' , 'Type' , 'PVal' , ), 109, (109, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ClearProcessUndo' , 'PVal' , ), 110, (110, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ClearProcessUndo' , 'PVal' , ), 110, (110, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
]

IProcessContextIconMenu_vtables_dispatch_ = 1
IProcessContextIconMenu_vtables_ = [
	(( 'AddMenuCommand' , 'Id' , 'Title' , 'Icon' , 'IconFont' , 
			 'Result' , ), 3001, (3001, (), [ (3, 1, None, None) , (8, 1, None, None) , (3, 1, None, None) , 
			 (8, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
]

IProcessContextPanel_vtables_dispatch_ = 1
IProcessContextPanel_vtables_ = [
	(( 'AddControl' , 'PVal' , 'Result' , ), 2001, (2001, (), [ (9, 1, None, "IID('{E35F8FF8-03C6-460C-A2F1-294A3A29A029}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'AddAdditionalButtonsFromControl' , 'PVal' , 'Title' , 'Result' , ), 2002, (2002, (), [ 
			 (9, 1, None, "IID('{E35F8FF8-03C6-460C-A2F1-294A3A29A029}')") , (8, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'AddLinkContentButton' , 'PVal' , 'Title' , 'Result' , ), 2003, (2003, (), [ 
			 (9, 1, None, "IID('{E35F8FF8-03C6-460C-A2F1-294A3A29A029}')") , (8, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'AddGeomCalculatorCommands' , 'PVal' , 'Result' , ), 2004, (2004, (), [ (9, 1, None, "IID('{E35F8FF8-03C6-460C-A2F1-294A3A29A029}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'AddSeparator' , 'Result' , ), 2005, (2005, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'AddNewSearchButton' , 'Result' , ), 2006, (2006, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'AddSnapCommands' , 'Result' , ), 2007, (2007, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'AddGroupBegin' , 'Title' , 'Result' , ), 2008, (2008, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'AddGroupEnd' , 'Result' , ), 2009, (2009, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IProcessInfoWindow_vtables_dispatch_ = 1
IProcessInfoWindow_vtables_ = [
	(( 'CreateWindow' , 'PVal' , ), 501, (501, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'CreateWindow' , 'PVal' , ), 501, (501, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'WindowCaption' , 'PVal' , ), 502, (502, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'WindowCaption' , 'PVal' , ), 502, (502, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'CloseProcess' , 'PVal' , ), 503, (503, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'CloseProcess' , 'PVal' , ), 503, (503, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'PVal' , ), 504, (504, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'PVal' , ), 504, (504, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Text' , 'PVal' , ), 505, (505, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Text' , 'PVal' , ), 505, (505, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'HelpId' , 'PVal' , ), 506, (506, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'HelpId' , 'PVal' , ), 506, (506, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

IProcessParam_vtables_dispatch_ = 1
IProcessParam_vtables_ = [
	(( 'Caption' , 'PVal' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Caption' , 'PVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'PropertyTabs' , 'Tabs' , ), 2, (2, (), [ (16393, 10, None, "IID('{5BA6324E-E555-490F-A0E2-68D3C6C88D92}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'SpecToolbar' , 'PVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'SpecToolbar' , 'PVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'AutoReduce' , 'PVal' , ), 4, (4, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'AutoReduce' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'DefaultControlFix' , 'PVal' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'DefaultControlFix' , 'PVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'ResModule' , 'HInstance' , ), 6, (6, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ResModule' , 'HInstance' , ), 6, (6, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'SpecToolbarEx' , 'PVal' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'SpecToolbarEx' , 'PVal' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'BmpBeginId' , 'Size' , 'PVal' , ), 8, (8, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'BmpBeginId' , 'Size' , 'PVal' , ), 8, (8, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Layout' , 'PVal' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'GetGabaritRect' , 'Left' , 'Top' , 'Right' , 'Bottom' , 
			 ), 11, (11, (), [ (16387, 2, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'ShowContextMenuOfSnap' , 'PVal' , ), 12, (12, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'ShowContextMenuOfSnap' , 'PVal' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ShowContextMenuOfGeomCalculator' , 'PVal' , ), 13, (13, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ShowContextMenuOfGeomCalculator' , 'PVal' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'ShowCommandWindow' , 'PVal' , ), 14, (14, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'ShowCommandWindow' , 'PVal' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'AddSpecToolbarButton' , 'BtnID' , 'Bmp' , 'Tips' , 'IconFont' , 
			 'Result' , ), 15, (15, (), [ (3, 1, None, None) , (12, 1, None, None) , (8, 1, None, None) , 
			 (8, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'PushProcessName' , 'Name' , 'PVal' , ), 16, (16, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'PopProcessName' , 'PVal' , ), 17, (17, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'EnableUndoRedo' , 'PVal' , ), 18, (18, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'EnableUndoRedo' , 'PVal' , ), 18, (18, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'AddSetupMenuCommand' , 'Title' , 'Command' , 'Checable' , 'PVal' , 
			 ), 19, (19, (), [ (8, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'SetSetupMenuCommandState' , 'Command' , 'Visible' , 'Enable' , 'Checked' , 
			 'PVal' , ), 20, (20, (), [ (3, 1, None, None) , (11, 1, None, None) , (11, 1, None, None) , 
			 (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'EnterButtonIconType' , 'PVal' , ), 21, (21, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'EnterButtonIconType' , 'PVal' , ), 21, (21, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'ClearSpecToolbar' , 'Result' , ), 22, (22, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
]

IProductDataManager_vtables_dispatch_ = 1
IProductDataManager_vtables_ = [
	(( 'ProductObjects' , 'Filter' , 'Result' , ), 18001, (18001, (), [ (3, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'ProductObject' , 'UniqueMetaObjectKey' , 'Result' , ), 18002, (18002, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{AE7377CB-28C6-468E-B667-73117BCDC300}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'AddProductObject' , 'Parent' , 'Name' , 'ObjectType' , 'Result' , 
			 ), 18003, (18003, (), [ (9, 1, None, "IID('{AE7377CB-28C6-468E-B667-73117BCDC300}')") , (8, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{AE7377CB-28C6-468E-B667-73117BCDC300}')") , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'DeleteProductObject' , 'UniqueMetaObjectKey' , 'Result' , ), 18004, (18004, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Geometry' , 'PropObject' , 'PVal' , ), 18005, (18005, (), [ (9, 1, None, "IID('{AE7377CB-28C6-468E-B667-73117BCDC300}')") , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Geometry' , 'PropObject' , 'PVal' , ), 18005, (18005, (), [ (9, 1, None, "IID('{AE7377CB-28C6-468E-B667-73117BCDC300}')") , 
			 (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ObjectAttachedDocuments' , 'PropObject' , 'PVal' , ), 18006, (18006, (), [ (9, 1, None, "IID('{AE7377CB-28C6-468E-B667-73117BCDC300}')") , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'ObjectAttachedDocuments' , 'PropObject' , 'PVal' , ), 18006, (18006, (), [ (9, 1, None, "IID('{AE7377CB-28C6-468E-B667-73117BCDC300}')") , 
			 (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'MetaProductInfo' , 'PVal' , ), 18007, (18007, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'MetaProductInfo' , 'PVal' , ), 18007, (18007, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'ObjectMetaProductInfo' , 'PropObject' , 'PVal' , ), 18008, (18008, (), [ (9, 1, None, "IID('{AE7377CB-28C6-468E-B667-73117BCDC300}')") , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'ObjectMetaProductInfo' , 'PropObject' , 'PVal' , ), 18008, (18008, (), [ (9, 1, None, "IID('{AE7377CB-28C6-468E-B667-73117BCDC300}')") , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'ReferenceData' , 'PVal' , ), 18009, (18009, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'ReferenceData' , 'PVal' , ), 18009, (18009, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ReferenceDataIds' , 'ReferenceDataType' , 'PVal' , ), 18010, (18010, (), [ (8, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ReferenceDataInfo' , 'ReferenceDataType' , 'ReferenceDataId' , 'PVal' , ), 18011, (18011, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'ReferenceDataInfo' , 'ReferenceDataType' , 'ReferenceDataId' , 'PVal' , ), 18011, (18011, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'AddReferenceData' , 'ReferenceDataType' , 'ReferenceDataInfo' , 'ReferenceDataId' , ), 18012, (18012, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'DeleteReferenceData' , 'ReferenceDataType' , 'ReferenceDataId' , 'Result' , ), 18013, (18013, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IProgressBarIndicator_vtables_dispatch_ = 1
IProgressBarIndicator_vtables_ = [
	(( 'Start' , 'MinVal' , 'MaxVal' , 'TextVal' , 'ResetVal' , 
			 ), 8001, (8001, (), [ (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'SetProgress' , 'CurrentVal' , 'TextVal' , 'ResetVal' , ), 8002, (8002, (), [ 
			 (3, 1, None, None) , (8, 1, None, None) , (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'SetText' , 'TextVal' , ), 8003, (8003, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Stop' , 'TextVal' , 'ResetVal' , ), 8004, (8004, (), [ (8, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IProjectionCurve_vtables_dispatch_ = 1
IProjectionCurve_vtables_ = [
	(( 'Faces' , 'PVal' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Faces' , 'PVal' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Curves' , 'PVal' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Curves' , 'PVal' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'ProjectionType' , 'PVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'ProjectionType' , 'PVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Vector3D' , 'Val' , ), 4, (4, (), [ (16393, 10, None, "IID('{D51A4DCF-627D-44F5-89BA-46EF2449A212}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'TruncationByBounds' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'TruncationByBounds' , 'PVal' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'AutoCheck' , 'CheckValue' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'AutoCheck' , 'CheckValue' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'EdgesChecks' , 'Checks' , ), 7, (7, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'EdgesChecks' , 'Checks' , ), 7, (7, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'EdgesArraysCount' , 'Count' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Edges' , 'Index' , 'Edges' , ), 9, (9, (), [ (3, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'EdgesCheck' , 'ContourIndex' , 'CheckValue' , ), 10, (10, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'EdgesCheck' , 'ContourIndex' , 'CheckValue' , ), 10, (10, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'EdgesChecksCount' , 'Count' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
]

IProjectionCurves_vtables_dispatch_ = 1
IProjectionCurves_vtables_ = [
	(( 'ProjectionCurve' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{535DD795-507F-41C8-AC1E-6EAF243A3792}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{535DD795-507F-41C8-AC1E-6EAF243A3792}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IProperty_vtables_dispatch_ = 1
IProperty_vtables_ = [
	(( 'Name' , 'PVal' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'PVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Id' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'DataType' , 'PVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'DataType' , 'PVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'MinValue' , 'PVal' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'MaxValue' , 'PVal' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'SetValueRange' , 'MinVal' , 'MaxVal' , 'PVal' , ), 6, (6, (), [ 
			 (12, 1, None, None) , (12, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'ReadOnly' , 'PVal' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'ReadOnly' , 'PVal' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'SignificantDigitsCount' , 'Result' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'SignificantDigitsCount' , 'Result' , ), 8, (8, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'SourceName' , 'PVal' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Comment' , 'PVal' , ), 10, (10, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Comment' , 'PVal' , ), 10, (10, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'PropertyTypeId' , 'PVal' , ), 11, (11, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'PropertyTypeId' , 'PVal' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'UnitId' , 'PVal' , ), 12, (12, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'UnitId' , 'PVal' , ), 12, (12, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ViewEdit' , 'Parent' , 'ReadOnly' , 'Res' , ), 13, (13, (), [ 
			 (3, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'PRes' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Update' , 'PRes' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'UseListVal' , 'PVal' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'UseListVal' , 'PVal' , ), 16, (16, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'ListVal' , 'PVal' , ), 17, (17, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'ListVal' , 'PVal' , ), 17, (17, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'IsVariable' , 'PVal' , ), 18, (18, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'IsAngular' , 'PVal' , ), 19, (19, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
]

IPropertyAggregateControl_vtables_dispatch_ = 1
IPropertyAggregateControl_vtables_ = [
	(( 'Add' , 'Control' , 'PVal' , ), 101, (101, (), [ (9, 1, None, "IID('{E35F8FF8-03C6-460C-A2F1-294A3A29A029}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'PropertyControl' , 'Index' , 'Control' , ), 102, (102, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{E35F8FF8-03C6-460C-A2F1-294A3A29A029}')") , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
]

IPropertyBasePoint_vtables_dispatch_ = 1
IPropertyBasePoint_vtables_ = [
	(( 'CenterPointVisible' , 'PVal' , ), 102, (102, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'CenterPointVisible' , 'PVal' , ), 102, (102, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
]

IPropertyBmpList_vtables_dispatch_ = 1
IPropertyBmpList_vtables_ = [
	(( 'Add' , 'NewStr' , 'NewBmp' , ), 101, (101, (), [ (8, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'Count' , ), 102, (102, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ClearList' , ), 103, (103, (), [ ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Find' , 'Val' , 'PVal' , ), 104, (104, (), [ (8, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'CurrentIndex' , 'PVal' , ), 105, (105, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'CurrentIndex' , 'PVal' , ), 105, (105, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ResModule' , 'HInstance' , ), 106, (106, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'ResModule' , 'HInstance' , ), 106, (106, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'IconFont' , 'Index' , 'PVal' , ), 107, (107, (), [ (3, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'IconFont' , 'Index' , 'PVal' , ), 107, (107, (), [ (3, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
]

IPropertyCheckBox_vtables_dispatch_ = 1
IPropertyCheckBox_vtables_ = [
	(( 'SetCustomBitmaps' , 'IdUnchecked' , 'IdChecked' , 'IdIndeterminate' , 'HInstance' , 
			 ), 101, (101, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'VisualStyle' , 'PVal' , ), 102, (102, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'VisualStyle' , 'PVal' , ), 102, (102, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
]

IPropertyColor_vtables_dispatch_ = 1
IPropertyColor_vtables_ = [
	(( 'Width' , 'PVal' , ), 101, (101, (), [ (3, 49, '0', None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'PVal' , ), 101, (101, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'EnableDefaultButton' , 'PVal' , ), 102, (102, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'EnableDefaultButton' , 'PVal' , ), 102, (102, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'DefaultColor' , 'PVal' , ), 103, (103, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'DefaultColor' , 'PVal' , ), 103, (103, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'DefaultButtonName' , 'PVal' , ), 104, (104, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'DefaultButtonName' , 'PVal' , ), 104, (104, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
]

IPropertyControl_vtables_dispatch_ = 1
IPropertyControl_vtables_ = [
	(( 'Visible' , 'PVal' , ), 1, (1, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'PVal' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'PVal' , ), 2, (2, (), [ (8, 49, "''", None) , ], 1 , 4 , 4 , 0 , 104 , (3, 32, None, None) , 0 , )),
	(( 'Name' , 'PVal' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'ControlType' , 'PVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Id' , 'PVal' , ), 4, (4, (), [ (3, 49, '0', None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Id' , 'PVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Enable' , 'PVal' , ), 5, (5, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Enable' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Value' , 'PVal' , ), 6, (6, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Value' , 'PVal' , ), 6, (6, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'NameVisibility' , 'PVal' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'NameVisibility' , 'PVal' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Hint' , 'PVal' , ), 8, (8, (), [ (8, 49, "''", None) , ], 1 , 4 , 4 , 0 , 192 , (3, 32, None, None) , 0 , )),
	(( 'Hint' , 'PVal' , ), 8, (8, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Tips' , 'PVal' , ), 9, (9, (), [ (8, 49, "''", None) , ], 1 , 4 , 4 , 0 , 208 , (3, 32, None, None) , 0 , )),
	(( 'Tips' , 'PVal' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
]

IPropertyControl1_vtables_dispatch_ = 1
IPropertyControl1_vtables_ = [
	(( 'PredefineNumber' , 'PVal' , ), 10, (10, (), [ (3, 49, '-1', None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'PredefineNumber' , 'PVal' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'UserMenu' , 'PVal' , ), 11, (11, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'UserMenu' , 'PVal' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'ResModule' , 'HInstance' , ), 12, (12, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ResModule' , 'HInstance' , ), 12, (12, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Image' , 'Bmp' , ), 13, (13, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Image' , 'Bmp' , ), 13, (13, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'GetHWND' , 'HWnd' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'AddAdditionButton' , 'BtnID' , 'Bmp' , 'Tips' , 'IconFont' , 
			 'Result' , ), 15, (15, (), [ (3, 1, None, None) , (12, 1, None, None) , (8, 1, None, None) , 
			 (8, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'AddAdditionCheckButton' , 'BtnID' , 'BmpChecked' , 'BmpUnChecked' , 'BmpUndefine' , 
			 'Tips' , 'IconFont' , 'Result' , ), 16, (16, (), [ (3, 1, None, None) , 
			 (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , (8, 1, None, None) , (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'AdditionButtonVisible' , 'BtnID' , 'Visible' , ), 17, (17, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'AdditionButtonVisible' , 'BtnID' , 'Visible' , ), 17, (17, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'AdditionButtonChecked' , 'BtnID' , 'Checked' , ), 18, (18, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'AdditionButtonChecked' , 'BtnID' , 'Checked' , ), 18, (18, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'AdditionButtonEnable' , 'BtnID' , 'Enable' , ), 19, (19, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'AdditionButtonEnable' , 'BtnID' , 'Enable' , ), 19, (19, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'HyperLinkNameStyle' , 'Val' , ), 20, (20, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'HyperLinkNameStyle' , 'Val' , ), 20, (20, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'NeedMouseEnterLeaveMessages' , 'PVal' , ), 21, (21, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'NeedMouseEnterLeaveMessages' , 'PVal' , ), 21, (21, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'AdditionButtonNeedMouseEnterLeaveMessages' , 'BtnID' , 'PVal' , ), 22, (22, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'AdditionButtonNeedMouseEnterLeaveMessages' , 'BtnID' , 'PVal' , ), 22, (22, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
]

IPropertyControls_vtables_dispatch_ = 1
IPropertyControls_vtables_ = [
	(( 'Item' , 'Index' , 'Result' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E35F8FF8-03C6-460C-A2F1-294A3A29A029}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Type' , 'PControl' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{E35F8FF8-03C6-460C-A2F1-294A3A29A029}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'Index' , 'PVal' , ), 3, (3, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IPropertyEdit_vtables_dispatch_ = 1
IPropertyEdit_vtables_ = [
	(( 'MinValue' , 'PVal' , ), 101, (101, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'MaxValue' , 'PVal' , ), 102, (102, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'SetValueRange' , 'MinVal' , 'MaxVal' , 'PVal' , ), 103, (103, (), [ 
			 (12, 1, None, None) , (12, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'WithCheck' , 'PVal' , ), 104, (104, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'WithCheck' , 'PVal' , ), 104, (104, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'CheckState' , 'PVal' , ), 105, (105, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'CheckState' , 'PVal' , ), 105, (105, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'ReadOnly' , 'PVal' , ), 106, (106, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'ReadOnly' , 'PVal' , ), 106, (106, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'PVal' , ), 107, (107, (), [ (3, 49, '0', None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'PVal' , ), 107, (107, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Step' , 'PVal' , ), 108, (108, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Step' , 'PVal' , ), 108, (108, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
]

IPropertyEditCheckBox_vtables_dispatch_ = 1
IPropertyEditCheckBox_vtables_ = [
	(( 'CheckButton' , 'PVal' , ), 201, (201, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'CheckButton' , 'PVal' , ), 201, (201, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'EnableCheckButton' , 'PVal' , ), 202, (202, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'EnableCheckButton' , 'PVal' , ), 202, (202, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'SetCustomBitmaps' , 'IdUnchecked' , 'IdChecked' , 'IdIndeterminate' , 'HInstance' , 
			 ), 203, (203, (), [ (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'DefaultValue' , 'PVal' , ), 204, (204, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'DefaultValue' , 'PVal' , ), 204, (204, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Missing' , 'PVal' , ), 205, (205, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Missing' , 'PVal' , ), 205, (205, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'EnableDeleteValue' , 'PVal' , ), 206, (206, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'EnableDeleteValue' , 'PVal' , ), 206, (206, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'IsLinkValue' , 'PVal' , ), 207, (207, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'IsLinkValue' , 'PVal' , ), 207, (207, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
]

IPropertyEditList_vtables_dispatch_ = 1
IPropertyEditList_vtables_ = [
	(( 'ListType' , 'PVal' , ), 101, (101, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'ListType' , 'PVal' , ), 101, (101, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ItemChecked' , 'Index' , 'PVal' , ), 102, (102, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ItemChecked' , 'Index' , 'PVal' , ), 102, (102, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'MultySelect' , 'PVal' , ), 103, (103, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'MultySelect' , 'PVal' , ), 103, (103, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ItemSelected' , 'Index' , 'PVal' , ), 104, (104, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'ItemSelected' , 'Index' , 'PVal' , ), 104, (104, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , 'PVal' , ), 105, (105, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , 'PVal' , ), 105, (105, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'ClearList' , ), 106, (106, (), [ ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'NewVal' , ), 107, (107, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'Index' , ), 108, (108, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'ItemsCount' , 'PVal' , ), 109, (109, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'ItemValue' , 'Index' , 'PVal' , ), 110, (110, (), [ (12, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'ItemValue' , 'Index' , 'PVal' , ), 110, (110, (), [ (12, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'Find' , 'Val' , 'PVal' , ), 111, (111, (), [ (12, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'DefaultValue' , 'PVal' , ), 112, (112, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'DefaultValue' , 'PVal' , ), 112, (112, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'ItemMissing' , 'Index' , 'PVal' , ), 113, (113, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'ItemMissing' , 'Index' , 'PVal' , ), 113, (113, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'BeginEditItem' , 'Index' , 'PVal' , ), 114, (114, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'CheckState' , 'PVal' , ), 115, (115, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'CheckState' , 'PVal' , ), 115, (115, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'AllowDelete' , 'PVal' , ), 116, (116, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'AllowDelete' , 'PVal' , ), 116, (116, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'ComputeUniqueNames' , 'PVal' , ), 117, (117, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'ComputeUniqueNames' , 'PVal' , ), 117, (117, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'BringIntoView' , 'Index' , ), 118, (118, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
]

IPropertyFileName_vtables_dispatch_ = 1
IPropertyFileName_vtables_ = [
	(( 'CreateOpenButton' , 'PVal' , ), 101, (101, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'CreateOpenButton' , 'PVal' , ), 101, (101, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Bitmap' , ), 102, (102, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Extension' , 'PVal' , ), 103, (103, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Extension' , 'PVal' , ), 103, (103, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Filter' , 'PVal' , ), 104, (104, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Filter' , 'PVal' , ), 104, (104, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'ResModule' , 'HInstance' , ), 105, (105, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'ResModule' , 'HInstance' , ), 105, (105, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'ReadOnly' , 'PVal' , ), 106, (106, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'ReadOnly' , 'PVal' , ), 106, (106, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'PVal' , ), 107, (107, (), [ (3, 49, '0', None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'PVal' , ), 107, (107, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Preview' , 'PVal' , ), 108, (108, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'Preview' , 'PVal' , ), 108, (108, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'DefaultValue' , 'PVal' , ), 109, (109, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'DefaultValue' , 'PVal' , ), 109, (109, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
]

IPropertyGrid_vtables_dispatch_ = 1
IPropertyGrid_vtables_ = [
	(( 'ColumnCount' , 'Count' , ), 101, (101, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'ColumnCount' , 'Count' , ), 101, (101, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'RowCount' , 'Count' , ), 102, (102, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'RowCount' , 'Count' , ), 102, (102, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'FixedColumnCount' , 'Count' , ), 103, (103, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'FixedColumnCount' , 'Count' , ), 103, (103, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'FixedRowCount' , 'Count' , ), 104, (104, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'FixedRowCount' , 'Count' , ), 104, (104, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'ColumnWidth' , 'Index' , 'Width' , ), 105, (105, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'ColumnWidth' , 'Index' , 'Width' , ), 105, (105, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'RowHeight' , 'Index' , 'Height' , ), 106, (106, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'RowHeight' , 'Index' , 'Height' , ), 106, (106, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'EnableEdit' , 'NRow' , 'NCol' , 'PVal' , ), 107, (107, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'EnableEdit' , 'NRow' , 'NCol' , 'PVal' , ), 107, (107, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'CellText' , 'NRow' , 'NCol' , 'Text' , ), 108, (108, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'CellText' , 'NRow' , 'NCol' , 'Text' , ), 108, (108, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'CellFormat' , 'NRow' , 'NCol' , 'Format' , ), 109, (109, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'CellFormat' , 'NRow' , 'NCol' , 'Format' , ), 109, (109, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'Width' , ), 110, (110, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'Width' , ), 110, (110, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Height' , ), 111, (111, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Height' , ), 111, (111, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'ReadOnly' , 'PVal' , ), 112, (112, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'ReadOnly' , 'PVal' , ), 112, (112, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'AutoSizeColumns' , 'PVal' , ), 113, (113, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'AutoSizeColumns' , 'PVal' , ), 113, (113, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'UpdateParam' , ), 114, (114, (), [ ], 1 , 1 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'CurrentColumn' , 'Column' , ), 115, (115, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'CurrentColumn' , 'Column' , ), 115, (115, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'CurrentRow' , 'Row' , ), 116, (116, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'CurrentRow' , 'Row' , ), 116, (116, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'EnableDeleteRows' , 'PVal' , ), 117, (117, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'EnableDeleteRows' , 'PVal' , ), 117, (117, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'ColumnVisible' , 'Index' , 'Visible' , ), 118, (118, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'ColumnVisible' , 'Index' , 'Visible' , ), 118, (118, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'BringIntoView' , 'Index' , ), 119, (119, (), [ (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
]

IPropertyGroupBegin_vtables_dispatch_ = 1
IPropertyGroupBegin_vtables_ = [
	(( 'Expanding' , 'PVal' , ), 101, (101, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Expanding' , 'PVal' , ), 101, (101, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Expanded' , 'PVal' , ), 102, (102, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Expanded' , 'PVal' , ), 102, (102, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
]

IPropertyGroupEnd_vtables_dispatch_ = 1
IPropertyGroupEnd_vtables_ = [
]

IPropertyKeeper_vtables_dispatch_ = 1
IPropertyKeeper_vtables_ = [
	(( 'GetPropertyValue' , 'Property' , 'Value' , 'BaseUnit' , 'FromSource' , 
			 'Result' , ), 16000, (16000, (), [ (9, 1, None, "IID('{C389F80D-228D-4FB1-B183-959AEA0B5906}')") , (16396, 2, None, None) , (11, 1, None, None) , 
			 (16395, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'SetPropertyValue' , 'Property' , 'Value' , 'BaseUnit' , 'Result' , 
			 ), 16001, (16001, (), [ (9, 1, None, "IID('{C389F80D-228D-4FB1-B183-959AEA0B5906}')") , (12, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'GetPropertyAdditionalStorage' , 'Property' , 'Create' , 'FromSource' , 'Result' , 
			 ), 16002, (16002, (), [ (9, 1, None, "IID('{C389F80D-228D-4FB1-B183-959AEA0B5906}')") , (11, 1, None, None) , (16395, 2, None, None) , (16393, 10, None, "IID('{DD2AF5C4-D5B9-420D-B658-F935F80A8586}')") , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'GetUserDataStoragesManager' , 'FromSource' , 'PVal' , ), 16003, (16003, (), [ (11, 1, None, None) , 
			 (16393, 10, None, "IID('{77A6D4CA-6418-4DEE-B59C-400BFD052375}')") , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'InsertHypertextReference' , 'Property' , 'Object' , 'Type' , 'Brackets' , 
			 'TextLineIndex' , 'Precision' , 'PropertyId' , 'Result' , ), 16004, (16004, (), [ 
			 (9, 1, None, "IID('{C389F80D-228D-4FB1-B183-959AEA0B5906}')") , (9, 1, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , (3, 1, None, None) , (11, 1, None, None) , (3, 1, None, None) , 
			 (3, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Properties' , 'PVal' , ), 16005, (16005, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Properties' , 'PVal' , ), 16005, (16005, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'UniqueMetaObjectKey' , 'PVal' , ), 16006, (16006, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'IsComplexPropertyValue' , 'Property' , 'Result' , ), 16007, (16007, (), [ (9, 1, None, "IID('{C389F80D-228D-4FB1-B183-959AEA0B5906}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'GetComplexPropertyValue' , 'Property' , 'FromSource' , 'Result' , ), 16008, (16008, (), [ 
			 (9, 1, None, "IID('{C389F80D-228D-4FB1-B183-959AEA0B5906}')") , (16395, 2, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'SetComplexPropertyValue' , 'Property' , 'Value' , 'Result' , ), 16009, (16009, (), [ 
			 (9, 1, None, "IID('{C389F80D-228D-4FB1-B183-959AEA0B5906}')") , (8, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

IPropertyLibExplorer_vtables_dispatch_ = 1
IPropertyLibExplorer_vtables_ = [
	(( 'FileName' , 'PVal' , ), 101, (101, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'FileName' , 'PVal' , ), 101, (101, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'RootName' , 'PVal' , ), 102, (102, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'RootName' , 'PVal' , ), 102, (102, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'FileValue' , 'PVal' , ), 103, (103, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
]

IPropertyLinkButton_vtables_dispatch_ = 1
IPropertyLinkButton_vtables_ = [
	(( 'AddButton' , 'BtnID' , 'Lebel' , 'Result' , ), 101, (101, (), [ 
			 (3, 1, None, None) , (8, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'ButtonChecked' , 'BtnID' , 'PVal' , ), 102, (102, (), [ (3, 1, None, None) , 
			 (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ButtonChecked' , 'BtnID' , 'PVal' , ), 102, (102, (), [ (3, 1, None, None) , 
			 (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ButtonChecked' , 'BtnID' , 'PVal' , ), 102, (102, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ButtonEnable' , 'BtnID' , 'PVal' , ), 103, (103, (), [ (3, 1, None, None) , 
			 (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'ButtonEnable' , 'BtnID' , 'PVal' , ), 103, (103, (), [ (3, 1, None, None) , 
			 (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'ButtonEnable' , 'BtnID' , 'PVal' , ), 103, (103, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'ButtonVisible' , 'BtnID' , 'PVal' , ), 104, (104, (), [ (3, 1, None, None) , 
			 (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ButtonVisible' , 'BtnID' , 'PVal' , ), 104, (104, (), [ (3, 1, None, None) , 
			 (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ButtonVisible' , 'BtnID' , 'PVal' , ), 104, (104, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
]

IPropertyList_vtables_dispatch_ = 1
IPropertyList_vtables_ = [
	(( 'MinValue' , 'PVal' , ), 101, (101, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'MaxValue' , 'PVal' , ), 102, (102, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'SetValueRange' , 'MinVal' , 'MaxVal' , 'PVal' , ), 103, (103, (), [ 
			 (12, 1, None, None) , (12, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'WithCheck' , 'PVal' , ), 104, (104, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'WithCheck' , 'PVal' , ), 104, (104, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'CheckState' , 'PVal' , ), 105, (105, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'CheckState' , 'PVal' , ), 105, (105, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'ReadOnly' , 'PVal' , ), 106, (106, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'ReadOnly' , 'PVal' , ), 106, (106, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'PVal' , ), 107, (107, (), [ (3, 49, '0', None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'PVal' , ), 107, (107, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'ClearList' , ), 108, (108, (), [ ], 1 , 1 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'NewVal' , ), 109, (109, (), [ (12, 1, None, None) , ], 1 , 1 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , 'PVal' , ), 110, (110, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'Sort' , 'PVal' , ), 110, (110, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'Find' , 'Val' , 'PVal' , ), 111, (111, (), [ (12, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'SetCurrentByIndex' , 'Val' , 'PVal' , ), 112, (112, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'Precision' , 'PVal' , ), 113, (113, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'Precision' , 'PVal' , ), 113, (113, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'Count' , ), 114, (114, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'Step' , 'PVal' , ), 115, (115, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'Step' , 'PVal' , ), 115, (115, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
]

IPropertyManager_vtables_dispatch_ = 1
IPropertyManager_vtables_ = [
	(( 'Visible' , 'PVal' , ), 1, (1, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'PVal' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Caption' , 'PVal' , ), 2, (2, (), [ (8, 49, "''", None) , ], 1 , 4 , 4 , 0 , 104 , (3, 32, None, None) , 0 , )),
	(( 'Caption' , 'PVal' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Layout' , 'PVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Layout' , 'PVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'PropertyTabs' , 'Tabs' , ), 4, (4, (), [ (16393, 10, None, "IID('{5BA6324E-E555-490F-A0E2-68D3C6C88D92}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'SetGabaritRect' , 'Left' , 'Top' , 'Right' , 'Bottom' , 
			 ), 5, (5, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'GetGabaritRect' , 'Left' , 'Top' , 'Right' , 'Bottom' , 
			 ), 6, (6, (), [ (16387, 2, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'ShowTabs' , 'PVal' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'UpdateTabs' , 'PVal' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'HideTabs' , 'PVal' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'SpecToolbar' , 'PVal' , ), 10, (10, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'SpecToolbar' , 'PVal' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'RepeatCommand' , 'PVal' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'AutoHideMode' , 'PVal' , ), 12, (12, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'AutoHideMode' , 'PVal' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'ResModule' , 'HInstance' , ), 13, (13, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'ResModule' , 'HInstance' , ), 13, (13, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'SpecToolbarEx' , 'PVal' , ), 14, (14, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'SpecToolbarEx' , 'PVal' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'AddSpecToolbarButton' , 'BtnID' , 'Bmp' , 'Tips' , 'IconFont' , 
			 'Result' , ), 15, (15, (), [ (3, 1, None, None) , (12, 1, None, None) , (8, 1, None, None) , 
			 (8, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'AddSetupMenuCommand' , 'Title' , 'Command' , 'Checable' , 'PVal' , 
			 ), 16, (16, (), [ (8, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'SetSetupMenuCommandState' , 'Command' , 'Visible' , 'Enable' , 'Checked' , 
			 'PVal' , ), 17, (17, (), [ (3, 1, None, None) , (11, 1, None, None) , (11, 1, None, None) , 
			 (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'EnterButtonIconType' , 'PVal' , ), 18, (18, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'EnterButtonIconType' , 'PVal' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'StatusMessage' , 'PVal' , ), 19, (19, (), [ (8, 49, "''", None) , ], 1 , 4 , 4 , 0 , 296 , (3, 32, None, None) , 0 , )),
	(( 'StatusMessage' , 'PVal' , ), 19, (19, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Label' , 'PVal' , ), 20, (20, (), [ (8, 49, "''", None) , ], 1 , 4 , 4 , 0 , 312 , (3, 32, None, None) , 0 , )),
	(( 'Label' , 'PVal' , ), 20, (20, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'ClearSpecToolbar' , 'Result' , ), 21, (21, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
]

IPropertyMarking_vtables_dispatch_ = 1
IPropertyMarking_vtables_ = [
	(( 'GetMarking' , 'MarkingType' , 'AddSystemDelimer' , 'Marking' , ), 101, (101, (), [ 
			 (3, 1, None, None) , (11, 1, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'SetMarking' , 'MarkingType' , 'Marking' , 'Result' , ), 102, (102, (), [ 
			 (3, 1, None, None) , (8, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'MarkingVisible' , 'MarkingType' , 'PVal' , ), 103, (103, (), [ (3, 1, None, None) , 
			 (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'MarkingVisible' , 'MarkingType' , 'PVal' , ), 103, (103, (), [ (3, 1, None, None) , 
			 (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'MarkingVisible' , 'MarkingType' , 'PVal' , ), 103, (103, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'ReadOnly' , 'PVal' , ), 104, (104, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'ReadOnly' , 'PVal' , ), 104, (104, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
]

IPropertyMng_vtables_dispatch_ = 1
IPropertyMng_vtables_ = [
	(( 'PropertyCount' , 'Libname' , 'Count' , ), 1500, (1500, (), [ (12, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'GetProperty' , 'Libname' , 'Index' , 'Res' , ), 1501, (1501, (), [ 
			 (12, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{C389F80D-228D-4FB1-B183-959AEA0B5906}')") , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'GetProperties' , 'Libname' , 'Res' , ), 1502, (1502, (), [ (12, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'AddProperty' , 'Libname' , 'Val' , 'Res' , ), 1503, (1503, (), [ 
			 (12, 1, None, None) , (12, 1, None, None) , (16393, 10, None, "IID('{C389F80D-228D-4FB1-B183-959AEA0B5906}')") , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'RemoveProperty' , 'Libname' , 'Val' , 'Result' , ), 1504, (1504, (), [ 
			 (12, 1, None, None) , (12, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'GetReport' , 'Document' , 'Type' , 'Report' , ), 1505, (1505, (), [ 
			 (12, 1, None, None) , (3, 0, None, None) , (16393, 10, None, "IID('{37FD3C77-6032-4459-95E9-C8DFC43B85FF}')") , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IPropertyMultiButton_vtables_dispatch_ = 1
IPropertyMultiButton_vtables_ = [
	(( 'ButtonsType' , 'PVal' , ), 101, (101, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'ButtonsType' , 'PVal' , ), 101, (101, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ButtonChecked' , 'BtnID' , 'PVal' , ), 102, (102, (), [ (3, 1, None, None) , 
			 (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ButtonChecked' , 'BtnID' , 'PVal' , ), 102, (102, (), [ (3, 1, None, None) , 
			 (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ButtonChecked' , 'BtnID' , 'PVal' , ), 102, (102, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'ButtonEnable' , 'BtnID' , 'PVal' , ), 103, (103, (), [ (3, 1, None, None) , 
			 (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'ButtonEnable' , 'BtnID' , 'PVal' , ), 103, (103, (), [ (3, 1, None, None) , 
			 (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'ButtonEnable' , 'BtnID' , 'PVal' , ), 103, (103, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'AddButton' , 'BtnID' , 'Bmp' , 'InsertAt' , ), 104, (104, (), [ 
			 (3, 1, None, None) , (12, 1, None, None) , (3, 49, '-1', None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'ResModule' , 'HInstance' , ), 105, (105, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'ResModule' , 'HInstance' , ), 105, (105, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'ButtonTips' , 'BtnID' , 'PVal' , ), 106, (106, (), [ (3, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'ButtonTips' , 'BtnID' , 'PVal' , ), 106, (106, (), [ (3, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'ButtonHint' , 'BtnID' , 'PVal' , ), 107, (107, (), [ (3, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'ButtonHint' , 'BtnID' , 'PVal' , ), 107, (107, (), [ (3, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'NextCommand' , 'PVal' , ), 108, (108, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'NextCommand' , 'PVal' , ), 108, (108, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'ButtonVisible' , 'BtnID' , 'PVal' , ), 109, (109, (), [ (3, 1, None, None) , 
			 (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'ButtonVisible' , 'BtnID' , 'PVal' , ), 109, (109, (), [ (3, 1, None, None) , 
			 (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'ButtonVisible' , 'BtnID' , 'PVal' , ), 109, (109, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'ButtonIconFont' , 'BtnID' , 'PVal' , ), 110, (110, (), [ (3, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'ButtonIconFont' , 'BtnID' , 'PVal' , ), 110, (110, (), [ (3, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
]

IPropertyOpticalProps_vtables_dispatch_ = 1
IPropertyOpticalProps_vtables_ = [
	(( 'ColorParam' , 'PVal' , ), 101, (101, (), [ (16393, 10, None, "IID('{BE6A80EE-38FE-4432-8331-BF864830761C}')") , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Init' , 'PVal' , 'PRes' , ), 102, (102, (), [ (9, 1, None, "IID('{BE6A80EE-38FE-4432-8331-BF864830761C}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'EnableAmbient' , 'PVal' , ), 103, (103, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'EnableAmbient' , 'PVal' , ), 103, (103, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'EnableDiffuse' , 'PVal' , ), 104, (104, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'EnableDiffuse' , 'PVal' , ), 104, (104, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'EnableSpecularity' , 'PVal' , ), 105, (105, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'EnableSpecularity' , 'PVal' , ), 105, (105, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'EnableShininess' , 'PVal' , ), 106, (106, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'EnableShininess' , 'PVal' , ), 106, (106, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'EnableTransparency' , 'PVal' , ), 107, (107, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'EnableTransparency' , 'PVal' , ), 107, (107, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'EnableEmission' , 'PVal' , ), 108, (108, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'EnableEmission' , 'PVal' , ), 108, (108, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
]

IPropertyPoint3D_vtables_dispatch_ = 1
IPropertyPoint3D_vtables_ = [
	(( 'Point3DType' , 'PVal' , ), 101, (101, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Point3DType' , 'PVal' , ), 101, (101, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'CoordinateValue' , 'Index' , 'PVal' , ), 102, (102, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'CoordinateValue' , 'Index' , 'PVal' , ), 102, (102, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'CoordinateState' , 'Index' , 'PVal' , ), 103, (103, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'CoordinateState' , 'Index' , 'PVal' , ), 103, (103, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Coordinate' , 'Index' , 'Result' , ), 104, (104, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{1D238C4C-AAD7-4374-B372-013CF7FCEDB4}')") , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
]

IPropertyPreviewText_vtables_dispatch_ = 1
IPropertyPreviewText_vtables_ = [
	(( 'PreviewText' , 'PVal' , ), 101, (101, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'UpdateParam' , 'PVal' , ), 102, (102, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'DoubleSize' , 'PVal' , ), 103, (103, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'DoubleSize' , 'PVal' , ), 103, (103, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
]

IPropertySeparator_vtables_dispatch_ = 1
IPropertySeparator_vtables_ = [
	(( 'SeparatorType' , 'PVal' , ), 101, (101, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'SeparatorType' , 'PVal' , ), 101, (101, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'SetImage' , 'IdBmp' , 'HInstance' , 'PVal' , ), 102, (102, (), [ 
			 (12, 1, None, None) , (12, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
]

IPropertySlideBox_vtables_dispatch_ = 1
IPropertySlideBox_vtables_ = [
	(( 'ResModule' , 'HInstance' , ), 101, (101, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'ResModule' , 'HInstance' , ), 101, (101, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'SlideType' , 'Type' , ), 102, (102, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'SlideType' , 'Type' , ), 102, (102, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'DrawingSlide' , 'Slide' , ), 103, (103, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'DrawingSlide' , 'Slide' , ), 103, (103, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'Width' , ), 104, (104, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'Width' , ), 104, (104, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Height' , ), 105, (105, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Height' , ), 105, (105, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'CheckBoxVisibility' , 'PVal' , ), 106, (106, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'CheckBoxVisibility' , 'PVal' , ), 106, (106, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'UpdateParam' , ), 107, (107, (), [ ], 1 , 1 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
]

IPropertySpinEdit_vtables_dispatch_ = 1
IPropertySpinEdit_vtables_ = [
	(( 'MinValue' , 'PVal' , ), 101, (101, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'MaxValue' , 'PVal' , ), 102, (102, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'SetValueRange' , 'MinVal' , 'MaxVal' , 'PVal' , ), 103, (103, (), [ 
			 (12, 1, None, None) , (12, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'WithCheck' , 'PVal' , ), 104, (104, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'WithCheck' , 'PVal' , ), 104, (104, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'CheckState' , 'PVal' , ), 105, (105, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'CheckState' , 'PVal' , ), 105, (105, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'ReadOnly' , 'PVal' , ), 106, (106, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'ReadOnly' , 'PVal' , ), 106, (106, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'PVal' , ), 107, (107, (), [ (3, 49, '0', None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'PVal' , ), 107, (107, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Step' , 'PVal' , ), 108, (108, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Step' , 'PVal' , ), 108, (108, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
]

IPropertyStyleList_vtables_dispatch_ = 1
IPropertyStyleList_vtables_ = [
	(( 'Add' , 'Styles' , 'PRes' , ), 101, (101, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'Count' , ), 102, (102, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ClearList' , 'PRes' , ), 103, (103, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Find' , 'Val' , 'PVal' , ), 104, (104, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'CurrentIndex' , 'PVal' , ), 105, (105, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'CurrentIndex' , 'PVal' , ), 105, (105, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'AnotherStyleBtnEnable' , 'PVal' , ), 106, (106, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'AnotherStyleBtnEnable' , 'PVal' , ), 106, (106, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
]

IPropertyTab_vtables_dispatch_ = 1
IPropertyTab_vtables_ = [
	(( 'Visible' , 'PVal' , ), 1, (1, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'PVal' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Caption' , 'PVal' , ), 2, (2, (), [ (8, 49, "''", None) , ], 1 , 4 , 4 , 0 , 104 , (3, 32, None, None) , 0 , )),
	(( 'Caption' , 'PVal' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Active' , 'PVal' , ), 3, (3, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Active' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'PropertyControls' , 'PControls' , ), 4, (4, (), [ (16393, 10, None, "IID('{548241BA-FDA8-4633-981E-94552BE38D6B}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'ResModule' , 'HInstance' , ), 5, (5, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'ResModule' , 'HInstance' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Image' , 'Bmp' , ), 6, (6, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Image' , 'Bmp' , ), 6, (6, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Expanded' , 'PVal' , ), 7, (7, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Expanded' , 'PVal' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IPropertyTabs_vtables_dispatch_ = 1
IPropertyTabs_vtables_ = [
	(( 'Item' , 'Index' , 'Result' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{45DE8E5B-BC2B-4584-8BA7-D3014D3A2397}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Caption' , 'PTab' , ), 2, (2, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{45DE8E5B-BC2B-4584-8BA7-D3014D3A2397}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'Index' , 'PVal' , ), 3, (3, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Active' , 'PDoc' , ), 4, (4, (), [ (16393, 10, None, "IID('{45DE8E5B-BC2B-4584-8BA7-D3014D3A2397}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'SystemTab' , 'PDoc' , ), 5, (5, (), [ (16393, 10, None, "IID('{45DE8E5B-BC2B-4584-8BA7-D3014D3A2397}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

IPropertyTextButton_vtables_dispatch_ = 1
IPropertyTextButton_vtables_ = [
]

IPropertyToolBar_vtables_dispatch_ = 1
IPropertyToolBar_vtables_ = [
	(( 'ButtonChecked' , 'BtnID' , 'PVal' , ), 501, (501, (), [ (3, 1, None, None) , 
			 (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'ButtonChecked' , 'BtnID' , 'PVal' , ), 501, (501, (), [ (3, 1, None, None) , 
			 (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'ButtonChecked' , 'BtnID' , 'PVal' , ), 501, (501, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'ButtonEnable' , 'BtnID' , 'PVal' , ), 502, (502, (), [ (3, 1, None, None) , 
			 (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'ButtonEnable' , 'BtnID' , 'PVal' , ), 502, (502, (), [ (3, 1, None, None) , 
			 (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'ButtonEnable' , 'BtnID' , 'PVal' , ), 502, (502, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'AddButton' , 'BtnID' , 'Bmp' , 'InsertAt' , ), 503, (503, (), [ 
			 (3, 1, None, None) , (12, 1, None, None) , (3, 49, '-1', None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ResModule' , 'HInstance' , ), 504, (504, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ResModule' , 'HInstance' , ), 504, (504, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'ButtonTips' , 'BtnID' , 'PVal' , ), 505, (505, (), [ (3, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'ButtonTips' , 'BtnID' , 'PVal' , ), 505, (505, (), [ (3, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'ButtonHint' , 'BtnID' , 'PVal' , ), 506, (506, (), [ (3, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'ButtonHint' , 'BtnID' , 'PVal' , ), 506, (506, (), [ (3, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'ButtonType' , 'BtnID' , 'PVal' , ), 507, (507, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'ButtonType' , 'BtnID' , 'PVal' , ), 507, (507, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'ButtonVisible' , 'BtnID' , 'PVal' , ), 508, (508, (), [ (3, 1, None, None) , 
			 (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ButtonVisible' , 'BtnID' , 'PVal' , ), 508, (508, (), [ (3, 1, None, None) , 
			 (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ButtonVisible' , 'BtnID' , 'PVal' , ), 508, (508, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ButtonIconFont' , 'BtnID' , 'PVal' , ), 110, (110, (), [ (3, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'ButtonIconFont' , 'BtnID' , 'PVal' , ), 110, (110, (), [ (3, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IPropertyTwinSwitcher_vtables_dispatch_ = 1
IPropertyTwinSwitcher_vtables_ = [
	(( 'Label2' , 'PVal' , ), 101, (101, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Label2' , 'PVal' , ), 101, (101, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
]

IPropertyUserControl_vtables_dispatch_ = 1
IPropertyUserControl_vtables_ = [
	(( 'Width' , 'Width' , ), 101, (101, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'Width' , ), 101, (101, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Height' , ), 102, (102, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Height' , ), 102, (102, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'SetOCXControl' , 'ProgID' , ), 103, (103, (), [ (8, 1, None, None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'FixHeight' , 'PVal' , ), 104, (104, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'FixHeight' , 'PVal' , ), 104, (104, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'FixWidth' , 'PVal' , ), 105, (105, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'FixWidth' , 'PVal' , ), 105, (105, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'AutoSize' , 'PVal' , ), 106, (106, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'AutoSize' , 'PVal' , ), 106, (106, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
]

IRadialDimension_vtables_dispatch_ = 1
IRadialDimension_vtables_ = [
	(( 'Xc' , 'PVal' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Xc' , 'PVal' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Yc' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Yc' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'DimensionType' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'DimensionType' , 'PVal' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'BaseObject' , 'Object1' , ), 5, (5, (), [ (16393, 10, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'BaseObject' , 'Object1' , ), 5, (5, (), [ (9, 1, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'AddBranch' , 'BranchBegin' , 'BranchObject' , 'Result' , ), 7, (7, (), [ 
			 (11, 1, None, None) , (9, 1, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'AddBranchByArcParam' , 'BranchBegin' , 'Xc' , 'Yc' , 'Radius' , 
			 'Angle1' , 'Angle2' , 'Direction' , 'Result' , ), 8, (8, (), [ 
			 (11, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'BranchsCount' , 'Result' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'BranchObject' , 'Index' , 'BranchObject' , ), 10, (10, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'BranchObject' , 'Index' , 'BranchObject' , ), 10, (10, (), [ (3, 1, None, None) , 
			 (9, 1, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'DeleteBranch' , 'Index' , 'Result' , ), 11, (11, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'GetBranchParam' , 'Index' , 'Xc' , 'Yc' , 'Angle1' , 
			 'Angle2' , 'Direction' , 'Result' , ), 12, (12, (), [ (3, 1, None, None) , 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 2, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'SetBranchParam' , 'Index' , 'Xc' , 'Yc' , 'Angle1' , 
			 'Angle2' , 'Direction' , 'Result' , ), 13, (13, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (11, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'BranchBegin' , 'Index' , 'PVal' , ), 14, (14, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'BranchBegin' , 'Index' , 'PVal' , ), 14, (14, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'ShelfX' , 'PVal' , ), 15, (15, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'ShelfX' , 'PVal' , ), 15, (15, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'ShelfY' , 'PVal' , ), 16, (16, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'ShelfY' , 'PVal' , ), 16, (16, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
]

IRadialDimension3D_vtables_dispatch_ = 1
IRadialDimension3D_vtables_ = [
	(( 'Object1' , 'Object1' , ), 1, (1, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Object1' , 'Object1' , ), 1, (1, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'PlaneObject' , 'Object' , ), 2, (2, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'PlaneObject' , 'Object' , ), 2, (2, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'DimensionType' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'DimensionType' , 'PVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'GetSurfacePoint' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 5, (5, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'SetSurfacePoint' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 6, (6, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'GetCenterPoint' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 7, (7, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'SetCenterPoint' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 8, (8, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
]

IRadialDimensions_vtables_dispatch_ = 1
IRadialDimensions_vtables_ = [
	(( 'RadialDimension' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{712A9437-D772-4EAE-AF83-ABC9C22EB281}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Value' , ), 2, (2, (), [ (16393, 10, None, "IID('{712A9437-D772-4EAE-AF83-ABC9C22EB281}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IRadialDimensions3D_vtables_dispatch_ = 1
IRadialDimensions3D_vtables_ = [
	(( 'RadialDimension3D' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{5711B871-1FAE-425C-898E-583442D851CD}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{5711B871-1FAE-425C-898E-583442D851CD}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IRaster_vtables_dispatch_ = 1
IRaster_vtables_ = [
	(( 'GetPlacement' , 'X' , 'Y' , 'Angle' , 'MirrorSymmetry' , 
			 'Result' , ), 1, (1, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16395, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'SetPlacement' , 'X' , 'Y' , 'Angle' , 'MirrorSymmetry' , 
			 'Result' , ), 2, (2, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Scale' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Scale' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'FileName' , 'PVal' , ), 4, (4, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'FileName' , 'PVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'InsertionType' , 'PVal' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'InsertionType' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Resolution' , 'PVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Resolution' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'DisplayModePartial' , 'PVal' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'DisplayModePartial' , 'PVal' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'PVal' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'PVal' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'PVal' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'PVal' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'SourceHeight' , 'PVal' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'SourceWidth' , 'PVal' , ), 11, (11, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Palette' , 'PVal' , ), 12, (12, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'IsEnableChangeResolution' , 'PVal' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'IsCutBoundarySet' , 'PVal' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
]

IRasters_vtables_dispatch_ = 1
IRasters_vtables_ = [
	(( 'Raster' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{DEED8D7B-404B-4F17-B42A-2F5E64818D0A}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{DEED8D7B-404B-4F17-B42A-2F5E64818D0A}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IRectangle_vtables_dispatch_ = 1
IRectangle_vtables_ = [
	(( 'X' , 'PVal' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'X' , 'PVal' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Result' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Result' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'GetCorner' , 'Index' , 'Type' , 'L1' , 'L2' , 
			 'Result' , ), 7, (7, (), [ (3, 1, None, None) , (16387, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'SetCorner' , 'Index' , 'Type' , 'L1' , 'L2' , 
			 'Result' , ), 8, (8, (), [ (3, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ContourSegmentsPoints' , 'Result' , ), 9, (9, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
]

IRectangles_vtables_dispatch_ = 1
IRectangles_vtables_ = [
	(( 'Rectangle' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{42F9FC58-FEA0-4E52-A604-1A00985AB772}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{42F9FC58-FEA0-4E52-A604-1A00985AB772}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IRegularPolygon_vtables_dispatch_ = 1
IRegularPolygon_vtables_ = [
	(( 'Count' , 'PVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Xc' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Xc' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Yc' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Yc' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Describe' , 'PVal' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Describe' , 'PVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Result' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Result' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'GetCorner' , 'Index' , 'Type' , 'L1' , 'L2' , 
			 'Result' , ), 8, (8, (), [ (3, 1, None, None) , (16387, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'SetCorner' , 'Index' , 'Type' , 'L1' , 'L2' , 
			 'Result' , ), 9, (9, (), [ (3, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'ContourSegmentsPoints' , 'Result' , ), 10, (10, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
]

IRegularPolygons_vtables_dispatch_ = 1
IRegularPolygons_vtables_ = [
	(( 'RegularPolygon' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{51968648-F264-4904-A07F-653676AE1D35}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{51968648-F264-4904-A07F-653676AE1D35}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IRemoteElement_vtables_dispatch_ = 1
IRemoteElement_vtables_ = [
	(( 'AutoSorted' , 'Result' , ), 2001, (2001, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'AutoSorted' , 'Result' , ), 2001, (2001, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'AutoSheet' , 'Result' , ), 2002, (2002, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'AutoSheet' , 'Result' , ), 2002, (2002, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'AutoZone' , 'Result' , ), 2003, (2003, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'AutoZone' , 'Result' , ), 2003, (2003, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'AdditionalText' , 'PVal' , ), 2004, (2004, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
]

IRemoteElements_vtables_dispatch_ = 1
IRemoteElements_vtables_ = [
	(( 'RemoteElement' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{A9D96CE2-9FE4-494E-87B2-20122EAC2AE4}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{A9D96CE2-9FE4-494E-87B2-20122EAC2AE4}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IReport_vtables_dispatch_ = 1
IReport_vtables_ = [
	(( 'ReportType' , 'PVal' , ), 2001, (2001, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ShowAllObjects' , 'PVal' , ), 2002, (2002, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ShowAllObjects' , 'PVal' , ), 2002, (2002, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'CurrentReportStyle' , 'PVal' , ), 2003, (2003, (), [ (16393, 10, None, "IID('{5C65F11D-75C8-4130-951C-5EBE0ABA4F44}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'StylesCount' , 'PVal' , ), 2004, (2004, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'ReportStyle' , 'Index' , 'PVal' , ), 2005, (2005, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{5C65F11D-75C8-4130-951C-5EBE0ABA4F44}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'AddStyle' , 'FileName' , 'Id' , 'PVal' , ), 2006, (2006, (), [ 
			 (8, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{5C65F11D-75C8-4130-951C-5EBE0ABA4F44}')") , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'CurrentStyleIndex' , 'PVal' , ), 2007, (2007, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'CurrentStyleIndex' , 'PVal' , ), 2007, (2007, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Rebuild' , 'Result' , ), 2008, (2008, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'SourceFileName' , 'PVal' , ), 2009, (2009, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'LoadSourceDocument' , 'Visible' , 'ReadOnly' , 'PVal' , ), 2010, (2010, (), [ 
			 (11, 1, None, None) , (11, 1, None, None) , (16393, 10, None, "IID('{5C6E318D-BD6E-4AFA-8A13-977EAA0845EF}')") , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'UseReportFilter' , 'Index' , ), 2011, (2011, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'UseReportFilter' , 'Index' , ), 2011, (2011, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'ReportFilter' , 'Filter' , ), 2012, (2012, (), [ (16393, 10, None, "IID('{9D111C31-1629-4A0B-89E5-8461CDFA2157}')") , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'SaveAs' , 'FileName' , 'Result' , ), 2013, (2013, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
]

IReportFilter_vtables_dispatch_ = 1
IReportFilter_vtables_ = [
	(( 'ConditionCount' , 'Count' , ), 100, (100, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'GetCondition' , 'Index' , 'UniqId' , 'Type' , 'Val' , 
			 'Result' , ), 101, (101, (), [ (3, 1, None, None) , (16396, 2, None, None) , (16387, 2, None, None) , 
			 (16396, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'SetCondition' , 'Index' , 'UniqId' , 'Type' , 'Val' , 
			 'Result' , ), 102, (102, (), [ (3, 1, None, None) , (12, 1, None, None) , (3, 1, None, None) , 
			 (12, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'RemoveCondition' , 'Index' , 'Result' , ), 103, (103, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Clear' , 'Result' , ), 104, (104, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
]

IReportObjectsFilter_vtables_dispatch_ = 1
IReportObjectsFilter_vtables_ = [
	(( 'ModelObjects' , 'PVal' , ), 4001, (4001, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'ModelObjects' , 'PVal' , ), 4001, (4001, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'InsertionViews' , 'PVal' , ), 4002, (4002, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'InsertionViews' , 'PVal' , ), 4002, (4002, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'InsertionFragments' , 'PVal' , ), 4003, (4003, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'InsertionFragments' , 'PVal' , ), 4003, (4003, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'MacroObjects2D' , 'PVal' , ), 4004, (4004, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'MacroObjects2D' , 'PVal' , ), 4004, (4004, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Parts' , 'PVal' , ), 4005, (4005, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Parts' , 'PVal' , ), 4005, (4005, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'LocalParts' , 'PVal' , ), 4006, (4006, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'LocalParts' , 'PVal' , ), 4006, (4006, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Bodies' , 'PVal' , ), 4007, (4007, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Bodies' , 'PVal' , ), 4007, (4007, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Views' , 'PVal' , ), 4008, (4008, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Views' , 'PVal' , ), 4008, (4008, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
]

IReportParam_vtables_dispatch_ = 1
IReportParam_vtables_ = [
	(( 'BuildingType' , 'PVal' , ), 3001, (3001, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'PVal' , ), 3001, (3001, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'LevelsCount' , 'PVal' , ), 3002, (3002, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'LevelsCount' , 'PVal' , ), 3002, (3002, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'PageLayoutType' , 'PVal' , ), 3003, (3003, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'PageLayoutType' , 'PVal' , ), 3003, (3003, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'PagesRowsCount' , 'PVal' , ), 3004, (3004, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'PagesRowsCount' , 'PVal' , ), 3004, (3004, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'PagesColumnsCount' , 'PVal' , ), 3005, (3005, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'PagesColumnsCount' , 'PVal' , ), 3005, (3005, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'PagesSpace' , 'PVal' , ), 3006, (3006, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'PagesSpace' , 'PVal' , ), 3006, (3006, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'UseHyperText' , 'PVal' , ), 3007, (3007, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'UseHyperText' , 'PVal' , ), 3007, (3007, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
]

IReportProcess_vtables_dispatch_ = 1
IReportProcess_vtables_ = [
	(( 'StylesCount' , 'Count' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ActiveStyleIndex' , 'Index' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ActiveStyleIndex' , 'Index' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'ReportFilter' , 'Filters' , ), 3, (3, (), [ (16393, 10, None, "IID('{9D111C31-1629-4A0B-89E5-8461CDFA2157}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'ReportFilterUse' , 'Index' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'ReportFilterUse' , 'Index' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IReportStyle_vtables_dispatch_ = 1
IReportStyle_vtables_ = [
	(( 'ColumnsCount' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Column' , 'Index' , 'PVal' , ), 2, (2, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{DD114FC3-EB24-4FBD-B9E9-B01A893AA3B0}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'AddColumn' , 'IndexAt' , 'Name' , 'Property' , 'PVal' , 
			 ), 3, (3, (), [ (3, 1, None, None) , (8, 1, None, None) , (9, 1, None, "IID('{C389F80D-228D-4FB1-B183-959AEA0B5906}')") , (16393, 10, None, "IID('{DD114FC3-EB24-4FBD-B9E9-B01A893AA3B0}')") , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'SwapColumn' , 'Index1' , 'Index2' , 'Result' , ), 4, (4, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'DeleteColumn' , 'Index' , 'Result' , ), 5, (5, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Clear' , 'Result' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'RowsCount' , 'PVal' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'RowsCount' , 'PVal' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'DivideIntoPage' , 'PVal' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'DivideIntoPage' , 'PVal' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'TitleHeight' , 'PVal' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'TitleHeight' , 'PVal' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'RowHeight' , 'PVal' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'RowHeight' , 'PVal' , ), 10, (10, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'ShowEmptyRows' , 'PVal' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'ShowEmptyRows' , 'PVal' , ), 11, (11, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'ShowTitle' , 'PVal' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'ShowTitle' , 'PVal' , ), 12, (12, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'RowsNumberingType' , 'PVal' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'RowsNumberingType' , 'PVal' , ), 13, (13, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ColumnNumberingType' , 'PVal' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'ColumnNumberingType' , 'PVal' , ), 14, (14, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'ColumnNumberingInitVal' , 'PVal' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ColumnNumberingInitVal' , 'PVal' , ), 15, (15, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'DrawBottom' , 'PVal' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'DrawBottom' , 'PVal' , ), 16, (16, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Init' , 'Type' , 'Result' , ), 17, (17, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'GetSortParameters' , 'Level' , 'ColumnNumber' , 'SortType' , 'Result' , 
			 ), 18, (18, (), [ (3, 1, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'SetSortParameters' , 'Level' , 'ColumnNumber' , 'SortType' , 'Result' , 
			 ), 19, (19, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'ClearSortParameters' , 'Result' , ), 20, (20, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'PVal' , ), 21, (21, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'PVal' , ), 21, (21, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'Id' , 'PVal' , ), 22, (22, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
]

IReportStyleColumn_vtables_dispatch_ = 1
IReportStyleColumn_vtables_ = [
	(( 'Header' , 'PVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Header' , 'PVal' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Id' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'UserColumn' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Property' , 'PVal' , ), 4, (4, (), [ (16393, 10, None, "IID('{C389F80D-228D-4FB1-B183-959AEA0B5906}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Property' , 'PVal' , ), 4, (4, (), [ (9, 1, None, "IID('{C389F80D-228D-4FB1-B183-959AEA0B5906}')") , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'GroupeType' , 'PVal' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'GroupeType' , 'PVal' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'PVal' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'PVal' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'WordWrap' , 'PVal' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'WordWrap' , 'PVal' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'TextAlign' , 'PVal' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'TextAlign' , 'PVal' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'CombineCells' , 'PVal' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'CombineCells' , 'PVal' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'ValueFormat' , 'PVal' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ValueFormat' , 'PVal' , ), 11, (11, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'PropertyLevel' , 'PVal' , ), 12, (12, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'PropertyLevel' , 'PVal' , ), 12, (12, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
]

IReportTable_vtables_dispatch_ = 1
IReportTable_vtables_ = [
	(( 'DisplayMode' , 'PVal' , ), 5001, (5001, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'DisplayMode' , 'PVal' , ), 5001, (5001, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'RowsCount' , 'PVal' , ), 5002, (5002, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'ColumnsCount' , 'PVal' , ), 5003, (5003, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'CellValue' , 'NRow' , 'NCol' , 'PVal' , ), 5004, (5004, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'CellValue' , 'NRow' , 'NCol' , 'PVal' , ), 5004, (5004, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'FormatCellValue' , 'NRow' , 'NCol' , 'PVal' , ), 5005, (5005, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Text' , 'NRow' , 'NCol' , 'PVal' , ), 5006, (5006, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'StyleColumn' , 'NCol' , 'PVal' , ), 5007, (5007, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{DD114FC3-EB24-4FBD-B9E9-B01A893AA3B0}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'PropertyKeeper' , 'RowIndex' , 'PVal' , ), 5008, (5008, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{AE7377CB-28C6-468E-B667-73117BCDC300}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IRestoredSurface_vtables_dispatch_ = 1
IRestoredSurface_vtables_ = [
	(( 'Face' , 'PVal' , ), 1, (1, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Face' , 'PVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
]

IRestoredSurfaces_vtables_dispatch_ = 1
IRestoredSurfaces_vtables_ = [
	(( 'RestoredSurface' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{EC25AF95-4117-4FB6-A952-1FC72BE32E60}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{EC25AF95-4117-4FB6-A952-1FC72BE32E60}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IRib_vtables_dispatch_ = 1
IRib_vtables_ = [
	(( 'Sketch' , 'PVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{E6BBF50D-8401-4FB3-A6B6-153D3F447255}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Sketch' , 'PVal' , ), 1, (1, (), [ (9, 1, None, "IID('{E6BBF50D-8401-4FB3-A6B6-153D3F447255}')") , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Side' , 'PVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Side' , 'PVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'SegmentIndex' , 'PVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'SegmentIndex' , 'PVal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Body' , 'PVal' , ), 5, (5, (), [ (9, 1, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Body' , 'PVal' , ), 5, (5, (), [ (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
]

IRibs_vtables_dispatch_ = 1
IRibs_vtables_ = [
	(( 'Rib' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{2D8E1F2B-1610-4AA5-8F7F-ED489C4EDEDC}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{2D8E1F2B-1610-4AA5-8F7F-ED489C4EDEDC}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IRotated_vtables_dispatch_ = 1
IRotated_vtables_ = [
	(( 'Profile' , 'Result' , ), 1, (1, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Profile' , 'Result' , ), 1, (1, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Axis' , 'Result' , ), 2, (2, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Axis' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'ToroidShapeType' , 'PVal' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'ToroidShapeType' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'RotatedType' , 'Normal' , 'PVal' , ), 5, (5, (), [ (11, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'RotatedType' , 'Normal' , 'PVal' , ), 5, (5, (), [ (11, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'Normal' , 'PVal' , ), 6, (6, (), [ (11, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'Normal' , 'PVal' , ), 6, (6, (), [ (11, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'AngleObject' , 'Normal' , 'PVal' , ), 7, (7, (), [ (11, 1, None, None) , 
			 (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'AngleObject' , 'Normal' , 'PVal' , ), 7, (7, (), [ (11, 1, None, None) , 
			 (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'CutOffByPoint' , 'Normal' , 'PVal' , ), 8, (8, (), [ (11, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'CutOffByPoint' , 'Normal' , 'PVal' , ), 8, (8, (), [ (11, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
]

IRotated1_vtables_dispatch_ = 1
IRotated1_vtables_ = [
	(( 'OperationResult' , 'Result' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'OperationResult' , 'Result' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
]

IRotatedSurface_vtables_dispatch_ = 1
IRotatedSurface_vtables_ = [
	(( 'ClosedShell' , 'PVal' , ), 301, (301, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'ClosedShell' , 'PVal' , ), 301, (301, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
]

IRotateds_vtables_dispatch_ = 1
IRotateds_vtables_ = [
	(( 'Rotated' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{7BB28AD1-CCAE-449C-9086-A97470543089}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'RotatedType' , 'Result' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{7BB28AD1-CCAE-449C-9086-A97470543089}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IRough_vtables_dispatch_ = 1
IRough_vtables_ = [
	(( 'BaseObject' , 'NewObject' , ), 1, (1, (), [ (16393, 10, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'BaseObject' , 'NewObject' , ), 1, (1, (), [ (9, 1, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'BranchX0' , 'Result' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'BranchX0' , 'Result' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'BranchY0' , 'Result' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'BranchY0' , 'Result' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'ShelfX' , 'Result' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'ShelfX' , 'Result' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'ShelfY' , 'Result' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'ShelfY' , 'Result' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'BranchArrowType' , 'Index' , 'Result' , ), 6, (6, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'BranchArrowType' , 'Index' , 'Result' , ), 6, (6, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'BranchArrowInside' , 'Index' , 'Result' , ), 7, (7, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'BranchArrowInside' , 'Index' , 'Result' , ), 7, (7, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
]

IRough3D_vtables_dispatch_ = 1
IRough3D_vtables_ = [
	(( 'BasePlane' , 'Val' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'BasePlane' , 'Val' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'PositionObject' , 'Val' , ), 2, (2, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'PositionObject' , 'Val' , ), 2, (2, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'GetPosition' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 3, (3, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'SetPosition' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 4, (4, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'BaseObject' , 'Object1' , ), 5, (5, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'GetBasePosition' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 6, (6, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'SetBasePosition' , 'X' , 'Y' , 'Z' , 'Object' , 
			 'Result' , ), 7, (7, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'GetShelfPosition' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 8, (8, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'SetShelfPosition' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 9, (9, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
]

IRoughParams_vtables_dispatch_ = 1
IRoughParams_vtables_ = [
	(( 'SignType' , 'Result' , ), 1501, (1501, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'SignType' , 'Result' , ), 1501, (1501, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'RoughParamText' , 'PVal' , ), 1502, (1502, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'ProcessText' , 'PVal' , ), 1503, (1503, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'BaseLengthText' , 'PVal' , ), 1504, (1504, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'TrendText' , 'PVal' , ), 1505, (1505, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ProcessingByContour' , 'Result' , ), 1506, (1506, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'ProcessingByContour' , 'Result' , ), 1506, (1506, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'ShelfDirection' , 'Result' , ), 1507, (1507, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'ShelfDirection' , 'Result' , ), 1507, (1507, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'LeaderLength' , 'Result' , ), 1508, (1508, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'LeaderLength' , 'Result' , ), 1508, (1508, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'LeaderAngle' , 'Result' , ), 1509, (1509, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'LeaderAngle' , 'Result' , ), 1509, (1509, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ArrowType' , 'Result' , ), 1510, (1510, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ArrowType' , 'Result' , ), 1510, (1510, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'ArrowInside' , 'Result' , ), 1511, (1511, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'ArrowInside' , 'Result' , ), 1511, (1511, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
]

IRoughs_vtables_dispatch_ = 1
IRoughs_vtables_ = [
	(( 'Rough' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{0A192AC5-D8BC-43E9-8FC7-ACF32578DDB4}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Value' , ), 2, (2, (), [ (16393, 10, None, "IID('{0A192AC5-D8BC-43E9-8FC7-ACF32578DDB4}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IRoughs3D_vtables_dispatch_ = 1
IRoughs3D_vtables_ = [
	(( 'Rough3D' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{083A4984-199E-4591-8FC3-CB8A9D7D4303}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Value' , ), 2, (2, (), [ (16393, 10, None, "IID('{083A4984-199E-4591-8FC3-CB8A9D7D4303}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IRuledSurface_vtables_dispatch_ = 1
IRuledSurface_vtables_ = [
	(( 'Curves1' , 'Curves' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Curves1' , 'Curves' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Curves2' , 'Curves' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Curves2' , 'Curves' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'CheckSelfIntersection' , 'PVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'CheckSelfIntersection' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'AutoSegmentation' , 'PVal' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'AutoSegmentation' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'AddNewEdge' , 'IndexAt' , 'Result' , ), 5, (5, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'DeleteEdge' , 'Index' , 'Result' , ), 6, (6, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'EdgesCount' , 'PVal' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'SetEdgePointParam' , 'EdgeIndex' , 'StartPoint' , 'X' , 'Y' , 
			 'Z' , 'T' , 'Segment' , 'AssociateVertex' , 'Result' , 
			 ), 8, (8, (), [ (3, 1, None, None) , (11, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (16389, 1, None, None) , (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'GetEdgePointParam' , 'EdgeIndex' , 'StartPoint' , 'X' , 'Y' , 
			 'Z' , 'T' , 'Segment' , 'AssociateVertex' , 'Result' , 
			 ), 9, (9, (), [ (3, 1, None, None) , (11, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16393, 2, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , (16393, 2, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'GetEdgePointParams' , 'Points1' , 'T1' , 'Segments1' , 'AssociateVertexes1' , 
			 'Points2' , 'T2' , 'Segments2' , 'AssociateVertexes2' , 'Result' , 
			 ), 10, (10, (), [ (16396, 2, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , 
			 (16396, 2, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ConsiderComplianceVertices' , 'PVal' , ), 11, (11, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'ConsiderComplianceVertices' , 'PVal' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
]

IRuledSurfaces_vtables_dispatch_ = 1
IRuledSurfaces_vtables_ = [
	(( 'RuledSurface' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{95681235-7522-4A84-B01C-E76A27393552}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{95681235-7522-4A84-B01C-E76A27393552}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ISaveToPreviusParam7_vtables_dispatch_ = 1
ISaveToPreviusParam7_vtables_ = [
	(( 'AddWarning' , 'UniqueId' , 'OptionName' , 'Text' , 'Result' , 
			 ), 2001, (2001, (), [ (8, 1, None, None) , (8, 1, None, None) , (8, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'AddOption' , 'UniqueId' , 'OptionName' , 'Options' , 'DefaultValue' , 
			 'Result' , ), 2002, (2002, (), [ (8, 1, None, None) , (8, 1, None, None) , (12, 1, None, None) , 
			 (8, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'GetCurrentOptionValue' , 'UniqueId' , 'Result' , ), 2003, (2003, (), [ (8, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
]

IScaling3D_vtables_dispatch_ = 1
IScaling3D_vtables_ = [
	(( 'Shell' , 'PVal' , ), 1, (1, (), [ (9, 1, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Shell' , 'PVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Scale' , 'Result' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Scale' , 'Result' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'BasePoint' , 'PVal' , ), 3, (3, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'BasePoint' , 'PVal' , ), 3, (3, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IScalings3D_vtables_dispatch_ = 1
IScalings3D_vtables_ = [
	(( 'Scaling3D' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{A37EE5F1-C852-467B-B72A-00C05310174D}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{A37EE5F1-C852-467B-B72A-00C05310174D}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ISelectionManager_vtables_dispatch_ = 1
ISelectionManager_vtables_ = [
	(( 'Select' , 'Objects' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Unselect' , 'Objects' , 'Result' , ), 2, (2, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'UnselectAll' , 'Result' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'IsSelected' , 'Object' , 'Result' , ), 4, (4, (), [ (9, 1, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'SelectedObjects' , 'Objects' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ISerializer_vtables_dispatch_ = 1
ISerializer_vtables_ = [
	(( 'XML' , 'Result' , ), 9001, (9001, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'XML' , 'Result' , ), 9001, (9001, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
]

ISheetFormat_vtables_dispatch_ = 1
ISheetFormat_vtables_ = [
	(( 'Format' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Format' , 'PVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'FormatMultiplicity' , 'PVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'FormatMultiplicity' , 'PVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'VerticalOrientation' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'VerticalOrientation' , 'PVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'FormatWidth' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'FormatWidth' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'FormatHeight' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'FormatHeight' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
]

ISheetMetalBend_vtables_dispatch_ = 1
ISheetMetalBend_vtables_ = [
	(( 'Direction' , 'PVal' , ), 1, (1, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Disposal' , 'PVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Disposal' , 'PVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'LengthType' , 'PVal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'LengthType' , 'PVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'InternalLength' , 'PVal' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'InternalLength' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Length' , 'PVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Length' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'AngleType' , 'PVal' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'AngleType' , 'PVal' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'OffsetType' , 'PVal' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'OffsetType' , 'PVal' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Offset' , 'PVal' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Offset' , 'PVal' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Straighten' , 'PVal' , ), 11, (11, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Straighten' , 'PVal' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'LeftSideType' , 'PVal' , ), 12, (12, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'LeftSideType' , 'PVal' , ), 12, (12, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'DistanceLeftSide' , 'PVal' , ), 13, (13, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'DistanceLeftSide' , 'PVal' , ), 13, (13, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'LeftSideAngle' , 'PVal' , ), 14, (14, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'LeftSideAngle' , 'PVal' , ), 14, (14, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'DeviationLeftSide' , 'PVal' , ), 15, (15, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'DeviationLeftSide' , 'PVal' , ), 15, (15, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'WideningLeftSide' , 'PVal' , ), 16, (16, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'WideningLeftSide' , 'PVal' , ), 16, (16, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'RightSideType' , 'PVal' , ), 17, (17, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'RightSideType' , 'PVal' , ), 17, (17, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'DistanceRightSide' , 'PVal' , ), 18, (18, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'DistanceRightSide' , 'PVal' , ), 18, (18, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'RightSideAngle' , 'PVal' , ), 19, (19, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'RightSideAngle' , 'PVal' , ), 19, (19, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'DeviationRightSide' , 'PVal' , ), 20, (20, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'DeviationRightSide' , 'PVal' , ), 20, (20, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'WideningRightSide' , 'PVal' , ), 21, (21, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'WideningRightSide' , 'PVal' , ), 21, (21, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'WithoutAngleRelease' , 'PVal' , ), 22, (22, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'WithoutAngleRelease' , 'PVal' , ), 22, (22, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'WithoutBendRelease' , 'PVal' , ), 23, (23, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'WithoutBendRelease' , 'PVal' , ), 23, (23, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'DismissalWithWidth' , 'PVal' , ), 24, (24, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'DismissalWithWidth' , 'PVal' , ), 24, (24, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'BendRelease' , 'PVal' , ), 25, (25, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'BendRelease' , 'PVal' , ), 25, (25, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'DismissalWidth' , 'PVal' , ), 26, (26, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'DismissalWidth' , 'PVal' , ), 26, (26, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'DismissalDepth' , 'PVal' , ), 27, (27, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'DismissalDepth' , 'PVal' , ), 27, (27, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'DismissalAngleType' , 'PVal' , ), 28, (28, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
	(( 'DismissalAngleType' , 'PVal' , ), 28, (28, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'BendObject' , 'Result' , ), 29, (29, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
	(( 'BendObject' , 'Result' , ), 29, (29, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
	(( 'InternalRadius' , 'PVal' , ), 30, (30, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
	(( 'InternalRadius' , 'PVal' , ), 30, (30, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'PVal' , ), 31, (31, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'PVal' , ), 31, (31, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
	(( 'UnfoldType' , 'PVal' , ), 32, (32, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
	(( 'UnfoldType' , 'PVal' , ), 32, (32, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 664 , (3, 0, None, None) , 0 , )),
	(( 'BendCoefficient' , 'PVal' , ), 33, (33, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 672 , (3, 0, None, None) , 0 , )),
	(( 'BendCoefficient' , 'PVal' , ), 33, (33, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 680 , (3, 0, None, None) , 0 , )),
	(( 'BendValue' , 'PVal' , ), 34, (34, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 688 , (3, 0, None, None) , 0 , )),
	(( 'BendValue' , 'PVal' , ), 34, (34, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 696 , (3, 0, None, None) , 0 , )),
	(( 'BendReduction' , 'PVal' , ), 35, (35, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 704 , (3, 0, None, None) , 0 , )),
	(( 'BendReduction' , 'PVal' , ), 35, (35, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 712 , (3, 0, None, None) , 0 , )),
	(( 'BendTablePath' , 'PVal' , ), 36, (36, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 720 , (3, 0, None, None) , 0 , )),
	(( 'LengthBy2Sides' , 'PVal' , ), 37, (37, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 728 , (3, 0, None, None) , 0 , )),
	(( 'LengthBy2Sides' , 'PVal' , ), 37, (37, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 736 , (3, 0, None, None) , 0 , )),
	(( 'Length1' , 'PVal' , ), 38, (38, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 744 , (3, 0, None, None) , 0 , )),
	(( 'Length1' , 'PVal' , ), 38, (38, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 752 , (3, 0, None, None) , 0 , )),
	(( 'Length2' , 'PVal' , ), 39, (39, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 760 , (3, 0, None, None) , 0 , )),
	(( 'Length2' , 'PVal' , ), 39, (39, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 768 , (3, 0, None, None) , 0 , )),
	(( 'LengthObject1' , 'PVal' , ), 40, (40, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 776 , (3, 0, None, None) , 0 , )),
	(( 'LengthObject1' , 'PVal' , ), 40, (40, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 784 , (3, 0, None, None) , 0 , )),
	(( 'OffsetFromLengthObject1' , 'PVal' , ), 41, (41, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 792 , (3, 0, None, None) , 0 , )),
	(( 'OffsetFromLengthObject1' , 'PVal' , ), 41, (41, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 800 , (3, 0, None, None) , 0 , )),
	(( 'OffsetDirection1' , 'PVal' , ), 42, (42, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 808 , (3, 0, None, None) , 0 , )),
	(( 'OffsetDirection1' , 'PVal' , ), 42, (42, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 816 , (3, 0, None, None) , 0 , )),
	(( 'LengthBuildingType1' , 'PVal' , ), 43, (43, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 824 , (3, 0, None, None) , 0 , )),
	(( 'LengthBuildingType1' , 'PVal' , ), 43, (43, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 832 , (3, 0, None, None) , 0 , )),
	(( 'LengthType1' , 'PVal' , ), 44, (44, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 840 , (3, 0, None, None) , 0 , )),
	(( 'LengthType1' , 'PVal' , ), 44, (44, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 848 , (3, 0, None, None) , 0 , )),
	(( 'LengthObject2' , 'PVal' , ), 45, (45, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 856 , (3, 0, None, None) , 0 , )),
	(( 'LengthObject2' , 'PVal' , ), 45, (45, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 864 , (3, 0, None, None) , 0 , )),
	(( 'OffsetFromLengthObject2' , 'PVal' , ), 46, (46, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 872 , (3, 0, None, None) , 0 , )),
	(( 'OffsetFromLengthObject2' , 'PVal' , ), 46, (46, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 880 , (3, 0, None, None) , 0 , )),
	(( 'OffsetDirection2' , 'PVal' , ), 47, (47, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 888 , (3, 0, None, None) , 0 , )),
	(( 'OffsetDirection2' , 'PVal' , ), 47, (47, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 896 , (3, 0, None, None) , 0 , )),
	(( 'LengthBuildingType2' , 'PVal' , ), 48, (48, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 904 , (3, 0, None, None) , 0 , )),
	(( 'LengthBuildingType2' , 'PVal' , ), 48, (48, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 912 , (3, 0, None, None) , 0 , )),
	(( 'LengthType2' , 'PVal' , ), 49, (49, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 920 , (3, 0, None, None) , 0 , )),
	(( 'LengthType2' , 'PVal' , ), 49, (49, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 928 , (3, 0, None, None) , 0 , )),
	(( 'BendObjects' , 'Result' , ), 50, (50, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 936 , (3, 0, None, None) , 0 , )),
	(( 'BendObjects' , 'Result' , ), 50, (50, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 944 , (3, 0, None, None) , 0 , )),
]

ISheetMetalBendUnfoldParameters_vtables_dispatch_ = 1
ISheetMetalBendUnfoldParameters_vtables_ = [
	(( 'UnfoldPlane' , 'PVal' , ), 4501, (4501, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'UnfoldPlane' , 'PVal' , ), 4501, (4501, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'FixedFaces' , 'PVal' , ), 4502, (4502, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'FixedFaces' , 'PVal' , ), 4502, (4502, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'ExcludedBendObjects' , 'PVal' , ), 4503, (4503, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ExcludedBendObjects' , 'PVal' , ), 4503, (4503, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Unfold' , 'PVal' , ), 4504, (4504, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Unfold' , 'PVal' , ), 4504, (4504, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'IsCreated' , 'PVal' , ), 4505, (4505, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'UpdateParam' , 'Result' , ), 4506, (4506, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'DeleteParam' , 'Result' , ), 4507, (4507, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

ISheetMetalBendedStraighten_vtables_dispatch_ = 1
ISheetMetalBendedStraighten_vtables_ = [
	(( 'FixedFace' , 'PVal' , ), 1, (1, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'FixedFace' , 'PVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'BendObjects' , 'PVal' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'BendObjects' , 'PVal' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'FoldLinesEnabled' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'FoldLinesEnabled' , 'PVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'FoldLinesStyle' , 'Style' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'FoldLinesStyle' , 'Style' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
]

ISheetMetalBendedStraightens_vtables_dispatch_ = 1
ISheetMetalBendedStraightens_vtables_ = [
	(( 'SheetMetalBendedStraighten' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{194F5AF1-1B37-4FF7-9C7A-B939CB556F3A}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Type' , 'Result' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{194F5AF1-1B37-4FF7-9C7A-B939CB556F3A}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ISheetMetalBends_vtables_dispatch_ = 1
ISheetMetalBends_vtables_ = [
	(( 'SheetMetalBend' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{B631D95F-C487-41D6-9726-C65E9F5A4505}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{B631D95F-C487-41D6-9726-C65E9F5A4505}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ISheetMetalBodies_vtables_dispatch_ = 1
ISheetMetalBodies_vtables_ = [
	(( 'SheetMetalBody' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{2DC533DC-829E-4EFF-A905-541E9220A12D}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{2DC533DC-829E-4EFF-A905-541E9220A12D}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ISheetMetalBody_vtables_dispatch_ = 1
ISheetMetalBody_vtables_ = [
	(( 'ThicknessDirection' , 'PVal' , ), 1, (1, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ThicknessDirection' , 'PVal' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Thickness' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Thickness' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Straighten' , 'PVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Straighten' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'UnfoldType' , 'PVal' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'UnfoldType' , 'PVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'BendCoefficient' , 'PVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'BendCoefficient' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'BendValue' , 'PVal' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'BendValue' , 'PVal' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'BendReduction' , 'PVal' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'BendReduction' , 'PVal' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'BendTablePath' , 'PVal' , ), 9, (9, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'BendTablePath' , 'PVal' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Sketch' , 'Result' , ), 10, (10, (), [ (9, 1, None, "IID('{E6BBF50D-8401-4FB3-A6B6-153D3F447255}')") , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Sketch' , 'Result' , ), 10, (10, (), [ (16393, 10, None, "IID('{E6BBF50D-8401-4FB3-A6B6-153D3F447255}')") , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 11, (11, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'ExtrusionType' , 'Normal' , 'PVal' , ), 12, (12, (), [ (11, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'ExtrusionType' , 'Normal' , 'PVal' , ), 12, (12, (), [ (11, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'Depth' , 'Normal' , 'PVal' , ), 13, (13, (), [ (11, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'Depth' , 'Normal' , 'PVal' , ), 13, (13, (), [ (11, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'DepthObject' , 'Normal' , 'PVal' , ), 14, (14, (), [ (11, 1, None, None) , 
			 (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'DepthObject' , 'Normal' , 'PVal' , ), 14, (14, (), [ (11, 1, None, None) , 
			 (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'GetSideParameters' , 'Normal' , 'ExtrusionType' , 'Depth' , 'DepthObject' , 
			 'PVal' , ), 15, (15, (), [ (11, 1, None, None) , (16387, 2, None, None) , (16389, 2, None, None) , 
			 (16393, 2, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'SetSideParameters' , 'Normal' , 'ExtrusionType' , 'Depth' , 'DepthObject' , 
			 'PVal' , ), 16, (16, (), [ (11, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , 
			 (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
]

ISheetMetalClosedCorner_vtables_dispatch_ = 1
ISheetMetalClosedCorner_vtables_ = [
	(( 'CornersObjects' , 'PVal' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'CornersObjects' , 'PVal' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'CornersCount' , 'Result' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'CornerObject' , 'Index' , 'PVal' , ), 3, (3, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'AddCornerObject' , 'NewVal' , 'Result' , ), 4, (4, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'DeleteCornerObject' , 'Index' , 'Result' , ), 5, (5, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'ClearCornerObjects' , 'Result' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'DefailtParametersIndex' , 'PVal' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'DefailtParametersIndex' , 'PVal' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'ClosingClosedType' , 'Index' , 'PVal' , ), 8, (8, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ClosingClosedType' , 'Index' , 'PVal' , ), 8, (8, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ClosingCorneringType' , 'Index' , 'PVal' , ), 9, (9, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'ClosingCorneringType' , 'Index' , 'PVal' , ), 9, (9, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'ClosingGapValue' , 'Index' , 'PVal' , ), 10, (10, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ClosingGapValue' , 'Index' , 'PVal' , ), 10, (10, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'ClosingHolePlacement' , 'Index' , 'PVal' , ), 11, (11, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'ClosingHolePlacement' , 'Index' , 'PVal' , ), 11, (11, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'ClosingHoleDiameter' , 'Index' , 'PVal' , ), 12, (12, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'ClosingHoleDiameter' , 'Index' , 'PVal' , ), 12, (12, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'ClosingHoleOffset' , 'Index' , 'PVal' , ), 13, (13, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'ClosingHoleOffset' , 'Index' , 'PVal' , ), 13, (13, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'ClosingContinue' , 'Index' , 'PVal' , ), 14, (14, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'ClosingContinue' , 'Index' , 'PVal' , ), 14, (14, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'ClosingDirection' , 'Index' , 'PVal' , ), 15, (15, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'ClosingDirection' , 'Index' , 'PVal' , ), 15, (15, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
]

ISheetMetalClosedCorners_vtables_dispatch_ = 1
ISheetMetalClosedCorners_vtables_ = [
	(( 'SheetMetalClosedCorner' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{995BEE65-54D2-443E-9423-88B4323308A7}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{995BEE65-54D2-443E-9423-88B4323308A7}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ISheetMetalContainer_vtables_dispatch_ = 1
ISheetMetalContainer_vtables_ = [
	(( 'SheetMetalBodies' , 'PVal' , ), 11001, (11001, (), [ (16393, 10, None, "IID('{F56DBE72-48CC-48AD-9DA4-10D972C903EE}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'SheetMetalBends' , 'PVal' , ), 11002, (11002, (), [ (16393, 10, None, "IID('{6826CFD6-6A48-4EB1-8C89-7DB4E36702B4}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'SheetMetalLineBends' , 'PVal' , ), 11003, (11003, (), [ (16393, 10, None, "IID('{AF8B8310-AF82-4B02-8733-783FFAFD4DBD}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'SheetMetalHoles' , 'PVal' , ), 11004, (11004, (), [ (16393, 10, None, "IID('{E117BDF9-5133-4672-9B8F-06046F6B9BF3}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'SheetMetalCuts' , 'PVal' , ), 11005, (11005, (), [ (16393, 10, None, "IID('{9515E4BB-7C60-4C3A-AF7A-847861E67B55}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'SheetMetalSketchBends' , 'PVal' , ), 11006, (11006, (), [ (16393, 10, None, "IID('{247539A2-BB15-4D8A-9121-67BDE48A989A}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'SheetMetalClosedCorners' , 'PVal' , ), 11007, (11007, (), [ (16393, 10, None, "IID('{67037D06-603A-41DA-8513-45088FEA98A8}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'SheetMetalPlates' , 'PVal' , ), 11008, (11008, (), [ (16393, 10, None, "IID('{A1AD042D-A57F-4079-8F7A-CE4AAB5D9DAF}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'SheetMetalUndercuts' , 'PVal' , ), 11009, (11009, (), [ (16393, 10, None, "IID('{AF8B8310-AF82-4B02-8733-783FFAFD4DBD}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'SheetMetalBendedStraightens' , 'PVal' , ), 11010, (11010, (), [ (16393, 10, None, "IID('{B19D00A4-1B8E-43FA-9DA7-EBE37EC67B67}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'SheetMetalBendUnfoldParameters' , 'PVal' , ), 11011, (11011, (), [ (16393, 10, None, "IID('{BC21145E-5520-4871-AA24-52E19EF82211}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'SheetMetalPressFormings' , 'PVal' , ), 11012, (11012, (), [ (16393, 10, None, "IID('{0541BEE1-9273-4611-9F26-B3408C51580F}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'SheetMetalShoulders' , 'PVal' , ), 11013, (11013, (), [ (16393, 10, None, "IID('{AC0F620E-229A-42BE-8C5B-1786C54474C0}')") , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'SheetMetalJalousies' , 'PVal' , ), 11014, (11014, (), [ (16393, 10, None, "IID('{914D5295-8831-4166-994C-D19C5DF149E7}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'SheetMetalRibs' , 'PVal' , ), 11015, (11015, (), [ (16393, 10, None, "IID('{B72CC78F-D630-463F-8911-ED9BD58BBA1C}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'SheetMetalRuledShells' , 'PVal' , ), 11016, (11016, (), [ (16393, 10, None, "IID('{F56DBE72-48CC-48AD-9DA4-10D972C903EE}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'SheetMetalLinearRuledShells' , 'PVal' , ), 11017, (11017, (), [ (16393, 10, None, "IID('{F56DBE72-48CC-48AD-9DA4-10D972C903EE}')") , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

ISheetMetalCut_vtables_dispatch_ = 1
ISheetMetalCut_vtables_ = [
	(( 'Sketch' , 'Result' , ), 1, (1, (), [ (9, 1, None, "IID('{E6BBF50D-8401-4FB3-A6B6-153D3F447255}')") , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Sketch' , 'Result' , ), 1, (1, (), [ (16393, 10, None, "IID('{E6BBF50D-8401-4FB3-A6B6-153D3F447255}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'CutType' , 'PVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'CutType' , 'PVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Depth' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Depth' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'DepthObject' , 'PVal' , ), 4, (4, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'DepthObject' , 'PVal' , ), 4, (4, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Cut' , 'PVal' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Cut' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Body' , 'PVal' , ), 6, (6, (), [ (9, 1, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Body' , 'PVal' , ), 6, (6, (), [ (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
]

ISheetMetalCuts_vtables_dispatch_ = 1
ISheetMetalCuts_vtables_ = [
	(( 'SheetMetalCut' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{B50B1730-BACF-46F2-B10A-6CCDF4E4A2B1}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{B50B1730-BACF-46F2-B10A-6CCDF4E4A2B1}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ISheetMetalHole_vtables_dispatch_ = 1
ISheetMetalHole_vtables_ = [
	(( 'X' , 'PVal' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'X' , 'PVal' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'CutType' , 'PVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'CutType' , 'PVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Diameter' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Diameter' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Depth' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Depth' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'BasePlane' , 'Result' , ), 6, (6, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'BasePlane' , 'Result' , ), 6, (6, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'DepthObject' , 'PVal' , ), 7, (7, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'DepthObject' , 'PVal' , ), 7, (7, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Sketch' , 'PVal' , ), 8, (8, (), [ (16393, 10, None, "IID('{E6BBF50D-8401-4FB3-A6B6-153D3F447255}')") , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Body' , 'PVal' , ), 9, (9, (), [ (9, 1, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Body' , 'PVal' , ), 9, (9, (), [ (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Point3DParamSurface' , 'PVal' , ), 10, (10, (), [ (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'AssociationVertex' , 'PVal' , ), 11, (11, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'AssociationVertex' , 'PVal' , ), 11, (11, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Axis' , 'PVal' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Axis' , 'PVal' , ), 12, (12, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
]

ISheetMetalHoles_vtables_dispatch_ = 1
ISheetMetalHoles_vtables_ = [
	(( 'SheetMetalHole' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{3490B8B8-00D7-4BCF-AAD8-9487BF271084}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{3490B8B8-00D7-4BCF-AAD8-9487BF271084}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ISheetMetalJalousie_vtables_dispatch_ = 1
ISheetMetalJalousie_vtables_ = [
	(( 'Sketch' , 'PVal' , ), 1, (1, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Sketch' , 'PVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'PVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'PVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'FormEnd' , 'PVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'FormEnd' , 'PVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'HeightType' , 'PVal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'HeightType' , 'PVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'PVal' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'PVal' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Side' , 'PVal' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Side' , 'PVal' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Round' , 'PVal' , ), 9, (9, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Round' , 'PVal' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'PVal' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'PVal' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
]

ISheetMetalJalousies_vtables_dispatch_ = 1
ISheetMetalJalousies_vtables_ = [
	(( 'SheetMetalJalousie' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{13501739-CD1F-4401-8A48-B2093E974CC1}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{13501739-CD1F-4401-8A48-B2093E974CC1}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ISheetMetalLineBend_vtables_dispatch_ = 1
ISheetMetalLineBend_vtables_ = [
	(( 'Direction' , 'PVal' , ), 1, (1, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'BendLeftSideFixed' , 'PVal' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'BendLeftSideFixed' , 'PVal' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'AngleType' , 'PVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'AngleType' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'BendType' , 'PVal' , ), 5, (5, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'BendType' , 'PVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Straighten' , 'PVal' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Straighten' , 'PVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'DismissalAngleType' , 'PVal' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'DismissalAngleType' , 'PVal' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'InternalRadius' , 'PVal' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'InternalRadius' , 'PVal' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'PVal' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'PVal' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'UnfoldType' , 'PVal' , ), 10, (10, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'UnfoldType' , 'PVal' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'BendCoefficient' , 'PVal' , ), 11, (11, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'BendCoefficient' , 'PVal' , ), 11, (11, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'BendValue' , 'PVal' , ), 12, (12, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'BendValue' , 'PVal' , ), 12, (12, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'BendReduction' , 'PVal' , ), 13, (13, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'BendReduction' , 'PVal' , ), 13, (13, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'BendTablePath' , 'PVal' , ), 14, (14, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'Faces' , 'Result' , ), 15, (15, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'Faces' , 'Result' , ), 15, (15, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'Line' , 'Result' , ), 16, (16, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'Line' , 'Result' , ), 16, (16, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
]

ISheetMetalLineBends_vtables_dispatch_ = 1
ISheetMetalLineBends_vtables_ = [
	(( 'SheetMetalLineBend' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E13EF07A-B1E8-41FD-9C85-C17F01E52A03}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{E13EF07A-B1E8-41FD-9C85-C17F01E52A03}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ISheetMetalLinearRuledShell_vtables_dispatch_ = 1
ISheetMetalLinearRuledShell_vtables_ = [
	(( 'Sketch2' , 'Result' , ), 5001, (5001, (), [ (9, 1, None, "IID('{E6BBF50D-8401-4FB3-A6B6-153D3F447255}')") , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Sketch2' , 'Result' , ), 5001, (5001, (), [ (16393, 10, None, "IID('{E6BBF50D-8401-4FB3-A6B6-153D3F447255}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'UseCommonSegmentationParameters' , 'PVal' , ), 5002, (5002, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'UseCommonSegmentationParameters' , 'PVal' , ), 5002, (5002, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'CurvesCount' , 'PVal' , ), 5003, (5003, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'CurveUseSegmentation' , 'CurveIndex' , 'PVal' , ), 5004, (5004, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'CurveUseSegmentation' , 'CurveIndex' , 'PVal' , ), 5004, (5004, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'CurveSegmentationMethod' , 'CurveIndex' , 'PVal' , ), 5005, (5005, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'CurveSegmentationMethod' , 'CurveIndex' , 'PVal' , ), 5005, (5005, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'CurveSegmentationSplitValue' , 'CurveIndex' , 'PVal' , ), 5006, (5006, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'CurveSegmentationSplitValue' , 'CurveIndex' , 'PVal' , ), 5006, (5006, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'AutoSegmentation' , 'PVal' , ), 5007, (5007, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'AutoSegmentation' , 'PVal' , ), 5007, (5007, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'AddNewEdge' , 'IndexAt' , 'Result' , ), 5008, (5008, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'DeleteEdge' , 'Index' , 'Result' , ), 5009, (5009, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'EdgesCount' , 'PVal' , ), 5010, (5010, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'SetEdgePointParam' , 'EdgeIndex' , 'StartPoint' , 'X' , 'Y' , 
			 'Z' , 'T' , 'AssociateVertex' , 'Result' , ), 5011, (5011, (), [ 
			 (3, 1, None, None) , (11, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (16389, 1, None, None) , (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'GetEdgePointParam' , 'EdgeIndex' , 'StartPoint' , 'X' , 'Y' , 
			 'Z' , 'T' , 'AssociateVertex' , 'Result' , ), 5012, (5012, (), [ 
			 (3, 1, None, None) , (11, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16393, 2, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'GetEdgePointParams' , 'Points1' , 'T1' , 'AssociateVertexes1' , 'Points2' , 
			 'T2' , 'AssociateVertexes2' , 'Result' , ), 5013, (5013, (), [ (16396, 2, None, None) , 
			 (16396, 2, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

ISheetMetalPlate_vtables_dispatch_ = 1
ISheetMetalPlate_vtables_ = [
	(( 'Sketch' , 'PVal' , ), 1, (1, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Sketch' , 'PVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ThicknessObject' , 'PVal' , ), 2, (2, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'ThicknessObject' , 'PVal' , ), 2, (2, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'IsUserThickness' , 'PVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'IsUserThickness' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Thickness' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Thickness' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
]

ISheetMetalPlates_vtables_dispatch_ = 1
ISheetMetalPlates_vtables_ = [
	(( 'SheetMetalPlate' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{DC733340-DCA5-4253-8AB1-045AD169E06E}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{DC733340-DCA5-4253-8AB1-045AD169E06E}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ISheetMetalPressForming_vtables_dispatch_ = 1
ISheetMetalPressForming_vtables_ = [
	(( 'Sketch' , 'PVal' , ), 1, (1, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Sketch' , 'PVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'HeightType' , 'PVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'HeightType' , 'PVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'ThicknessDirection' , 'PVal' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'ThicknessDirection' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Side' , 'PVal' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Side' , 'PVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'RoundEdges' , 'PVal' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'RoundEdges' , 'PVal' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Radius1' , 'PVal' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Radius1' , 'PVal' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Round' , 'PVal' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Round' , 'PVal' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Radius2' , 'PVal' , ), 11, (11, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Radius2' , 'PVal' , ), 11, (11, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'RoundBottom' , 'PVal' , ), 12, (12, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'RoundBottom' , 'PVal' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'Radius3' , 'PVal' , ), 13, (13, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'Radius3' , 'PVal' , ), 13, (13, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
]

ISheetMetalPressFormings_vtables_dispatch_ = 1
ISheetMetalPressFormings_vtables_ = [
	(( 'SheetMetalPressForming' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{BDB9FB08-C8C8-4446-9821-BE1BA9306602}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Type' , 'Result' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{BDB9FB08-C8C8-4446-9821-BE1BA9306602}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ISheetMetalRib_vtables_dispatch_ = 1
ISheetMetalRib_vtables_ = [
	(( 'BendObject' , 'PVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'BendFace' , 'NewVal' , ), 2, (2, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'BendEdge' , 'NewVal' , ), 3, (3, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'InitBendObjects' , 'BendObject' , 'BendFace' , 'BendEdge' , 'PVal' , 
			 ), 4, (4, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'AutoInitBendObjects' , 'InitObject' , 'PVal' , ), 5, (5, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'CalculateOptimalParams' , 'PVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'OffsetType' , 'PVal' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'OffsetType' , 'PVal' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Offset' , 'PVal' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Offset' , 'PVal' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 9, (9, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'PVal' , ), 10, (10, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'PVal' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'CutingType' , 'PVal' , ), 11, (11, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'CutingType' , 'PVal' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Lenght1' , 'PVal' , ), 12, (12, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Lenght1' , 'PVal' , ), 12, (12, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Lenght2' , 'PVal' , ), 13, (13, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Lenght2' , 'PVal' , ), 13, (13, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Angle1' , 'PVal' , ), 14, (14, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Angle1' , 'PVal' , ), 14, (14, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'Radius1' , 'PVal' , ), 15, (15, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'Radius1' , 'PVal' , ), 15, (15, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'Angle2' , 'PVal' , ), 16, (16, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'Angle2' , 'PVal' , ), 16, (16, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'PVal' , ), 17, (17, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'PVal' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'Round' , 'PVal' , ), 18, (18, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'Round' , 'PVal' , ), 18, (18, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'Radius2' , 'PVal' , ), 19, (19, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'Radius2' , 'PVal' , ), 19, (19, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'ArchCreate' , 'PVal' , ), 20, (20, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'ArchCreate' , 'PVal' , ), 20, (20, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'ArchCoefficient' , 'PVal' , ), 21, (21, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'ArchCoefficient' , 'PVal' , ), 21, (21, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'ArchRadius' , 'PVal' , ), 22, (22, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'ArchRadius' , 'PVal' , ), 22, (22, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'ArchMeasure' , 'PVal' , ), 23, (23, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'ArchMeasure' , 'PVal' , ), 23, (23, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'ArchLength' , 'PVal' , ), 24, (24, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'ArchLength' , 'PVal' , ), 24, (24, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
]

ISheetMetalRibs_vtables_dispatch_ = 1
ISheetMetalRibs_vtables_ = [
	(( 'SheetMetalRib' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{ACA9C96E-5DBE-44C8-ABF5-15230282AB05}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{ACA9C96E-5DBE-44C8-ABF5-15230282AB05}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ISheetMetalRuledShell_vtables_dispatch_ = 1
ISheetMetalRuledShell_vtables_ = [
	(( 'DraftValue' , 'Normal' , 'PVal' , ), 4001, (4001, (), [ (11, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'DraftValue' , 'Normal' , 'PVal' , ), 4001, (4001, (), [ (11, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'DraftOutward' , 'Normal' , 'PVal' , ), 4002, (4002, (), [ (11, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'DraftOutward' , 'Normal' , 'PVal' , ), 4002, (4002, (), [ (11, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'KeepRadius' , 'PVal' , ), 4003, (4003, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'KeepRadius' , 'PVal' , ), 4003, (4003, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'RuledBorder' , 'PVal' , ), 4004, (4004, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'RuledBorder' , 'PVal' , ), 4004, (4004, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'RuledJoint' , 'PVal' , ), 4005, (4005, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'RuledJoint' , 'PVal' , ), 4005, (4005, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'GapValue' , 'PVal' , ), 4006, (4006, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'GapValue' , 'PVal' , ), 4006, (4006, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'OffsetGapType' , 'PVal' , ), 4007, (4007, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'OffsetGapType' , 'PVal' , ), 4007, (4007, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'GapOffsetU' , 'PVal' , ), 4008, (4008, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'GapOffsetU' , 'PVal' , ), 4008, (4008, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'GapOffsetLength' , 'PVal' , ), 4009, (4009, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'GapOffsetLength' , 'PVal' , ), 4009, (4009, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'GapDraftPosition' , 'PVal' , ), 4010, (4010, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'GapDraftPosition' , 'PVal' , ), 4010, (4010, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'UseSegmentation' , 'PVal' , ), 4011, (4011, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'UseSegmentation' , 'PVal' , ), 4011, (4011, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'SegmentationMethod' , 'PVal' , ), 4012, (4012, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'SegmentationMethod' , 'PVal' , ), 4012, (4012, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'SegmentationSplitValue' , 'PVal' , ), 4013, (4013, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'SegmentationSplitValue' , 'PVal' , ), 4013, (4013, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
]

ISheetMetalShoulder_vtables_dispatch_ = 1
ISheetMetalShoulder_vtables_ = [
	(( 'Sketch' , 'PVal' , ), 1, (1, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Sketch' , 'PVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ShoulderType' , 'PVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'ShoulderType' , 'PVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'CutingType' , 'PVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'CutingType' , 'PVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'PVal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'PVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Width1' , 'PVal' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Width1' , 'PVal' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Width2' , 'PVal' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Width2' , 'PVal' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Radius1' , 'PVal' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Radius1' , 'PVal' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Round' , 'PVal' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Round' , 'PVal' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Radius2' , 'PVal' , ), 11, (11, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Radius2' , 'PVal' , ), 11, (11, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'GapValue' , 'PVal' , ), 12, (12, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'GapValue' , 'PVal' , ), 12, (12, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
]

ISheetMetalShoulders_vtables_dispatch_ = 1
ISheetMetalShoulders_vtables_ = [
	(( 'SheetMetalShoulder' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{75024BD8-6D1C-4963-9733-326EFB3CB28D}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{75024BD8-6D1C-4963-9733-326EFB3CB28D}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ISheetMetalSketchBend_vtables_dispatch_ = 1
ISheetMetalSketchBend_vtables_ = [
	(( 'Straighten' , 'PVal' , ), 1, (1, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Straighten' , 'PVal' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Sketch' , 'PVal' , ), 2, (2, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Sketch' , 'PVal' , ), 2, (2, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Edges' , 'PVal' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Edges' , 'PVal' , ), 3, (3, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'PVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'PVal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'InternalRadius' , 'PVal' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'InternalRadius' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'PVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Width1' , 'PVal' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Width1' , 'PVal' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Width2' , 'PVal' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Width2' , 'PVal' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'UnfoldType' , 'PVal' , ), 10, (10, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'UnfoldType' , 'PVal' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'BendCoefficient' , 'PVal' , ), 11, (11, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'BendCoefficient' , 'PVal' , ), 11, (11, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'BendValue' , 'PVal' , ), 12, (12, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'BendValue' , 'PVal' , ), 12, (12, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'BendReduction' , 'PVal' , ), 13, (13, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'BendReduction' , 'PVal' , ), 13, (13, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'BendTablePath' , 'PVal' , ), 14, (14, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'WithoutAngleRelease' , 'PVal' , ), 15, (15, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'WithoutAngleRelease' , 'PVal' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'WithoutBendRelease' , 'PVal' , ), 16, (16, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'WithoutBendRelease' , 'PVal' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'DismissalWithWidth' , 'PVal' , ), 17, (17, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'DismissalWithWidth' , 'PVal' , ), 17, (17, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'BendRelease' , 'PVal' , ), 18, (18, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'BendRelease' , 'PVal' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'DismissalWidth' , 'PVal' , ), 19, (19, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'DismissalWidth' , 'PVal' , ), 19, (19, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'DismissalDepth' , 'PVal' , ), 20, (20, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'DismissalDepth' , 'PVal' , ), 20, (20, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'DismissalAngleType' , 'PVal' , ), 21, (21, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'DismissalAngleType' , 'PVal' , ), 21, (21, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'ClosingEnable' , 'Type' , 'PVal' , ), 22, (22, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'ClosingEnable' , 'Type' , 'PVal' , ), 22, (22, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'ClosingClosedType' , 'Type' , 'PVal' , ), 23, (23, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'ClosingClosedType' , 'Type' , 'PVal' , ), 23, (23, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'ClosingCorneringType' , 'Type' , 'PVal' , ), 24, (24, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'ClosingCorneringType' , 'Type' , 'PVal' , ), 24, (24, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'ClosingAngle' , 'Type' , 'PVal' , ), 25, (25, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'ClosingAngle' , 'Type' , 'PVal' , ), 25, (25, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'ClosingGapValue' , 'Type' , 'PVal' , ), 26, (26, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'ClosingGapValue' , 'Type' , 'PVal' , ), 26, (26, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'ClosingHolePlacement' , 'PVal' , ), 27, (27, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'ClosingHolePlacement' , 'PVal' , ), 27, (27, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'ClosingHoleDiameter' , 'PVal' , ), 28, (28, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'ClosingHoleDiameter' , 'PVal' , ), 28, (28, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
	(( 'ClosingHoleOffset' , 'PVal' , ), 29, (29, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'ClosingHoleOffset' , 'PVal' , ), 29, (29, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
]

ISheetMetalSketchBends_vtables_dispatch_ = 1
ISheetMetalSketchBends_vtables_ = [
	(( 'SheetMetalSketchBend' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{4E4F3CB3-5596-445B-9A18-0AF559E545C5}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{4E4F3CB3-5596-445B-9A18-0AF559E545C5}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ISheetMetalUndercut_vtables_dispatch_ = 1
ISheetMetalUndercut_vtables_ = [
	(( 'DistanceType' , 'PVal' , ), 4001, (4001, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'DistanceType' , 'PVal' , ), 4001, (4001, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Distance' , 'PVal' , ), 4002, (4002, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Distance' , 'PVal' , ), 4002, (4002, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'WithAddMaterial' , 'PVal' , ), 4003, (4003, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'WithAddMaterial' , 'PVal' , ), 4003, (4003, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IShell_vtables_dispatch_ = 1
IShell_vtables_ = [
	(( 'DeletedFaces' , 'PVal' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'DeletedFaces' , 'PVal' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ThinType' , 'PVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'ThinType' , 'PVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Thickness' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Thickness' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IShellSurface_vtables_dispatch_ = 1
IShellSurface_vtables_ = [
	(( 'ClosedShell' , 'PVal' , ), 301, (301, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'ClosedShell' , 'PVal' , ), 301, (301, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
]

IShells_vtables_dispatch_ = 1
IShells_vtables_ = [
	(( 'Shell' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{05A5C975-D995-4069-90A3-A81391AE8D62}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{05A5C975-D995-4069-90A3-A81391AE8D62}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ISketch_vtables_dispatch_ = 1
ISketch_vtables_ = [
	(( 'Plane' , 'Result' , ), 1, (1, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Plane' , 'Result' , ), 1, (1, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'GetLocation' , 'X' , 'Y' , 'PVal' , ), 3, (3, (), [ 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'SetLocation' , 'X' , 'Y' , 'PVal' , ), 4, (4, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'GetLoftPoint' , 'X' , 'Y' , 'PVal' , ), 5, (5, (), [ 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'SetLoftPoint' , 'X' , 'Y' , 'PVal' , ), 6, (6, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'BeginEdit' , 'SketchDoc' , ), 7, (7, (), [ (16393, 10, None, "IID('{E19CE626-DF9C-48C4-A83D-3E3BC7F0DACA}')") , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'EndEdit' , 'Res' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'BeginEditEx' , 'ReadOnly' , 'SketchDoc' , ), 9, (9, (), [ (11, 1, None, None) , 
			 (16393, 10, None, "IID('{E19CE626-DF9C-48C4-A83D-3E3BC7F0DACA}')") , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'AddSketch' , 'Sketch' , 'Plane' , 'PVal' , ), 10, (10, (), [ 
			 (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'WriteToFragment' , 'FileName' , 'PVal' , ), 11, (11, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'DeleteWrongProjection' , 'PVal' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'LeftHandedCS' , 'PVal' , ), 13, (13, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'LeftHandedCS' , 'PVal' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Fixed' , 'PVal' , ), 14, (14, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Fixed' , 'PVal' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'CoordinateSystem' , 'PVal' , ), 15, (15, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'CoordinateSystem' , 'PVal' , ), 15, (15, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'AssociationObject' , 'PVal' , ), 16, (16, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'AssociationObject' , 'PVal' , ), 16, (16, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'DirectingObject' , 'Axis' , 'PVal' , ), 17, (17, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'DirectingObject' , 'Axis' , 'PVal' , ), 17, (17, (), [ (3, 1, None, None) , 
			 (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'Vector3D' , 'Axis' , 'PVal' , ), 18, (18, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{D51A4DCF-627D-44F5-89BA-46EF2449A212}')") , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'RotateAxis' , 'Axis' , 'Result' , ), 19, (19, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
]

ISketchs_vtables_dispatch_ = 1
ISketchs_vtables_ = [
	(( 'Sketch' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E6BBF50D-8401-4FB3-A6B6-153D3F447255}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{E6BBF50D-8401-4FB3-A6B6-153D3F447255}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ISourcePart7Params_vtables_dispatch_ = 1
ISourcePart7Params_vtables_ = [
	(( 'SourceName' , 'PVal' , ), 12001, (12001, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'SourceName' , 'PVal' , ), 12001, (12001, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'SourceMarking' , 'PVal' , ), 12002, (12002, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'SourceMarking' , 'PVal' , ), 12002, (12002, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'DocumentAuthor' , 'PVal' , ), 12003, (12003, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'DocumentAuthor' , 'PVal' , ), 12003, (12003, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'DocumentComment' , 'PVal' , ), 12004, (12004, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'DocumentComment' , 'PVal' , ), 12004, (12004, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

ISpecRough_vtables_dispatch_ = 1
ISpecRough_vtables_ = [
	(( 'X' , 'Result' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'X' , 'Result' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'Result' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'Result' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'AutoPlacement' , 'PVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'AutoPlacement' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'SignType' , 'Result' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'SignType' , 'Result' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Text' , 'PVal' , ), 5, (5, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Text' , 'PVal' , ), 5, (5, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Distance' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Distance' , 'PVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'AddSign' , 'PRes' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'AddSign' , 'PRes' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Update' , 'PRes' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'PRes' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'IsCreated' , 'Result' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Crossed' , 'PRes' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
]

ISpecRough3D_vtables_dispatch_ = 1
ISpecRough3D_vtables_ = [
	(( 'SignType' , 'Result' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'SignType' , 'Result' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Text' , 'PVal' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Text' , 'PVal' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'AddSign' , 'PRes' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'AddSign' , 'PRes' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'PRes' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'IsCreated' , 'Result' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Placement' , 'Result' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Placement' , 'Result' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
]

ISpecificationBaseObject_vtables_dispatch_ = 1
ISpecificationBaseObject_vtables_ = [
	(( 'Draw' , 'PVal' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Draw' , 'PVal' , ), 1, (1, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'DrawPosition' , 'PVal' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'DrawPosition' , 'PVal' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Performance' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Performance' , 'PVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'CommentObjects' , 'Result' , ), 4, (4, (), [ (16393, 10, None, "IID('{B8BD0FC7-AB2B-4E7A-8EC2-82060D7D29A7}')") , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'Documents' , 'PVal' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'AttributeNumber' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'AttributeNumber' , 'PVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'SummaryCount' , 'ColumnTypeNumber' , 'BlockNumber' , 'PVal' , ), 7, (7, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'SetMaterial' , 'Material' , 'Density' , 'PVal' , ), 8, (8, (), [ 
			 (8, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'Geometry' , 'PVal' , ), 9, (9, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'Geometry' , 'PVal' , ), 9, (9, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'IncludeGeometry' , 'PVal' , 'FillText' , 'Result' , ), 10, (10, (), [ 
			 (12, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'ClearGeometry' , 'ClearGeometry' , 'ClearLeaders' , 'Result' , ), 11, (11, (), [ 
			 (11, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'EditSourceObject' , 'PVal' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'EditSourceObject' , 'PVal' , ), 12, (12, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'SyncronizeWithProperties' , 'PVal' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'SyncronizeWithProperties' , 'PVal' , ), 13, (13, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'SetSection' , 'Val' , 'Result' , ), 14, (14, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'SpcUsed' , 'SpcUsed' , 'PVal' , ), 15, (15, (), [ (3, 1, None, None) , 
			 (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'SpcUsed' , 'SpcUsed' , 'PVal' , ), 15, (15, (), [ (3, 1, None, None) , 
			 (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'SpcUsed' , 'SpcUsed' , 'PVal' , ), 15, (15, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'UniqueMetaObjectKey' , 'PVal' , ), 16, (16, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
]

ISpecificationBaseObjects_vtables_dispatch_ = 1
ISpecificationBaseObjects_vtables_ = [
	(( 'Item' , 'Index' , 'Result' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{49994ED8-96BA-4D9D-B642-5F0F1E3FED16}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'SectionNumb' , 'AttrNumb' , 'Result' , ), 1, (1, (), [ 
			 (3, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{49994ED8-96BA-4D9D-B642-5F0F1E3FED16}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'GetSpecificationObjectsForGeom' , 'PGeom' , 'Equal' , 'SectionNumb' , 'AttrNumb' , 
			 'PVal' , ), 2, (2, (), [ (12, 1, None, None) , (11, 1, None, None) , (3, 1, None, None) , 
			 (5, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'CopySpecificationObject' , 'SpcObj' , 'Geometry' , 'Result' , ), 3, (3, (), [ 
			 (9, 1, None, "IID('{49994ED8-96BA-4D9D-B642-5F0F1E3FED16}')") , (12, 1, None, None) , (16393, 10, None, "IID('{49994ED8-96BA-4D9D-B642-5F0F1E3FED16}')") , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

ISpecificationColumn_vtables_dispatch_ = 1
ISpecificationColumn_vtables_ = [
	(( 'ColumnType' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ColumnTypeNumber' , 'PVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'BlockNumber' , 'PVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Number' , 'PVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'ValueType' , 'PVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'ColumnItems' , 'PVal' , ), 6, (6, (), [ (16393, 10, None, "IID('{F4BAB79A-8A35-44D5-BE44-C566E444F342}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'AttributeNumber' , 'PVal' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'AttributeNumber' , 'PVal' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Text' , 'PVal' , ), 8, (8, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'ColumnName' , 'PVal' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'CountUniteCells' , 'PVal' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'CountUniteCells' , 'PVal' , ), 10, (10, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
]

ISpecificationColumnItem_vtables_dispatch_ = 1
ISpecificationColumnItem_vtables_ = [
	(( 'ValueType' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Key' , 'PVal' , ), 2, (2, (), [ (16386, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Key' , 'PVal' , ), 2, (2, (), [ (2, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'PVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Value' , 'PVal' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Value' , 'PVal' , ), 4, (4, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

ISpecificationColumnItems_vtables_dispatch_ = 1
ISpecificationColumnItems_vtables_ = [
	(( 'Item' , 'Index' , 'Result' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{2BABDD01-EACA-4137-9749-25B8C5E230EE}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

ISpecificationColumnStyle_vtables_dispatch_ = 1
ISpecificationColumnStyle_vtables_ = [
	(( 'Name' , 'PVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ColumnType' , 'PVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Number' , 'PVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Edit' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'CalculateSum' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'MultiplyToCount' , 'PVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'UseForSectionTitle' , 'PVal' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'TextDown' , 'PVal' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'StampLinkID' , 'PVal' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'ValueType' , 'PVal' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'AttributeLibraryName' , 'PVal' , ), 11, (11, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'AttributeKey1' , 'PVal' , ), 12, (12, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'AttributeKey2' , 'PVal' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'AttributeKey3' , 'PVal' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'AttributeKey4' , 'PVal' , ), 15, (15, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'MinValue' , 'PVal' , ), 16, (16, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'MaxValue' , 'PVal' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'UseIn3D' , 'PVal' , ), 18, (18, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
]

ISpecificationColumnStyles_vtables_dispatch_ = 1
ISpecificationColumnStyles_vtables_ = [
	(( 'Item' , 'Index' , 'Result' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{16839CAA-3AFB-49A4-A19A-C61963967649}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

ISpecificationColumns_vtables_dispatch_ = 1
ISpecificationColumns_vtables_ = [
	(( 'Item' , 'Index' , 'Result' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{3ECFB777-2645-42B5-A6ED-111688433B26}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Column' , 'ColumnType' , 'ColumnNumber' , 'BlockNumber' , 'Result' , 
			 ), 1, (1, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{3ECFB777-2645-42B5-A6ED-111688433B26}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

ISpecificationCommentObject_vtables_dispatch_ = 1
ISpecificationCommentObject_vtables_ = [
	(( 'BaseObject' , 'Result' , ), 1, (1, (), [ (16393, 10, None, "IID('{49994ED8-96BA-4D9D-B642-5F0F1E3FED16}')") , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'BlockNumber' , 'PVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'BlockNumber' , 'PVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'EditSourceObject' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'EditSourceObject' , 'PVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'SetSection' , 'Val' , 'Result' , ), 4, (4, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
]

ISpecificationCommentObjects_vtables_dispatch_ = 1
ISpecificationCommentObjects_vtables_ = [
	(( 'Item' , 'Index' , 'Result' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{3B6B80CA-2145-4184-B786-0C571DF5ACD7}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'SectionNamb' , 'Result' , ), 1, (1, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{3B6B80CA-2145-4184-B786-0C571DF5ACD7}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Attach' , 'PVal' , 'Result' , ), 2, (2, (), [ (9, 1, None, "IID('{3B6B80CA-2145-4184-B786-0C571DF5ACD7}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Detach' , 'PVal' , 'Result' , ), 3, (3, (), [ (9, 1, None, "IID('{3B6B80CA-2145-4184-B786-0C571DF5ACD7}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'CopySpecificationObject' , 'SpcObj' , 'Result' , ), 4, (4, (), [ (9, 1, None, "IID('{3B6B80CA-2145-4184-B786-0C571DF5ACD7}')") , 
			 (16393, 10, None, "IID('{3B6B80CA-2145-4184-B786-0C571DF5ACD7}')") , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

ISpecificationDescription_vtables_dispatch_ = 1
ISpecificationDescription_vtables_ = [
	(( 'LayoutName' , 'PVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'LayoutName' , 'PVal' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'StyleID' , 'PVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'StyleID' , 'PVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'SpecificationDocumentName' , 'PVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'SpecificationDocumentName' , 'PVal' , ), 3, (3, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Active' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Active' , 'PVal' , ), 4, (4, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Update' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'PVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'SpecificationStyle' , 'Result' , ), 7, (7, (), [ (16393, 10, None, "IID('{F237D2B3-DFEE-4702-B71F-E5F6923F03E6}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'SpecificationTuning' , 'Result' , ), 8, (8, (), [ (16393, 10, None, "IID('{BB719D42-E44C-445B-969A-0E2F63E97FC8}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Objects' , 'Result' , ), 9, (9, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'BaseObjects' , 'Result' , ), 10, (10, (), [ (16393, 10, None, "IID('{B2B97D19-3A0B-4C9F-A6AC-DEFFAFE0D1C2}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'CommentObjects' , 'Result' , ), 11, (11, (), [ (16393, 10, None, "IID('{B8BD0FC7-AB2B-4E7A-8EC2-82060D7D29A7}')") , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'ShowOnSheet' , 'PVal' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'ShowOnSheet' , 'PVal' , ), 12, (12, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'CurrentObject' , 'Result' , ), 13, (13, (), [ (16393, 10, None, "IID('{72EB4E8E-7952-4B36-852B-4816B7B5AFEE}')") , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'CurrentObject' , 'Result' , ), 13, (13, (), [ (9, 1, None, "IID('{72EB4E8E-7952-4B36-852B-4816B7B5AFEE}')") , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ShowAllObjects' , 'PVal' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ShowAllObjects' , 'PVal' , ), 14, (14, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'PerformanceName' , 'PerformanceIndex' , 'BlockIndex' , 'PVal' , ), 15, (15, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'PerformanceName' , 'PerformanceIndex' , 'BlockIndex' , 'PVal' , ), 15, (15, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'DelegateMode' , 'PVal' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'DelegateMode' , 'PVal' , ), 16, (16, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'NeedRebuild' , 'PVal' , ), 17, (17, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'NeedRebuild' , 'PVal' , ), 17, (17, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'CompareStyleWithLibStyle' , 'PVal' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'GetPerformanceParam' , 'DisplayPerformanceIndex' , 'PerformanceIndex' , 'BlockIndex' , 'PerformanceName' , 
			 ), 19, (19, (), [ (3, 1, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'ShowExcludedObjects' , 'PVal' , ), 20, (20, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'ShowExcludedObjects' , 'PVal' , ), 20, (20, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'PerformanceCount' , 'PVal' , ), 21, (21, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'PerformanceCount' , 'PVal' , ), 21, (21, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'PerformanceCountInBlock' , 'PVal' , ), 22, (22, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
]

ISpecificationDescriptions_vtables_dispatch_ = 1
ISpecificationDescriptions_vtables_ = [
	(( 'Item' , 'Index' , 'Result' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{9678959E-166B-45F3-BDE8-88BBF4645F5C}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'LayoutName' , 'StyleID' , 'SpcName' , 'Result' , 
			 ), 1, (1, (), [ (8, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{9678959E-166B-45F3-BDE8-88BBF4645F5C}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Description' , 'LayoutName' , 'StyleID' , 'Result' , ), 2, (2, (), [ 
			 (8, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{9678959E-166B-45F3-BDE8-88BBF4645F5C}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Active' , 'Result' , ), 3, (3, (), [ (16393, 10, None, "IID('{9678959E-166B-45F3-BDE8-88BBF4645F5C}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'ActiveFromLibStyle' , 'Result' , ), 4, (4, (), [ (16393, 10, None, "IID('{9678959E-166B-45F3-BDE8-88BBF4645F5C}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

ISpecificationDocument_vtables_dispatch_ = 1
ISpecificationDocument_vtables_ = [
	(( 'AttachedDocuments' , 'PVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{81FAB1C5-F566-4D06-8D3D-17FF01D3566F}')") , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'RebuildDocument' , 'Result' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Crossed' , 'PRes' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
]

ISpecificationObject_vtables_dispatch_ = 1
ISpecificationObject_vtables_ = [
	(( 'ObjectType' , 'PVal' , ), 100, (100, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Section' , 'PVal' , ), 101, (101, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Subsection' , 'PVal' , ), 102, (102, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Subsection' , 'PVal' , ), 102, (102, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'AdditionalSection' , 'PVal' , ), 103, (103, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'AdditionalSection' , 'PVal' , ), 103, (103, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'AdditionalBlock' , 'PVal' , ), 104, (104, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'AdditionalBlock' , 'PVal' , ), 104, (104, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'NestedSection' , 'PVal' , ), 105, (105, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'NestedSection' , 'PVal' , ), 105, (105, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'NestedBlock' , 'PVal' , ), 106, (106, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'NestedBlock' , 'PVal' , ), 106, (106, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'BlockNumberByIndex' , 'Val' , 'PVal' , ), 107, (107, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'UniqueNumber' , 'PVal' , ), 108, (108, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'State' , 'PVal' , ), 109, (109, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'FirstOnSheet' , 'PVal' , ), 110, (110, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'FirstOnSheet' , 'PVal' , ), 110, (110, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'IncrementPosition' , 'PVal' , ), 111, (111, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'IncrementPosition' , 'PVal' , ), 111, (111, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Columns' , 'PVal' , ), 112, (112, (), [ (16393, 10, None, "IID('{9F44BF03-DE25-4DDE-ADA0-92384199C100}')") , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'AdditionalColumns' , 'PVal' , ), 113, (113, (), [ (16393, 10, None, "IID('{9F44BF03-DE25-4DDE-ADA0-92384199C100}')") , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'AttachedDocuments' , 'PVal' , ), 114, (114, (), [ (16393, 10, None, "IID('{81FAB1C5-F566-4D06-8D3D-17FF01D3566F}')") , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Update' , 'PRes' , ), 115, (115, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'PRes' , ), 116, (116, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Edit' , 'PRes' , ), 117, (117, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
]

ISpecificationSectionStyle_vtables_dispatch_ = 1
ISpecificationSectionStyle_vtables_ = [
	(( 'Name' , 'PVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Number' , 'PVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'SortColumnType' , 'PVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'SortColumnNumber' , 'PVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'FillDataFromStamp' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'SortType' , 'PVal' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Columns' , 'PVal' , ), 7, (7, (), [ (16393, 10, None, "IID('{41529A95-51F0-44B0-9D55-5753BCEB23BC}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'AdditionalColumns' , 'PVal' , ), 8, (8, (), [ (16393, 10, None, "IID('{41529A95-51F0-44B0-9D55-5753BCEB23BC}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'AdditionalBlocks' , 'PVal' , ), 9, (9, (), [ (16393, 10, None, "IID('{90E2FBEC-A56F-423C-B89F-479673EDD895}')") , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'SortLevelsCount' , 'PVal' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'SortColumnTypeEx' , 'Index' , 'PVal' , ), 11, (11, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'SortColumnNumberEx' , 'Index' , 'PVal' , ), 12, (12, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'SortTypeEx' , 'Index' , 'PVal' , ), 13, (13, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

ISpecificationSectionStyles_vtables_dispatch_ = 1
ISpecificationSectionStyles_vtables_ = [
	(( 'Item' , 'Index' , 'Result' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{4B61FC7F-4826-4B58-8CCB-7D459AD0BE7B}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

ISpecificationStyle_vtables_dispatch_ = 1
ISpecificationStyle_vtables_ = [
	(( 'LayoutName1' , 'PVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'StyleID1' , 'PVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'LayoutName2' , 'PVal' , ), 3, (3, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'StyleID2' , 'PVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Variant' , 'PVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'SectionOn' , 'PVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'SpecificationTuning' , 'PVal' , ), 7, (7, (), [ (16393, 10, None, "IID('{BB719D42-E44C-445B-969A-0E2F63E97FC8}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Format' , 'PVal' , ), 8, (8, (), [ (16393, 10, None, "IID('{B9CDE694-4C33-4375-A6F6-AE94DC759510}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Columns' , 'PVal' , ), 9, (9, (), [ (16393, 10, None, "IID('{41529A95-51F0-44B0-9D55-5753BCEB23BC}')") , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'AdditionalColumns' , 'PVal' , ), 10, (10, (), [ (16393, 10, None, "IID('{41529A95-51F0-44B0-9D55-5753BCEB23BC}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Sections' , 'PVal' , ), 11, (11, (), [ (16393, 10, None, "IID('{24AE8484-F4F4-4059-AFC7-9492A64C88E8}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'AdditionalBlocks' , 'PVal' , ), 12, (12, (), [ (16393, 10, None, "IID('{90E2FBEC-A56F-423C-B89F-479673EDD895}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'SortSectionDown' , 'PVal' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'PerformanceCountInBlock' , 'PVal' , ), 14, (14, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
]

ISpecificationSubsection_vtables_dispatch_ = 1
ISpecificationSubsection_vtables_ = [
	(( 'Name' , 'PVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Number' , 'PVal' , ), 2, (2, (), [ (16386, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Change' , 'Name' , 'Number' , 'PVal' , ), 3, (3, (), [ 
			 (8, 1, None, None) , (2, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

ISpecificationSubsections_vtables_dispatch_ = 1
ISpecificationSubsections_vtables_ = [
	(( 'Item' , 'Index' , 'Result' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{7F0E5F63-815C-46E5-B99E-C24244566C00}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Name' , 'Number' , 'Result' , ), 1, (1, (), [ 
			 (8, 1, None, None) , (2, 1, None, None) , (16393, 10, None, "IID('{7F0E5F63-815C-46E5-B99E-C24244566C00}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

ISpecificationTuning_vtables_dispatch_ = 1
ISpecificationTuning_vtables_ = [
	(( 'LinkType' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'LinkType' , 'PVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'CalculateZone' , 'PVal' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'CalculateZone' , 'PVal' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'CalculatePosition' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'CalculatePosition' , 'PVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'ShowSectionName' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'ShowSectionName' , 'PVal' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'DeleteGeometry' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'DeleteGeometry' , 'PVal' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'DisableEmptyString' , 'PVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'DisableEmptyString' , 'PVal' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'DisableEmptyBlockString' , 'PVal' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'DisableEmptyBlockString' , 'PVal' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'InsertNull' , 'PVal' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'InsertNull' , 'PVal' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'InsertDash' , 'PVal' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'InsertDash' , 'PVal' , ), 9, (9, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'ShowInfoByObjects' , 'PVal' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ShowInfoByObjects' , 'PVal' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'SupportPerformance' , 'PVal' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'SupportPerformance' , 'PVal' , ), 11, (11, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'ShowPerformanceFull' , 'PVal' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ShowPerformanceFull' , 'PVal' , ), 12, (12, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'BlockOnNewPage' , 'PVal' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'BlockOnNewPage' , 'PVal' , ), 13, (13, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'PositionUp' , 'PVal' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'PositionUp' , 'PVal' , ), 14, (14, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'DrawBottomUp' , 'PVal' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'DrawBottomUp' , 'PVal' , ), 15, (15, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'UserTextStyle' , 'PVal' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'UserTextStyle' , 'PVal' , ), 16, (16, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'PerformanceCount' , 'PVal' , ), 17, (17, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'PerformanceCount' , 'PVal' , ), 17, (17, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'BlockCount' , 'PVal' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'InitialPosition' , 'PVal' , ), 19, (19, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'InitialPosition' , 'PVal' , ), 19, (19, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'PredefinedTextFileName' , 'PVal' , ), 20, (20, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'PredefinedTextFileName' , 'PVal' , ), 20, (20, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'SectionTextStyleFirst' , 'PVal' , ), 21, (21, (), [ (16393, 10, None, "IID('{7EA65CA0-420D-4E1D-8C19-998495C4DA2F}')") , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'SectionTextStyleNext' , 'PVal' , ), 22, (22, (), [ (16393, 10, None, "IID('{7EA65CA0-420D-4E1D-8C19-998495C4DA2F}')") , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'ObjectTextStyle' , 'PVal' , ), 23, (23, (), [ (16393, 10, None, "IID('{7EA65CA0-420D-4E1D-8C19-998495C4DA2F}')") , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'Sections' , 'PVal' , ), 24, (24, (), [ (16393, 10, None, "IID('{01B1BF6F-B9E3-4E94-99A0-81394FB99B16}')") , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'UseAdditionalBlocks' , 'PVal' , ), 25, (25, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'UseAdditionalBlocks' , 'PVal' , ), 25, (25, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'AdditionalBlocks' , 'PVal' , ), 26, (26, (), [ (16393, 10, None, "IID('{8910CC92-AC76-4837-AB7A-5FD3C7B74728}')") , ], 1 , 2 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'ShowAdditionalBlockName' , 'PVal' , ), 27, (27, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'ShowAdditionalBlockName' , 'PVal' , ), 27, (27, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'ShowNestingBlockName' , 'PVal' , ), 28, (28, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'ShowNestingBlockName' , 'PVal' , ), 28, (28, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'ShowPerformanceBlockName' , 'PVal' , ), 29, (29, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'ShowPerformanceBlockName' , 'PVal' , ), 29, (29, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'PerformanceBlockTextStyleFirst' , 'PVal' , ), 30, (30, (), [ (16393, 10, None, "IID('{7EA65CA0-420D-4E1D-8C19-998495C4DA2F}')") , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'PerformanceBlockTextStyleNext' , 'PVal' , ), 31, (31, (), [ (16393, 10, None, "IID('{7EA65CA0-420D-4E1D-8C19-998495C4DA2F}')") , ], 1 , 2 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'AdditionalBlockTextStyleFirst' , 'PVal' , ), 32, (32, (), [ (16393, 10, None, "IID('{7EA65CA0-420D-4E1D-8C19-998495C4DA2F}')") , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'AdditionalBlockTextStyleNext' , 'PVal' , ), 33, (33, (), [ (16393, 10, None, "IID('{7EA65CA0-420D-4E1D-8C19-998495C4DA2F}')") , ], 1 , 2 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'NestingBlockTextStyleFirst' , 'PVal' , ), 34, (34, (), [ (16393, 10, None, "IID('{7EA65CA0-420D-4E1D-8C19-998495C4DA2F}')") , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'NestingBlockTextStyleNext' , 'PVal' , ), 35, (35, (), [ (16393, 10, None, "IID('{7EA65CA0-420D-4E1D-8C19-998495C4DA2F}')") , ], 1 , 2 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'DisableNestingBlockEmptyStrings' , 'PVal' , ), 36, (36, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
	(( 'DisableNestingBlockEmptyStrings' , 'PVal' , ), 36, (36, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 560 , (3, 0, None, None) , 0 , )),
	(( 'DisableAdditionalBlockEmptyStrings' , 'PVal' , ), 37, (37, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 568 , (3, 0, None, None) , 0 , )),
	(( 'DisableAdditionalBlockEmptyStrings' , 'PVal' , ), 37, (37, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 576 , (3, 0, None, None) , 0 , )),
	(( 'Update' , 'PVal' , ), 38, (38, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 584 , (3, 0, None, None) , 0 , )),
	(( 'DeleteSpcObjectOnDeleteGeometry' , 'PVal' , ), 39, (39, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 592 , (3, 0, None, None) , 0 , )),
	(( 'DeleteSpcObjectOnDeleteGeometry' , 'PVal' , ), 39, (39, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 600 , (3, 0, None, None) , 0 , )),
	(( 'CopySpcObjectOnCopyGeometry' , 'PVal' , ), 40, (40, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 608 , (3, 0, None, None) , 0 , )),
	(( 'CopySpcObjectOnCopyGeometry' , 'PVal' , ), 40, (40, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 616 , (3, 0, None, None) , 0 , )),
	(( 'ShowEmbodimentWithoutVariables' , 'PVal' , ), 41, (41, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 624 , (3, 0, None, None) , 0 , )),
	(( 'ShowEmbodimentWithoutVariables' , 'PVal' , ), 41, (41, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 632 , (3, 0, None, None) , 0 , )),
	(( 'PerformanceCountInBlock' , 'PVal' , ), 42, (42, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 640 , (3, 0, None, None) , 0 , )),
	(( 'ShowListCountIsSameFormat' , 'PVal' , ), 43, (43, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 648 , (3, 0, None, None) , 0 , )),
	(( 'ShowListCountIsSameFormat' , 'PVal' , ), 43, (43, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 656 , (3, 0, None, None) , 0 , )),
]

ISpecificationTuningSection_vtables_dispatch_ = 1
ISpecificationTuningSection_vtables_ = [
	(( 'Number' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'SubsectionOn' , 'PVal' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'SubsectionOn' , 'PVal' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'AttachGeometry' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'AttachGeometry' , 'PVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'PutPosition' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'PutPosition' , 'PVal' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'SortObjects' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'SortObjects' , 'PVal' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'FirstOnSheet' , 'PVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'FirstOnSheet' , 'PVal' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ReserveStringCount' , 'PVal' , ), 7, (7, (), [ (16386, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'ReserveStringCount' , 'PVal' , ), 7, (7, (), [ (2, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Subsections' , 'PVal' , ), 8, (8, (), [ (16393, 10, None, "IID('{56532CB4-BD3F-442C-AFA4-0E6BEB677E61}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'UseAdditionalBlocks' , 'PVal' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'UseAdditionalBlocks' , 'PVal' , ), 9, (9, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'AdditionalBlocks' , 'PVal' , ), 10, (10, (), [ (16393, 10, None, "IID('{8910CC92-AC76-4837-AB7A-5FD3C7B74728}')") , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'ShowDocumentCode' , 'PVal' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'ShowDocumentCode' , 'PVal' , ), 11, (11, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'IndependentPosition' , 'PVal' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'IndependentPosition' , 'PVal' , ), 12, (12, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'MarkOn' , 'PVal' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'MarkOn' , 'PVal' , ), 13, (13, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Mark' , 'PVal' , ), 14, (14, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Mark' , 'PVal' , ), 14, (14, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
]

ISpecificationTuningSections_vtables_dispatch_ = 1
ISpecificationTuningSections_vtables_ = [
	(( 'Item' , 'Index' , 'Result' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{E68AA413-CC35-450D-BF35-0F294F59B08C}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

ISpiral3D_vtables_dispatch_ = 1
ISpiral3D_vtables_ = [
	(( 'TurnsCount' , 'PVal' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'TurnsCount' , 'PVal' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Step' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Step' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'TurnDirection' , 'PVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'TurnDirection' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'BasePlane' , 'PVal' , ), 4, (4, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'BasePlane' , 'PVal' , ), 4, (4, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'GetBasePoint' , 'X' , 'Y' , 'PVal' , ), 5, (5, (), [ 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'SetBasePoint' , 'X' , 'Y' , 'PVal' , ), 6, (6, (), [ 
			 (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'Result' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'Result' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'BuildingDirection' , 'Result' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'BuildingDirection' , 'Result' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'HeightType' , 'PVal' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'HeightType' , 'PVal' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'PVal' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'PVal' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'HeightBaseObject' , 'PVal' , ), 11, (11, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'HeightBaseObject' , 'PVal' , ), 11, (11, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'HeightCorrection' , 'PVal' , ), 12, (12, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'HeightCorrection' , 'PVal' , ), 12, (12, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'TurningAngle' , 'PVal' , ), 13, (13, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'TurningAngle' , 'PVal' , ), 13, (13, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'Sketch' , 'PVal' , ), 14, (14, (), [ (16393, 10, None, "IID('{E6BBF50D-8401-4FB3-A6B6-153D3F447255}')") , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
]

ISpirals3D_vtables_dispatch_ = 1
ISpirals3D_vtables_ = [
	(( 'Spiral3D' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{8C428C5D-37EF-43A3-8815-410F177D3577}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Type' , 'Result' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{8C428C5D-37EF-43A3-8815-410F177D3577}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ISpline3D_vtables_dispatch_ = 1
ISpline3D_vtables_ = [
	(( 'Closed' , 'Result' , ), 1, (1, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Closed' , 'Result' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'SplineOnPoles' , 'Result' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'SplineOnPoles' , 'Result' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'SplineOrder' , 'Result' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'SplineOrder' , 'Result' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'VertexCount' , 'Result' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'VertexParams' , 'Index' , 'Result' , ), 5, (5, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{2AD2E4B4-B870-437A-8D57-5807729FCB05}')") , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'AddVertex' , 'Index' , 'Result' , ), 6, (6, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{2AD2E4B4-B870-437A-8D57-5807729FCB05}')") , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'DeleteVertex' , 'Index' , 'Result' , ), 7, (7, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Flush' , 'Result' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ReadFromFile' , 'FileName' , 'Result' , ), 9, (9, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'WriteToFile' , 'FileName' , 'Result' , ), 10, (10, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'VertexParamsArray' , 'Result' , ), 11, (11, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'GetVertexCoordinatesArray' , 'Coordinates' , 'Weights' , 'Result' , ), 12, (12, (), [ 
			 (16396, 2, None, None) , (16396, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Knots' , 'PVal' , ), 13, (13, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Knots' , 'PVal' , ), 13, (13, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'SplineTransitionType' , 'PointIndex' , 'PVal' , ), 14, (14, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'SplineTransitionType' , 'PointIndex' , 'PVal' , ), 14, (14, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'ConstraintObject' , 'PointIndex' , 'PVal' , ), 15, (15, (), [ (3, 1, None, None) , 
			 (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'ConstraintObject' , 'PointIndex' , 'PVal' , ), 15, (15, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'ConstraintLimitObject' , 'PointIndex' , 'PVal' , ), 16, (16, (), [ (3, 1, None, None) , 
			 (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'ConstraintLimitObject' , 'PointIndex' , 'PVal' , ), 16, (16, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'ConstraintType' , 'PointIndex' , 'PVal' , ), 17, (17, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'ConstraintType' , 'PointIndex' , 'PVal' , ), 17, (17, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'ConstraintReverse' , 'PointIndex' , 'PVal' , ), 18, (18, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'ConstraintReverse' , 'PointIndex' , 'PVal' , ), 18, (18, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'TangentVectorLenght' , 'PointIndex' , 'PVal' , ), 19, (19, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'TangentVectorLenght' , 'PointIndex' , 'PVal' , ), 19, (19, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'CurvatureRadius' , 'PointIndex' , 'PVal' , ), 20, (20, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'CurvatureRadius' , 'PointIndex' , 'PVal' , ), 20, (20, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'Curvature' , 'PointIndex' , 'PVal' , ), 21, (21, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'Curvature' , 'PointIndex' , 'PVal' , ), 21, (21, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'GetVector' , 'PointIndex' , 'VectorIndex' , 'X' , 'Y' , 
			 'Z' , 'Result' , ), 22, (22, (), [ (3, 1, None, None) , (3, 1, None, None) , 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'SetVector' , 'PointIndex' , 'VectorIndex' , 'X' , 'Y' , 
			 'Z' , 'Result' , ), 23, (23, (), [ (3, 1, None, None) , (3, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'InvertVector' , 'PointIndex' , 'VectorIndex' , 'Result' , ), 24, (24, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'VectorDirectionObject' , 'PointIndex' , 'VectorIndex' , 'PVal' , ), 25, (25, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'VectorDirectionObject' , 'PointIndex' , 'VectorIndex' , 'PVal' , ), 25, (25, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'VectorOrientation' , 'PointIndex' , 'VectorIndex' , 'PVal' , ), 26, (26, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'VectorOrientation' , 'PointIndex' , 'VectorIndex' , 'PVal' , ), 26, (26, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'DirectionVector' , 'PointIndex' , 'VectorIndex' , 'PVal' , ), 27, (27, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{D51A4DCF-627D-44F5-89BA-46EF2449A212}')") , ], 1 , 2 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'GetCenterPoint' , 'PointIndex' , 'X' , 'Y' , 'Z' , 
			 'Result' , ), 28, (28, (), [ (3, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
	(( 'SetCenterPoint' , 'PointIndex' , 'X' , 'Y' , 'Z' , 
			 'Result' , ), 29, (29, (), [ (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 496 , (3, 0, None, None) , 0 , )),
	(( 'CenterPointParams' , 'PointIndex' , 'Result' , ), 30, (30, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 2 , 4 , 0 , 504 , (3, 0, None, None) , 0 , )),
	(( 'CenterPointType' , 'PointIndex' , 'Result' , ), 31, (31, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 512 , (3, 0, None, None) , 0 , )),
	(( 'CenterPointType' , 'PointIndex' , 'Result' , ), 31, (31, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 520 , (3, 0, None, None) , 0 , )),
	(( 'CenterPointAssociationObject' , 'PointIndex' , 'PVal' , ), 32, (32, (), [ (3, 1, None, None) , 
			 (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 528 , (3, 0, None, None) , 0 , )),
	(( 'CenterPointAssociationObject' , 'PointIndex' , 'PVal' , ), 32, (32, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 536 , (3, 0, None, None) , 0 , )),
	(( 'DeleteCenterPointParams' , 'PointIndex' , 'Result' , ), 33, (33, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 544 , (3, 0, None, None) , 0 , )),
	(( 'ClearTangentParameters' , 'PVal' , ), 34, (34, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 552 , (3, 0, None, None) , 0 , )),
]

ISplineOnSurface_vtables_dispatch_ = 1
ISplineOnSurface_vtables_ = [
	(( 'Closed' , 'Result' , ), 1, (1, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Closed' , 'Result' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'SplineOnPoles' , 'Result' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'SplineOnPoles' , 'Result' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'SplineOrder' , 'Result' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'SplineOrder' , 'Result' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'SurfaceObject' , 'PVal' , ), 4, (4, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'SurfaceObject' , 'PVal' , ), 4, (4, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'VertexCount' , 'Result' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'GetVertex' , 'Index' , 'U' , 'V' , 'W' , 
			 'Result' , ), 6, (6, (), [ (3, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'SetVertex' , 'Index' , 'U' , 'V' , 'W' , 
			 'Result' , ), 7, (7, (), [ (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'AddVertex' , 'IndexAt' , 'U' , 'V' , 'W' , 
			 'AssociationObject' , 'Result' , ), 8, (8, (), [ (3, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'DeleteVertex' , 'Index' , 'Result' , ), 9, (9, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Clear' , 'Result' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'GetPoint' , 'Index' , 'X' , 'Y' , 'Z' , 
			 'W' , 'Result' , ), 11, (11, (), [ (3, 1, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'SetPoint' , 'Index' , 'X' , 'Y' , 'Z' , 
			 'W' , 'Result' , ), 12, (12, (), [ (3, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'AddPoint' , 'IndexAt' , 'X' , 'Y' , 'Z' , 
			 'W' , 'AssociationObject' , 'Result' , ), 13, (13, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (9, 0, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'GetVertexParams' , 'UV' , 'Points' , 'Weights' , 'Result' , 
			 ), 14, (14, (), [ (16396, 2, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'AssociationObject' , 'Index' , 'PVal' , ), 15, (15, (), [ (3, 1, None, None) , 
			 (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'AssociationObject' , 'Index' , 'PVal' , ), 15, (15, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'SplineTangent' , 'Index' , 'PVal' , ), 16, (16, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'SplineTangent' , 'Index' , 'PVal' , ), 16, (16, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'SetTangentVector' , 'Index' , 'X' , 'Y' , 'Z' , 
			 'PVal' , ), 17, (17, (), [ (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'GetTangentVector' , 'Index' , 'X' , 'Y' , 'Z' , 
			 'PVal' , ), 18, (18, (), [ (3, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'Invert' , 'Index' , 'PVal' , ), 19, (19, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'VectorLenght' , 'Index' , 'PVal' , ), 20, (20, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'VectorLenght' , 'Index' , 'PVal' , ), 20, (20, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'TangentCurve' , 'Index' , 'PVal' , ), 21, (21, (), [ (3, 1, None, None) , 
			 (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'TangentCurve' , 'Index' , 'PVal' , ), 21, (21, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'ClearTangentParameters' , 'PVal' , ), 22, (22, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'Reverse' , 'Index' , 'PVal' , ), 23, (23, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'Reverse' , 'Index' , 'PVal' , ), 23, (23, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
]

ISplines3D_vtables_dispatch_ = 1
ISplines3D_vtables_ = [
	(( 'Spline3D' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{4D0940A0-6A4A-4CE8-A08A-EA0A4AE91942}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{4D0940A0-6A4A-4CE8-A08A-EA0A4AE91942}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Convert' , 'Objects' , 'Result' , ), 3, (3, (), [ (12, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

ISplinesOnSurfaces_vtables_dispatch_ = 1
ISplinesOnSurfaces_vtables_ = [
	(( 'SplineOnSurface' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{BFF82605-C64B-460E-A6D3-3C22229A8325}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{BFF82605-C64B-460E-A6D3-3C22229A8325}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ISplitLine_vtables_dispatch_ = 1
ISplitLine_vtables_ = [
	(( 'Sketch' , 'Result' , ), 1, (1, (), [ (9, 1, None, "IID('{E6BBF50D-8401-4FB3-A6B6-153D3F447255}')") , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Sketch' , 'Result' , ), 1, (1, (), [ (16393, 10, None, "IID('{E6BBF50D-8401-4FB3-A6B6-153D3F447255}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Faces' , 'PVal' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Faces' , 'PVal' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'CutObjects' , 'Result' , ), 4, (4, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'CutObjects' , 'Result' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
]

ISplitLines_vtables_dispatch_ = 1
ISplitLines_vtables_ = [
	(( 'SplitLine' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{969B49D1-E660-4E94-9343-DE5B0F397B03}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{969B49D1-E660-4E94-9343-DE5B0F397B03}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ISpotfacingHoleParameters_vtables_dispatch_ = 1
ISpotfacingHoleParameters_vtables_ = [
	(( 'SpotfacingDiameter' , 'PVal' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'SpotfacingDiameter' , 'PVal' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'SpotfacingDepth' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'SpotfacingDepth' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IStamp_vtables_dispatch_ = 1
IStamp_vtables_ = [
	(( 'Text' , 'Id' , 'PVal' , ), 1, (1, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Update' , 'PRes' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Clear' , 'Id' , 'PRes' , ), 3, (3, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'GetNextColumnId' , 'Id' , 'PVal' , ), 4, (4, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Crossed' , 'PRes' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IStraightAxis_vtables_dispatch_ = 1
IStraightAxis_vtables_ = [
	(( 'X1' , 'PVal' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'X1' , 'PVal' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'Length' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'Length' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'Jut' , 'First' , 'PRes' , ), 7, (7, (), [ (11, 1, None, None) , 
			 (16393, 10, None, "IID('{5A22E024-F530-45DB-A3F2-CA0587BDA1B5}')") , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'MarkNodes' , 'PVal' , ), 8, (8, (), [ (16393, 10, None, "IID('{EB8ACD77-8008-4F89-A311-2F4712462F72}')") , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
]

IStyle_vtables_dispatch_ = 1
IStyle_vtables_ = [
	(( 'Name' , 'PVal' , ), 3001, (3001, (), [ (8, 49, "''", None) , ], 1 , 4 , 4 , 0 , 88 , (3, 32, None, None) , 0 , )),
	(( 'Name' , 'PVal' , ), 3001, (3001, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ApiStyleId' , 'PVal' , ), 3002, (3002, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'DisplayStyleId' , 'PVal' , ), 3003, (3003, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'DisplayStyleId' , 'PVal' , ), 3003, (3003, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'IsExternalStyle' , 'PVal' , ), 3004, (3004, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'LibraryPath' , 'PVal' , ), 3005, (3005, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'LibraryStyleId' , 'NewVal' , ), 3006, (3006, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Update' , 'Result' , ), 3007, (3007, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'Result' , ), 3008, (3008, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
]

IStyles_vtables_dispatch_ = 1
IStyles_vtables_ = [
	(( 'Item' , 'Index' , 'Result' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{8DFD15E0-345E-4B1C-86A1-BD65F87128B5}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'StyleByApiId' , 'Id' , 'Result' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{8DFD15E0-345E-4B1C-86A1-BD65F87128B5}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 3, (3, (), [ (16393, 10, None, "IID('{8DFD15E0-345E-4B1C-86A1-BD65F87128B5}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Copy' , 'Style' , 'Result' , ), 4, (4, (), [ (9, 1, None, "IID('{8DFD15E0-345E-4B1C-86A1-BD65F87128B5}')") , 
			 (16393, 10, None, "IID('{8DFD15E0-345E-4B1C-86A1-BD65F87128B5}')") , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'AddStyleFromLibrary' , 'LibraryPath' , 'Id' , 'External' , 'Result' , 
			 ), 5, (5, (), [ (8, 1, None, None) , (3, 1, None, None) , (11, 1, None, None) , (16393, 10, None, "IID('{8DFD15E0-345E-4B1C-86A1-BD65F87128B5}')") , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'FindStyleFromLibrary' , 'LibraryPath' , 'LibraryStyleId' , 'Result' , ), 6, (6, (), [ 
			 (8, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{8DFD15E0-345E-4B1C-86A1-BD65F87128B5}')") , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

IStylesManager_vtables_dispatch_ = 1
IStylesManager_vtables_ = [
	(( 'CurvesStyles' , 'Result' , ), 9501, (9501, (), [ (16393, 10, None, "IID('{E821AE61-FA05-4B39-8908-BD37D6D044A4}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'TextsStyles' , 'Result' , ), 9502, (9502, (), [ (16393, 10, None, "IID('{E821AE61-FA05-4B39-8908-BD37D6D044A4}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'HatchsStyles' , 'Result' , ), 9503, (9503, (), [ (16393, 10, None, "IID('{E821AE61-FA05-4B39-8908-BD37D6D044A4}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
]

ISurfaceContainer_vtables_dispatch_ = 1
ISurfaceContainer_vtables_ = [
	(( 'SurfacePatches' , 'PVal' , ), 15001, (15001, (), [ (16393, 10, None, "IID('{DEE5B135-4D8E-4AD8-AEA4-E763F68290B2}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'FaceRemovers' , 'PVal' , ), 15002, (15002, (), [ (16393, 10, None, "IID('{6E177627-05D6-40B4-B955-9203F00656B5}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'SurfaceSewers' , 'PVal' , ), 15003, (15003, (), [ (16393, 10, None, "IID('{70AE0BA0-2059-4EAB-BE41-A6E8C8ACFA8A}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'NurbsSurfaces' , 'PVal' , ), 15004, (15004, (), [ (16393, 10, None, "IID('{DB184867-6207-4FB7-9B3F-882BEAA16B4D}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'RuledSurfaces' , 'PVal' , ), 15005, (15005, (), [ (16393, 10, None, "IID('{3F3EFC1C-A0A7-4B06-BF7A-384BAB27B07F}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'EquidistantSurfaces' , 'PVal' , ), 15006, (15006, (), [ (16393, 10, None, "IID('{992D7C05-7A25-46FB-AAB1-B7337E6EA74B}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'TrimmedSurfaces' , 'PVal' , ), 15007, (15007, (), [ (16393, 10, None, "IID('{799A9110-799B-40E5-85AF-087AD30A89B4}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'ExtensionSurfaces' , 'PVal' , ), 15008, (15008, (), [ (16393, 10, None, "IID('{5F6EE7F9-972A-4BB8-B1E4-BC1C74048FFF}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'ExtrusionSurfaces' , 'PVal' , ), 15009, (15009, (), [ (16393, 10, None, "IID('{A160C032-CF96-4467-A682-CE2243DF76BD}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'RotatedSurfaces' , 'PVal' , ), 15010, (15010, (), [ (16393, 10, None, "IID('{A9B14309-92B3-46BA-8841-233293A60310}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'MeshPointsSurfaces' , 'PVal' , ), 15011, (15011, (), [ (16393, 10, None, "IID('{46AFC862-E2DA-432B-95A3-7971BFC82CB8}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'CloudPointsSurfaces' , 'PVal' , ), 15012, (15012, (), [ (16393, 10, None, "IID('{6CA7CE7A-12C8-4103-ACC1-11001DD1B01D}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'ImportedSurfaces' , 'PVal' , ), 15013, (15013, (), [ (16393, 10, None, "IID('{7791DDC6-7C2D-450B-BB44-660B078E52D6}')") , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'LoftSurfaces' , 'PVal' , ), 15014, (15014, (), [ (16393, 10, None, "IID('{AF5F922F-8C32-4949-A29A-BB5EC7A99D00}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'EvolutionSurfaces' , 'PVal' , ), 15015, (15015, (), [ (16393, 10, None, "IID('{8D984124-C430-45B3-939A-B5264C5B1388}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'NurbsSurfacesByCurvesMeshs' , 'PVal' , ), 15016, (15016, (), [ (16393, 10, None, "IID('{9CEEC1DF-A155-4702-AD18-0D851A4B85A8}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'JointSurfaces' , 'PVal' , ), 15017, (15017, (), [ (16393, 10, None, "IID('{C8AD51FA-5A71-4EE4-ADB2-DDAAA90F1621}')") , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'RestoredSurfaces' , 'PVal' , ), 15018, (15018, (), [ (16393, 10, None, "IID('{CF84B430-2579-49CA-B937-02354EB1F8A7}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
]

ISurfacePatch_vtables_dispatch_ = 1
ISurfacePatch_vtables_ = [
	(( 'Edges' , 'PVal' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Edges' , 'PVal' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
]

ISurfacePatches_vtables_dispatch_ = 1
ISurfacePatches_vtables_ = [
	(( 'SurfacePatch' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{B6330040-7ABA-4ECD-8C92-5B441AF11C3B}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{B6330040-7ABA-4ECD-8C92-5B441AF11C3B}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ISurfaceSewer_vtables_dispatch_ = 1
ISurfaceSewer_vtables_ = [
	(( 'Shells' , 'PVal' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Shells' , 'PVal' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Precision' , 'Result' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Precision' , 'Result' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'CreateBody' , 'Result' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'CreateBody' , 'Result' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

ISurfaceSewers_vtables_dispatch_ = 1
ISurfaceSewers_vtables_ = [
	(( 'SurfaceSewer' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{031FD1C7-9CB6-4E49-A27D-73B8D0B648D4}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{031FD1C7-9CB6-4E49-A27D-73B8D0B648D4}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ISurfaceThickening_vtables_dispatch_ = 1
ISurfaceThickening_vtables_ = [
	(( 'Faces' , 'Faces' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Faces' , 'Faces' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
]

ISurfaceThickenings_vtables_dispatch_ = 1
ISurfaceThickenings_vtables_ = [
	(( 'SurfaceThickening' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{984F7DD6-A7FB-4693-862F-459CC8630B11}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{984F7DD6-A7FB-4693-862F-459CC8630B11}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ISurfacesIntersectionCurve_vtables_dispatch_ = 1
ISurfacesIntersectionCurve_vtables_ = [
	(( 'SetObjects' , 'ObjectsArray1' , 'ObjectsArray2' , 'Result' , ), 1, (1, (), [ 
			 (12, 1, None, None) , (12, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'GetObjects' , 'ObjectsArray1' , 'ObjectsArray2' , 'Result' , ), 2, (2, (), [ 
			 (16396, 2, None, None) , (16396, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'AddObjects' , 'ForArray1' , 'Objects' , 'Result' , ), 3, (3, (), [ 
			 (11, 1, None, None) , (12, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Clear' , 'ForArray1' , 'Result' , ), 4, (4, (), [ (11, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'ObjectsCount' , 'ForArray1' , 'Count' , ), 5, (5, (), [ (11, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'GetObject' , 'ForArray1' , 'Index' , 'Object' , ), 6, (6, (), [ 
			 (11, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'AutoCheck' , 'CheckValue' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'AutoCheck' , 'CheckValue' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'EdgesChecks' , 'Checks' , ), 8, (8, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'EdgesChecks' , 'Checks' , ), 8, (8, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'EdgesArraysCount' , 'Count' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Edges' , 'Index' , 'Edges' , ), 10, (10, (), [ (3, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'EdgesCheck' , 'ContourIndex' , 'CheckValue' , ), 11, (11, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'EdgesCheck' , 'ContourIndex' , 'CheckValue' , ), 11, (11, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'EdgesChecksCount' , 'Count' , ), 12, (12, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
]

ISurfacesIntersectionCurves_vtables_dispatch_ = 1
ISurfacesIntersectionCurves_vtables_ = [
	(( 'SurfacesIntersectionCurve' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{758420A0-BECB-4FDA-BDDE-1F398B41117C}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{758420A0-BECB-4FDA-BDDE-1F398B41117C}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ISymbols2DContainer_vtables_dispatch_ = 1
ISymbols2DContainer_vtables_ = [
	(( 'LineDimensions' , 'PVal' , ), 10001, (10001, (), [ (16393, 10, None, "IID('{A6F6A18A-78FA-4A77-BB75-90647E0C545C}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'RadialDimensions' , 'PVal' , ), 10002, (10002, (), [ (16393, 10, None, "IID('{12D26993-449E-42E2-A909-B047AFD6E27D}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'DiametralDimensions' , 'PVal' , ), 10003, (10003, (), [ (16393, 10, None, "IID('{8E45FEB9-7BCD-4C9F-9767-320736980662}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'AngleDimensions' , 'PVal' , ), 10004, (10004, (), [ (16393, 10, None, "IID('{DF9ABB77-BBB6-4B29-A0E0-81DCFD525C2E}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'BreakLineDimensions' , 'PVal' , ), 10005, (10005, (), [ (16393, 10, None, "IID('{4125169F-3EA8-4AC0-9E1B-5582D62600C4}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'HeightDimensions' , 'PVal' , ), 10006, (10006, (), [ (16393, 10, None, "IID('{3A56D35C-3242-4C49-BA99-CF790EB10356}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ArcDimensions' , 'PVal' , ), 10007, (10007, (), [ (16393, 10, None, "IID('{FE2755D9-48E2-44CC-BC24-86CF86BE08E2}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'BreakRadialDimensions' , 'PVal' , ), 10008, (10008, (), [ (16393, 10, None, "IID('{E2181A3E-5417-4D73-AB65-983DED3438E0}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Roughs' , 'PVal' , ), 10009, (10009, (), [ (16393, 10, None, "IID('{ACC42B32-27F3-4F74-B4A5-C97D4C7B289D}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Leaders' , 'PVal' , ), 10010, (10010, (), [ (16393, 10, None, "IID('{BA2D820C-0DB9-47C6-A32D-34C7D8BA1B2F}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Bases' , 'PVal' , ), 10011, (10011, (), [ (16393, 10, None, "IID('{C607727C-6B0A-4FB6-AFCA-ED9D83F5C6B7}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Tolerances' , 'PVal' , ), 10012, (10012, (), [ (16393, 10, None, "IID('{97CDD55F-3C64-469B-B26E-A927D3300B6C}')") , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'DrawingTables' , 'PVal' , ), 10013, (10013, (), [ (16393, 10, None, "IID('{DF92DACE-BDC6-4341-86DA-3A9C8DCFDEFE}')") , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'CutLines' , 'PVal' , ), 10014, (10014, (), [ (16393, 10, None, "IID('{666DA5B4-324C-493C-9A91-37D9E078EB4E}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ViewPointers' , 'PVal' , ), 10015, (10015, (), [ (16393, 10, None, "IID('{08B45C97-6F86-4809-BBC3-78F216BD0430}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'CentreMarkers' , 'PVal' , ), 10016, (10016, (), [ (16393, 10, None, "IID('{A0533211-CF52-4AB5-A172-3DC7D94276D1}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'RemoteElements' , 'PVal' , ), 10017, (10017, (), [ (16393, 10, None, "IID('{88427A6B-00AF-46E2-9B95-BC8348C2162A}')") , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'AxisLines' , 'PVal' , ), 10018, (10018, (), [ (16393, 10, None, "IID('{C567E700-E163-4C8F-B329-931BB93D0223}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'WaveLines' , 'PVal' , ), 10019, (10019, (), [ (16393, 10, None, "IID('{C1F0A911-8B4A-48B5-9611-5250D3FC2ACA}')") , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'BrokenLines' , 'PVal' , ), 10020, (10020, (), [ (16393, 10, None, "IID('{2A7EADC0-5E79-4DDB-85D5-E3EDB743480D}')") , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'AssociationTables' , 'PVal' , ), 10021, (10021, (), [ (16393, 10, None, "IID('{96F02F01-04E1-44D1-9974-48330EBE801B}')") , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'CircularsCentries' , 'PVal' , ), 10022, (10022, (), [ (16393, 10, None, "IID('{1F7ED8F6-85DA-4B32-9306-31E3DABA3F84}')") , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'LinearsCentries' , 'PVal' , ), 10023, (10023, (), [ (16393, 10, None, "IID('{E0854CCB-7849-4503-BF8B-F70CF493D59B}')") , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ConditionIntersects' , 'PVal' , ), 10024, (10024, (), [ (16393, 10, None, "IID('{EDB023F6-0862-4CB3-AF81-62D784F455B1}')") , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
]

ISymbols3DContainer_vtables_dispatch_ = 1
ISymbols3DContainer_vtables_ = [
	(( 'LineDimensions3D' , 'PVal' , ), 13001, (13001, (), [ (16393, 10, None, "IID('{8E30C80C-4C79-497B-A74B-84D44F96EF4D}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'RadialDimensions3D' , 'PVal' , ), 13002, (13002, (), [ (16393, 10, None, "IID('{153924CD-E046-4334-8798-46A6D6663DE4}')") , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'DiametralDimensions3D' , 'PVal' , ), 13003, (13003, (), [ (16393, 10, None, "IID('{79B5AC3B-9B2F-4C75-8482-3C0D6B07D911}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'AngleDimensions3D' , 'PVal' , ), 13004, (13004, (), [ (16393, 10, None, "IID('{E0E8DB05-F71B-457E-BFEB-7EC2E803E77A}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Leaders3D' , 'PVal' , ), 13005, (13005, (), [ (16393, 10, None, "IID('{C6E6BDD4-2B0E-49BF-87D3-04E800200DDC}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Roughs3D' , 'PVal' , ), 13006, (13006, (), [ (16393, 10, None, "IID('{8533772B-1C43-4FDD-9F0E-BC92F15862C9}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Bases3D' , 'PVal' , ), 13007, (13007, (), [ (16393, 10, None, "IID('{8BC582B3-1F82-4D19-AF95-24CBAD412E52}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Tolerances3D' , 'PVal' , ), 13008, (13008, (), [ (16393, 10, None, "IID('{82ADDA0C-B8DE-4336-A5CC-B36504A80E2D}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'CreateGenerativeDimensions' , 'Objects' , 'CreateZeroDimensions' , 'Result' , ), 13009, (13009, (), [ 
			 (12, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'GetDimensionVariable' , 'Dimension' , 'Result' , ), 13010, (13010, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , 
			 (16393, 10, None, "IID('{8BAB52D9-8EF6-43A6-A1B8-AF42D5961A94}')") , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Threads' , 'PVal' , ), 13011, (13011, (), [ (16393, 10, None, "IID('{6090C8D4-4EB0-402A-8E25-29C1FAE85F11}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

ISystemSettings_vtables_dispatch_ = 1
ISystemSettings_vtables_ = [
	(( 'FilesAutoSaveSwitchOn' , 'PVal' , ), 1, (1, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'FilesAutoSaveSwitchOn' , 'PVal' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'FilesBackupPrevCopySwitchOn' , 'PVal' , ), 2, (2, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'FilesBackupPrevCopySwitchOn' , 'PVal' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'ModelLocalCSCreateInAbsoluteCS' , 'PVal' , ), 3, (3, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'ModelLocalCSCreateInAbsoluteCS' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'ModelLocalCSSetActive' , 'PVal' , ), 4, (4, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'ModelLocalCSSetActive' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'ModelSmoothMotion' , 'PVal' , ), 5, (5, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'ModelSmoothMotion' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ReportStyleListSettings' , 'PVal' , ), 6, (6, (), [ (16393, 10, None, "IID('{76D9033D-5F87-41CC-A3E8-55EFEE94B677}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ObjectsFilter3D' , 'Type' , 'PVal' , ), 7, (7, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'ObjectsFilter3D' , 'Type' , 'PVal' , ), 7, (7, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'NewDocumentSettings' , 'SettingsType' , 'PVal' , ), 8, (8, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'EnablesAddSystemDelimersInMarking' , 'PVal' , ), 9, (9, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'EnablesAddSystemDelimersInMarking' , 'PVal' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'StandardsThreadsListSettings' , 'PVal' , ), 10, (10, (), [ (16393, 10, None, "IID('{76D9033D-5F87-41CC-A3E8-55EFEE94B677}')") , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'ModelEditColor' , 'ColorType' , 'PVal' , ), 11, (11, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'ModelEditColor' , 'ColorType' , 'PVal' , ), 11, (11, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ModelFillChooseFace' , 'PVal' , ), 12, (12, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ModelFillChooseFace' , 'PVal' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'ModelInverseInDynamicSelect' , 'PVal' , ), 13, (13, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'ModelInverseInDynamicSelect' , 'PVal' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ModelUsePartColorForEdit' , 'PVal' , ), 14, (14, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'ModelUsePartColorForEdit' , 'PVal' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'ModelUseOpenGLSearch' , 'PVal' , ), 15, (15, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'ModelUseOpenGLSearch' , 'PVal' , ), 15, (15, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'ThreadPattern' , 'ThreadTableName' , 'Param' , ), 16, (16, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{246741CF-BC91-4E69-AEEE-CF905B9C05F7}')") , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Language' , 'PVal' , ), 17, (17, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'AssociationViewRebuildParallel' , 'PVal' , ), 18, (18, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'AssociationViewRebuildParallel' , 'PVal' , ), 18, (18, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'AssociationViewRebuildParallelLowPriority' , 'PVal' , ), 19, (19, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'AssociationViewRebuildParallelLowPriority' , 'PVal' , ), 19, (19, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'AssociationViewAutoSaveBeforeRebuild' , 'PVal' , ), 20, (20, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'AssociationViewAutoSaveBeforeRebuild' , 'PVal' , ), 20, (20, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'Theme' , 'PVal' , ), 21, (21, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'UseHardwareAcceleration' , 'PVal' , ), 22, (22, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'ModelRenderType' , 'PVal' , ), 23, (23, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'ModelRenderType' , 'PVal' , ), 23, (23, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'ModelStepMoveDetail' , 'PVal' , ), 24, (24, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'ModelStepMoveDetail' , 'PVal' , ), 24, (24, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'ModelStepRotateDetail' , 'PVal' , ), 25, (25, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'ModelStepRotateDetail' , 'PVal' , ), 25, (25, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'ModelScaleFactor' , 'PVal' , ), 26, (26, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'ModelScaleFactor' , 'PVal' , ), 26, (26, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'ModelPerformanceLevel' , 'PVal' , ), 27, (27, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'ModelPerformanceLevel' , 'PVal' , ), 27, (27, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'ModelTransparencyType' , 'PVal' , ), 28, (28, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
	(( 'ModelTransparencyType' , 'PVal' , ), 28, (28, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 472 , (3, 0, None, None) , 0 , )),
	(( 'EnableAddFilesToRecentList' , 'PVal' , ), 29, (29, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 480 , (3, 0, None, None) , 0 , )),
	(( 'EnableAddFilesToRecentList' , 'PVal' , ), 29, (29, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 488 , (3, 0, None, None) , 0 , )),
]

ITable_vtables_dispatch_ = 1
ITable_vtables_ = [
	(( 'RowsCount' , 'Val' , ), 2501, (2501, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'ColumnsCount' , 'Val' , ), 2502, (2502, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Cell' , 'RowN' , 'ColN' , 'Val' , ), 2503, (2503, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16393, 10, None, "IID('{CF9150BA-0E3A-46DE-8973-332A00361474}')") , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'CellById' , 'CellID' , 'Val' , ), 2504, (2504, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{CF9150BA-0E3A-46DE-8973-332A00361474}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'AddColumn' , 'ColN' , 'Right' , 'PVal' , ), 2505, (2505, (), [ 
			 (3, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'DeleteColumn' , 'ColN' , 'PVal' , ), 2506, (2506, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'AddRow' , 'RowN' , 'Down' , 'PVa' , ), 2507, (2507, (), [ 
			 (3, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'DeleteRow' , 'RowN' , 'PVal' , ), 2508, (2508, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Clear' , 'PVal' , ), 2509, (2509, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Range' , 'BeginRow' , 'BeginColumn' , 'EndRow' , 'EndColumn' , 
			 'PVal' , ), 2510, (2510, (), [ (3, 1, None, None) , (3, 1, None, None) , (3, 1, None, None) , 
			 (3, 1, None, None) , (16393, 10, None, "IID('{D78E47DC-172B-4824-A519-9BC2C0387B5C}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

ITableCell_vtables_dispatch_ = 1
ITableCell_vtables_ = [
	(( 'Text' , 'Result' , ), 1, (1, (), [ (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'CellID' , 'Result' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Row' , 'Result' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Column' , 'Result' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

ITablePattern_vtables_dispatch_ = 1
ITablePattern_vtables_ = [
	(( 'FileName' , 'Name' , ), 101, (101, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'FileName' , 'Name' , ), 101, (101, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'PointsType' , 'Type' , ), 102, (102, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'PointsType' , 'Type' , ), 102, (102, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'SaveInitialOrientation' , 'PVal' , ), 103, (103, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'SaveInitialOrientation' , 'PVal' , ), 103, (103, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'OrientationType' , 'PVal' , ), 104, (104, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'OrientationType' , 'PVal' , ), 104, (104, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'OrientationObject' , 'PVal' , ), 105, (105, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'OrientationObject' , 'PVal' , ), 105, (105, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
]

ITableRange_vtables_dispatch_ = 1
ITableRange_vtables_ = [
	(( 'CombineCells' , 'Val' , ), 3501, (3501, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'DivideCells' , 'ColumnCount' , 'RowCount' , 'PrepareCombine' , 'Val' , 
			 ), 3502, (3502, (), [ (3, 1, None, None) , (3, 1, None, None) , (11, 0, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'ClearCells' , 'PVal' , ), 3503, (3503, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Cells' , 'PVal' , ), 3504, (3504, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'CellsFormat' , 'Val' , ), 3505, (3505, (), [ (16393, 10, None, "IID('{9F2F27E7-8FB2-4C6C-A54D-35DB240060D8}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'CellsBoundaries' , 'Val' , ), 3506, (3506, (), [ (16393, 10, None, "IID('{1E29E849-1D1E-4791-BD31-8EF00ED5D118}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Texts' , 'PVal' , ), 3507, (3507, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Texts' , 'PVal' , ), 3507, (3507, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

ITabulator_vtables_dispatch_ = 1
ITabulator_vtables_ = [
	(( 'Position' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Position' , 'PVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Align' , 'PVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Align' , 'PVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Filling' , 'PVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Filling' , 'PVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

ITabulators_vtables_dispatch_ = 1
ITabulators_vtables_ = [
	(( 'Item' , 'Index' , 'Result' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{2DD73B92-F8C8-49AA-AECD-B75713427FC1}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Position' , 'Result' , ), 1, (1, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{2DD73B92-F8C8-49AA-AECD-B75713427FC1}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Clear' , 'Result' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ITechnicalDemand_vtables_dispatch_ = 1
ITechnicalDemand_vtables_ = [
	(( 'Text' , 'PVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'BlocksGabarits' , 'PVal' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'BlocksGabarits' , 'PVal' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'AutoPlacement' , 'PVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'AutoPlacement' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Update' , 'PRes' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'PRes' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'IsCreated' , 'Result' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'BlocksStartLineNumbers' , 'Result' , ), 7, (7, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Synchronize' , 'PRes' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
]

ITechnicalDemand3D_vtables_dispatch_ = 1
ITechnicalDemand3D_vtables_ = [
	(( 'Text' , 'PVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Update' , 'Result' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'IsCreated' , 'Result' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

ITessellation7_vtables_dispatch_ = 1
ITessellation7_vtables_ = [
	(( 'FacetSize' , 'PVal' , ), 2001, (2001, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'FacetSize' , 'PVal' , ), 2001, (2001, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'FacetSag' , 'PVal' , ), 2002, (2002, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'FacetSag' , 'PVal' , ), 2002, (2002, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'FacetAngle' , 'PVal' , ), 2003, (2003, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'FacetAngle' , 'PVal' , ), 2003, (2003, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'NeedParams' , 'PVal' , ), 2004, (2004, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'NeedParams' , 'PVal' , ), 2004, (2004, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'RebuildTessellation' , 'Result' , ), 2005, (2005, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'GetFacetPoints' , 'Points' , 'Indexes' , 'Normals' , 'Result' , 
			 ), 2006, (2006, (), [ (16396, 2, None, None) , (16396, 2, None, None) , (16396, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'GetFacetParams' , 'Result' , ), 2007, (2007, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

IText_vtables_dispatch_ = 1
IText_vtables_ = [
	(( 'Style' , 'Result' , ), 2001, (2001, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Result' , ), 2001, (2001, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'TextLines' , 'Result' , ), 2002, (2002, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'Result' , ), 2003, (2003, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'TextLine' , 'Index' , 'Result' , ), 2004, (2004, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{AAB72FE2-DEA3-4FB6-B0DD-B926249EF67C}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Value' , ), 2005, (2005, (), [ (16393, 10, None, "IID('{AAB72FE2-DEA3-4FB6-B0DD-B926249EF67C}')") , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'AddBefore' , 'Index' , 'Value' , ), 2006, (2006, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{AAB72FE2-DEA3-4FB6-B0DD-B926249EF67C}')") , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Str' , 'PVal' , ), 2007, (2007, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Str' , 'PVal' , ), 2007, (2007, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Clear' , 'Value' , ), 2008, (2008, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'AddTextLine' , 'Type' , 'FileName' , 'Value' , ), 2009, (2009, (), [ 
			 (3, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{AAB72FE2-DEA3-4FB6-B0DD-B926249EF67C}')") , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'AddTextLineBefore' , 'Type' , 'Index' , 'FileName' , 'Value' , 
			 ), 2010, (2010, (), [ (3, 1, None, None) , (3, 1, None, None) , (8, 1, None, None) , (16393, 10, None, "IID('{AAB72FE2-DEA3-4FB6-B0DD-B926249EF67C}')") , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Replace' , 'SrcText' , 'NewText' , 'Case' , 'WordOnly' , 
			 'ReplaceAll' , 'Result' , ), 2011, (2011, (), [ (8, 1, None, None) , (8, 1, None, None) , 
			 (11, 49, 'False', None) , (11, 49, 'False', None) , (11, 49, 'False', None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Assign' , 'Other' , 'Value' , ), 2012, (2012, (), [ (9, 1, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'AddTable' , 'IndexAt' , 'RowsCount' , 'ColumnsCount' , 'RowHeigh' , 
			 'ColumnsWidth' , 'TitlePos' , 'Value' , ), 2013, (2013, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (3, 1, None, None) , 
			 (16393, 10, None, "IID('{9AE6C0A0-72EB-4A51-B54C-A0E57CC5F6DC}')") , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Edit' , 'HWnd' , 'Result' , ), 2014, (2014, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
]

ITextDocument_vtables_dispatch_ = 1
ITextDocument_vtables_ = [
	(( 'Text' , 'PVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Update' , 'PRes' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'BlocksGabarits' , 'PVal' , ), 3, (3, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'BlocksStartLineNumbers' , 'Result' , ), 4, (4, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'SectionsStartLineNumbers' , 'Result' , ), 5, (5, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
]

ITextDocumentSection_vtables_dispatch_ = 1
ITextDocumentSection_vtables_ = [
	(( 'Format' , 'PVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{B9CDE694-4C33-4375-A6F6-AE94DC759510}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'LayoutLibraryFileName' , 'PVal' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'LayoutLibraryFileName' , 'PVal' , ), 2, (2, (), [ (31, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'LayoutStyleNumber' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'LayoutStyleNumber' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'EvenLayoutLibraryFileName' , 'PVal' , ), 4, (4, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'EvenLayoutLibraryFileName' , 'PVal' , ), 4, (4, (), [ (31, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'EvenLayoutStyleNumber' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'EvenLayoutStyleNumber' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'OddLayoutLibraryFileName' , 'PVal' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'OddLayoutLibraryFileName' , 'PVal' , ), 6, (6, (), [ (31, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'OddLayoutStyleNumber' , 'PVal' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'OddLayoutStyleNumber' , 'PVal' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Update' , 'PRes' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'PVal' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

ITextDocumentSectionsManager_vtables_dispatch_ = 1
ITextDocumentSectionsManager_vtables_ = [
	(( 'AddSection' , 'Result' , ), 2001, (2001, (), [ (16393, 10, None, "IID('{A64BE069-8FCB-43F1-AB34-9974DC7FCF5F}')") , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'AddSectionAt' , 'Index' , 'Result' , ), 2002, (2002, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{A64BE069-8FCB-43F1-AB34-9974DC7FCF5F}')") , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'SectionsCount' , 'Result' , ), 2003, (2003, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Section' , 'Index' , 'Result' , ), 2004, (2004, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{A64BE069-8FCB-43F1-AB34-9974DC7FCF5F}')") , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'SectionByTextLine' , 'LineIndex' , 'Result' , ), 2005, (2005, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{A64BE069-8FCB-43F1-AB34-9974DC7FCF5F}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'MoveSection' , 'SectionIndex' , 'NewSectionIndex' , 'Result' , ), 2006, (2006, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'GetSectionLineIndexes' , 'SectionIndex' , 'FirstLineIndex' , 'LastLineIndex' , 'LinesCount' , 
			 ), 2007, (2007, (), [ (3, 1, None, None) , (16387, 2, None, None) , (16387, 2, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'MoveLinesToSection' , 'Section' , 'FirstLineIndex' , 'LastLineIndex' , 'Result' , 
			 ), 2008, (2008, (), [ (9, 1, None, "IID('{A64BE069-8FCB-43F1-AB34-9974DC7FCF5F}')") , (3, 1, None, None) , (3, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

ITextFont_vtables_dispatch_ = 1
ITextFont_vtables_ = [
	(( 'FontName' , 'PVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'FontName' , 'PVal' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'WidthFactor' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'WidthFactor' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Color' , 'PVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Color' , 'PVal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Bold' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Bold' , 'PVal' , ), 5, (5, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Italic' , 'PVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Italic' , 'PVal' , ), 6, (6, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Underline' , 'PVal' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Underline' , 'PVal' , ), 7, (7, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'TextLineStep' , 'PVal' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'TextLineStep' , 'PVal' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
]

ITextItem_vtables_dispatch_ = 1
ITextItem_vtables_ = [
	(( 'ItemType' , 'PVal' , ), 2001, (2001, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ItemType' , 'PVal' , ), 2001, (2001, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Str' , 'Result' , ), 2002, (2002, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Str' , 'Result' , ), 2002, (2002, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'SymbolFontName' , 'PVal' , ), 2003, (2003, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'SymbolFontName' , 'PVal' , ), 2003, (2003, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Number' , 'Result' , ), 2004, (2004, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Number' , 'Result' , ), 2004, (2004, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'SizeFactor' , 'PVal' , ), 2005, (2005, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'SizeFactor' , 'PVal' , ), 2005, (2005, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'NewLine' , 'Result' , ), 2006, (2006, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'NewLine' , 'Result' , ), 2006, (2006, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'Value' , ), 2007, (2007, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Update' , 'PRes' , ), 2008, (2008, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
]

ITextLine_vtables_dispatch_ = 1
ITextLine_vtables_ = [
	(( 'Style' , 'Result' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Result' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'TextItems' , 'Result' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Count' , 'Result' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'TextItem' , 'Index' , 'Result' , ), 4, (4, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{1DE74AFB-5026-4B85-861F-F0CFDBD443E6}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Value' , ), 5, (5, (), [ (16393, 10, None, "IID('{1DE74AFB-5026-4B85-861F-F0CFDBD443E6}')") , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'AddBefore' , 'Index' , 'Value' , ), 6, (6, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{1DE74AFB-5026-4B85-861F-F0CFDBD443E6}')") , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Str' , 'PVal' , ), 7, (7, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Str' , 'PVal' , ), 7, (7, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Clear' , 'Value' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Step' , 'PVal' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Step' , 'PVal' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Align' , 'PVal' , ), 10, (10, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Align' , 'PVal' , ), 10, (10, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'IndentedLine' , 'PVal' , ), 11, (11, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'IndentedLine' , 'PVal' , ), 11, (11, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'StepBeforeParagraph' , 'PVal' , ), 12, (12, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'StepBeforeParagraph' , 'PVal' , ), 12, (12, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'StepAfterParagraph' , 'PVal' , ), 13, (13, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'StepAfterParagraph' , 'PVal' , ), 13, (13, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'LeftEdge' , 'PVal' , ), 14, (14, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'LeftEdge' , 'PVal' , ), 14, (14, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'RightEdge' , 'PVal' , ), 15, (15, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'RightEdge' , 'PVal' , ), 15, (15, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Tabulators' , 'PVal' , ), 16, (16, (), [ (16393, 10, None, "IID('{BB66E097-95C7-49B1-B6FD-3506C7758D09}')") , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Level' , 'Result' , ), 17, (17, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Level' , 'Result' , ), 17, (17, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Numbering' , 'Result' , ), 18, (18, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Numbering' , 'Result' , ), 18, (18, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'Value' , ), 19, (19, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'TextLineType' , 'Result' , ), 20, (20, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'TextLineData' , 'Result' , ), 21, (21, (), [ (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'NewPage' , 'Result' , ), 22, (22, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'NewPage' , 'Result' , ), 22, (22, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'Assign' , 'Other' , 'Value' , ), 23, (23, (), [ (9, 1, None, "IID('{AAB72FE2-DEA3-4FB6-B0DD-B926249EF67C}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'InsertHypertextReference' , 'TextItemIndex' , 'Object' , 'Type' , 'Brackets' , 
			 'TextLineIndex' , 'Precision' , 'PropertyId' , 'Item' , ), 24, (24, (), [ 
			 (3, 1, None, None) , (9, 1, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , (3, 1, None, None) , (11, 1, None, None) , (3, 1, None, None) , 
			 (3, 1, None, None) , (5, 1, None, None) , (16393, 10, None, "IID('{1DE74AFB-5026-4B85-861F-F0CFDBD443E6}')") , ], 1 , 1 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'Edit' , 'HWnd' , 'Result' , ), 25, (25, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'NewSection' , 'Result' , ), 26, (26, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'NewSection' , 'Result' , ), 26, (26, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'BlockIndex' , 'Result' , ), 27, (27, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'SectionBlockIndex' , 'Result' , ), 28, (28, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
]

ITextStyle_vtables_dispatch_ = 1
ITextStyle_vtables_ = [
	(( 'Name' , 'PVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'PVal' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Number' , 'PVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Number' , 'PVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Step' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Step' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Align' , 'PVal' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Align' , 'PVal' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'IndentedLine' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'IndentedLine' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'StepBeforeParagraph' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'StepBeforeParagraph' , 'PVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'StepAfterParagraph' , 'PVal' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'StepAfterParagraph' , 'PVal' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'LeftEdge' , 'PVal' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'LeftEdge' , 'PVal' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'RightEdge' , 'PVal' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'RightEdge' , 'PVal' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Extended' , 'PVal' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Extended' , 'PVal' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'LinesCount' , 'PVal' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'LinesCount' , 'PVal' , ), 11, (11, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'EnableLine1' , 'PVal' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'EnableLine1' , 'PVal' , ), 12, (12, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Height1' , 'PVal' , ), 13, (13, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Height1' , 'PVal' , ), 13, (13, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'WidthFactor1' , 'PVal' , ), 14, (14, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'WidthFactor1' , 'PVal' , ), 14, (14, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Step1' , 'PVal' , ), 15, (15, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Step1' , 'PVal' , ), 15, (15, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'EnableLine2' , 'PVal' , ), 16, (16, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'EnableLine2' , 'PVal' , ), 16, (16, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'Height2' , 'PVal' , ), 17, (17, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'Height2' , 'PVal' , ), 17, (17, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'WidthFactor2' , 'PVal' , ), 18, (18, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'WidthFactor2' , 'PVal' , ), 18, (18, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'Step2' , 'PVal' , ), 19, (19, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'Step2' , 'PVal' , ), 19, (19, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'EnableLine3' , 'PVal' , ), 20, (20, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'EnableLine3' , 'PVal' , ), 20, (20, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'Height3' , 'PVal' , ), 21, (21, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
	(( 'Height3' , 'PVal' , ), 21, (21, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 416 , (3, 0, None, None) , 0 , )),
	(( 'WidthFactor3' , 'PVal' , ), 22, (22, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 424 , (3, 0, None, None) , 0 , )),
	(( 'WidthFactor3' , 'PVal' , ), 22, (22, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 432 , (3, 0, None, None) , 0 , )),
	(( 'Step3' , 'PVal' , ), 23, (23, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 440 , (3, 0, None, None) , 0 , )),
	(( 'Step3' , 'PVal' , ), 23, (23, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 448 , (3, 0, None, None) , 0 , )),
	(( 'Font' , 'PVal' , ), 24, (24, (), [ (16393, 10, None, "IID('{A6AD008D-58D1-48B5-BD29-E6795289FE4B}')") , ], 1 , 2 , 4 , 0 , 456 , (3, 0, None, None) , 0 , )),
	(( 'Tabulators' , 'PVal' , ), 25, (25, (), [ (16393, 10, None, "IID('{BB66E097-95C7-49B1-B6FD-3506C7758D09}')") , ], 1 , 2 , 4 , 0 , 464 , (3, 0, None, None) , 0 , )),
]

ITextTable_vtables_dispatch_ = 1
ITextTable_vtables_ = [
	(( 'FixedCellsSize' , 'PVal' , ), 1, (1, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'FixedCellsSize' , 'PVal' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'FixedRowCount' , 'PVal' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'FixedRowCount' , 'PVal' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'FixedColumnCount' , 'PVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'FixedColumnCount' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Save' , 'FileName' , 'PVal' , ), 4, (4, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

ITexturesParam_vtables_dispatch_ = 1
ITexturesParam_vtables_ = [
	(( 'TextureFileName' , 'Type' , 'PVal' , ), 6501, (6501, (), [ (3, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'TextureFileName' , 'Type' , 'PVal' , ), 6501, (6501, (), [ (3, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'TextureHeight' , 'Type' , 'PVal' , ), 6502, (6502, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'TextureHeight' , 'Type' , 'PVal' , ), 6502, (6502, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'TextureWidth' , 'Type' , 'PVal' , ), 6503, (6503, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'TextureWidth' , 'Type' , 'PVal' , ), 6503, (6503, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'TextureDx' , 'Type' , 'PVal' , ), 6504, (6504, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'TextureDx' , 'Type' , 'PVal' , ), 6504, (6504, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'TextureDy' , 'Type' , 'PVal' , ), 6505, (6505, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'TextureDy' , 'Type' , 'PVal' , ), 6505, (6505, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'TextureAngle' , 'Type' , 'PVal' , ), 6506, (6506, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'TextureAngle' , 'Type' , 'PVal' , ), 6506, (6506, (), [ (3, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Update' , 'PVal' , ), 6507, (6507, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
]

IThinParameters_vtables_dispatch_ = 1
IThinParameters_vtables_ = [
	(( 'Thin' , 'PVal' , ), 2501, (2501, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Thin' , 'PVal' , ), 2501, (2501, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'ThinType' , 'PVal' , ), 2502, (2502, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'ThinType' , 'PVal' , ), 2502, (2502, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Thickness' , 'Normal' , 'PVal' , ), 2503, (2503, (), [ (11, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Thickness' , 'Normal' , 'PVal' , ), 2503, (2503, (), [ (11, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'GetThinParameters' , 'Thin' , 'ThinType' , 'ThicknessNormal' , 'ThicknessReverse' , 
			 'PVal' , ), 2504, (2504, (), [ (16395, 2, None, None) , (16387, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'SetThinParameters' , 'Thin' , 'ThinType' , 'ThicknessNormal' , 'ThicknessReverse' , 
			 'PVal' , ), 2505, (2505, (), [ (11, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IThread_vtables_dispatch_ = 1
IThread_vtables_ = [
	(( 'BaseObject' , 'PVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'BaseObject' , 'PVal' , ), 1, (1, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'InitialBorder' , 'PVal' , ), 2, (2, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'InitialBorder' , 'PVal' , ), 2, (2, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'FinalBorder' , 'PVal' , ), 3, (3, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'FinalBorder' , 'PVal' , ), 3, (3, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'AutoLenght' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'AutoLenght' , 'PVal' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Lenght' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Lenght' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'AutoDiameter' , 'PVal' , ), 6, (6, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'AutoDiameter' , 'PVal' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'BaseObjectAdjustment' , 'PVal' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'BaseObjectAdjustment' , 'PVal' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'BaseObjectAdjustmentOffset1' , 'PVal' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'BaseObjectAdjustmentOffset1' , 'PVal' , ), 9, (9, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'BaseObjectAdjustmentOffset2' , 'PVal' , ), 10, (10, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'BaseObjectAdjustmentOffset2' , 'PVal' , ), 10, (10, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'LeftThread' , 'PVal' , ), 11, (11, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'LeftThread' , 'PVal' , ), 11, (11, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
]

IThreadDialogParam_vtables_dispatch_ = 1
IThreadDialogParam_vtables_ = [
	(( 'Standart' , 'PVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Standart' , 'PVal' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'IsConic' , 'PVal' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'IsConic' , 'PVal' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'NominalDiameter' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'NominalDiameter' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'P' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'P' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

IThreadPattern_vtables_dispatch_ = 1
IThreadPattern_vtables_ = [
	(( 'TableName' , 'PVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Standart' , 'PVal' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ConeAngle' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'HoleKoeff' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'PatternsCount' , 'PVal' , ), 5, (5, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'NominalDiameter' , 'Index' , 'PVal' , ), 6, (6, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'P' , 'Index' , 'PVal' , ), 7, (7, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'ConeL1' , 'Index' , 'PVal' , ), 8, (8, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'ConeL2' , 'Index' , 'PVal' , ), 9, (9, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Lenght' , 'Index' , 'PVal' , ), 10, (10, (), [ (3, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Designation' , 'Index' , 'PVal' , ), 11, (11, (), [ (3, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'SelectDiameters' , 'Result' , ), 12, (12, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'SelectP' , 'NominalDiameter' , 'Result' , ), 13, (13, (), [ (5, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'GetParameters' , 'Index' , 'NominalDiameter' , 'P' , 'L' , 
			 'L1' , 'L2' , 'Designation' , ), 14, (14, (), [ (3, 1, None, None) , 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'SelectParameters' , 'NominalDiameter' , 'P' , 'L' , 'L1' , 
			 'L2' , 'Designation' , ), 15, (15, (), [ (5, 1, None, None) , (5, 1, None, None) , 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IThreads_vtables_dispatch_ = 1
IThreads_vtables_ = [
	(( 'Thread' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{BC710E4D-A679-40FC-B5AE-16302ABBFEB8}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{BC710E4D-A679-40FC-B5AE-16302ABBFEB8}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IThreadsParameters_vtables_dispatch_ = 1
IThreadsParameters_vtables_ = [
	(( 'Init' , 'StandardFileName' , 'Diameter' , 'Pitch' , 'PVal' , 
			 ), 5001, (5001, (), [ (8, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'Diameter' , 'PVal' , ), 5002, (5002, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Diameter' , 'PVal' , ), 5002, (5002, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Pitch' , 'PVal' , ), 5003, (5003, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Pitch' , 'PVal' , ), 5003, (5003, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ThreadStandardFileName' , 'PVal' , ), 5004, (5004, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'InternalDiameterCoefficient' , 'PVal' , ), 5005, (5005, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'ConicalThreadAngle' , 'PVal' , ), 5006, (5006, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Internal' , 'PVal' , ), 5007, (5007, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ITolerance_vtables_dispatch_ = 1
ITolerance_vtables_ = [
	(( 'ArrowType' , 'Index' , 'Result' , ), 1, (1, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ArrowType' , 'Index' , 'Result' , ), 1, (1, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'BranchPos' , 'Index' , 'Result' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'BranchPos' , 'Index' , 'Result' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceArrowType' , 'Index' , 'Result' , ), 3, (3, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceArrowType' , 'Index' , 'Result' , ), 3, (3, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

ITolerance3D_vtables_dispatch_ = 1
ITolerance3D_vtables_ = [
	(( 'BasePlane' , 'Val' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'BasePlane' , 'Val' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'PositionObject' , 'Val' , ), 2, (2, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'PositionObject' , 'Val' , ), 2, (2, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'GetPosition' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 3, (3, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'SetPosition' , 'X' , 'Y' , 'Z' , 'Result' , 
			 ), 4, (4, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'ArrowType' , 'Index' , 'Result' , ), 5, (5, (), [ (3, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'ArrowType' , 'Index' , 'Result' , ), 5, (5, (), [ (3, 1, None, None) , 
			 (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceArrowType' , 'Index' , 'Result' , ), 6, (6, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceArrowType' , 'Index' , 'Result' , ), 6, (6, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'BranchPos' , 'Index' , 'Result' , ), 7, (7, (), [ (3, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'BranchPos' , 'Index' , 'Result' , ), 7, (7, (), [ (3, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
]

IToleranceParam_vtables_dispatch_ = 1
IToleranceParam_vtables_ = [
	(( 'BasePointPos' , 'Result' , ), 1501, (1501, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'BasePointPos' , 'Result' , ), 1501, (1501, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Vertical' , 'Result' , ), 1502, (1502, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Vertical' , 'Result' , ), 1502, (1502, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Table' , 'PVal' , ), 1503, (1503, (), [ (16393, 10, None, "IID('{D3715420-645E-435B-BB25-8E35AC570718}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Sign' , 'Result' , ), 1504, (1504, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Sign' , 'Result' , ), 1504, (1504, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'PrefixSign' , 'Result' , ), 1505, (1505, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'PrefixSign' , 'Result' , ), 1505, (1505, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Value' , 'PVal' , ), 1506, (1506, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Value' , 'PVal' , ), 1506, (1506, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'SuffixSign' , 'Result' , ), 1507, (1507, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'SuffixSign' , 'Result' , ), 1507, (1507, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'BaseValue1' , 'PVal' , ), 1508, (1508, (), [ (16393, 10, None, "IID('{AAB72FE2-DEA3-4FB6-B0DD-B926249EF67C}')") , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'BaseSign1' , 'Result' , ), 1509, (1509, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'BaseSign1' , 'Result' , ), 1509, (1509, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'BaseValue2' , 'PVal' , ), 1510, (1510, (), [ (16393, 10, None, "IID('{AAB72FE2-DEA3-4FB6-B0DD-B926249EF67C}')") , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'BaseSign2' , 'Result' , ), 1511, (1511, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'BaseSign2' , 'Result' , ), 1511, (1511, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IToleranceRecalc_vtables_dispatch_ = 1
IToleranceRecalc_vtables_ = [
	(( 'Name' , 'PVal' , ), 1, (1, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'PVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Current' , 'PVal' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Current' , 'PVal' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'ItemsCount' , 'PVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Item' , 'Index' , 'Result' , ), 4, (4, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'AddItems' , 'Object' , 'Result' , ), 5, (5, (), [ (9, 1, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'AddAllVariables' , 'Result' , ), 6, (6, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'DeleteItem' , 'Index' , 'Result' , ), 7, (7, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'RecalcType' , 'Index' , 'PVal' , ), 8, (8, (), [ (12, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'RecalcType' , 'Index' , 'PVal' , ), 8, (8, (), [ (12, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'RecalcUserType' , 'Index' , 'PVal' , ), 9, (9, (), [ (12, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'RecalcUserType' , 'Index' , 'PVal' , ), 9, (9, (), [ (12, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Coefficient' , 'Index' , 'PVal' , ), 10, (10, (), [ (12, 1, None, None) , 
			 (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Coefficient' , 'Index' , 'PVal' , ), 10, (10, (), [ (12, 1, None, None) , 
			 (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Id' , 'PVal' , ), 11, (11, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
]

IToleranceRecalcsManager_vtables_dispatch_ = 1
IToleranceRecalcsManager_vtables_ = [
	(( 'RecalcsCount' , 'PVal' , ), 1001, (1001, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'AddRecalc' , 'Result' , ), 1002, (1002, (), [ (16393, 10, None, "IID('{07C35E20-5554-4C10-B0D4-5B07DD9CE842}')") , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'AddRecalcCopy' , 'Source' , 'Result' , ), 1003, (1003, (), [ (9, 1, None, "IID('{07C35E20-5554-4C10-B0D4-5B07DD9CE842}')") , 
			 (16393, 10, None, "IID('{07C35E20-5554-4C10-B0D4-5B07DD9CE842}')") , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'GetRecalc' , 'Index' , 'Result' , ), 1004, (1004, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{07C35E20-5554-4C10-B0D4-5B07DD9CE842}')") , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceMode' , 'PVal' , ), 1005, (1005, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceMode' , 'PVal' , ), 1005, (1005, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'SaveRecalcModel' , 'FileName' , 'Result' , ), 1006, (1006, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'CurrentRecalc' , 'PVal' , ), 1007, (1007, (), [ (16393, 10, None, "IID('{07C35E20-5554-4C10-B0D4-5B07DD9CE842}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

ITolerances_vtables_dispatch_ = 1
ITolerances_vtables_ = [
	(( 'Tolerance' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{42DEF911-ADB2-478C-85F1-D5FEFA262EEC}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Value' , ), 2, (2, (), [ (16393, 10, None, "IID('{42DEF911-ADB2-478C-85F1-D5FEFA262EEC}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ITolerances3D_vtables_dispatch_ = 1
ITolerances3D_vtables_ = [
	(( 'Tolerance3D' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{9CF700CF-72DB-44EB-A191-3814A3CC21BD}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Value' , ), 2, (2, (), [ (16393, 10, None, "IID('{9CF700CF-72DB-44EB-A191-3814A3CC21BD}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ITrimmedCurve_vtables_dispatch_ = 1
ITrimmedCurve_vtables_ = [
	(( 'Curve' , 'PVal' , ), 1, (1, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Curve' , 'PVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'CutObject1' , 'PVal' , ), 2, (2, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'CutObject1' , 'PVal' , ), 2, (2, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'CutObject2' , 'PVal' , ), 3, (3, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'CutObject2' , 'PVal' , ), 3, (3, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'UseTwoCutObjecs' , 'Result' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'UseTwoCutObjecs' , 'Result' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Sense' , 'Result' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Sense' , 'Result' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'BeginParameter' , 'Val' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'BeginParameter' , 'Val' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'EndParameter' , 'Val' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'EndParameter' , 'Val' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'GetIntersectParameters' , 'CutPoints1' , 'CutPoints2' , 'Result' , ), 8, (8, (), [ 
			 (16396, 2, None, None) , (16396, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
]

ITrimmedCurves_vtables_dispatch_ = 1
ITrimmedCurves_vtables_ = [
	(( 'TrimmedCurve' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{F86B25DD-55A8-40F7-ACC4-4795FCF7C87C}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{F86B25DD-55A8-40F7-ACC4-4795FCF7C87C}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

ITrimmedSurface_vtables_dispatch_ = 1
ITrimmedSurface_vtables_ = [
	(( 'Surface' , 'PVal' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Surface' , 'PVal' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'CutObject' , 'PVal' , ), 2, (2, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'CutObject' , 'PVal' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Sense' , 'Result' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Sense' , 'Result' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'OperationResult' , 'Result' , ), 4, (4, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'OperationResult' , 'Result' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
]

ITrimmedSurfaces_vtables_dispatch_ = 1
ITrimmedSurfaces_vtables_ = [
	(( 'TrimmedSurface' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{3D64A257-8109-491C-8CB6-F0DCF516F02E}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{3D64A257-8109-491C-8CB6-F0DCF516F02E}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IUnhistoredCurve3D_vtables_dispatch_ = 1
IUnhistoredCurve3D_vtables_ = [
	(( 'Replace' , 'Curve' , 'DeleteSource' , 'Result' , ), 1, (1, (), [ 
			 (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Unwrap' , 'Placement' , 'X' , 'Y' , 'Z' , 
			 'Accuracy' , 'Result' , ), 2, (2, (), [ (12, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
]

IUnhistoredCurves3D_vtables_dispatch_ = 1
IUnhistoredCurves3D_vtables_ = [
	(( 'UnhistoredCurve3D' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{56F2843F-DE6A-43BC-ACCD-560B7FA7DD05}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Points' , 'Result' , ), 2, (2, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{56F2843F-DE6A-43BC-ACCD-560B7FA7DD05}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Load' , 'FileName' , 'SewCurves' , 'Result' , ), 3, (3, (), [ 
			 (8, 1, None, None) , (11, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Convert' , 'Curve' , 'DeleteSource' , 'Result' , ), 4, (4, (), [ 
			 (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , (11, 1, None, None) , (16393, 10, None, "IID('{56F2843F-DE6A-43BC-ACCD-560B7FA7DD05}')") , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
]

IUnionComponents_vtables_dispatch_ = 1
IUnionComponents_vtables_ = [
	(( 'Parts' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Parts' , 'Result' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
]

IUnionsComponents_vtables_dispatch_ = 1
IUnionsComponents_vtables_ = [
	(( 'UnionComponents' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{2DCDD394-C325-4D41-A5FD-9E8CC7B8EC5C}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{2DCDD394-C325-4D41-A5FD-9E8CC7B8EC5C}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IUnitMarking_vtables_dispatch_ = 1
IUnitMarking_vtables_ = [
	(( 'Xc' , 'Result' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Xc' , 'Result' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Yc' , 'Result' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Yc' , 'Result' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'Result' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Radius' , 'Result' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Result' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Height' , 'Result' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'Result' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Width' , 'Result' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'ShelfDirection' , 'Result' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'ShelfDirection' , 'Result' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'ShelfX' , 'Result' , ), 7, (7, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'ShelfX' , 'Result' , ), 7, (7, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ShelfY' , 'Result' , ), 8, (8, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'ShelfY' , 'Result' , ), 8, (8, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'Form' , 'Result' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Form' , 'Result' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'TextUp' , 'PVal' , ), 10, (10, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'TextDown' , 'PVal' , ), 11, (11, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'FilletRadius' , 'Result' , ), 12, (12, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'FilletRadius' , 'Result' , ), 12, (12, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
]

IUnitMarkings_vtables_dispatch_ = 1
IUnitMarkings_vtables_ = [
	(( 'UnitMarking' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{86F46084-16A8-4B5C-99E9-F848216788F0}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Value' , ), 2, (2, (), [ (16393, 10, None, "IID('{86F46084-16A8-4B5C-99E9-F848216788F0}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IUnitNumber_vtables_dispatch_ = 1
IUnitNumber_vtables_ = [
	(( 'X' , 'Result' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'X' , 'Result' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'Result' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'Result' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'TextUp' , 'PVal' , ), 3, (3, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'TextDown' , 'PVal' , ), 4, (4, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IUnitNumbers_vtables_dispatch_ = 1
IUnitNumbers_vtables_ = [
	(( 'UnitNumber' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{FABAF607-CB92-47C4-9409-B7678162051D}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Value' , ), 2, (2, (), [ (16393, 10, None, "IID('{FABAF607-CB92-47C4-9409-B7678162051D}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IUserDataStorage_vtables_dispatch_ = 1
IUserDataStorage_vtables_ = [
	(( 'Name' , 'Pass' , 'PVal' , ), 1, (1, (), [ (8, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'Pass' , 'PVal' , ), 1, (1, (), [ (8, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'SetPassword' , 'OldPass' , 'NewPass' , 'Result' , ), 2, (2, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Version' , 'Pass' , 'PVal' , ), 3, (3, (), [ (8, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Version' , 'Pass' , 'PVal' , ), 3, (3, (), [ (8, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'GetObject' , 'Index' , 'Object' , 'Numb' , 'Comment' , 
			 ), 4, (4, (), [ (12, 1, None, None) , (16396, 2, None, None) , (16387, 2, None, None) , (16392, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'SetObject' , 'Pass' , 'Index' , 'Object' , 'Comment' , 
			 'PVal' , ), 5, (5, (), [ (8, 1, None, None) , (12, 1, None, None) , (12, 1, None, None) , 
			 (8, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'AddObject' , 'Pass' , 'Object' , 'Comment' , 'PVal' , 
			 ), 6, (6, (), [ (8, 1, None, None) , (12, 1, None, None) , (8, 1, None, None) , (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'Pass' , 'Index' , 'PVal' , ), 7, (7, (), [ 
			 (8, 1, None, None) , (12, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Clear' , 'Pass' , 'Result' , ), 8, (8, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
]

IUserDataStorages_vtables_dispatch_ = 1
IUserDataStorages_vtables_ = [
	(( 'Item' , 'Index' , 'Result' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{DD2AF5C4-D5B9-420D-B658-F935F80A8586}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'StorageName' , 'Result' , ), 1, (1, (), [ (8, 1, None, None) , 
			 (16393, 10, None, "IID('{DD2AF5C4-D5B9-420D-B658-F935F80A8586}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'Password' , 'Index' , 'PVal' , ), 2, (2, (), [ 
			 (8, 1, None, None) , (12, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IUserDataStoragesMng_vtables_dispatch_ = 1
IUserDataStoragesMng_vtables_ = [
	(( 'Item' , 'Index' , 'Result' , ), 0, (0, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{9DBFB4EB-BE9F-46EF-88FF-BB603A9E786B}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Object' , 'Result' , ), 1, (1, (), [ (9, 1, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , 
			 (16393, 10, None, "IID('{9DBFB4EB-BE9F-46EF-88FF-BB603A9E786B}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'Index' , 'PVal' , ), 2, (2, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Clear' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IUserDesignationCompObj_vtables_dispatch_ = 1
IUserDesignationCompObj_vtables_ = [
	(( 'SetObjects' , 'Objects' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
]

IUserFolder_vtables_dispatch_ = 1
IUserFolder_vtables_ = [
	(( 'Add' , 'Type' , 'Result' , ), 1, (1, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'GetObjects' , 'ObjectsArray' , ), 2, (2, (), [ (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'SetObjects' , 'Objects' , 'Result' , ), 3, (3, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
]

IUserFolders_vtables_dispatch_ = 1
IUserFolders_vtables_ = [
	(( 'Add' , 'Result' , ), 1, (1, (), [ (16393, 10, None, "IID('{67671C8A-3587-41EB-9291-39E9F94E4EA5}')") , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IUserMetadataManager_vtables_dispatch_ = 1
IUserMetadataManager_vtables_ = [
	(( 'CreateStorage' , 'ApplicationIID' , 'ApplicationDescription' , 'Version' , 'Result' , 
			 ), 20001, (20001, (), [ (8, 1, None, None) , (8, 1, None, None) , (8, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'ExistStorage' , 'ApplicationIID' , 'Result' , ), 20002, (20002, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'DeleteStorage' , 'ApplicationIID' , 'Result' , ), 20003, (20003, (), [ (8, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'GetAllFilenames' , 'ApplicationIID' , 'FileNames' , ), 20004, (20004, (), [ (8, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'StorageInfo' , 'ApplicationIID' , 'ParameterName' , 'Result' , ), 20005, (20005, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'StorageInfo' , 'ApplicationIID' , 'ParameterName' , 'Result' , ), 20005, (20005, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'DeleteFile' , 'ApplicationIID' , 'StorageFileName' , 'Result' , ), 20006, (20006, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'IsExistFile' , 'ApplicationIID' , 'StorageFileName' , 'Result' , ), 20007, (20007, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'AddFile' , 'ApplicationIID' , 'SrcFileName' , 'DestFileName' , 'AllowReplacement' , 
			 'Compress' , 'Result' , ), 20008, (20008, (), [ (8, 1, None, None) , (8, 1, None, None) , 
			 (8, 1, None, None) , (11, 1, None, None) , (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'ExtractFile' , 'ApplicationIID' , 'SrcFileName' , 'DestFileName' , 'AllowReplacement' , 
			 'Result' , ), 20009, (20009, (), [ (8, 1, None, None) , (8, 1, None, None) , (8, 1, None, None) , 
			 (11, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IUserObject3D_vtables_dispatch_ = 1
IUserObject3D_vtables_ = [
	(( 'UserParameters' , 'iParam' , ), 102, (102, (), [ (16397, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'AssociationObject' , 'Index' , 'PVal' , ), 103, (103, (), [ (3, 1, None, None) , 
			 (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'AssociationObject' , 'Index' , 'PVal' , ), 103, (103, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'AssociationObjectCount' , 'PVal' , ), 104, (104, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'ClearAssociationObject' , 'Result' , ), 105, (105, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'PropertyObjectEditable' , 'PVal' , ), 106, (106, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'PropertyObjectEditable' , 'PVal' , ), 106, (106, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
]

IUserObjects3D_vtables_dispatch_ = 1
IUserObjects3D_vtables_ = [
	(( 'UserObject3D' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{1C1886BC-98DD-4AA9-B038-6849C7BCC86C}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Type' , 'Result' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{1C1886BC-98DD-4AA9-B038-6849C7BCC86C}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IUserParameters_vtables_dispatch_ = 1
IUserParameters_vtables_ = [
	(( 'LibraryFileName' , 'PVal' , ), 17001, (17001, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'LibraryFileName' , 'PVal' , ), 17001, (17001, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'LibraryName' , 'PVal' , ), 17002, (17002, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'LibraryName' , 'PVal' , ), 17002, (17002, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Command' , 'PVal' , ), 17003, (17003, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Command' , 'PVal' , ), 17003, (17003, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ObjectID' , 'PVal' , ), 17004, (17004, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'ObjectID' , 'PVal' , ), 17004, (17004, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'UserParams' , 'PVal' , ), 17005, (17005, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'UserParams' , 'PVal' , ), 17005, (17005, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IVariable7_vtables_dispatch_ = 1
IVariable7_vtables_ = [
	(( 'Name' , 'PVal' , ), 1, (1, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Note' , 'PVal' , ), 2, (2, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Note' , 'PVal' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Value' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Value' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'External' , 'PVal' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'External' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Information' , 'PVal' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'Information' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'Expression' , 'PVal' , ), 6, (6, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Expression' , 'PVal' , ), 6, (6, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'ParameterNote' , 'PVal' , ), 7, (7, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'DisplayName' , 'PVal' , ), 8, (8, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'LinkVariableName' , 'PVal' , ), 9, (9, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'LinkDocumentName' , 'PVal' , ), 10, (10, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'SetLink' , 'DocumentName' , 'VariableName' , 'PVal' , ), 11, (11, (), [ 
			 (8, 1, None, None) , (8, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Delete' , 'PVal' , ), 12, (12, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'ReadOnly' , 'PVal' , ), 13, (13, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'ReadOnly' , 'PVal' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Tolerance' , 'PVal' , ), 14, (14, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Tolerance' , 'PVal' , ), 14, (14, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'HighDeviation' , 'PVal' , ), 15, (15, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'HighDeviation' , 'PVal' , ), 15, (15, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'LowDeviation' , 'PVal' , ), 16, (16, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'LowDeviation' , 'PVal' , ), 16, (16, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'HasTolerance' , 'Result' , ), 17, (17, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'HasTolerance' , 'Result' , ), 17, (17, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Rectangle' , 'Result' , ), 18, (18, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Rectangle' , 'Result' , ), 18, (18, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Property' , 'Property' , ), 19, (19, (), [ (16393, 10, None, "IID('{C389F80D-228D-4FB1-B183-959AEA0B5906}')") , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'AddProperty' , 'Property' , ), 20, (20, (), [ (16393, 10, None, "IID('{C389F80D-228D-4FB1-B183-959AEA0B5906}')") , ], 1 , 1 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceOn' , 'Result' , ), 21, (21, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'ToleranceOn' , 'Result' , ), 21, (21, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'DeviationOn' , 'Result' , ), 22, (22, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'DeviationOn' , 'Result' , ), 22, (22, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'DeviationType' , 'Result' , ), 23, (23, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'DeviationType' , 'Result' , ), 23, (23, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
	(( 'IsCreatedDeviationVariables' , 'Result' , ), 24, (24, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 384 , (3, 0, None, None) , 0 , )),
	(( 'CreateDeviationVariables' , 'Result' , ), 25, (25, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 392 , (3, 0, None, None) , 0 , )),
	(( 'DeviationExpression' , 'HighDeviation' , 'Result' , ), 26, (26, (), [ (11, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 400 , (3, 0, None, None) , 0 , )),
	(( 'DeviationExpression' , 'HighDeviation' , 'Result' , ), 26, (26, (), [ (11, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 408 , (3, 0, None, None) , 0 , )),
]

IVariableTable_vtables_dispatch_ = 1
IVariableTable_vtables_ = [
	(( 'RowsCount' , 'Val' , ), 7001, (7001, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ColumnsCount' , 'Val' , ), 7002, (7002, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'VarName' , 'Column' , 'Val' , ), 7003, (7003, (), [ (3, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'VarName' , 'Column' , 'Val' , ), 7003, (7003, (), [ (3, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'VarNames' , 'Val' , ), 7004, (7004, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'VarNames' , 'Val' , ), 7004, (7004, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Comment' , 'Val' , 'BstrVal' , ), 7005, (7005, (), [ (3, 1, None, None) , 
			 (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Comment' , 'Val' , 'BstrVal' , ), 7005, (7005, (), [ (3, 1, None, None) , 
			 (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'TableRow' , 'Index' , 'Val' , ), 7006, (7006, (), [ (12, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'TableRow' , 'Index' , 'Val' , ), 7006, (7006, (), [ (12, 1, None, None) , 
			 (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Cell' , 'RowIndexVal' , 'ColIndex' , 'Val' , ), 7007, (7007, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Cell' , 'RowIndexVal' , 'ColIndex' , 'Val' , ), 7007, (7007, (), [ 
			 (3, 1, None, None) , (3, 1, None, None) , (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'ApplyVars' , 'Index' , 'PVal' , ), 7008, (7008, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'VisualTable' , 'WinVal' , 'Select' , 'PVal' , ), 7009, (7009, (), [ 
			 (3, 1, None, None) , (11, 1, None, None) , (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'AddColumn' , 'Val' , 'ColVal' , ), 7010, (7010, (), [ (8, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'DeleteColumn' , 'ColVal' , 'PVal' , ), 7011, (7011, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'AddRow' , 'Val' , 'RowVal' , ), 7012, (7012, (), [ (8, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'DeleteRow' , 'RowVal' , 'PVal' , ), 7013, (7013, (), [ (12, 1, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Clear' , 'PVal' , ), 7014, (7014, (), [ (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'FindColumnIndex' , 'Val' , 'PVal' , ), 7015, (7015, (), [ (8, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 1 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
]

IVector3D_vtables_dispatch_ = 1
IVector3D_vtables_ = [
	(( 'ParametersType' , 'PVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ParametersType' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Parameters' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
]

IVector3DAlongSurfaceNormalParameters_vtables_dispatch_ = 1
IVector3DAlongSurfaceNormalParameters_vtables_ = [
	(( 'BaseObject' , 'PVal' , ), 1, (1, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'BaseObject' , 'PVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'U' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'U' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'V' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'V' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

IVector3DBy2AnglesParameters_vtables_dispatch_ = 1
IVector3DBy2AnglesParameters_vtables_ = [
	(( 'LocalCS' , 'PVal' , ), 1, (1, (), [ (9, 1, None, "IID('{BA6395F5-3506-4483-8864-4EEC220AF316}')") , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'LocalCS' , 'PVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{BA6395F5-3506-4483-8864-4EEC220AF316}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'AngleA' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'AngleA' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'AngleB' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'AngleB' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IVector3DBy2VertexesParameters_vtables_dispatch_ = 1
IVector3DBy2VertexesParameters_vtables_ = [
	(( 'Vertex1' , 'PVal' , ), 1, (1, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Vertex1' , 'PVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Vertex2' , 'PVal' , ), 2, (2, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Vertex2' , 'PVal' , ), 2, (2, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 3, (3, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IVector3DByCoefficientsParameters_vtables_dispatch_ = 1
IVector3DByCoefficientsParameters_vtables_ = [
	(( 'LocalCS' , 'PVal' , ), 1, (1, (), [ (9, 1, None, "IID('{BA6395F5-3506-4483-8864-4EEC220AF316}')") , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'LocalCS' , 'PVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{BA6395F5-3506-4483-8864-4EEC220AF316}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'CoefficientByX' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'CoefficientByX' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'CoefficientByY' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'CoefficientByY' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'CoefficientByZ' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'CoefficientByZ' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

IVector3DByCurveParameters_vtables_dispatch_ = 1
IVector3DByCurveParameters_vtables_ = [
	(( 'Curve' , 'PVal' , ), 1, (1, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Curve' , 'PVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Offset' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Offset' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'VectorType' , 'PVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'VectorType' , 'PVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

IVector3DByLocalCSParameters_vtables_dispatch_ = 1
IVector3DByLocalCSParameters_vtables_ = [
	(( 'LocalCS' , 'PVal' , ), 1, (1, (), [ (9, 1, None, "IID('{BA6395F5-3506-4483-8864-4EEC220AF316}')") , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'LocalCS' , 'PVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{BA6395F5-3506-4483-8864-4EEC220AF316}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'AxisType' , 'PVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'AxisType' , 'PVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 4, (4, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

IVector3DByObjectParameters_vtables_dispatch_ = 1
IVector3DByObjectParameters_vtables_ = [
	(( 'BaseObject' , 'PVal' , ), 1, (1, (), [ (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'BaseObject' , 'PVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IVector3DByScreenNormalParameters_vtables_dispatch_ = 1
IVector3DByScreenNormalParameters_vtables_ = [
	(( 'Direction' , 'PVal' , ), 1, (1, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 1, (1, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'Fix' , 'PVal' , ), 2, (2, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'Fix' , 'PVal' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
]

IVertex_vtables_dispatch_ = 1
IVertex_vtables_ = [
	(( 'GetPoint' , 'X' , 'Y' , 'Z' , 'PVal' , 
			 ), 1, (1, (), [ (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'IsFreeVertex' , 'PVal' , ), 2, (2, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'IsTopologyVertex' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'IsSketchVertex' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

IView_vtables_dispatch_ = 1
IView_vtables_ = [
	(( 'Number' , 'PVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Number' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Name' , 'PVal' , ), 2, (2, (), [ (8, 49, "''", None) , ], 1 , 4 , 4 , 0 , 176 , (3, 32, None, None) , 0 , )),
	(( 'Name' , 'PVal' , ), 2, (2, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Background' , 'PVal' , ), 3, (3, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'Background' , 'PVal' , ), 3, (3, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'PVal' , ), 4, (4, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Visible' , 'PVal' , ), 4, (4, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Current' , 'PVal' , ), 5, (5, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Current' , 'PVal' , ), 5, (5, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Color' , 'PVal' , ), 6, (6, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Color' , 'PVal' , ), 6, (6, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Comment' , 'PVal' , ), 7, (7, (), [ (8, 1, None, None) , ], 1 , 4 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Comment' , 'PVal' , ), 7, (7, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'ObjectCount' , 'PVal' , ), 8, (8, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'X' , 'PVal' , ), 9, (9, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'X' , 'PVal' , ), 9, (9, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'PVal' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Y' , 'PVal' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'Scale' , 'PVal' , ), 11, (11, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'Scale' , 'PVal' , ), 11, (11, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 12, (12, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 12, (12, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'ViewType' , 'PVal' , ), 13, (13, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'Layers' , 'PVal' , ), 14, (14, (), [ (16393, 10, None, "IID('{F6DC2898-D596-4418-A21A-D15AE07B9A40}')") , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
	(( 'Variables' , 'Result' , ), 15, (15, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 360 , (3, 0, None, None) , 0 , )),
	(( 'Variable' , 'Index' , 'Result' , ), 16, (16, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{8BAB52D9-8EF6-43A6-A1B8-AF42D5961A94}')") , ], 1 , 2 , 4 , 0 , 368 , (3, 0, None, None) , 0 , )),
	(( 'VariablesCount' , 'Result' , ), 17, (17, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 376 , (3, 0, None, None) , 0 , )),
]

IView1_vtables_dispatch_ = 1
IView1_vtables_ = [
	(( 'LocalCoordinateSystems2D' , 'Result' , ), 18, (18, (), [ (16393, 10, None, "IID('{E6A6A1C8-A6F9-470E-AF64-D6AB7741D684}')") , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'EditMacroVisibleRegime' , 'Result' , ), 19, (19, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'Numerator' , 'N' , ), 20, (20, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'Numerator' , 'N' , ), 20, (20, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'Printable' , 'PVal' , ), 21, (21, (), [ (11, 49, 'True', None) , ], 1 , 4 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Printable' , 'PVal' , ), 21, (21, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'BaseObject' , 'Result' , ), 22, (22, (), [ (16393, 10, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'BaseObject' , 'Result' , ), 22, (22, (), [ (9, 1, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Crossed' , 'Result' , ), 23, (23, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'CrossedTitle' , 'Result' , ), 24, (24, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'FindObject' , 'X' , 'Y' , 'Limit' , 'Param' , 
			 'Result' , ), 25, (25, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (9, 1, None, "IID('{8F1A7123-BD4A-4A49-8E22-1502D59B1FE6}')") , (16393, 10, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 1 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'FindObjects' , 'X' , 'Y' , 'Limit' , 'Param' , 
			 'Result' , ), 26, (26, (), [ (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (9, 1, None, "IID('{8F1A7123-BD4A-4A49-8E22-1502D59B1FE6}')") , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'SelectObjects' , 'RegionType' , 'XMin' , 'YMin' , 'XMax' , 
			 'YMax' , 'Result' , ), 27, (27, (), [ (3, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16396, 10, None, None) , ], 1 , 1 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
]

IViewDesignation_vtables_dispatch_ = 1
IViewDesignation_vtables_ = [
	(( 'ShowName' , 'PVal' , ), 4001, (4001, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 56 , (3, 0, None, None) , 0 , )),
	(( 'ShowName' , 'PVal' , ), 4001, (4001, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 64 , (3, 0, None, None) , 0 , )),
	(( 'ShowUnfold' , 'PVal' , ), 4002, (4002, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 72 , (3, 0, None, None) , 0 , )),
	(( 'ShowUnfold' , 'PVal' , ), 4002, (4002, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 80 , (3, 0, None, None) , 0 , )),
	(( 'ShowScale' , 'PVal' , ), 4003, (4003, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'ShowScale' , 'PVal' , ), 4003, (4003, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'ShowTurn' , 'PVal' , ), 4004, (4004, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'ShowTurn' , 'PVal' , ), 4004, (4004, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'ShowAngle' , 'PVal' , ), 4005, (4005, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'ShowAngle' , 'PVal' , ), 4005, (4005, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'ShowPage' , 'PVal' , ), 4006, (4006, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'ShowPage' , 'PVal' , ), 4006, (4006, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'ShowZone' , 'PVal' , ), 4007, (4007, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'ShowZone' , 'PVal' , ), 4007, (4007, (), [ (11, 49, 'False', None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'Designation' , 'PVal' , ), 4008, (4008, (), [ (16392, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'RefObject' , 'PVal' , ), 4009, (4009, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'RefObject' , 'PVal' , ), 4009, (4009, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'DrawingText' , 'PVal' , ), 4010, (4010, (), [ (16393, 10, None, "IID('{07EF021F-11C1-4015-8D87-4DC94A2A71B0}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
]

IViewPointer_vtables_dispatch_ = 1
IViewPointer_vtables_ = [
	(( 'X1' , 'Result' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'X1' , 'Result' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'Result' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'Result' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'Result' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'Result' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'Result' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'Result' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'TextX' , 'Result' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'TextX' , 'Result' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'TextY' , 'Result' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'TextY' , 'Result' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'AutoSorted' , 'Result' , ), 7, (7, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'AutoSorted' , 'Result' , ), 7, (7, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'AutoSheet' , 'Result' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'AutoSheet' , 'Result' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'AutoZone' , 'Result' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'AutoZone' , 'Result' , ), 9, (9, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'Text' , 'PVal' , ), 10, (10, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'AdditionalText' , 'PVal' , ), 11, (11, (), [ (16393, 10, None, "IID('{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}')") , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'ArrowType' , 'PVal' , ), 12, (12, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'ArrowType' , 'PVal' , ), 12, (12, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
]

IViewPointers_vtables_dispatch_ = 1
IViewPointers_vtables_ = [
	(( 'ViewPointer' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{3EE98177-63E8-4C48-89AD-3D5CCCF84D72}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Value' , ), 2, (2, (), [ (16393, 10, None, "IID('{3EE98177-63E8-4C48-89AD-3D5CCCF84D72}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IViews_vtables_dispatch_ = 1
IViews_vtables_ = [
	(( 'View' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{21A7BA87-1C8B-41B4-8247-CDD593546F37}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'ViewByNumber' , 'Numb' , 'Result' , ), 2, (2, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{21A7BA87-1C8B-41B4-8247-CDD593546F37}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'ViewType' , 'Result' , ), 3, (3, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{21A7BA87-1C8B-41B4-8247-CDD593546F37}')") , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'ActiveView' , 'Result' , ), 4, (4, (), [ (16393, 10, None, "IID('{21A7BA87-1C8B-41B4-8247-CDD593546F37}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'AddStandartViews' , 'FileName' , 'ProjectionName' , 'ProjectionsTypes' , 'X' , 
			 'Y' , 'Scale' , 'DX' , 'DY' , 'Result' , 
			 ), 5, (5, (), [ (8, 1, None, None) , (8, 1, None, None) , (12, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
]

IViewsAndLayersManager_vtables_dispatch_ = 1
IViewsAndLayersManager_vtables_ = [
	(( 'Views' , 'PVal' , ), 1, (1, (), [ (16393, 10, None, "IID('{9CD1B5E6-C1A2-4910-8D0C-97080B14AA3D}')") , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'LayerGroups' , 'PVal' , ), 2, (2, (), [ (16393, 10, None, "IID('{DBFF6D98-8F79-453E-9B8B-81E40A6D8027}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IWaveLine_vtables_dispatch_ = 1
IWaveLine_vtables_ = [
	(( 'X1' , 'PVal' , ), 1, (1, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'X1' , 'PVal' , ), 1, (1, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'PVal' , ), 2, (2, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Y1' , 'PVal' , ), 2, (2, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'PVal' , ), 3, (3, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'X2' , 'PVal' , ), 3, (3, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'PVal' , ), 4, (4, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 208 , (3, 0, None, None) , 0 , )),
	(( 'Y2' , 'PVal' , ), 4, (4, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 216 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 5, (5, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 224 , (3, 0, None, None) , 0 , )),
	(( 'Angle' , 'PVal' , ), 5, (5, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 232 , (3, 0, None, None) , 0 , )),
	(( 'Length' , 'PVal' , ), 6, (6, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 240 , (3, 0, None, None) , 0 , )),
	(( 'Length' , 'PVal' , ), 6, (6, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 248 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Result' , ), 7, (7, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 256 , (3, 0, None, None) , 0 , )),
	(( 'Style' , 'Result' , ), 7, (7, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 264 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 272 , (3, 0, None, None) , 0 , )),
	(( 'Direction' , 'PVal' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 280 , (3, 0, None, None) , 0 , )),
	(( 'HalfWavesCount' , 'PVal' , ), 9, (9, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 288 , (3, 0, None, None) , 0 , )),
	(( 'HalfWavesCount' , 'PVal' , ), 9, (9, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 296 , (3, 0, None, None) , 0 , )),
	(( 'WaveLength' , 'PVal' , ), 10, (10, (), [ (5, 1, None, None) , ], 1 , 4 , 4 , 0 , 304 , (3, 0, None, None) , 0 , )),
	(( 'WaveLength' , 'PVal' , ), 10, (10, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 312 , (3, 0, None, None) , 0 , )),
	(( 'SetWavesAmplitude' , 'Representation' , 'NewVal' , 'Result' , ), 11, (11, (), [ 
			 (11, 1, None, None) , (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 320 , (3, 0, None, None) , 0 , )),
	(( 'WavesAmplitude' , 'PVal' , ), 12, (12, (), [ (16389, 10, None, None) , ], 1 , 2 , 4 , 0 , 328 , (3, 0, None, None) , 0 , )),
	(( 'WavesAmplitudeRepresentation' , 'PVal' , ), 13, (13, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 336 , (3, 0, None, None) , 0 , )),
	(( 'AutoWavesAmplitude' , 'PVal' , ), 14, (14, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 344 , (3, 0, None, None) , 0 , )),
	(( 'AutoWavesAmplitude' , 'PVal' , ), 14, (14, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 352 , (3, 0, None, None) , 0 , )),
]

IWaveLines_vtables_dispatch_ = 1
IWaveLines_vtables_ = [
	(( 'WaveLine' , 'Index' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{FA2012E1-A983-47D3-9D43-B8DC619AC554}')") , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'Add' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{FA2012E1-A983-47D3-9D43-B8DC619AC554}')") , ], 1 , 1 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
]

IZone_vtables_dispatch_ = 1
IZone_vtables_ = [
	(( 'ZoneType' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ZoneType' , 'PVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Parameters' , 'PVal' , ), 2, (2, (), [ (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'GetGabarit' , 'X1' , 'Y1' , 'Z1' , 'X2' , 
			 'Y2' , 'Z2' , 'Result' , ), 3, (3, (), [ (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'SelectObjects' , 'SelectType' , 'Objects' , ), 4, (4, (), [ (3, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
	(( 'SelectParts' , 'SelectType' , 'Objects' , ), 5, (5, (), [ (3, 1, None, None) , 
			 (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 200 , (3, 0, None, None) , 0 , )),
]

IZoneDivision_vtables_dispatch_ = 1
IZoneDivision_vtables_ = [
	(( 'ZoneDivisionType' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'ZoneDivisionType' , 'PVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'Zone' , 'Result' , ), 2, (2, (), [ (16393, 10, None, "IID('{05C71C4B-F8BC-42E9-89D5-B9BC0145ED36}')") , ], 1 , 2 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'Zone' , 'Result' , ), 2, (2, (), [ (9, 1, None, "IID('{05C71C4B-F8BC-42E9-89D5-B9BC0145ED36}')") , ], 1 , 4 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
	(( 'Parameters' , 'PVal' , ), 3, (3, (), [ (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 2 , 4 , 0 , 192 , (3, 0, None, None) , 0 , )),
]

IZoneDivisionParametersByPlanes_vtables_dispatch_ = 1
IZoneDivisionParametersByPlanes_vtables_ = [
	(( 'Planes' , 'Result' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Planes' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IZoneDivisionParametersRegular_vtables_dispatch_ = 1
IZoneDivisionParametersRegular_vtables_ = [
	(( 'XCount' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'XCount' , 'PVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'YCount' , 'PVal' , ), 2, (2, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'YCount' , 'PVal' , ), 2, (2, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'ZCount' , 'PVal' , ), 3, (3, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'ZCount' , 'PVal' , ), 3, (3, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
]

IZoneParametersByBorderPoints_vtables_dispatch_ = 1
IZoneParametersByBorderPoints_vtables_ = [
	(( 'BuildingType' , 'PVal' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'BuildingType' , 'PVal' , ), 1, (1, (), [ (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'GetPoint' , 'First' , 'X' , 'Y' , 'Z' , 
			 'Result' , ), 2, (2, (), [ (11, 1, None, None) , (16389, 2, None, None) , (16389, 2, None, None) , 
			 (16389, 2, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'SetPoint' , 'First' , 'X' , 'Y' , 'Z' , 
			 'Result' , ), 3, (3, (), [ (11, 1, None, None) , (5, 1, None, None) , (5, 1, None, None) , 
			 (5, 1, None, None) , (16395, 10, None, None) , ], 1 , 1 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'AssociationObject' , 'First' , 'PVal' , ), 4, (4, (), [ (11, 1, None, None) , 
			 (9, 1, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 4 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'AssociationObject' , 'First' , 'PVal' , ), 4, (4, (), [ (11, 1, None, None) , 
			 (16393, 10, None, "IID('{E37256D4-9021-47AC-8FAF-3713FB2A50C3}')") , ], 1 , 2 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'PointType' , 'First' , 'PVal' , ), 5, (5, (), [ (11, 1, None, None) , 
			 (3, 1, None, None) , ], 1 , 4 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'PointType' , 'First' , 'PVal' , ), 5, (5, (), [ (11, 1, None, None) , 
			 (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'PointParameters' , 'First' , 'Result' , ), 6, (6, (), [ (11, 1, None, None) , 
			 (16393, 10, None, "IID('{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}')") , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
]

IZoneParametersByObjects_vtables_dispatch_ = 1
IZoneParametersByObjects_vtables_ = [
	(( 'BaseObjects' , 'Result' , ), 1, (1, (), [ (16396, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'BaseObjects' , 'Result' , ), 1, (1, (), [ (12, 1, None, None) , ], 1 , 4 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
]

IZonesManager_vtables_dispatch_ = 1
IZonesManager_vtables_ = [
	(( 'ZonesCount' , 'Result' , ), 1, (1, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 88 , (3, 0, None, None) , 0 , )),
	(( 'Zone' , 'Index' , 'Result' , ), 2, (2, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{05C71C4B-F8BC-42E9-89D5-B9BC0145ED36}')") , ], 1 , 2 , 4 , 0 , 96 , (3, 0, None, None) , 0 , )),
	(( 'AddZone' , 'ZoneType' , 'Result' , ), 3, (3, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{05C71C4B-F8BC-42E9-89D5-B9BC0145ED36}')") , ], 1 , 1 , 4 , 0 , 104 , (3, 0, None, None) , 0 , )),
	(( 'ZonesDivisionCount' , 'Result' , ), 4, (4, (), [ (16387, 10, None, None) , ], 1 , 2 , 4 , 0 , 112 , (3, 0, None, None) , 0 , )),
	(( 'ZoneDivision' , 'Index' , 'Result' , ), 5, (5, (), [ (12, 1, None, None) , 
			 (16393, 10, None, "IID('{D67AA2B3-2E8A-4882-B11A-3828D106CA0A}')") , ], 1 , 2 , 4 , 0 , 120 , (3, 0, None, None) , 0 , )),
	(( 'AddZoneDivision' , 'ZoneType' , 'Result' , ), 6, (6, (), [ (3, 1, None, None) , 
			 (16393, 10, None, "IID('{D67AA2B3-2E8A-4882-B11A-3828D106CA0A}')") , ], 1 , 1 , 4 , 0 , 128 , (3, 0, None, None) , 0 , )),
	(( 'CurrentZone' , 'Result' , ), 7, (7, (), [ (16393, 10, None, "IID('{05C71C4B-F8BC-42E9-89D5-B9BC0145ED36}')") , ], 1 , 2 , 4 , 0 , 136 , (3, 0, None, None) , 0 , )),
	(( 'CurrentZone' , 'Result' , ), 7, (7, (), [ (9, 1, None, "IID('{05C71C4B-F8BC-42E9-89D5-B9BC0145ED36}')") , ], 1 , 4 , 4 , 0 , 144 , (3, 0, None, None) , 0 , )),
	(( 'ZonesVisible' , 'PVal' , ), 8, (8, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 152 , (3, 0, None, None) , 0 , )),
	(( 'ZonesVisible' , 'PVal' , ), 8, (8, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 160 , (3, 0, None, None) , 0 , )),
	(( 'CreateZonesInGlobalCS' , 'PVal' , ), 9, (9, (), [ (16395, 10, None, None) , ], 1 , 2 , 4 , 0 , 168 , (3, 0, None, None) , 0 , )),
	(( 'CreateZonesInGlobalCS' , 'PVal' , ), 9, (9, (), [ (11, 1, None, None) , ], 1 , 4 , 4 , 0 , 176 , (3, 0, None, None) , 0 , )),
	(( 'ZonesTree' , 'Result' , ), 10, (10, (), [ (16393, 10, None, "IID('{EF4343FA-985D-4FE9-AD5F-439BC8F92958}')") , ], 1 , 2 , 4 , 0 , 184 , (3, 0, None, None) , 0 , )),
]

RecordMap = {
}

CLSIDToClassMap = {
	'{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}' : IKompasAPIObject,
	'{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}' : IApplication,
	'{8BF39F08-5537-4910-84CE-B338E55F7BCF}' : IDocuments,
	'{901F85DE-FA5A-4314-BD75-066A79AF20A8}' : IKompasCollection,
	'{5C6E318D-BD6E-4AFA-8A13-977EAA0845EF}' : IKompasDocument,
	'{1D18C466-C085-4D68-A465-A85D0C8E3A0E}' : IDocumentFrames,
	'{4437FABA-990F-45E2-B1A2-7754FB326B76}' : IDocumentFrame,
	'{B35FF50E-2991-4630-8AB8-DC3153E7971A}' : IDocumentSettings,
	'{B9632C5C-86E1-4BC9-83A5-A954E407246A}' : ISpecificationDescriptions,
	'{9678959E-166B-45F3-BDE8-88BBF4645F5C}' : ISpecificationDescription,
	'{F237D2B3-DFEE-4702-B71F-E5F6923F03E6}' : ISpecificationStyle,
	'{BB719D42-E44C-445B-969A-0E2F63E97FC8}' : ISpecificationTuning,
	'{7EA65CA0-420D-4E1D-8C19-998495C4DA2F}' : ITextStyle,
	'{A6AD008D-58D1-48B5-BD29-E6795289FE4B}' : ITextFont,
	'{BB66E097-95C7-49B1-B6FD-3506C7758D09}' : ITabulators,
	'{2DD73B92-F8C8-49AA-AECD-B75713427FC1}' : ITabulator,
	'{01B1BF6F-B9E3-4E94-99A0-81394FB99B16}' : ISpecificationTuningSections,
	'{E68AA413-CC35-450D-BF35-0F294F59B08C}' : ISpecificationTuningSection,
	'{56532CB4-BD3F-442C-AFA4-0E6BEB677E61}' : ISpecificationSubsections,
	'{7F0E5F63-815C-46E5-B99E-C24244566C00}' : ISpecificationSubsection,
	'{8910CC92-AC76-4837-AB7A-5FD3C7B74728}' : IAdditionalBlockTunings,
	'{9CD5B016-9CE9-4E0A-8902-196D11360536}' : IAdditionalBlockTuning,
	'{43EFA203-F956-43D6-B603-87807DDEFD0A}' : IAdditionalBlockSectionTunings,
	'{E04B8464-C8D6-4BAC-99B5-AE79EBBDB205}' : IAdditionalBlockSectionTuning,
	'{B9CDE694-4C33-4375-A6F6-AE94DC759510}' : ISheetFormat,
	'{41529A95-51F0-44B0-9D55-5753BCEB23BC}' : ISpecificationColumnStyles,
	'{16839CAA-3AFB-49A4-A19A-C61963967649}' : ISpecificationColumnStyle,
	'{24AE8484-F4F4-4059-AFC7-9492A64C88E8}' : ISpecificationSectionStyles,
	'{4B61FC7F-4826-4B58-8CCB-7D459AD0BE7B}' : ISpecificationSectionStyle,
	'{90E2FBEC-A56F-423C-B89F-479673EDD895}' : IAdditionalBlockStyles,
	'{B2A43FA6-9BCE-4468-9662-811A6255E220}' : IAdditionalBlockStyle,
	'{B2B97D19-3A0B-4C9F-A6AC-DEFFAFE0D1C2}' : ISpecificationBaseObjects,
	'{49994ED8-96BA-4D9D-B642-5F0F1E3FED16}' : ISpecificationBaseObject,
	'{72EB4E8E-7952-4B36-852B-4816B7B5AFEE}' : ISpecificationObject,
	'{9F44BF03-DE25-4DDE-ADA0-92384199C100}' : ISpecificationColumns,
	'{3ECFB777-2645-42B5-A6ED-111688433B26}' : ISpecificationColumn,
	'{F4BAB79A-8A35-44D5-BE44-C566E444F342}' : ISpecificationColumnItems,
	'{2BABDD01-EACA-4137-9749-25B8C5E230EE}' : ISpecificationColumnItem,
	'{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}' : IText,
	'{AAB72FE2-DEA3-4FB6-B0DD-B926249EF67C}' : ITextLine,
	'{1DE74AFB-5026-4B85-861F-F0CFDBD443E6}' : ITextItem,
	'{9AE6C0A0-72EB-4A51-B54C-A0E57CC5F6DC}' : ITextTable,
	'{81FAB1C5-F566-4D06-8D3D-17FF01D3566F}' : IAttachedDocuments,
	'{333E9E11-D161-49AE-9791-8BEDB58B4C78}' : IAttachedDocument,
	'{B8BD0FC7-AB2B-4E7A-8EC2-82060D7D29A7}' : ISpecificationCommentObjects,
	'{3B6B80CA-2145-4184-B786-0C571DF5ACD7}' : ISpecificationCommentObject,
	'{7AB54196-0B76-4B01-B769-7F47637173C4}' : ILayoutSheets,
	'{D87B5A80-CF52-4510-ADD9-D1344FFFFC07}' : ILayoutSheet,
	'{250CE350-7C21-47FD-8FF2-C44A9FF177DF}' : IStamp,
	'{77A6D4CA-6418-4DEE-B59C-400BFD052375}' : IUserDataStoragesMng,
	'{9DBFB4EB-BE9F-46EF-88FF-BB603A9E786B}' : IUserDataStorages,
	'{DD2AF5C4-D5B9-420D-B658-F935F80A8586}' : IUserDataStorage,
	'{A70BF191-E1E1-4A92-8CA9-E6D3FEAD2D9A}' : ILoadCombinationsParam,
	'{FADCA157-95B1-4E3F-97AA-622E34DA3238}' : IOpenDocumentParam,
	'{CB5FDBC8-4DAE-4C4B-87D5-6FD1F2705C38}' : IProcessParam,
	'{5BA6324E-E555-490F-A0E2-68D3C6C88D92}' : IPropertyTabs,
	'{45DE8E5B-BC2B-4584-8BA7-D3014D3A2397}' : IPropertyTab,
	'{548241BA-FDA8-4633-981E-94552BE38D6B}' : IPropertyControls,
	'{E35F8FF8-03C6-460C-A2F1-294A3A29A029}' : IPropertyControl,
	'{34196EC3-58B2-436C-A353-427703740874}' : IPropertyManager,
	'{53CDC510-99EA-4736-8542-194F4D8FB32B}' : ILibraryManager,
	'{80F95B5B-DB8A-46B7-8C22-605A0AECD597}' : IProceduresLibraries,
	'{1AECE59E-DE4C-4FB9-B62B-7967573AD3B1}' : IProceduresLibrary,
	'{9D6E9AE1-7DDF-4354-B8D0-E12023B186FA}' : ILibrary,
	'{1A77F076-2295-40F9-B1AA-2838C4CA0887}' : IProcedures,
	'{7BF9DF08-D14D-4DA9-ABC2-FB458E7122D0}' : IProcedure,
	'{A6E82D68-69D5-40C0-9A85-275B22219135}' : IInsertsLibraries,
	'{885CAD68-B42B-45CF-8620-E0138558EFE3}' : IInsertsLibrary,
	'{FCBF6340-119D-4736-BB95-F1EAB4BEF1B8}' : IInserts,
	'{D6A6D305-6B5C-4392-B61D-D669C092EEF2}' : IInsert,
	'{0A8B4CD1-7158-4CE6-96E0-885376F5DE1B}' : IKompasError,
	'{642D03AB-4798-48A5-B075-3CD9AFA18554}' : IConverter,
	'{2AA9F713-2328-4E8F-B996-9DFDABC67DC9}' : ICheckSum,
	'{BE125ABA-EAB2-4A22-99D7-108C84B6DCC5}' : IProgressBarIndicator,
	'{FFB66332-17FF-47EB-AC43-32084F8F6077}' : ISystemSettings,
	'{76D9033D-5F87-41CC-A3E8-55EFEE94B677}' : ILibArraySettings,
	'{246741CF-BC91-4E69-AEEE-CF905B9C05F7}' : IThreadPattern,
	'{0409EC8F-88F7-4242-81E7-965ABEAE932C}' : IMath2D,
	'{65C82884-C41B-47A1-8C07-E8820D6718EA}' : ICurve2D,
	'{9D86880B-C004-475D-8221-B786FD5A228B}' : IPrintJob,
	'{0EC985BC-81FC-498E-BF15-03DDC870AA33}' : IPrintJob_Sheet,
	'{E821AE61-FA05-4B39-8908-BD37D6D044A4}' : IStyles,
	'{8DFD15E0-345E-4B1C-86A1-BD65F87128B5}' : IStyle,
	'{096E62B3-7184-4998-9925-74BB710D8D8E}' : IKompasDocument2D,
	'{A4737593-578B-4187-8CAD-E1056EB5404B}' : IViewsAndLayersManager,
	'{9CD1B5E6-C1A2-4910-8D0C-97080B14AA3D}' : IViews,
	'{3DD7F97B-59CB-4297-A1BA-04E5A7FFF448}' : IDrawingObjects,
	'{07EF021F-11C1-4015-8D87-4DC94A2A71B0}' : IDrawingObject,
	'{21A7BA87-1C8B-41B4-8247-CDD593546F37}' : IView,
	'{F6DC2898-D596-4418-A21A-D15AE07B9A40}' : ILayers,
	'{9AD76C38-CC48-4901-AEE5-27B48F51563C}' : ILayer,
	'{8BAB52D9-8EF6-43A6-A1B8-AF42D5961A94}' : IVariable7,
	'{C389F80D-228D-4FB1-B183-959AEA0B5906}' : IProperty,
	'{DBFF6D98-8F79-453E-9B8B-81E40A6D8027}' : ILayerGroups,
	'{265BBB5A-7B8A-4AA5-A0BB-FF64D23BE62B}' : ILayerGroup,
	'{BCA22E27-AB60-4BA6-87EE-92158AA6D366}' : ILayerFilterConditions,
	'{D743BC12-82A9-4E8F-85B2-7154A356ACC0}' : ILayerFilterCondition,
	'{7B60E769-06C3-4FDC-9677-7B5EF5180308}' : IKompasDocument3D,
	'{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}' : IPart7,
	'{E37256D4-9021-47AC-8FAF-3713FB2A50C3}' : IModelObject,
	'{EF4343FA-985D-4FE9-AD5F-439BC8F92958}' : IFeature7,
	'{42F8FCEF-E56F-466C-8814-BEBAC0719AE6}' : IParts7,
	'{125CB096-639E-479F-98DE-F27FAB23838A}' : IModelObjects,
	'{2B8B154E-ED76-4FF0-B3E4-FEE691D014A4}' : IVariableTable,
	'{BA6395F5-3506-4483-8864-4EEC220AF316}' : ILocalCoordinateSystem,
	'{D71AEDBE-01D4-4C7D-96DC-94981F2A1C37}' : IPoint3D,
	'{D51A4DCF-627D-44F5-89BA-46EF2449A212}' : IVector3D,
	'{437D6587-7649-4A0C-80BB-7A6E89661839}' : IHatchParam,
	'{9C66DE49-529C-4678-9AF1-12710CB77804}' : IPlacement3D,
	'{AED8F9FC-E493-4CBD-9341-9D9E39E14FDC}' : ISpecRough3D,
	'{95F316E1-0A18-4F42-8B70-1423250F244D}' : IMateConstraints3D,
	'{9E37E1F5-F770-473A-B996-A6753EDA73A5}' : IMateConstraint3D,
	'{4F122E22-0AA6-46E1-841F-A2504B145995}' : IBody7,
	'{0155AE59-92F4-4CEE-9633-8ADA943388CB}' : IUserFolders,
	'{67671C8A-3587-41EB-9291-39E9F94E4EA5}' : IUserFolder,
	'{0B93D860-69EC-4D03-8A1D-EB0C936B1D45}' : IZonesManager,
	'{05C71C4B-F8BC-42E9-89D5-B9BC0145ED36}' : IZone,
	'{D67AA2B3-2E8A-4882-B11A-3828D106CA0A}' : IZoneDivision,
	'{E6DF688C-5B23-436B-A027-A96BFD5484CC}' : ISelectionManager,
	'{E2D9EAA6-F88C-4ADB-AC32-854E32E9FEE1}' : IChooseManager,
	'{94F965B0-5ABB-4994-98C7-B08FA8515452}' : IAttribute,
	'{414CF83E-4FA3-42AB-BC26-6C6BBF91BB0F}' : IAttributeType,
	'{3FDE0F44-4459-49F3-A012-E64F9BFA454D}' : IColumnInfo,
	'{CD435B3D-175C-4E18-BAA0-81FDD7EB6A86}' : ITechnicalDemand3D,
	'{649F0EB2-EBC0-449B-8B61-DC3CF1953BF9}' : IDrawingObject1,
	'{131069F4-A4E2-4DB4-A559-85EACCC74CE4}' : IParametriticConstraint,
	'{58890FE8-E671-4561-994A-600DD29032E4}' : IKompasDocument1,
	'{FB57F1C4-44FE-4C73-9B15-87241E8735B5}' : IKompasDocument2D1,
	'{B21C70C9-53EC-4BB7-A9DB-BCE852CA6716}' : IMacroObject,
	'{BA2D820C-0DB9-47C6-A32D-34C7D8BA1B2F}' : ILeaders,
	'{1AF590A9-C339-477A-9F22-799C04D20BB4}' : IBaseLeader,
	'{8F1A7123-BD4A-4A49-8E22-1502D59B1FE6}' : IFindObjectParameters,
	'{0ED06421-907C-4EF0-89F7-AEFC81BEF1DF}' : IDrawingGroups,
	'{2C96ACB2-4877-45D9-B62D-78BBAD704458}' : IDrawingGroup,
	'{58E1BACA-32D5-4EAB-87E9-D14816DAC29F}' : ICopyObjectParam,
	'{C74D7419-0970-4904-907C-DCC5407C59B0}' : IProcess2D,
	'{A6E4F3B6-0554-4A67-A700-428090A6739A}' : IPhantom2D,
	'{92AB02F7-2C68-4A74-9E74-70C51E015FEF}' : IKompasDocument3D1,
	'{75F1CA7E-5071-4C1F-8A9F-F76A6E05CAF6}' : IDocument3DManager,
	'{D637078B-6498-40B6-9F41-83ED1EA40D1F}' : ILayers3D,
	'{D8ADF279-1CAC-4A2A-911B-9A44378407A0}' : ILayer3D,
	'{D3F08D03-3BB2-4DE6-95A9-38B5C05D8C12}' : ILayerGroups3D,
	'{0B176BBC-51F5-4D31-A630-6A04207E4DA1}' : ILayerGroup3D,
	'{77730022-3179-4674-AE49-604FABC0B6B1}' : IProcess3D,
	'{5FBB9528-B629-46DE-8BA6-13C5872BDD15}' : IManipulators,
	'{606FD023-3944-4215-A426-1E4EB82A8E32}' : IBaseManipulator,
	'{C2214318-5C89-40F8-A25C-C87D08B490F4}' : IDrawingDocument,
	'{D723AAC1-0315-4AED-99BF-88A7E55B6E6D}' : ISpecRough,
	'{18C80AE5-BF92-482A-9C56-3D1638F5E5F5}' : ITechnicalDemand,
	'{E19CE626-DF9C-48C4-A83D-3E3BC7F0DACA}' : IFragmentDocument,
	'{E3FA8FD0-6187-4625-89B7-3C815651944D}' : ISpecificationDocument,
	'{71A589EA-D32F-42C4-BBC4-A51611E85E90}' : ITextDocument,
	'{0075EA2A-5498-4E28-BDF3-0288EB168054}' : IPartDocument,
	'{F6B3F33A-3273-43EF-9B8A-7C0AF8FAA129}' : IAssemblyDocument,
	'{E0197BA7-C3FB-44A3-9C13-49115A150ED2}' : IDimensionText,
	'{534518CC-6577-4273-887A-6B833FDE6ED7}' : IDimensionParams,
	'{E7F1FD16-B641-4264-859C-D47217DA8B04}' : ILoadCombination,
	'{B9019350-FF1D-4161-B41B-CD1B020ECF36}' : IFrameTreesManager,
	'{5378690E-A57D-473F-84DC-CA508B34FAD7}' : IAttrTypeMng,
	'{CB083231-EE0D-4596-B04D-E6A020926557}' : IPrintJob_OutputParameters,
	'{095CE8C1-B2E7-4417-AB3D-CCE01480C08E}' : IPrintJob_PrinterSettings,
	'{AB64A064-53E7-4ADC-BF40-3BFC04D93963}' : ISaveToPreviusParam7,
	'{DC982411-CF10-4C00-946B-B5338448568A}' : IUserMetadataManager,
	'{4F13BB1B-44AA-42E6-BD50-30E21E434D1B}' : IStylesManager,
	'{5046BF60-687A-4E5D-BBEF-3CB5D95F7A41}' : ICurveStyle,
	'{9315D8A2-95B7-4E7F-B861-B88FA490EE2B}' : IHatchStyle,
	'{FD515235-4DBA-4F81-8D5C-6FE87C834562}' : IPropertyMng,
	'{37FD3C77-6032-4459-95E9-C8DFC43B85FF}' : IReport,
	'{5C65F11D-75C8-4130-951C-5EBE0ABA4F44}' : IReportStyle,
	'{DD114FC3-EB24-4FBD-B9E9-B01A893AA3B0}' : IReportStyleColumn,
	'{9D111C31-1629-4A0B-89E5-8461CDFA2157}' : IReportFilter,
	'{AE7377CB-28C6-468E-B667-73117BCDC300}' : IPropertyKeeper,
	'{29BBF2B8-A2E2-4E7D-BF04-0BB79C89EF35}' : IReportProcess,
	'{88803908-B243-47B0-A388-9E059CFA8E54}' : IReportObjectsFilter,
	'{96F02F01-04E1-44D1-9974-48330EBE801B}' : IAssociationTables,
	'{44F0752E-E25B-4896-95B4-6376AC23A2A9}' : IAssociationTable,
	'{F7E44485-B4EB-4897-A263-BE3BC1A08789}' : IReportTable,
	'{A1AF048D-93C0-4C21-9064-D437A71D7D53}' : IReportParam,
	'{7D2A79FF-EC54-4480-B9F3-46F75293B558}' : IPropertyControl1,
	'{1D238C4C-AAD7-4374-B372-013CF7FCEDB4}' : IPropertyEdit,
	'{4504EFA0-D059-4FD4-B725-FA264D190869}' : IPropertySeparator,
	'{8F53E9D5-07AD-412E-8C2A-509BC633C4FF}' : IPropertyList,
	'{9205277D-B480-4AF7-B660-CCDC653F6453}' : IPropertyCheckBox,
	'{3920A0BE-0628-47D5-B0F1-1DFEB77964BC}' : IPropertyMultiButton,
	'{E1DB38CD-A6D5-44B8-9AD0-0056B87924DD}' : IPropertySlideBox,
	'{5A902C6C-A030-4F37-A089-91505BAEE466}' : IPropertyUserControl,
	'{6682B70F-59DB-4BF0-AB01-45B65B1BDED1}' : IPropertyGrid,
	'{3CDFE85F-643D-4008-AE32-379C0EB3FB7F}' : IPropertyTextButton,
	'{F214A46D-2BA9-40AD-A32D-E696EF9C895A}' : IPropertySpinEdit,
	'{DB1F3224-837E-437F-8944-6FB9703F528B}' : IPropertyFileName,
	'{FC5CDCFB-3F67-43A1-8FC4-1278B901CE0E}' : IPropertyColor,
	'{FDB82760-7EA3-408E-8699-A8392ACFD810}' : IPropertyEditList,
	'{C2523B7E-EB4B-45DB-8E3B-9D6CCED99333}' : IPropertyToolBar,
	'{D18D34F5-0028-4853-998C-25A48D141B43}' : IPropertyBmpList,
	'{06F93FBF-C65A-49B1-83DB-C736BA33F0A5}' : IProcessInfoWindow,
	'{2A214701-0BCB-406C-B57F-6DFADD799A64}' : IPropertyLibExplorer,
	'{B2431C46-9A35-494B-A958-D9098F82C3FA}' : IPropertyStyleList,
	'{5A247709-EA70-443C-968E-BFECC951E14F}' : IPropertyGroupBegin,
	'{6AFDDAC7-EB89-440C-8AD0-866AEEEAB7CC}' : IPropertyGroupEnd,
	'{74191892-71FC-4820-B8A4-CB264A9E9E8E}' : IPropertyTwinSwitcher,
	'{64725D44-155C-412C-B0F5-F5203F5F75FD}' : IPropertyPoint3D,
	'{8576D0C2-3147-4CFF-AA39-FA9EF9B799E3}' : IPropertyPreviewText,
	'{8B2A259E-6819-4DDB-8EA3-C408F9F04054}' : IPropertyAggregateControl,
	'{C97E7403-B375-4544-87DD-4D3EF36388E5}' : IProcessContextPanel,
	'{3F23FD10-1526-414D-93BC-AB273794F654}' : IProcessContextIconMenu,
	'{75E9D1C7-B766-4D53-BE99-A3088C249266}' : IPropertyBasePoint,
	'{2F69F0E3-89DA-4B0C-8ABE-A6E996F39AD1}' : IPropertyMarking,
	'{3A7C6A0C-53DB-4043-9A77-6D3989175741}' : IProcess,
	'{89D98E20-A4F4-4F49-8FDF-FE4DC28F208F}' : IEditDoubleManipulator,
	'{05B6026A-4B53-4015-A7CB-94298073F86C}' : IMouseEnterLeaveParameters7,
	'{0825F23C-0A73-48DE-BEAB-DA2FF39962C3}' : IAssociationView,
	'{5F9580DA-915C-4C28-991D-5DFFE3BF3B3C}' : IViewDesignation,
	'{E4E42871-E799-4273-8EDB-E5EF83CC66C2}' : IAssociationViewElements,
	'{1B94C65D-3473-4FF2-B185-0B1C2C98FCAE}' : IBreakViewParam,
	'{D4C8B5AF-B2A1-4E07-9CD0-A1FC5B0BC1E1}' : ICutViewParam,
	'{85EFCCC7-1667-48B7-A915-BB8149915EF8}' : ILocalCoordinateSystem2D,
	'{E6A6A1C8-A6F9-470E-AF64-D6AB7741D684}' : ILocalCoordinateSystems2D,
	'{93233F05-B389-4076-BCA2-CCDB87BDB7B7}' : IView1,
	'{6EDA87C9-26C9-4040-AE48-33AD3EA9244F}' : ITexturesParam,
	'{B09A64BF-7AA6-4BF6-B8E8-AA8E8EE6E9D6}' : IDocument2DSettings,
	'{0DC39FC2-4FB1-489E-A76E-E47413199FA3}' : IDrawingDocumentSettings,
	'{A33D05CF-EFFF-4BBE-9BE0-15D283425828}' : IFragmentDocumentSettings,
	'{C474582A-2AD4-4ED5-A86A-A169C4DA5D54}' : ILibItemSettings,
	'{16777C2B-829D-4405-B5C7-71EAFCA17BFA}' : INewDocument3DSettings,
	'{BE6A80EE-38FE-4432-8331-BF864830761C}' : IColorParam7,
	'{6FFAF1BC-98C1-4562-A7A7-1D263996B1D4}' : IDocument3DSettings,
	'{28C513EE-057A-4094-8C18-D3FD733D2C81}' : IThreadDialogParam,
	'{C825C801-D6D3-4456-BD37-D48ED799E033}' : IApplicationDialogs,
	'{B9362883-C8EC-4603-A6AA-7F4703AAA9D9}' : IContentDialogParam,
	'{1DB65C7E-535E-489E-8F34-84DF7FBA09B2}' : IInsertionParameters,
	'{66907239-09BA-4456-AC9A-318804099628}' : IInsertionDefinition,
	'{040C027E-D385-4A7A-96BD-296DF0B9E70E}' : ISerializer,
	'{B416C2CA-CA76-4CBE-8D3A-458967F8E0CE}' : IHypertextReferenceParam,
	'{CF9150BA-0E3A-46DE-8973-332A00361474}' : ITableCell,
	'{D3715420-645E-435B-BB25-8E35AC570718}' : ITable,
	'{D78E47DC-172B-4824-A519-9BC2C0387B5C}' : ITableRange,
	'{9F2F27E7-8FB2-4C6C-A54D-35DB240060D8}' : ICellFormat,
	'{1E29E849-1D1E-4791-BD31-8EF00ED5D118}' : ICellBoundaries,
	'{5A89C538-E0DD-4C21-B3D1-3BF65EEB8C3E}' : ksPropertyManagerNotify,
	'{5A31BB02-026C-4419-A0FF-A93CF58DCA99}' : ksPropertyUserControlNotify,
	'{6ECBB531-5609-4364-AC92-7A6A21D23313}' : ksDocumentFrameNotify,
	'{4D14726D-0EC2-49CE-B02C-FEDAA6D65BBD}' : IPaintObject,
	'{B1C65023-B908-4CAD-9238-C5026520E62C}' : ksGLObject,
	'{B6674824-CD9D-4220-B2CB-9F939A9C35C8}' : IGabaritObject,
	'{E335A73F-DF27-4D33-8CBD-E928F797FB94}' : ksDrawingObjectNotify,
	'{FC04C62E-AB0F-4614-B3D9-0EA8671CEB08}' : ksViewsAndLayersManagerNotify,
	'{9B9CC387-E217-4EED-BCE9-9E1D645B49EE}' : ksLibraryManagerNotify,
	'{A0DA14E6-4F92-4D18-8CD1-2BBAB695CE13}' : ksSpecificationDescriptionNotify,
	'{1C4DEC41-A8EA-40EE-9AC8-F807232DB874}' : ksSpecificationObjectNotify,
	'{58E30500-6073-4337-BFC1-32A74EA17DE8}' : ksLayoutSheetsNotify,
	'{7B8E86E1-4304-449D-9CEC-1B14F74A16FB}' : ksModelObjectNotify,
	'{C784D45B-8C68-4189-8F27-A3B0D6CFAEB2}' : ksDocument3DNotify7,
	'{7278F9EC-AC53-4861-9E9E-199B59F82A9A}' : ksProcess2DNotify,
	'{E896DF8D-6BE9-473A-B7B4-38050CDEF537}' : ksProcess3DNotify,
	'{73653933-51B5-49D6-9EF2-6667639283CC}' : IModelObjectNotifyResult,
	'{354EA69A-3191-4DA4-B980-821BE9B7683C}' : IKompasDocument3DNotifyResult,
	'{7BE2F563-98AD-4F96-891E-C568C0CCD61B}' : ksContentDialogNotify,
	'{45B82B5C-D0B7-4AC5-965C-26B09612CBF6}' : ksProcess3DManipulatorsNotify,
	'{B6DB286D-A060-4107-A693-19D135C47751}' : ksPLMObjectNotify,
	'{2C6E8A0F-EDC8-413C-9304-9278817B915B}' : IModelContainer,
	'{EE562963-395C-4748-9726-FCA9C531B1CA}' : ISketchs,
	'{E6BBF50D-8401-4FB3-A6B6-153D3F447255}' : ISketch,
	'{A160C032-CF96-4467-A682-CE2243DF76BD}' : IExtrusions,
	'{0D7FFE70-33EB-442C-A9B6-A205EA85A237}' : IExtrusion,
	'{81EBB128-3963-4759-9D4E-2829C3078B0F}' : IPoints3D,
	'{5CD7AC22-D8C2-42C4-96E5-5D64E44046F7}' : IFeaturePatterns,
	'{C020E994-FB7F-449A-A3D9-2181135F4200}' : IFeaturePattern,
	'{7A9B6FCC-2156-48C8-BC95-597242EE1B9E}' : ISurfaceThickenings,
	'{984F7DD6-A7FB-4693-862F-459CC8630B11}' : ISurfaceThickening,
	'{A9B14309-92B3-46BA-8841-233293A60310}' : IRotateds,
	'{7BB28AD1-CCAE-449C-9086-A97470543089}' : IRotated,
	'{B180FE26-ABEE-4F37-932F-24AAACF227A4}' : IScalings3D,
	'{A37EE5F1-C852-467B-B72A-00C05310174D}' : IScaling3D,
	'{140DE7B8-8291-4220-B7FB-9F3C4FDFB649}' : IBilletsObsoletes,
	'{5F754BA9-1FB7-4AAE-A3F2-F36D7CF938BF}' : IBilletObsolete,
	'{6CC5E3B7-B509-4B8E-87D1-0B936010120C}' : ICopiesGeometry,
	'{63E5636B-0661-4635-A902-6E8727E75D93}' : ICopyGeometry,
	'{CC78F834-4A97-4F69-9207-215308F0ABB0}' : ICollectionGeometry,
	'{F1B04DDA-FAAC-4D51-9567-304CFE3EC094}' : ICollectionsGeometry,
	'{1753E6BE-C57C-415E-931D-37EAD991D629}' : IUserObjects3D,
	'{1C1886BC-98DD-4AA9-B038-6849C7BCC86C}' : IUserObject3D,
	'{A018E8CE-26F6-4DAE-801B-378ED08A6314}' : IHoles3D,
	'{4C901765-3E0D-4A5D-B2F8-FA708E3CC605}' : IHole3D,
	'{BC710E4D-A679-40FC-B5AE-16302ABBFEB8}' : IThread,
	'{5E232224-2445-430F-9324-2C75BACE1D0C}' : IChamfers,
	'{59C6927B-FC6D-4494-9CDE-648276020929}' : IChamfer,
	'{7A0672EF-4C38-4FD7-8D06-DADD256E1E38}' : IFillets,
	'{15E3132F-4D4E-451F-B104-478A4E3E0128}' : IFillet,
	'{37E37D7D-58D1-4469-9B79-2254D2B9E112}' : IInclines,
	'{2DB9E3CE-7603-4C88-8FF5-F8985AD26C58}' : IIncline,
	'{70FF934F-D7A2-4D91-AB55-27174E90648B}' : IRibs,
	'{2D8E1F2B-1610-4AA5-8F7F-ED489C4EDEDC}' : IRib,
	'{0BA80020-AD0B-4442-B4C7-7AC75AA04CAC}' : IShells,
	'{05A5C975-D995-4069-90A3-A81391AE8D62}' : IShell,
	'{1739583B-BFDA-4AD2-BFE3-14302133BB21}' : IBooleans,
	'{1FE29BDF-0B8E-4E34-A7E5-418092C6C9C3}' : IBoolean,
	'{85B81047-11F3-46D3-869D-EFE37A6A8588}' : ICuts,
	'{D76BE44A-2AB3-4B5A-B893-3C27E227DF4D}' : ICut,
	'{AF5F922F-8C32-4949-A29A-BB5EC7A99D00}' : ILofts,
	'{DDB04ECF-12A9-496E-8069-405F7302E039}' : ILoft,
	'{FB39791B-2100-4F36-B352-AA4EB5FD9373}' : ICoupling,
	'{8D984124-C430-45B3-939A-B5264C5B1388}' : IEvolutions,
	'{9AE8A34A-DE20-4C56-A793-BFCBB9343903}' : IEvolution,
	'{2A449EF6-1554-4C66-8A98-2734DAB88E97}' : IUnionsComponents,
	'{2DCDD394-C325-4D41-A5FD-9E8CC7B8EC5C}' : IUnionComponents,
	'{EF2EE8A8-BCC8-49BA-8FF5-3BBF627C1432}' : IMoldCavities,
	'{C4B6D128-8013-4AF4-B4D5-40E25F2CDBD0}' : IMoldCavity,
	'{B4C41D1D-02E2-4A05-A493-7D25CEEC797C}' : IMacroObjects3D,
	'{09DBAA1E-FC4C-4E16-B033-FB9B8F7995D8}' : IMacroObject3D,
	'{C42BE43C-5DE5-4293-9254-5AA7F3B2EC2B}' : IBodyRepositions,
	'{621E42C8-0BF8-4CB8-8813-E45E2221694E}' : IBodyReposition,
	'{F36E8FBA-F786-4E65-8782-3F6BC2F9D006}' : IFullFillets,
	'{7FEA11B5-B4D3-4481-AB09-B0DE0A699189}' : IFullFillet,
	'{666C987F-2700-4C35-B8CE-DB8BFB5AAF02}' : IMassInertiaParam7,
	'{58B4011D-3C0B-499A-A441-7870B663E8CF}' : IExtrusion1,
	'{B90D597D-4213-4A59-98D4-0B67E719551B}' : IThinParameters,
	'{D2A01420-9159-48C2-8302-C1B10A13D8F8}' : ICutExtrusion,
	'{7BF80DAA-25F8-4AFF-AFEA-CAD390D4275D}' : IChooseBodies7,
	'{6D2EE9A7-4C9F-4606-91A5-9941C20701E5}' : IChooseObjects,
	'{F56DBE72-48CC-48AD-9DA4-10D972C903EE}' : ISheetMetalBodies,
	'{2DC533DC-829E-4EFF-A905-541E9220A12D}' : ISheetMetalBody,
	'{77A4895D-9B09-4C63-A3FF-6857F4340840}' : ISheetMetalContainer,
	'{6826CFD6-6A48-4EB1-8C89-7DB4E36702B4}' : ISheetMetalBends,
	'{B631D95F-C487-41D6-9726-C65E9F5A4505}' : ISheetMetalBend,
	'{AF8B8310-AF82-4B02-8733-783FFAFD4DBD}' : ISheetMetalLineBends,
	'{E13EF07A-B1E8-41FD-9C85-C17F01E52A03}' : ISheetMetalLineBend,
	'{E117BDF9-5133-4672-9B8F-06046F6B9BF3}' : ISheetMetalHoles,
	'{3490B8B8-00D7-4BCF-AAD8-9487BF271084}' : ISheetMetalHole,
	'{9515E4BB-7C60-4C3A-AF7A-847861E67B55}' : ISheetMetalCuts,
	'{B50B1730-BACF-46F2-B10A-6CCDF4E4A2B1}' : ISheetMetalCut,
	'{247539A2-BB15-4D8A-9121-67BDE48A989A}' : ISheetMetalSketchBends,
	'{4E4F3CB3-5596-445B-9A18-0AF559E545C5}' : ISheetMetalSketchBend,
	'{67037D06-603A-41DA-8513-45088FEA98A8}' : ISheetMetalClosedCorners,
	'{995BEE65-54D2-443E-9423-88B4323308A7}' : ISheetMetalClosedCorner,
	'{A1AD042D-A57F-4079-8F7A-CE4AAB5D9DAF}' : ISheetMetalPlates,
	'{DC733340-DCA5-4253-8AB1-045AD169E06E}' : ISheetMetalPlate,
	'{B19D00A4-1B8E-43FA-9DA7-EBE37EC67B67}' : ISheetMetalBendedStraightens,
	'{194F5AF1-1B37-4FF7-9C7A-B939CB556F3A}' : ISheetMetalBendedStraighten,
	'{BC21145E-5520-4871-AA24-52E19EF82211}' : ISheetMetalBendUnfoldParameters,
	'{0541BEE1-9273-4611-9F26-B3408C51580F}' : ISheetMetalPressFormings,
	'{BDB9FB08-C8C8-4446-9821-BE1BA9306602}' : ISheetMetalPressForming,
	'{AC0F620E-229A-42BE-8C5B-1786C54474C0}' : ISheetMetalShoulders,
	'{75024BD8-6D1C-4963-9733-326EFB3CB28D}' : ISheetMetalShoulder,
	'{914D5295-8831-4166-994C-D19C5DF149E7}' : ISheetMetalJalousies,
	'{13501739-CD1F-4401-8A48-B2093E974CC1}' : ISheetMetalJalousie,
	'{B72CC78F-D630-463F-8911-ED9BD58BBA1C}' : ISheetMetalRibs,
	'{ACA9C96E-5DBE-44C8-ABF5-15230282AB05}' : ISheetMetalRib,
	'{6D57994F-C170-4CED-968A-6AD69C1A2C7D}' : IPoint3DParamDisplace,
	'{C009F9ED-ED8A-4B1E-A4CE-156F43C3F6F3}' : IPoint3DParamIntersect,
	'{A92F2938-F1D4-475E-AAB4-962FAA4A4366}' : IPoint3DParamCenter,
	'{06B6BDA5-1DC6-4321-8B28-AC065D87E060}' : IPoint3DParamCurve,
	'{18CE6BBE-63FB-4C94-8998-E40BC5B5D1C6}' : IPoint3DParamSurface,
	'{B5D353DD-5F26-42FD-87D3-01C97C44E1BF}' : IPoint3DParamProjection,
	'{C9E03A9B-0A54-49AC-9397-8DE4465A8D1D}' : ISourcePart7Params,
	'{D695D345-7054-4BBD-8D36-8E1F5AEDC5ED}' : ISymbols3DContainer,
	'{8E30C80C-4C79-497B-A74B-84D44F96EF4D}' : ILineDimensions3D,
	'{3514887E-321B-4CE3-A966-3EB1A02CEEF2}' : IBaseLineDimension3D,
	'{153924CD-E046-4334-8798-46A6D6663DE4}' : IRadialDimensions3D,
	'{5711B871-1FAE-425C-898E-583442D851CD}' : IRadialDimension3D,
	'{79B5AC3B-9B2F-4C75-8482-3C0D6B07D911}' : IDiametralDimensions3D,
	'{261AE065-69B8-4B42-B103-C8746720C5BF}' : IDiametralDimension3D,
	'{E0E8DB05-F71B-457E-BFEB-7EC2E803E77A}' : IAngleDimensions3D,
	'{C22870B5-F002-4C76-9E67-46854E938824}' : IAngleDimension3D,
	'{C6E6BDD4-2B0E-49BF-87D3-04E800200DDC}' : ILeaders3D,
	'{7170F38E-8230-4C9C-B36B-0BACBB27B123}' : IBaseLeader3D,
	'{8533772B-1C43-4FDD-9F0E-BC92F15862C9}' : IRoughs3D,
	'{083A4984-199E-4591-8FC3-CB8A9D7D4303}' : IRough3D,
	'{8BC582B3-1F82-4D19-AF95-24CBAD412E52}' : IBases3D,
	'{D5B737F6-FD3D-49F8-B3D8-C8475E5E3D3A}' : IBase3D,
	'{82ADDA0C-B8DE-4336-A5CC-B36504A80E2D}' : ITolerances3D,
	'{9CF700CF-72DB-44EB-A191-3814A3CC21BD}' : ITolerance3D,
	'{6090C8D4-4EB0-402A-8E25-29C1FAE85F11}' : IThreads,
	'{F38E986B-9CC0-4492-B850-180D3A6AF713}' : ILineDimension3D,
	'{2AD2E4B4-B870-437A-8D57-5807729FCB05}' : ICurveVertexParam,
	'{C4BC0839-932F-4DBC-9A84-5D1FE8927351}' : ISplines3D,
	'{4D0940A0-6A4A-4CE8-A08A-EA0A4AE91942}' : ISpline3D,
	'{CC04CBF6-F0D4-456E-903A-C0B0D3551368}' : ILocalCoordinateSystems,
	'{950FEBE2-F916-4E77-A37D-B061E5C22FA8}' : IAuxiliaryGeomContainer,
	'{0CF9B989-29F8-495F-9DDA-8C2CAD840BB6}' : IPolyLines,
	'{6CE7843D-9AFA-48FF-B444-61CDF036D118}' : IPolyLine,
	'{E22E30F6-05EE-4FB5-9EEB-E288234F256A}' : IControlPoints,
	'{39F4FC2C-99E7-411B-9036-9C756A71E211}' : IControlPoint,
	'{4DF343A0-8744-429D-A605-0EEABB7B5F23}' : IConjunctivePoints,
	'{BC7AD518-9599-490B-9E2B-9711FD9B8D4C}' : IConjunctivePoint,
	'{986E4A45-362F-469D-A3AE-CE081B8EA93A}' : ISplitLines,
	'{969B49D1-E660-4E94-9343-DE5B0F397B03}' : ISplitLine,
	'{453E0E34-4D2D-47B2-8E95-EB05C731961D}' : ISurfacesIntersectionCurves,
	'{758420A0-BECB-4FDA-BDDE-1F398B41117C}' : ISurfacesIntersectionCurve,
	'{8B94F332-EEFD-4610-9C55-20A1F7336122}' : IEquidistants3D,
	'{C25DDBF4-3CC1-467D-B996-E30ED4D529B6}' : IEquidistant3D,
	'{E0916A32-60A7-4786-859F-C4B08402CC36}' : ITrimmedCurves,
	'{F86B25DD-55A8-40F7-ACC4-4795FCF7C87C}' : ITrimmedCurve,
	'{2E869CEE-5432-48C8-B750-5DAC8B6094D6}' : IConnectCurves,
	'{C3BBE1B9-976C-45EF-805F-DDA2BA801567}' : IConnectCurve,
	'{E530740C-AB81-4DAA-AFB2-18E90121C8DC}' : IFilletCurves,
	'{962810E4-0C48-4886-8B80-AEA166B1952B}' : IFilletCurve,
	'{0C7E7D56-F8AF-4803-9291-6351DDE52B69}' : IArcs3D,
	'{79CC225F-C4F9-4721-9FE8-8AF3AA887523}' : IArc3D,
	'{491F65E7-F227-42FD-AB49-82487EAE7775}' : ICurveOutLines,
	'{BC64A05C-0078-44EB-9492-ABAD7AD38E86}' : ICurveOutLine,
	'{7DD7BF03-5348-4345-A2A2-FC116C100B2E}' : ICurveByLaws,
	'{D875D25C-B52B-47C8-B04C-8CBA73623F17}' : ICurveByLaw,
	'{6046FD5E-434A-4B9F-826F-37ECC1730AD4}' : IIsoparametricCurves,
	'{D7E519C3-EA15-43CA-A2EB-D5F119A70051}' : IIsoparametricCurve,
	'{8A0AADFB-D56C-46BB-90E7-29BEEB42EA63}' : IIsoparametricCurvesSets,
	'{F6768800-D726-4530-8966-CA1DC1AC2927}' : IIsoparametricCurvesSet,
	'{0E670E69-68AB-4075-9CE4-99E0A1547538}' : ISplinesOnSurfaces,
	'{BFF82605-C64B-460E-A6D3-3C22229A8325}' : ISplineOnSurface,
	'{88819055-3211-47DD-908F-187B5826FE67}' : IProjectionCurves,
	'{535DD795-507F-41C8-AC1E-6EAF243A3792}' : IProjectionCurve,
	'{8062145F-C6AC-4006-A89B-F1FC6A08FCC5}' : ICurvesBy2Projectionses,
	'{75250D2E-1A02-4593-9002-09872F65F1CB}' : ICurveBy2Projections,
	'{9C1419EE-E99E-47DD-8BA3-9132E03F1307}' : IContours3D,
	'{05FD7844-EA39-497D-B00B-7A1154830524}' : IContour3D,
	'{0DFA5C90-9674-4C27-9441-ACDCD46C0AF4}' : ILineSegments3D,
	'{74880880-4F48-44CC-8FC3-83FE3CA7C44A}' : ILineSegment3D,
	'{AAADB4EE-6F26-4865-9A83-01E71A438621}' : IUnhistoredCurves3D,
	'{56F2843F-DE6A-43BC-ACCD-560B7FA7DD05}' : IUnhistoredCurve3D,
	'{AFA7329D-E69C-4980-B3B3-8A2AA39DE979}' : ISpirals3D,
	'{8C428C5D-37EF-43A3-8815-410F177D3577}' : ISpiral3D,
	'{1A156DEF-0854-4FBD-9DC6-A6B415385C25}' : IPointsArrsOnCurves,
	'{13783B5E-3591-4173-8DA1-6F3095B88DB4}' : IPointsArrOnCurve,
	'{5BD348D2-2E20-4A8D-87B7-C74EF22D0310}' : IPointsArrsOnSurfaces,
	'{D385FED6-763E-4B1B-B8E5-8B1926389550}' : IPointsArrOnSurface,
	'{7EA13B3A-7D45-4E40-A5C3-1920B53437A6}' : IPointsArrsFromFiles,
	'{782932B2-8969-41E1-819C-2458EA6DC8C0}' : IPointsArrFromFile,
	'{F2645E37-5D28-4821-8716-86C3F0B13892}' : IAxes3D,
	'{BC67CE6C-C27B-4C72-A2BF-F850373D8E13}' : IAxis3D,
	'{6D2112DD-F6E1-49CF-9678-89B0C6CC6ACA}' : IMathCurve3D,
	'{71B69C8B-FEAE-484F-BBDA-F7C71A94DDC7}' : IPlanes3D,
	'{D71C768D-89F1-4143-903A-AD2595FD8220}' : IPlane3D,
	'{25675C2F-10FD-4CE7-9E73-D3915D3E894E}' : IMathSurface3D,
	'{919DF6DB-0BA9-4EDD-B681-33E0B519834B}' : ILocalCSAxesDirectionParam,
	'{AD261149-1455-49BD-BA0A-B1760A0C8CB0}' : ILocalCSEulerParam,
	'{6C1943CE-8FDB-47D2-9B2F-95F7B851BE3D}' : IRoughParams,
	'{AFE08AEC-F751-42D9-A6F5-3C004E4D41A6}' : IBranchs3D,
	'{618485E7-D88A-4DCC-8896-7EA04D831DBB}' : ILocalCSOrientByObjectParam,
	'{116F7E59-F175-47D2-8346-EB3C87D60578}' : ILocalCSObject,
	'{2FE3B199-A6B2-4644-9950-F9905250FF0D}' : ISurfaceContainer,
	'{DEE5B135-4D8E-4AD8-AEA4-E763F68290B2}' : ISurfacePatches,
	'{B6330040-7ABA-4ECD-8C92-5B441AF11C3B}' : ISurfacePatch,
	'{6E177627-05D6-40B4-B955-9203F00656B5}' : IFaceRemovers,
	'{4CAE21E3-4183-47A6-94B8-8AD14D5775EE}' : IFaceRemover,
	'{70AE0BA0-2059-4EAB-BE41-A6E8C8ACFA8A}' : ISurfaceSewers,
	'{031FD1C7-9CB6-4E49-A27D-73B8D0B648D4}' : ISurfaceSewer,
	'{DB184867-6207-4FB7-9B3F-882BEAA16B4D}' : INurbsSurfaces,
	'{5DAFC690-B3A7-4771-8E98-F83B5BF0D454}' : INurbsSurface,
	'{3F3EFC1C-A0A7-4B06-BF7A-384BAB27B07F}' : IRuledSurfaces,
	'{95681235-7522-4A84-B01C-E76A27393552}' : IRuledSurface,
	'{992D7C05-7A25-46FB-AAB1-B7337E6EA74B}' : IEquidistantSurfaces,
	'{F665724F-7177-4B93-B51A-063BAF70CED4}' : IEquidistantSurface,
	'{799A9110-799B-40E5-85AF-087AD30A89B4}' : ITrimmedSurfaces,
	'{3D64A257-8109-491C-8CB6-F0DCF516F02E}' : ITrimmedSurface,
	'{5F6EE7F9-972A-4BB8-B1E4-BC1C74048FFF}' : IExtensionSurfaces,
	'{27FE71E1-C84D-4F59-8F9B-F0C144314C83}' : IExtensionSurface,
	'{46AFC862-E2DA-432B-95A3-7971BFC82CB8}' : IMeshPointsSurfaces,
	'{A1D85AB6-C3FD-415B-92DB-4EB4414CA78B}' : IMeshPointsSurface,
	'{6CA7CE7A-12C8-4103-ACC1-11001DD1B01D}' : ICloudPointsSurfaces,
	'{F820F8C4-9C93-4513-8BBD-CC028DAAE41D}' : ICloudPointsSurface,
	'{7791DDC6-7C2D-450B-BB44-660B078E52D6}' : IImportedSurfaces,
	'{2B98DEE2-3352-4F9B-85B7-F0D94742EFA7}' : IImportedSurface,
	'{9CEEC1DF-A155-4702-AD18-0D851A4B85A8}' : INurbsSurfacesByCurvesMeshs,
	'{D06FC62C-A572-4E6B-9C85-0A7D0F971079}' : INurbsSurfaceByCurvesMesh,
	'{C8AD51FA-5A71-4EE4-ADB2-DDAAA90F1621}' : IJointSurfaces,
	'{E9C8814E-A3C0-4E31-BFFD-ED8F3DD13016}' : IJointSurface,
	'{CF84B430-2579-49CA-B937-02354EB1F8A7}' : IRestoredSurfaces,
	'{EC25AF95-4117-4FB6-A952-1FC72BE32E60}' : IRestoredSurface,
	'{EB4AB3A9-8E01-4952-9119-F8D09D9572D5}' : IModelCurve3D,
	'{FAA408C7-1A43-499C-B2E2-06F29B48BCBB}' : ILinearPattern,
	'{4CF250AC-878E-4E7B-94DE-F834CD13543F}' : IPointDrivenPattern,
	'{B1ED4CA8-0835-4465-925D-C137559A32E0}' : ICircularPattern,
	'{B05FC37D-7D60-4291-BE81-E4A9E23D4740}' : IPathPattern,
	'{575D30E2-EFA3-40B5-9CA1-02A63E0D50D9}' : IDerivedPattern,
	'{C039C103-EC51-4FF1-A870-7C016BC7A0D9}' : IVector3DBy2VertexesParameters,
	'{47C76E89-23C0-4A82-8DFC-F770F9F380C8}' : IMirrorPattern,
	'{794BEC80-EBB3-4021-9710-2E7BDAC66F63}' : IVector3DByCoefficientsParameters,
	'{7DC2A592-FACB-4AB2-9B74-27D8116FD591}' : IVector3DBy2AnglesParameters,
	'{1E1F5BE3-E502-41D1-B2EB-8A8216C49B18}' : IVector3DByLocalCSParameters,
	'{4CBAB5B7-2350-47EB-84DA-2953F932D465}' : IVector3DByObjectParameters,
	'{064CF423-8D27-41E5-84C4-303F286B38B1}' : IVector3DAlongSurfaceNormalParameters,
	'{68C9D554-7DF1-4509-9B41-007F123EFB78}' : IVector3DByCurveParameters,
	'{F4593CA1-05E9-46F2-BF6C-4288371066D1}' : IVector3DByScreenNormalParameters,
	'{094D83C7-70C3-45EA-AA20-14E55EFA52B8}' : IRotated1,
	'{115A16EF-B0C3-4DEB-9D65-D2324FA075D8}' : ICutRotated,
	'{3191CEBB-584C-4F58-82C1-A3771F73BE12}' : IRotatedSurface,
	'{B505B91C-3444-4F7D-B987-5BB554932362}' : IExtrusionSurface,
	'{341EE39E-EC72-42A1-BA85-38F4AE2875CC}' : IPoint3DParamBySphere,
	'{98D8AA95-B217-4CD7-8BB4-C419F9042ACF}' : IPoint3DParamByCylinder,
	'{C1948CE8-0933-4D75-9446-3E143928D045}' : IEmbodimentsManager,
	'{83DBB66A-83B8-47D9-93FE-2A90992193E8}' : IEmbodiment,
	'{086DF000-A37D-4296-93FB-2129D0B1DF13}' : IConicSpiral3D,
	'{529DE4B2-3130-4C96-B230-32DB100BCFAC}' : ICylindricSpiral3D,
	'{2CB26AB2-09B9-4B7F-A776-EF02AB25FB78}' : IMeshAroundPointParam,
	'{8CF29D41-23E9-4E19-8DF7-C56560F1A237}' : IAxis3DBy2Points,
	'{AE53DF83-5D00-4851-BBCD-BEDFCA50BF1C}' : IAxis3DBy2Planes,
	'{2E23903D-9C7C-42B5-861A-A28DA3EEA2E6}' : IAxis3DByConeface,
	'{95BE2F02-3B18-4BBC-9451-54B4AB70CC7A}' : IAxis3DByEdge,
	'{2CC2E874-B336-4A24-BD03-9AC7E30123B6}' : IAxis3DByPointAndObject,
	'{C068BBE9-180D-4D82-A827-124166A451EE}' : IAxis3DByOperation,
	'{B815E0A4-A837-48AB-9FD8-3E9CDD5A0AB0}' : IPlane3DByPlaneCurve,
	'{5EDE5E22-2D26-4AE2-A765-8CA314EAAD85}' : IPlane3DTangentToFaceInPoint,
	'{5F5E0FA2-84D7-44D1-A946-018EBEB82926}' : IPlane3DByOffset,
	'{1A0E3DC8-F3F9-4C73-A3D6-87168B1E0DBD}' : IPlane3DBy3Points,
	'{4AD8121E-95BB-4B0F-B1D8-E0394A72DEE2}' : IPlane3DByAngle,
	'{5D170073-FAA3-4E00-A4B4-27E166556626}' : IPlane3DByEdgeAndPoint,
	'{B9FCC89D-D48C-4090-B092-B0F016B84D58}' : IPlane3DParallelByPoint,
	'{972D817B-DEC8-41F7-9307-A6D368975F2F}' : IPlane3DPerpendicularByEdge,
	'{054F3818-EABB-426A-B55A-867152CEF8BD}' : IPlane3DNormalToSurface,
	'{70190DEA-7DA4-4305-AD83-90D2637697BE}' : IPlane3DMiddle,
	'{EA6F2004-7996-4873-ABE4-8C88AC597ABC}' : IPlane3DByEdgeAndPlane,
	'{A4C4D3B7-0DAF-43AB-B2C2-BD3FCB6A5F8F}' : IPlane3DBy2Edge,
	'{A9A97838-3B17-4903-AE8C-82543C91D272}' : IPlane3DTangentToFace,
	'{2B32E33D-F898-4249-90E6-3770FE3BC906}' : IUserParameters,
	'{B7134661-5E97-45DB-9208-5E1E49BEF9C2}' : IToleranceRecalcsManager,
	'{07C35E20-5554-4C10-B0D4-5B07DD9CE842}' : IToleranceRecalc,
	'{6DBF5262-75A5-4BB9-8EF6-159F204B49D8}' : IThreadsParameters,
	'{527CCF94-B32B-413B-8B0B-4AFD3705CDDF}' : IMate3DByAngle,
	'{8D3897D5-A2D1-4CCB-B479-E629B50CF12F}' : IMate3DByTangent,
	'{B6CA167C-64A4-4F46-A2E2-CBC5BB019351}' : IMate3DSymmetry,
	'{52B90D96-D338-4A92-99D9-A90B9D2FF918}' : IMate3DTransmission,
	'{68EF30FE-933C-4F3A-BB9E-098ADCC66368}' : IMate3DCamGear,
	'{02B548BF-05EC-4FC6-944F-F4E50AB354CD}' : ICountersinkHoleParameters,
	'{3EBDD778-87EB-4357-BF08-47BCDE5ABB5D}' : ISpotfacingHoleParameters,
	'{C92C6CDF-5CDE-456C-A235-67C3E43BB141}' : ICountersinkSpotfacingHoleParameters,
	'{9110F9B1-83F0-4412-B2FE-2B1F416A0932}' : IConicHoleParameters,
	'{071C7A25-91E2-4C9D-954A-CA0FA0E94863}' : IHoleDisposal,
	'{6DA1F459-7AAE-4A07-9A7D-FF19F8997AD5}' : IShellSurface,
	'{585E265F-0AAD-4A42-8030-3A69882A9B39}' : IVertex,
	'{5A61CED2-DCED-4CDA-8C3C-CF710F0E727B}' : IEdge,
	'{299A549E-3F82-4F60-98A3-258D632AA635}' : IFace,
	'{CA597AE6-2ECE-4483-A997-1AFD5ABF9D3A}' : ITessellation7,
	'{02C63F96-1370-4147-B024-8BC6837B98FE}' : ILoop7,
	'{8E62D0EF-3A22-40C7-B5EA-D85FA0C9F25E}' : IOrientedEdge7,
	'{FF326C86-55CD-49FB-BBCE-BC033F762CF7}' : IDistanceAngleMeasurement3D,
	'{F16C388F-16DC-4498-8875-EC8B300CE4A0}' : IDistanceAngleMeasurements3D,
	'{93154762-202B-41E4-9ADA-7792EC3E6481}' : IEdgeLengthMeasurement3D,
	'{90749843-C25C-4E07-A432-F46201BEE90C}' : IEdgeLengthMeasurements3D,
	'{02D1F030-8709-4602-8BAE-E47CE1C9C13D}' : IAreaMeasurement3D,
	'{12126558-EA51-46E0-BAED-07E523F4B7C6}' : IAreaMeasurements3D,
	'{C84CB131-1565-4794-ABF5-E5BDDB9EE5DF}' : IMeasurementContainer,
	'{701EE4DA-4A8C-4F64-9ED3-4B51A0ABF79C}' : IUserDesignationCompObj,
	'{2CB2F820-A083-46E3-83F6-5AC4B27078A3}' : ISheetMetalUndercut,
	'{2123D327-4119-4F1D-A9E4-48462883E968}' : ILibraryHoleParameters,
	'{F577ED6F-C858-442F-855A-E572AA6068AA}' : IZoneParametersByObjects,
	'{C29D4DCA-6BDC-4E7E-BD93-163950E8A1E1}' : IZoneDivisionParametersRegular,
	'{3E6BA559-7A5A-4525-8CC0-304AB4164EA5}' : IZoneDivisionParametersByPlanes,
	'{4A8082D6-FC56-4FD4-A258-51E74A44510D}' : IDynamicCrossSectionStep,
	'{DC056BC2-64CD-4AFE-910E-97ACE56B647B}' : IDynamicCrossSection,
	'{FE4BE487-B453-45E4-8BE2-2EBD28D56CF5}' : IDynamicCrossSectionsManager,
	'{3918486A-85B2-4F9B-A85E-13BB754951E0}' : IDynamicCrossSectionStepParametersByFreePlane,
	'{E5BEB695-4C46-4897-9330-7463ED4D6725}' : IDynamicCrossSectionStepParametersByOffsetPlane,
	'{69ED339F-A095-467D-85F3-91C120BF01BF}' : IDynamicCrossSectionStepParametersByRotatedPlane,
	'{F966880F-C8EC-4455-A155-43ED46F159F5}' : IDynamicCrossSectionStepParametersByZone,
	'{4477B6CE-4F64-4BDF-9EAF-C07C7833CE8A}' : IAxisLine3D,
	'{E32E5703-0141-41CF-9917-9565648FE331}' : IDrawingText,
	'{C72E0E9D-7078-4AA7-95E4-E8C75CA9BCEC}' : IDrawingTexts,
	'{D603FEC9-75B7-4FA5-918F-47074C45B848}' : IDrawingContainer,
	'{B211C782-A830-468E-9F4F-C499A77078D8}' : ILineSegments,
	'{64ACC86F-4B10-4897-8552-BC0A556D228B}' : ILineSegment,
	'{4FCB4C17-3B9E-45E8-B83C-9284027BAA0D}' : IArcs,
	'{A22DFB7E-21E0-4B28-9CA1-29B7950CF256}' : IArc,
	'{968D7B84-2BC1-4354-AAFE-73192E405546}' : IMultilines,
	'{F6CCB098-5710-44E3-8198-8FAFD56C7A6F}' : IMultiline,
	'{E79F5A53-F456-4996-B620-16B725F134FB}' : IContour,
	'{DBA3626C-12BE-4BFF-8D42-B01A78666BC9}' : IDrawingContours,
	'{25509C3A-7B46-4E3F-B0E8-0E61B7548664}' : IDrawingContour,
	'{C8CA9255-E5FE-4396-9C3F-75EE7377C508}' : ICircles,
	'{5C952F95-DFED-4EEE-B39A-6699EDE08676}' : ICircle,
	'{8C6846A4-EE3B-4C00-A708-5C0FD01E21B7}' : IPoints,
	'{D0C19C87-14E7-401D-AEF5-A2E88E899F6E}' : IPoint,
	'{57944ECC-5491-4551-9DB9-FABC45125A63}' : IBeziers,
	'{6D51EC19-200C-47A2-AE55-0593AD746851}' : IBezier,
	'{5B3F5454-160A-4981-B093-890E9A719AE3}' : IMacroObjects,
	'{889A9B9C-7533-4EC5-8E2C-5ECF8228B06F}' : ILines,
	'{3EA0DA9B-F2C0-40C4-BE36-7103509A9389}' : ILine,
	'{D1A9CB2D-A259-4CCC-9CD4-FA006494BCA7}' : IPolyLines2D,
	'{4D0DA413-9507-4795-896F-E049FA6E44DD}' : IPolyLine2D,
	'{88ECED7C-181C-4D9F-84DE-44B2E360F278}' : INurbses,
	'{EE1AB9F4-B127-4303-A30D-C3509F6D10CD}' : INurbs,
	'{C6E4E32D-E077-4B14-B9DE-041BD628C38C}' : IRasters,
	'{DEED8D7B-404B-4F17-B42A-2F5E64818D0A}' : IRaster,
	'{E7A8DD07-CD6B-45A6-B6AF-155A674BC7E4}' : IOleDrawingObjects,
	'{9A0ECE23-7B60-44E0-9728-C56CAAA455A2}' : IOleDrawingObject,
	'{47633C44-93BB-4F41-A6CA-4F8CCAEA0659}' : IEllipses,
	'{F60C9107-D8E2-433C-A0E3-A4E508D09353}' : IEllipse,
	'{CC5B7FCB-B887-4A47-AE6B-2522DFA24433}' : IEllipseArcs,
	'{320D837F-0B27-45B0-98B4-9D21156E9857}' : IEllipseArc,
	'{D6BC2EE9-249F-4961-89A7-88DA854F35FE}' : IRectangles,
	'{42F9FC58-FEA0-4E52-A604-1A00985AB772}' : IRectangle,
	'{80377CB2-073E-4C38-8532-C42A078BA719}' : IRegularPolygons,
	'{51968648-F264-4904-A07F-653676AE1D35}' : IRegularPolygon,
	'{86182E5E-8FA3-4283-9DC5-43D1673C80DA}' : IEquidistants,
	'{EE6713F9-AD9A-466D-9FB9-D19235E42C95}' : IEquidistant,
	'{C485550B-29E3-4F2A-A85C-C2795E0F1F86}' : IInsertionObjects,
	'{B9E9CE68-371D-4600-9233-84D89A015C55}' : IInsertionObject,
	'{B7E776B0-9524-4254-9D1F-0CF8E0314A1B}' : IHatches,
	'{826C0B5B-0146-417A-8128-E581F8430F37}' : IHatch,
	'{60437DAD-2688-4146-B765-3FCC55C39D0F}' : IColourings,
	'{1E0EF1B5-08D3-40B6-893E-3EE7E4FAEC98}' : IColouring,
	'{D496F149-AB99-402B-B3D2-942B26069753}' : IConicCurves,
	'{83312BFE-F373-4994-B4B8-EA989FAD0E3C}' : IConicCurve,
	'{B5D1A0BE-8F3C-4143-B9C5-66F0CF0FE74D}' : IMark,
	'{47585370-56BD-4419-82D9-DB7CBFB1A252}' : IMarks,
	'{E5C5A0FF-6CAB-4179-9BF3-868D96BF6AEA}' : IMarkInsideForm,
	'{5A1540F9-7388-466F-A13C-EB1133423DD9}' : IMarkOnLine,
	'{F3D7E6A6-26EA-4D68-AD58-4DE194C47B4E}' : IMarkOnLeader,
	'{123C45BF-14DE-433E-B3B0-2FB642A9A418}' : IBuildingAxis,
	'{5AC48E97-80B1-459F-9709-1F3F374559BE}' : IMarkNode,
	'{EB8ACD77-8008-4F89-A311-2F4712462F72}' : IMarkNodes,
	'{18072E1D-1802-41F5-A434-04BB9D3F157F}' : IBuildingAxes,
	'{7B2820E0-2CB7-4412-9B96-F291DD790448}' : IStraightAxis,
	'{5A22E024-F530-45DB-A3F2-CA0587BDA1B5}' : IAxisJut,
	'{DAA9755A-3971-4713-B281-15995CBF2E56}' : IArcAxis,
	'{D84358FB-674C-4A5D-93BA-EE5D3342097B}' : ICircleAxis,
	'{2EDA58EE-DBDA-44CC-AD10-6895006D498C}' : ICutUnitMarking,
	'{23B00F94-98D3-4AD7-8827-F4088F4A9E5C}' : ICutUnitMarkings,
	'{86F46084-16A8-4B5C-99E9-F848216788F0}' : IUnitMarking,
	'{969AD901-FC09-47F5-94F5-1ABEB1A9C85C}' : IUnitMarkings,
	'{FD1FD236-F5BA-4FB0-A872-21FC13E6895F}' : IBuildingContainer,
	'{233B2298-7A45-4CE1-AEF2-30B063FDB63C}' : IMultiTextLeaders,
	'{1BFC5D3F-1483-4569-B4B5-7A12163A4655}' : IMultiTextLeader,
	'{598E649B-970C-454B-9162-1BB6C9FBFCBF}' : IUnitNumbers,
	'{FABAF607-CB92-47C4-9409-B7678162051D}' : IUnitNumber,
	'{99F27BD6-6294-45D9-AF78-A9D52E9DD799}' : IBraces,
	'{7F328D28-76E9-4E04-A35C-AD60339998E4}' : IBrace,
	'{666DA5B4-324C-493C-9A91-37D9E078EB4E}' : ICutLines,
	'{26E86124-DC1C-41A2-8075-E73F3EAD8474}' : ICutLine,
	'{F46B0086-17F2-4489-A5A7-0AA677610AFD}' : ISymbols2DContainer,
	'{A6F6A18A-78FA-4A77-BB75-90647E0C545C}' : ILineDimensions,
	'{A3767BDA-E605-4FC1-988D-81809DEB36F4}' : ILineDimension,
	'{12D26993-449E-42E2-A909-B047AFD6E27D}' : IRadialDimensions,
	'{712A9437-D772-4EAE-AF83-ABC9C22EB281}' : IRadialDimension,
	'{8E45FEB9-7BCD-4C9F-9767-320736980662}' : IDiametralDimensions,
	'{2B4CE92F-438D-4D3E-8F8D-4D14E5D0E214}' : IDiametralDimension,
	'{DF9ABB77-BBB6-4B29-A0E0-81DCFD525C2E}' : IAngleDimensions,
	'{0F2CE9EC-5D2A-4B21-B96A-46201C120ED1}' : IAngleDimension,
	'{4125169F-3EA8-4AC0-9E1B-5582D62600C4}' : IBreakLineDimensions,
	'{61164A26-855C-4220-88ED-C2BDAF49B2DB}' : IBreakLineDimension,
	'{3A56D35C-3242-4C49-BA99-CF790EB10356}' : IHeightDimensions,
	'{938BE57F-55FF-469F-82A5-B1CD6CCF8340}' : IHeightDimension,
	'{FE2755D9-48E2-44CC-BC24-86CF86BE08E2}' : IArcDimensions,
	'{11487495-B18A-4877-9E85-3DC9016DF8BD}' : IArcDimension,
	'{E2181A3E-5417-4D73-AB65-983DED3438E0}' : IBreakRadialDimensions,
	'{88491537-9E93-42F3-861C-761A75BB89D6}' : IBreakRadialDimension,
	'{ACC42B32-27F3-4F74-B4A5-C97D4C7B289D}' : IRoughs,
	'{0A192AC5-D8BC-43E9-8FC7-ACF32578DDB4}' : IRough,
	'{C607727C-6B0A-4FB6-AFCA-ED9D83F5C6B7}' : IBases,
	'{01CDFD67-69EA-4289-8F42-5B01BB9BF70B}' : IBase,
	'{97CDD55F-3C64-469B-B26E-A927D3300B6C}' : ITolerances,
	'{42DEF911-ADB2-478C-85F1-D5FEFA262EEC}' : ITolerance,
	'{DF92DACE-BDC6-4341-86DA-3A9C8DCFDEFE}' : IDrawingTables,
	'{9B421BDA-0444-4A68-B69C-1C05D05C9D28}' : IDrawingTable,
	'{08B45C97-6F86-4809-BBC3-78F216BD0430}' : IViewPointers,
	'{3EE98177-63E8-4C48-89AD-3D5CCCF84D72}' : IViewPointer,
	'{A0533211-CF52-4AB5-A172-3DC7D94276D1}' : ICentreMarkers,
	'{8FE1CADA-DE72-4A55-B303-EAF1F4748CF6}' : ICentreMarker,
	'{88427A6B-00AF-46E2-9B95-BC8348C2162A}' : IRemoteElements,
	'{A9D96CE2-9FE4-494E-87B2-20122EAC2AE4}' : IRemoteElement,
	'{C567E700-E163-4C8F-B329-931BB93D0223}' : IAxisLines,
	'{5C5CAEBD-70A9-41DB-9F74-F9760D822D95}' : IAxisLine,
	'{C1F0A911-8B4A-48B5-9611-5250D3FC2ACA}' : IWaveLines,
	'{FA2012E1-A983-47D3-9D43-B8DC619AC554}' : IWaveLine,
	'{2A7EADC0-5E79-4DDB-85D5-E3EDB743480D}' : IBrokenLines,
	'{2482EB44-5625-4FB9-A46B-781426B02510}' : IBrokenLine,
	'{1F7ED8F6-85DA-4B32-9306-31E3DABA3F84}' : ICircularsCentries,
	'{43812A86-37CD-4C6C-AE86-78576EC7E834}' : ICircularCentres,
	'{E0854CCB-7849-4503-BF8B-F70CF493D59B}' : ILinearsCentries,
	'{C1E24970-64F0-4689-A3AB-CC34698378DC}' : ILinearCentres,
	'{EDB023F6-0862-4CB3-AF81-62D784F455B1}' : IConditionIntersects,
	'{8E844A00-FC0A-47FA-9167-37BE6C77D032}' : IConditionIntersect,
	'{F6ED408A-C2A8-47DD-8EC3-011A7AD60335}' : IBreakAngleDimension,
	'{C8A55AB3-D6DD-49B8-95F0-716475855C10}' : IBranchs,
	'{A7419920-06B8-4F34-AC1E-9D48E0ED9DCB}' : ILeader,
	'{8A5D2A56-ECB6-4151-B1AC-F8548CD668CF}' : IMarkLeader,
	'{A8227628-4B9C-42C8-AE58-B3716A7EC1AF}' : IPositionLeader,
	'{CCFBE87D-1A3C-4C8B-ABE3-1C2319694314}' : IChangeLeader,
	'{EEF8366B-7C8D-448B-9944-BE63E82C1543}' : IBrandLeader,
	'{46E2F216-6BCE-4863-9DDC-CC08DC0016F7}' : IToleranceParam,
	'{AA485B32-FF45-4035-BFC4-AEE54E638344}' : IContourSegment,
	'{FB2432F1-8AE7-4D43-AFF2-A3A3BE226CFA}' : IContourLineSegment,
	'{ED4A6D97-4543-4842-B2C3-973FB0E90E87}' : IContourArc,
	'{3D99B82C-CD88-406D-A946-2D8C8E94EE73}' : IInsertionFragment,
	'{0C8FC5A9-57A8-4971-8E6C-68933269D42E}' : IInsertionView,
	'{B43FA13A-9488-422C-A9F3-D279FDA296BB}' : IInsertionsManager,
	'{620CC8EB-A5C0-4978-BD98-38344DC6ADC0}' : IAxisLineParam,
	'{7198C93A-7655-4347-9954-BA9AA28D0608}' : IBoundariesObject,
	'{0DBD7BCD-F78E-4BDA-BCAD-3004C60B6D06}' : IAnnotativeObject,
	'{AE6C238C-4398-4057-9D28-D275954D9506}' : IAnnotativeContainer,
	'{12B52A99-FF5F-4C08-9E5E-DF7C7AD834A8}' : ICurveCopyObjectParam,
	'{138D1202-CA46-4DB3-BF2B-85D260E44355}' : ICircleCopyObjectParam,
	'{7E553465-7C0D-4E35-B630-D7A54CD4FC2F}' : INurbsByPoints,
	'{EEB71F69-1C0F-4E73-9D20-523697215E0B}' : ITextDocumentSectionsManager,
	'{A64BE069-8FCB-43F1-AB34-9974DC7FCF5F}' : ITextDocumentSection,
	'{9D5CDE37-7833-4359-B25A-FE7011EA771A}' : IExternalTessellationObject,
	'{DC21F3D3-FFA6-4274-A976-79F34729B866}' : IExternalTessellationManager,
	'{C234E81D-4232-41FD-980D-8E7E6EA7B733}' : IExternalGDIObject,
	'{324C1A45-67AD-41FB-BE57-624F930646F1}' : ksDocumentFileNotify,
	'{DBBB268E-19D3-40DE-B77C-987CA15FE711}' : KompasDocument,
	'{C7CB743A-C59D-4C27-8CB6-971C2A393F2F}' : ksKompasObjectNotify,
	'{8C3719B5-0DF2-4C12-9CA8-3AF4827A3BBB}' : _Application,
	'{1A4C2A9B-3B2A-49D1-B75F-3810DD4A2086}' : KompasInvisible7,
	'{385647BD-89B1-4F2D-A06E-4DD829EE096B}' : Documents,
	'{8BFFC9B4-5FE7-4EC5-8BA5-0FF8520D5FF6}' : DocumentFrame,
	'{CC89942A-6FE5-4808-8DC8-FF46D546A8EB}' : DocumentFrames,
	'{4C33DE6E-FEAC-4C28-9EE0-32C37F8E7A48}' : ProcessParam,
	'{74D54FDD-62D0-4544-89C9-999612EF6DEF}' : PropertyControls,
	'{1C2A5766-B80A-4752-8509-217574965BF3}' : PropertyTab,
	'{52110F5F-7BF2-4079-B3AE-A7B716A7EB1E}' : PropertyTabs,
	'{E4AFCB78-574F-4960-9D92-B23888D700CD}' : PropertyEdit,
	'{59DA09ED-130F-43AF-86B8-EAC8E0C7D0A2}' : PropertySeparator,
	'{404CF845-9BF6-4AAD-97A1-B9A173ACF96D}' : PropertyList,
	'{8CF06399-B7EB-46EB-8B08-5603C589FE0F}' : PropertyCheckBox,
	'{B734CA6E-CA21-4CCD-AEE8-94BC8F9D4986}' : PropertyMultiButton,
	'{9988AC8D-657B-4B2A-8338-EC315CBBA70E}' : PropertySlideBox,
	'{725A98DC-9987-4A79-BDA2-F5024E2D0FF3}' : PropertyUserControl,
	'{F0F9573F-BE07-4251-86E5-2AA24AA3D43A}' : PropertyGrid,
	'{1B9CBAB1-99DA-433E-8D4E-6761D1AB9B8A}' : PropertyManager,
	'{9237AAFE-992B-4521-BF68-3A0C6D7F7769}' : KompasDocument3D,
	'{5414B05F-A731-4369-BBD2-419B5CD9D2A2}' : DrawingDocument,
	'{86CA15DA-A197-4993-AB98-8921D156114E}' : FragmentDocument,
	'{2D43B764-4F8A-47A6-AAAB-52B59CE5A08D}' : SpecificationDocument,
	'{F5CF81CF-F6C3-4D9C-B393-6DF532BFB45D}' : TextDocument,
	'{427D2E6B-8D4E-4F9F-99AC-F9E0FB22D25C}' : PartDocument,
	'{705B37C7-CA52-4588-980E-1105C919E20C}' : AssemblyDocument,
	'{D4F68E4E-2092-436A-B6FB-B8A335A671FD}' : PropertyTextButton,
	'{F4710743-A53B-4256-A450-16D0D40C87AA}' : PropertySpinEdit,
	'{2E3092B1-3B1A-4060-B202-B0C6F4177973}' : ViewsAndLayersManager,
	'{3310AC4A-DC93-4AB5-B2CD-5391E6CB370A}' : DrawingObject,
	'{5F90A46E-EA28-4294-B34F-145C80141517}' : DrawingObjects,
	'{675CDFC9-4ED8-4689-8A15-BE9CC85CFBDC}' : Views,
	'{ADBF03AF-24D4-4CA8-BF0E-7F6E403D4E55}' : View,
	'{9F144F3A-A296-46C6-99C2-1877B83B0E63}' : AssociationView,
	'{E53FFD4E-619D-4B9B-9C34-9C23668E6F4A}' : LayerGroups,
	'{5543C50A-B56D-48AF-87C3-09C1B48CBC5A}' : LayerGroup,
	'{C0402ED4-D1AB-4567-BE4F-AFD88AF848EC}' : Layers,
	'{392916B8-171E-4229-9E75-1D514C75FB17}' : Layer,
	'{21D31870-5EBC-42CE-8858-A308E7E4B8A4}' : LayerFilterCondition,
	'{9F90DA69-2CA3-4C2E-AB59-6BB9B0E7DFB8}' : LayerFilterConditions,
	'{64964B4C-5A02-41D8-B6EC-F7CF627564E6}' : DocumentSettings,
	'{EBB0EE6B-305C-4448-9674-3F5072606D47}' : Document2DSettings,
	'{AACB5896-8918-43CB-A5B4-F3EAF45BCEF7}' : LibraryManager,
	'{E865B51E-8276-4F7E-A20B-509DC25679B1}' : ProceduresLibrary,
	'{0EA0000E-9328-488D-B611-9F72EECCD92D}' : Procedures,
	'{5D9929F6-3D65-4DAF-B146-A85FA98F2356}' : Procedure,
	'{9A06D2A1-BCDE-4C43-88A1-5A491469BE11}' : InsertsLibrary,
	'{F8527798-EB6E-43C6-AE05-6FA964CFD96B}' : Inserts,
	'{5D1BD639-051F-48C5-BCA7-7698B4D070B4}' : Insert,
	'{6C64BD39-1613-4AD4-B5BA-B6F38D32E82C}' : InsertsLibraries,
	'{DBC3AC55-2823-4661-9740-54843BA72B12}' : ProceduresLibraries,
	'{77168B66-5A17-4694-ADDF-848E314EE0D1}' : SpecificationDescriptions,
	'{AD076943-BF97-4802-9D4F-D28C6C41E966}' : SpecificationDescription,
	'{7E9787DC-72ED-452D-8EF5-FD3D21259712}' : SpecificationStyle,
	'{EC3F7C56-6A3B-45AC-BF81-614B7B045BAA}' : SpecificationColumnStyles,
	'{FF5E4685-8914-4382-97C9-C73FFED73449}' : SpecificationColumnStyle,
	'{25B2EDD7-FB95-4FE6-BA9C-B296531EA6C7}' : SpecificationSectionStyles,
	'{A862B550-CAED-48FD-889D-C1507A30D241}' : SpecificationSectionStyle,
	'{2A248D5E-8B8F-4F43-91EC-10C7F02E2064}' : AdditionalBlockStyles,
	'{704BC0BD-189C-4B8B-A97A-AB5F0C6897EF}' : AdditionalBlockStyle,
	'{B872A3A8-C21F-487B-A44D-B168398E014A}' : SheetFormat,
	'{C6410109-2800-476B-82EE-202C766B515D}' : SpecificationTuning,
	'{B64E5FBC-99D3-4CBF-989F-0F832F3C7B5F}' : SpecificationTuningSections,
	'{03D146C9-35D2-4FBF-B051-053711FCA51B}' : SpecificationTuningSection,
	'{79130306-1FB8-49FD-85D2-A6C235B91638}' : SpecificationSubsections,
	'{C82A6A36-CF62-43CE-A180-FA1268AE0116}' : SpecificationSubsection,
	'{B6CC6F97-B1F1-42CF-ADC7-7875B06A7089}' : AdditionalBlockTunings,
	'{D62780C1-EDD6-49B6-B619-04E22189D288}' : AdditionalBlockTuning,
	'{821A5929-98F3-4C67-BC2C-D3A8A1442086}' : AdditionalBlockSectionTunings,
	'{39BDE053-03AA-4B95-8E25-5B8041C7BE12}' : AdditionalBlockSectionTuning,
	'{7F52DDDE-FD30-40DF-97E9-B606A005FD14}' : TextFont,
	'{92523524-1E11-4193-AD5F-E2381555DCC6}' : TextStyle,
	'{C0D50C82-511E-4554-8296-EDFF2AE66C4C}' : Tabulators,
	'{D65E21E0-4B98-401D-86B5-712E0AA56CEC}' : Tabulator,
	'{A5B4DB5F-0554-4D75-915B-3F838F18C809}' : KompasError,
	'{E2FD0C57-3E8A-4EC2-A1E9-7BEB75E3AB7C}' : SpecificationBaseObjects,
	'{77CFDEBF-2DF0-4B67-8825-78DF712A0497}' : SpecificationCommentObjects,
	'{77A64147-06A5-4843-8C6F-F0E35F0ED951}' : SpecificationObject,
	'{41FCDD59-6012-4E46-84DC-04934683B098}' : SpecificationBaseObject,
	'{6F0354E0-9AB0-47AC-80E8-10FB48C59340}' : SpecificationCommentObject,
	'{A641E019-073F-49F5-97BC-A9D5FFB063D8}' : SpecificationColumns,
	'{B5216B74-0577-41D5-9B62-C71674EC9330}' : SpecificationColumn,
	'{86172CF0-0BED-46E0-B2E1-DD43ABF09290}' : SpecificationColumnItems,
	'{D1A46669-AF0C-43EE-ACB6-E765D06BED4A}' : SpecificationColumnItem,
	'{7E97523D-C412-4DA4-9FEC-E4769E88B340}' : AttachedDocuments,
	'{30251A40-34EA-4DA6-A0B0-66E7A556A813}' : AttachedDocument,
	'{BBB62BA6-AC05-4D05-BFF2-BC8579A2C5FC}' : PropertyFileName,
	'{77E6E019-A5A1-4318-B98E-CD970D248EA0}' : PropertyColor,
	'{1EF17E36-3C4D-4C86-AD1B-17E744075DF8}' : LayoutSheets,
	'{5331E747-7833-4988-92CA-90283160DDF6}' : LayoutSheet,
	'{A496A838-57F7-4BEC-99FF-51D4782C60AE}' : Converter,
	'{D3154740-6BF5-47F6-9A02-486F78190791}' : CheckSum,
	'{DB0070F0-C367-4DB5-B722-9CFE69895657}' : ModelObject,
	'{B0223EED-4659-4EAC-BDA2-20B0FDD4E7B7}' : ModelObjects,
	'{CB826C3D-9968-4546-BCD7-BA65F6B84902}' : Parts7,
	'{314057D1-5EFD-4980-8AB8-4E0CC3F7E756}' : Part7,
	'{6F94D909-E9C7-4496-8F5B-01F0B03FF409}' : Sketchs,
	'{2B4C99E4-FB5D-4D7D-A44D-5B898E1F5E9E}' : Extrusions,
	'{B49FD0E4-26AC-48DE-AD0E-7DFA902DF2B7}' : VariableTable,
	'{9361276C-70A0-4000-82D2-90FB546C98D4}' : ProgressBarIndicator,
	'{393AB030-F683-470C-8F4E-AA93BF3162CC}' : Text,
	'{FDFD93BC-11C4-42A9-9C8F-A4FB206274B6}' : TextLine,
	'{58CED17B-2AA8-4DF8-B215-811DDE72DF3C}' : TextItem,
	'{2E194B4E-F08D-4D62-A9B8-849004D8D923}' : DrawingText,
	'{5F4C3AA0-4B59-4EEE-AB00-53CEA8909F66}' : DrawingTexts,
	'{C0DEA6BF-0AD5-4C55-AD3D-A3F145943E47}' : Marks,
	'{CDABB418-649A-4AB9-8A92-C51789075912}' : MarkInsideForm,
	'{84CAA3BB-3E7A-4185-82BC-85D4102D5DEF}' : MarkOnLine,
	'{CF195C37-A915-48CA-9F6B-6B3845FED05B}' : MarkOnLeader,
	'{13BCC1C9-C582-4616-89EE-4CD250595CC4}' : UserDataStoragesMng,
	'{1B57D1CF-CBEA-4DBC-9452-50E367784958}' : UserDataStorages,
	'{4C7C5A7E-AD2C-4B1F-82B9-73476837E020}' : UserDataStorage,
	'{B879C6F6-5AB0-4BEE-8872-FE87C621F15B}' : BuildingAxes,
	'{04728D73-A533-4C98-B0BF-92A8A02E6F4C}' : StraightAxis,
	'{AE2C24D6-17E4-4E5F-BA2B-ED62AC2323EC}' : ArcAxis,
	'{8A706E75-73FF-4FBF-8D3F-61A13513C7EB}' : CircleAxis,
	'{97559604-8CCC-44E4-B332-7E16C34522D5}' : AxisJut,
	'{6681105E-35E0-4E76-9E64-0AB8B50E6149}' : MarkNodes,
	'{B98EA663-66BC-46C0-A86C-1FE40AF8A3D8}' : MarkNode,
	'{B7B673AF-5E78-45AA-8C78-894D1F4F77AC}' : LineSegments,
	'{EE1993AD-CAC2-421C-B9B1-131BA16466CF}' : LineSegment,
	'{31C4845E-508F-43F0-A57F-E7602A0E45E6}' : SystemSettings,
	'{BE66B386-7D76-4AFC-AC47-521B6648CB8F}' : CutUnitMarking,
	'{DDEFF219-E3BC-457F-87FF-3C3ADCFA720E}' : CutUnitMarkings,
	'{82BE653C-832A-4611-941F-D27BE733530B}' : UnitMarking,
	'{2156B173-A854-4714-BE90-6F9ADE48E2AF}' : UnitMarkings,
	'{307690EF-0E80-4CD1-93E1-49288C5697A7}' : Arcs,
	'{6BA18A3D-28A8-47C3-A97C-E324282F93FD}' : _Arc,
	'{123D60BB-0331-4726-9707-777615E9D354}' : MultiTextLeader,
	'{AF30B851-0AE8-4F62-B7DB-1DF52D9316F2}' : MultiTextLeaders,
	'{2DF7A8F9-CB3B-499E-867F-81BA5B41ED57}' : Brace,
	'{82CD752F-BC4F-45A2-9FE9-8AB01FDAF6C9}' : Braces,
	'{515C7A0D-0120-4CC4-A5F0-67473D7D95D3}' : UnitNumber,
	'{624E4C7C-156C-4FD9-8DA8-CEB9750860D1}' : UnitNumbers,
	'{FC43EA04-ADED-4D42-883A-11073E2E68EC}' : Sketch,
	'{9D3CAF4C-4D9D-40EC-BE5A-12A3AC595007}' : Extrusion,
	'{7536F0BF-2857-4A01-ACFA-5DDF1C9840A8}' : ParametriticConstraint,
	'{B60B0F24-9069-4AB4-B0E4-DC558A6BF4A3}' : CutExtrusion,
	'{29E7E8D5-7988-408F-A02B-7C0871221C9C}' : Body7,
	'{DC4C565F-935D-4F7A-97A5-DB4D252F6B91}' : SheetMetalBodies,
	'{1301DC0F-CDF1-4EB1-90B4-D06EA2610F0B}' : SheetMetalBody,
	'{2B0C2912-59D7-4976-9E57-20D83CDA9038}' : Points3D,
	'{A4CA403F-B960-4E41-A350-C07D15115DC2}' : Point3D,
	'{7E00821A-E79B-412B-9A51-ADB9664C23A0}' : Point3DParamDisplace,
	'{DE8A8774-6705-4971-BA1F-F889E7E3752C}' : Point3DParamIntersect,
	'{02DA512F-097F-4911-8E27-8C546ED4B22A}' : Point3DParamCenter,
	'{AAC9EE7F-C69F-48DD-9A38-8E38C38BAB28}' : Point3DParamCurve,
	'{E5490B1D-49E8-4042-BEAA-C666952D3B1B}' : Point3DParamSurface,
	'{BD60E7D5-0E9E-4E00-A27B-08C11CFD41BD}' : Point3DParamProjection,
	'{E82B9381-1BA1-4CD8-8F0A-0F7AAB0777CE}' : SheetMetalBends,
	'{C84C5989-2AE1-4E61-9C29-88028C8873A2}' : SheetMetalBend,
	'{C7DF1AFE-A3EF-427A-B732-70DEFDDB351D}' : SheetMetalLineBends,
	'{DCA09F8B-187B-400B-AFFA-D1EC84251EC2}' : SheetMetalLineBend,
	'{6D725058-9A30-49B2-8BA6-466F2807E232}' : SheetMetalHole,
	'{D11BBACB-3A8A-4B3F-9DEC-C17CC9989083}' : SheetMetalHoles,
	'{17CDFC21-A515-4011-BCC6-A3420219E19D}' : SheetMetalCut,
	'{A0C32567-9107-4695-A9B0-4D991B58689E}' : SheetMetalCuts,
	'{F6910669-B8FC-4F05-872E-BA10DE0964A4}' : RadialDimension,
	'{BD3D6D8C-C5D8-42F0-926D-FD995EE6D232}' : RadialDimensions,
	'{60ADBA37-9540-40E9-8F52-03E80E3F423E}' : BreakRadialDimension,
	'{2782662C-D266-46D6-9BF5-6E4612D32D9F}' : RadialBreakDimensions,
	'{117E5AB9-3D8C-4F14-BB4B-14FF43082EA7}' : DiametralDimension,
	'{2195AC03-677A-4236-9BEA-FBDE74CEE7F3}' : DiametralDimensions,
	'{BC66C415-362A-4246-850F-A7D39BDE6C1B}' : LineDimensions3D,
	'{F8E92C35-23B4-4058-85E5-324B46FB551F}' : BaseLineDimension3D,
	'{0FD2290E-6FF6-48C4-9B10-E1C6D0608C74}' : LineDimension3D,
	'{A7B94E84-CB49-4021-8AC2-27ADC8036B4D}' : LineDimension,
	'{D44491CE-CDD2-4435-AFAB-7AEC8E58D912}' : LineDimensions,
	'{1072B7E5-9C4B-44F2-A8F0-1A60C59D4909}' : RadialDimension3D,
	'{FC1FC235-02C5-41D5-871B-D754926B593E}' : DiametralDimension3D,
	'{7245F71F-E655-4102-8C2C-B4E6D2FA26D8}' : RadialDimensions3D,
	'{F3F0EDE3-3E00-48E8-922F-121CA571BE26}' : DiametralDimensions3D,
	'{9F6632A5-AAA8-4BF3-94AA-ADF2838BEC74}' : BreakLineDimension,
	'{865EDBB6-F511-45EF-AA82-C19AD126F9B9}' : BreakLineDimensions,
	'{CA99C371-8E76-4FE0-A176-A33FC6D2FDFC}' : HeightDimension,
	'{2A942576-E76D-4375-A1D9-0CCC4B382786}' : HeightDimensions,
	'{BEABBB41-F220-43AB-9922-39BF76207E2A}' : AngleDimension,
	'{82DDC7DF-D7C3-41A6-9913-DEB4CE349203}' : AngleDimensions,
	'{D33D3BFC-BEDC-4E91-A78C-D03461379E15}' : BreakAngleDimension,
	'{37F30E53-7355-436D-8EEF-3B1DE7E9EFCE}' : ArcDimension,
	'{D18DFB31-8A26-4281-BF18-C462CEDBE714}' : ArcDimensions,
	'{9D769F23-62B6-46FB-9BC9-A74A28E98501}' : AngleDimension3D,
	'{154CBD57-2124-4667-BECA-61A6D8AB380A}' : AngleDimensions3D,
	'{114075C2-6D73-4198-A29A-F05D772FC75D}' : CurveVertexParam,
	'{A7899FAC-ECF5-40AC-9267-97B98B849570}' : Splines3D,
	'{CF10FB1D-FE72-48A2-A36B-19B63594D674}' : Spline3D,
	'{E39CAE1D-9B07-4171-8A97-90D9E7E475D4}' : LocalCoordinateSystem,
	'{C2EB441C-8053-4ECB-961F-D0607769B508}' : LocalCoordinateSystems,
	'{D9B8494F-9693-488D-AC64-1EEE767737E9}' : LocalCSAxesDirectionParam,
	'{D49278A6-1476-48FB-9374-CD066742B0AC}' : LocalCSEulerParam,
	'{1F490D96-2098-40E6-BB73-52DD0A71111A}' : PolyLine,
	'{1DC144A1-0F9F-4D93-98EC-53BFCCF795FE}' : PolyLines,
	'{7A899963-5137-459A-AB0A-48653074BCD0}' : BaseLeader,
	'{90E9D9E8-1451-4BA1-97A6-4BE6D1508649}' : Leaders,
	'{55912A9B-6387-4946-80B9-C30D1DD30D07}' : Roughs,
	'{1237C011-5D75-4EBF-B53A-744AA16D7EC7}' : Rough,
	'{31DC80A4-BCC8-45C1-8CE1-6C43E24FD96C}' : BaseLeader3D,
	'{9B18CB77-9EDD-440C-B154-969F1B5C7B98}' : Leaders3D,
	'{48398FC6-D508-4F69-A292-840AC4C7DB69}' : Rough3D,
	'{D2ED0BEB-1705-4D5F-B8C4-F0D88B49AB2D}' : Roughs3D,
	'{700819A4-82B8-4E32-B516-DB0ED48D1D05}' : _Base,
	'{2D2BC5F4-2D44-4C4E-A20E-1F8D8095DF73}' : Bases,
	'{7C3AD6F0-625E-4756-8C64-A04783653A72}' : TableCell,
	'{020B47A5-6B61-48B2-80F6-3A607E0E0A94}' : DrawingTable,
	'{E0C24704-8D4E-45BA-9175-972D58E37C7F}' : DrawingTables,
	'{6E4F37E5-2F92-4A22-97EF-F5AEC374343A}' : Tolerances,
	'{BD78C015-15E7-45F6-AD21-D737007ED7C1}' : _Tolerance,
	'{DBF9FA07-8FE1-46DE-B236-9931388FF543}' : Bases3D,
	'{DAAE59DF-E97C-4434-9166-8A52BEA0FF31}' : Base3D,
	'{EE1CF4A7-CB7E-42C2-854D-32EB10E28C78}' : Tolerances3D,
	'{68C4A672-8029-40E8-9203-E50046072BCF}' : Tolerance3D,
	'{9018B030-43B0-4A67-AE2B-11F14AB2716D}' : LocalCSOrientByObjectParam,
	'{DE089315-444A-46A1-A551-4F0264EF11D2}' : CutLine,
	'{AFDE9B99-603D-4B29-B2E5-3F7399B72619}' : CutLines,
	'{C51785D4-4665-4521-885E-1D0633AE445C}' : ExternalTessellationObject,
	'{F8B4A9EA-09FE-41C4-8E66-B2A015CA51C8}' : ControlPoints,
	'{816922D4-1FBA-4672-95AE-E27BEC782E47}' : ControlPoint,
	'{C5DDAF9B-32B7-4552-ADAD-F31D8706ED6B}' : ConjunctivePoints,
	'{4A7A9FC8-85D7-4B62-99BB-7A303F1D6E98}' : ConjunctivePoint,
	'{76A04B67-394F-4B63-BC9C-67C52A36F98A}' : PropertyBmpList,
	'{E437188E-6071-4C50-9E43-FB53E63D9EE9}' : ViewPointer,
	'{A3035980-E806-4458-BF4E-4BD8BC54D592}' : ViewPointers,
	'{44A427DC-4604-43CA-9AF8-026C494CEC57}' : Multiline,
	'{20023299-3104-4AF3-AC55-6D2B368896BB}' : Multilines,
	'{12FABDF2-CAA4-4C8F-A3E6-A56DD90552B5}' : Contour,
	'{1D09CC46-FBCC-4B09-8D0A-E20B22FAE3EF}' : ContourLineSegment,
	'{31450942-A67C-4459-B7EB-F1B900B100FD}' : ContourArc,
	'{33DEDD79-0855-4C92-A1B9-0D45BD3B8DAB}' : ContourSegment,
	'{93F02582-585F-4319-90B5-3974A70999D8}' : Curve2D,
	'{B3BADEEA-2F85-4A72-8546-DFEA96E3E736}' : DrawingContours,
	'{63502BD9-2EC0-4908-8E45-DE433E7B9DB7}' : DrawingContour,
	'{452F7CD4-5C9C-48F5-956F-E07E0B1CC30D}' : SplitLines,
	'{606AD1D9-FE0C-44EF-AB97-EE65EF26BC08}' : SplitLine,
	'{F77E276E-6F68-4A23-AF68-EEF29603B1AD}' : SurfacePatches,
	'{E61F549B-2E9E-45B6-A647-71730E3EEA49}' : SurfacePatch,
	'{8B491E62-1DE7-4C17-9629-F77DF0E8E45C}' : FaceRemovers,
	'{5B433BC2-C5DB-4CF7-8C99-EBCD1421D43E}' : FaceRemover,
	'{98702E0A-C12C-49F3-A188-FBC453B4B88C}' : SurfaceSewers,
	'{9541E720-DED1-4A04-A6F0-F11C2512C932}' : SurfaceSewer,
	'{FDCF85BA-4BB2-4A83-AF0D-73D967485BED}' : NurbsSurfaces,
	'{D2D5BC88-7991-4245-9968-6222F3993F45}' : NurbsSurface,
	'{F89065E8-D547-452F-8723-24DB2304BC29}' : PropertyLibExplorer,
	'{D7A43DA7-65AE-4006-AB72-B579CEE9A99C}' : ExternalGDIObject,
	'{E91C61E1-5C35-4EB3-972E-213CC012426F}' : Circles,
	'{9F1D8D78-C0CD-446D-877F-79330B01B8FA}' : _Circle,
	'{2B471C1A-E44F-44AD-99EA-4AC126B80965}' : MacroObjects,
	'{A9880F8D-2166-4690-ACA5-4479DBE4251B}' : MacroObject,
	'{F0270B21-879A-4B96-BA43-95B402754FC0}' : Ellipses,
	'{209A2979-6F0C-4D27-B157-CFC74BA53F14}' : _Ellipse,
	'{A1471F9B-32BE-4E66-BF1C-F83255C7EC6D}' : EllipseArcs,
	'{D79ADD45-A3FD-4376-A5E4-BD6E31C193C4}' : _EllipseArc,
	'{AF3188C2-CD4D-45F6-BCB2-5F44F30200D1}' : _Point,
	'{4B8726C5-E743-48A5-9C5F-506F5D57DB7F}' : Points,
	'{BCA8BBB8-CCAA-4865-918F-7D035BD9E0D4}' : _Line,
	'{431C0844-4C3E-4110-8E16-2B952AA0521D}' : Lines,
	'{BC4A8E55-C5C4-405C-9B78-AA36CA5B1156}' : _Bezier,
	'{D744D5EE-E926-45B3-B622-F7B543A2D066}' : Beziers,
	'{FB692157-2A44-4313-BE9B-5C7AD70DB633}' : Rectangles,
	'{28C7998F-BB9D-4EDC-90EF-D810F40481B7}' : _Rectangle,
	'{C9204FDB-09B4-443E-9029-FE617CEE9106}' : RegularPolygons,
	'{11D9782E-11E1-471B-82D1-8635B0861339}' : RegularPolygon,
	'{8095A5E3-86CB-4B66-AA45-E71E1E8883A9}' : InsertionObjects,
	'{A4E92DC4-9804-4381-9B54-8E2030C50E6D}' : InsertionView,
	'{30D92D83-D913-4898-85A4-A6DCEF2007CA}' : InsertionDefinition,
	'{FFC3A04A-C9BD-44C2-9485-41F4A655653C}' : PolyLine2D,
	'{6A3B4FB6-FB8D-40D2-B3CA-2DFE4FF725B5}' : PolyLines2D,
	'{487511E6-E3F4-4F7C-9217-C485B1463A61}' : Equidistants,
	'{5EB10E2C-0D66-4AC2-9619-93B437CBECE7}' : _Equidistant,
	'{A71C349D-BAFC-498C-AC18-B372CB2FD4B1}' : _Nurbs,
	'{51E9EF87-E12D-48AF-9E0F-35A279878831}' : Nurbses,
	'{80178C38-D3BE-4E6B-9D22-AA43D8DA2C46}' : CentreMarkers,
	'{F6E745A9-DB3A-40F8-9318-D8A53D04DF16}' : CentreMarker,
	'{79A4CAF1-F75C-47D5-A3AF-65D8B95AD17A}' : RemoteElement,
	'{8B0949ED-637A-49BE-96D4-95CD37A80FCC}' : RemoteElements,
	'{AEC9CA96-A058-49DF-B566-195C82FE3576}' : _Attribute,
	'{A92D056B-1D1F-4C2B-97E9-77A5F837A68A}' : _ColumnInfo,
	'{949BD5DD-A728-4009-8176-222DFEC7B7FC}' : _AttributeType,
	'{325C006C-C993-4656-BC1A-DE65D8401527}' : AxisLine,
	'{78F95449-3A99-4B3E-86B5-C7BC9DDDF074}' : AxisLines,
	'{DF582F9B-E350-4EF8-A6EA-5D8D32D43CA1}' : Variable7,
	'{863D0E6D-C8E0-4E49-88B7-DAB423CDA1C3}' : InsertionParameters,
	'{C0A36437-0D32-4D41-9C3F-0A70D66A4C03}' : DrawingGroup,
	'{ABBC0387-2E69-4575-BAD1-A97B02B418B2}' : DrawingGroups,
	'{7627E43F-0B5A-410F-9456-81E7C130AC5B}' : _Hatch,
	'{E51E0641-4F58-48A1-83D8-F77355DB4E5E}' : _Colouring,
	'{1044ADC3-E779-4C48-A4DD-A00BEF9341D6}' : Hatches,
	'{CAA76116-56AD-4466-9951-C16C10D43CE0}' : Colourings,
	'{11BA32BC-D5A2-474B-BA91-E38EE0A2C567}' : _SpecRough,
	'{281276EB-C88D-4F54-9C13-E6DDB8C2530D}' : TechnicalDemand,
	'{ACAB7ABA-EC2F-4E2B-A742-19BB5BC4441A}' : _Raster,
	'{F90677D1-9ED2-4BDF-8C68-6B241B2A09F2}' : Rasters,
	'{C5D9DA68-4574-40D5-B92A-838C235F1903}' : OleDrawingObject,
	'{41E89E17-2FB8-4E08-A01A-CF9BB524A6A2}' : OleDrawingObjects,
	'{A421368A-34B6-4DDF-9A52-73B3488EE83F}' : ksSelectionMngNotify,
	'{45615DBB-7842-436C-9B84-063A13C061E8}' : SelectionManager,
	'{495C89BD-48C4-40B3-9829-4E982F191BA2}' : ChooseManager,
	'{CE94C01B-ED23-43FC-98BB-D7BD85EE0D47}' : SurfacesIntersectionCurve,
	'{BDD167C1-8439-412E-8A41-4A01576CBC79}' : SurfacesIntersectionCurves,
	'{404E7D5A-A13F-4CFF-8214-FEA7012110CB}' : ksStampNotify,
	'{79CB82D9-6EA1-49D2-8479-C7005D87EC77}' : _Stamp,
	'{1D709F94-C02D-4DAD-8E74-B9E7434A8E62}' : WaveLine,
	'{A5B25423-BA42-47B3-B0BD-AF8CC911B767}' : WaveLines,
	'{1C337EDB-F786-4D56-8BD2-06D927176C32}' : BrokenLine,
	'{31314843-3608-4B45-8F0A-DDBC308226C6}' : BrokenLines,
	'{C2792BEE-4F86-4610-908E-8E4B31B603FC}' : PropertyStyleList,
	'{6DE8A8F7-28C6-42C7-A579-C24BDFA6B73F}' : _CopyObjectParam,
	'{07BD4468-D478-447C-8F20-1C6E2ABBD9C2}' : CurveCopyObjectParam,
	'{6F7F48FC-1DA4-4689-9AE3-69804B842D1B}' : CircleCopyObjectParam,
	'{A5B8E337-EE84-4EEC-8235-A812FDD6C2DE}' : ICircularCopyObjectParam,
	'{FECBF8C1-D8B4-437F-8AA3-DC6362C2E51E}' : CircularCopyObjectParam,
	'{592AB214-A8CF-462E-ACD5-528839113338}' : IMeshCopyObjectParam,
	'{FF54BE1B-3B35-4B01-985D-8D696086F7E7}' : MeshCopyObjectParam,
	'{87DAB0E6-B749-47FC-8E02-76DAC0439C81}' : PrintJob,
	'{F035E79B-1F65-42C6-AB49-498C65CC2E1F}' : PrintJob_Sheet,
	'{9699D02A-6FF3-4C25-8974-5EB527024315}' : _Property,
	'{19144A91-0D9F-4906-AFD0-BEFB5625662D}' : LibArraySettings,
	'{2A2F00CE-536E-462D-B554-5809CDE31095}' : ReportProcess,
	'{D5ABFF52-A8A7-45CB-BDCD-103FDFEF3E3E}' : Equidistants3D,
	'{948EB787-026E-4990-8A92-B6B3F25D4D7C}' : Equidistant3D,
	'{46DCF819-A2E0-4D7C-BFCD-F0181F6358EF}' : TrimmedCurve,
	'{FFC3BE29-A93A-47AA-9733-362C120E87D6}' : TrimmedCurves,
	'{7C809F8B-4BF4-42AF-B1CE-7CBEFA653730}' : TrimmedSurfaces,
	'{5B3A39A9-82EB-4997-8279-6641009E9C9E}' : TrimmedSurface,
	'{33289D92-16E7-4E98-B126-DE9FCE328B5E}' : FeaturePatterns,
	'{9A4B0A4C-961B-465E-AC12-99A604A503CB}' : LinearPattern,
	'{76921B78-7B2A-4E77-8647-6C4B26A1CE4C}' : RuledSurface,
	'{F74E75C2-F5F9-482F-A30E-9B0DBFC7F426}' : RuledSurfaces,
	'{F47C641C-E59B-4B44-9168-A156B15FEF69}' : Vector3D,
	'{A6CD01C2-FD04-4B95-93F4-4D0648349C3F}' : ExtensionSurface,
	'{E117EB74-5E7D-4EDA-9F32-9C7CEFA29311}' : ExtensionSurfaces,
	'{D575BF4A-81A5-4E01-A22B-CF944C3E9BDC}' : EquidistantSurface,
	'{939B3DEB-7BFD-47EA-AF42-233B3B683571}' : EquidistantSurfaces,
	'{EC056028-53EA-48C2-9DE2-77CEF64F4C1C}' : PointDrivenPattern,
	'{FFC0A8BB-FB7C-4981-8E07-F5D3FEB4DC5B}' : CircularPattern,
	'{6A4F281E-23AB-49C0-A0A3-B34695AA8A3D}' : PathPattern,
	'{4DC7A9C1-C7A0-421B-8481-62147127994B}' : Vector3DBy2VertexesParameters,
	'{26383273-9991-4D0D-908B-2627F225D625}' : MirrorPattern,
	'{2347BFD1-F8FB-4AF3-A3DE-1769AC24E158}' : Vector3DByCoefficientsParameters,
	'{65CA2B10-06A5-4684-AC5F-EB51AA0BCF28}' : Vector3DBy2AnglesParameters,
	'{5C0BE8E4-A07B-4315-9EBF-933172ED1540}' : Vector3DByLocalCSParameters,
	'{9F24FA16-76BE-4F5E-9DEE-DBD86FA9903E}' : Vector3DByObjectParameters,
	'{AEFAE454-A1D8-4E22-BEA9-AF2D79DF6BE9}' : Vector3DAlongSurfaceNormalParameters,
	'{01DED71C-8500-47A1-9879-E7D1E955152C}' : Vector3DByCurveParameters,
	'{431C567C-FA69-4DEE-B6EE-C46156A0F2B3}' : Vector3DByScreenNormalParameters,
	'{9B988E67-1EFB-4441-BB37-F33A50A5C209}' : DerivedPattern,
	'{CEFD648E-547C-4D66-94E9-336E6E89BCFE}' : LocalCoordinateSystems2D,
	'{BCB037A2-D246-44AF-92EF-FDC54624FFA2}' : LocalCoordinateSystem2D,
	'{DC434F74-5BC2-4AE7-93E1-E9FC5670E028}' : ConnectCurve,
	'{CDC3416D-E4FD-4C16-9ABC-3DB233FEEE76}' : ConnectCurves,
	'{DDC4358E-877E-469F-A465-26901265C51E}' : FilletCurve,
	'{52CF9D27-73D6-4CC7-980E-26A4BEC840BF}' : FilletCurves,
	'{63974EE5-CB94-44B2-8FA0-A13F4264BAF5}' : SurfaceThickening,
	'{B9101BEB-76D3-44F9-8224-0005FF0E5593}' : SurfaceThickenings,
	'{D26BAED3-E5C6-422F-A6E9-C5FAB91C39DB}' : _Arc3D,
	'{0B792EA8-E117-4B5C-8775-C466A1108422}' : Arcs3D,
	'{E1AC2948-6191-4240-85F4-5A32321E9D46}' : IPropertyOpticalProps,
	'{83ED9022-AF06-4E7C-A77B-E95B325DBC43}' : PropertyOpticalProps,
	'{3FBF29AA-5691-4E7B-BE08-2025F29F018E}' : IPropertyEditCheckBox,
	'{EFE5B123-174F-4CB0-AE85-7F291FA8AE1B}' : ITablePattern,
	'{345103DC-4694-4A5E-AB0E-9652B62646CD}' : TablePattern,
	'{5298A662-3440-4253-B15B-2580CEE7C618}' : Rotateds,
	'{300C9F03-56EF-482F-A685-B7950A6D3457}' : Rotated,
	'{D96A0574-FB91-4D49-AF19-EBCC78335723}' : CutRotated,
	'{9F594D5A-30B5-415A-ACE6-D568F186D144}' : RotatedSurface,
	'{E25EFEF5-D5C7-49E6-9149-9EA6E36CE9AE}' : ExtrusionSurface,
	'{CD7DA97A-87F8-4B2E-B5D4-750D6150291E}' : Point3DParamBySphere,
	'{EC22584A-6FA6-4A66-B8DE-21605ED1D12B}' : Point3DParamByCylinder,
	'{1A73D002-0BD3-4A73-801E-CA6A322CE562}' : MeshPointsSurface,
	'{372E58EE-C5AC-48B5-A535-BB490598D931}' : MeshPointsSurfaces,
	'{43F3CA73-2015-4FB4-82C1-B25A9FA92310}' : CloudPointsSurface,
	'{9860A4F8-58DC-4285-B1B0-5EB539D2A6CA}' : CloudPointsSurfaces,
	'{F5DD3012-45BD-42EA-A448-1CF7E646487A}' : ImportedSurface,
	'{2DF37218-0F1D-4E7E-B1E4-954B8AA790D2}' : ImportedSurfaces,
	'{65989BDB-AB09-4CC5-A1DC-6DFB5E5C6496}' : ICopyObjectParam1,
	'{3D5B953B-4EFD-4C55-9433-7205028F38D6}' : Scaling3D,
	'{0B02FD29-1FB4-4C7B-9C0B-B63F6415C960}' : Scalings3D,
	'{1B3EB690-1F97-4A36-9A0C-B251CC76A205}' : CurveOutLine,
	'{B1CDDFB5-1B50-4E4F-AECF-51F975A7D6EF}' : CurveOutLines,
	'{5F39D09D-2C8F-4732-9635-528FF64D8A1B}' : CurveByLaw,
	'{7FDF9C11-FC8F-401C-9620-3E13C3254DE0}' : CurveByLaws,
	'{94AA20BC-33CF-40F0-B0EE-8DAD194F49D4}' : TextTable,
	'{0801D00A-7F0A-4045-BCD7-E148083953D2}' : LoadCombinationsParam,
	'{FFBB62A8-CB09-4201-A85E-D22856D8BB8C}' : OpenDocumentParam,
	'{E05CD072-EAC4-4439-84C9-F1084D178D8C}' : IsoparametricCurve,
	'{6F579902-6CB6-4902-8020-4F2F71F9C3AA}' : IsoparametricCurves,
	'{74F538E8-B3FA-40AB-8EEC-5B3071E98C44}' : IsoparametricCurvesSet,
	'{6D1AEFF5-1F8E-4BF1-986C-2D4332B3D5F8}' : IsoparametricCurvesSets,
	'{FE7D22F2-17ED-4446-A031-67D67AC47F29}' : SplineOnSurface,
	'{83AE651B-838C-4292-9B82-20918F192841}' : SplinesOnSurfaces,
	'{97F94C42-4891-4C13-848A-529D3B1F8458}' : CurveBy2Projections,
	'{AB57FA3C-10B0-44BD-96EF-EA9F2AF0D4DA}' : CurvesBy2Projectionses,
	'{1C5024E9-8F3F-49D5-9B66-42E26A03614B}' : ProjectionCurve,
	'{31D3EACE-36E4-4C17-9E47-20555B0B7F07}' : ProjectionCurves,
	'{375FD000-6094-4351-8E03-E2A2631DFBE0}' : Contour3D,
	'{0ED8DFDC-5EF8-4A9F-940F-9104775417D7}' : Contours3D,
	'{874A7DFC-944E-49DE-80DE-EB78894C48D1}' : LineSegment3D,
	'{9D634ADF-E8BD-48A3-AA20-4FE654605D3E}' : LineSegments3D,
	'{DFA86296-3244-47D5-A306-D115FFC45DA1}' : UnhistoredCurve3D,
	'{FC9E1D2C-CE09-45E7-B95B-BF060ED6B597}' : UnhistoredCurves3D,
	'{848B7259-B5FE-4CF1-A5BC-6AD3704D8F2F}' : TechnicalDemand3D,
	'{8ED8030C-87C3-41D4-BB4D-319BA74D6879}' : Embodiment,
	'{7F3EEBF4-9277-4603-AD0A-C8DE1624F444}' : INewPartDocumentSettings,
	'{60DDC74B-8171-4BA6-ABD9-549FBA84E7B0}' : IModelObject1,
	'{C926E817-2B20-48A1-AB97-F63972FBA07A}' : Spirals3D,
	'{BD740853-3960-46D9-8DAB-1C490E699B6A}' : ConicSpiral3D,
	'{CC5B7B89-DFA5-42EB-B307-113A013052D6}' : CylindricSpiral3D,
	'{CE1A13CE-C56C-4BCA-94CE-45D2C36B7EAA}' : PointsArrOnCurve,
	'{CFA80033-A78C-43EA-9CEA-B26D1A18FA80}' : PointsArrsOnCurves,
	'{E70927B9-FAA5-4149-B751-946A1E0E0EFE}' : PointsArrOnSurface,
	'{B4E7DDF0-E62A-4957-B477-B3B5797BF85A}' : PointsArrsOnSurfaces,
	'{02155ADC-2F79-497F-9E33-9E3496050C71}' : PointsArrFromFile,
	'{6DAB2B49-9659-411B-ABEB-5EB049AA817C}' : PointsArrsFromFiles,
	'{0BDEEF46-FCD5-4F3C-B9AE-5A073689BA91}' : MathCurve3D,
	'{8BE0DEB4-1BD0-4997-B82B-14605574A53D}' : Axis3D,
	'{7C3D9245-648E-49D4-A4CA-DB8D3257683F}' : Axes3D,
	'{F0D21C54-2816-4FE2-9AA0-A88821488AB3}' : Axis3DBy2Points,
	'{EF803C9D-8E47-4EB4-A1F4-FD4D3769A76D}' : Axis3DBy2Planes,
	'{C0202ADA-0962-41DA-ADE2-D3015A3E4533}' : Axis3DByConeface,
	'{59309A8D-E9B0-45C2-98E8-792EC6C93F15}' : Axis3DByEdge,
	'{A3BE6C5C-E339-4B42-900E-2719848CDC85}' : Axis3DByPointAndObject,
	'{572AF961-64C8-4335-808C-17F2E8AF012E}' : Axis3DByOperation,
	'{D6DA79A3-CF5D-432B-900F-429403741DDD}' : MathSurface3D,
	'{02943F10-AFC8-4BE9-86B0-ACE0929A2DCC}' : Planes3D,
	'{DEBC9CF4-AD07-42F6-A795-176EB0EB8C75}' : Plane3D,
	'{762D8288-0893-4B8D-A434-99E44405ADE2}' : Plane3DByPlaneCurve,
	'{5A341BD4-9A7F-4DC5-8721-88C544530F09}' : Plane3DTangentToFaceInPoint,
	'{3D67D60E-A4CC-4714-8439-9EC6846E8934}' : Plane3DByOffset,
	'{775B6240-2AD6-432F-8F65-A54F945F93F1}' : Plane3DBy3Points,
	'{D0E15CC6-5630-42B3-8706-8B205C7E7D11}' : Plane3DByAngle,
	'{F2373BF1-DC0F-4B94-B0AE-48265C028D19}' : Plane3DByEdgeAndPoint,
	'{451057BB-DD5E-44C5-8BC4-15F6A2D24CFC}' : Plane3DParallelByPoint,
	'{01A5298A-1472-4D90-9441-8E0591501D9C}' : Plane3DPerpendicularByEdge,
	'{7EEDFD78-29A9-40D6-87B8-ABD0DCA86774}' : Plane3DNormalToSurface,
	'{A928037A-11D4-4DD7-93AF-491C9D5AD907}' : Plane3DMiddle,
	'{1DEE85E1-D2DE-4981-A605-2D0AE6393F61}' : Plane3DByEdgeAndPlane,
	'{C7DDD05C-D299-46E9-8CD6-3E167A060F21}' : Plane3DBy2Edge,
	'{A905B4F2-52D9-4E4C-B9BC-09A56035F751}' : Plane3DTangentToFace,
	'{C3E4216D-283E-40B6-8DF9-AF5C81B3CF2E}' : Report,
	'{6611F953-12F2-41EF-889D-B17E643D80E2}' : ReportStyle,
	'{A124F0E6-DA11-45B4-8618-95B63C36C7C3}' : AssociationTables,
	'{8883DD05-F024-4C44-B9D2-E29EF361A23C}' : AssociationTable,
	'{748767B1-4A6F-4270-8EED-9810313DE348}' : ReportStyleColumn,
	'{11B32E53-A4EB-427A-873A-5651330AFC17}' : ReportParam,
	'{BD6A9CD5-210A-41A7-9AA0-D07064ED460E}' : UserFolders,
	'{FF3B01C1-0693-45AE-A641-8BCAAE5C99B2}' : UserFolder,
	'{2A26A1B6-9B08-4F28-8828-58CA667AD6DF}' : UserDesignationCompObj,
	'{DE5CD3C8-0B9B-4B42-A1B7-12690B74D64E}' : UserObject3D,
	'{BF632568-4E7A-4D21-BA18-AE708775E92E}' : UserObjects3D,
	'{7979B891-59D0-44BB-A643-16C340259E77}' : Serializer,
	'{D30E2696-B263-4283-BACA-04471DF8311E}' : Placement3D,
	'{91008BBD-B5BE-42D8-B9D9-37127514C6F1}' : Document3DSettings,
	'{4F500BED-70AE-4AFD-A13C-C345FBE39663}' : Layer3D,
	'{B74E958E-2583-4B60-A1BA-FE72EC8F0930}' : Layers3D,
	'{049F66CC-B9AC-4689-B0B4-B1183B5B67B2}' : LayerGroup3D,
	'{E08FA7C6-1A29-43AE-B0D8-158159BF1D27}' : LayerGroups3D,
	'{2EDCB445-FE02-4529-BAD6-DED0C9DAF6A5}' : Document3DManager,
	'{B1B69577-AA04-41AC-A98E-F7DDEF40AFC0}' : ToleranceRecalc,
	'{86EB116E-6926-4376-AE57-8F26D823B306}' : SpecRough3D,
	'{62AFE65C-2F2E-47FA-965A-37CCA9B25352}' : BilletObsolete,
	'{42C8D1F3-0DAA-477B-8994-184E59DBDD7C}' : BilletsObsoletes,
	'{277E8B80-BA49-4779-94D2-CFB7EEF20F06}' : CopyGeometry,
	'{BB8BA111-24FF-47F6-AE7B-97023F467A1D}' : CopiesGeometry,
	'{01D8A252-C3A1-45EA-BC92-0E2B6258EDF5}' : CollectionGeometry,
	'{55556EA2-4975-4C27-97BB-A78C08D98E2C}' : CollectionsGeometry,
	'{606263B5-E920-46FB-930E-4107CC0FBA1B}' : Thread,
	'{ABA1BF7E-8138-4DC3-8EFB-A240E2B8B36E}' : Threads,
	'{4591067E-C29A-4548-96B6-B455AF7006DC}' : PropertyGroupBegin,
	'{7B10BC9A-6A9A-4D5E-B896-294134FB680F}' : PropertyGroupEnd,
	'{A54A786D-FBBA-45F6-BAFB-18E6D2CE96FF}' : Process2D,
	'{C08B3775-2631-4D34-83E0-F18DAF855848}' : Phantom2D,
	'{172114B0-F8B7-4BED-A38B-62BFC490A3AF}' : Process3D,
	'{A795DEC9-D9BD-4275-B553-44855BB59D71}' : ThreadPattern,
	'{67D6F78E-4F92-4809-9894-6FA7DA814EFA}' : PropertyTwinSwitcher,
	'{7AD229F8-CC73-4FF2-A611-02782B6DDC75}' : ThreadDialogParam,
	'{E32A2D46-75F5-4DA8-A40E-03EC806F20D1}' : PropertyPoint3D,
	'{67DBF7C5-FFB1-4E47-A8E5-901A63EE130A}' : MateConstraint3D,
	'{2D4F2072-EBD6-4CB6-B1C2-535BBF097F40}' : Mate3DByAngle,
	'{FBBD6A6C-65F3-492E-9095-15D6111A5EA1}' : Mate3DByTangent,
	'{80BC4FCE-18BA-42A7-8E62-563843274250}' : Mate3DSymmetry,
	'{FA6EE09A-E2C8-45B7-A4EC-B53F45B84652}' : Mate3DTransmission,
	'{A7301502-52CA-4886-94FC-5B8002880FF4}' : Mate3DCamGear,
	'{698A8F34-5759-4FEC-AFEF-C8B29D072E12}' : IMate3DDependentPosition,
	'{8E8B8453-1695-477D-9A39-C957FFAD84FE}' : Mate3DDependentPosition,
	'{7F6A75B2-8C3D-46B1-8125-07BEB64B6BBB}' : PropertyPreviewText,
	'{E3643E08-6371-413B-8E4A-99C56BD41D47}' : PropertyAggregateControl,
	'{9F4504BC-739E-42C6-A946-7875F3D43589}' : Hole3D,
	'{12851DCA-A72C-4F44-9CF0-282476F65052}' : Holes3D,
	'{0912865E-0DEB-4C6A-8AA0-70A512603E9E}' : PropertyBasePoint,
	'{4BE1AC9D-61F2-4305-95D5-2ED6C2B21A6A}' : IPropertyLinkButton,
	'{24D51CCA-A3F0-4055-86A5-32077679DA60}' : PropertyLinkButton,
	'{22D3BACB-1077-417D-A138-BBF0754A73B6}' : CountersinkHole3DParameters,
	'{E588E23F-6AC1-4770-B184-309B13180E18}' : SpotfacingHoleParameters,
	'{2D9B843D-99BB-4322-AAE7-B1D0C3E82F83}' : CountersinkSpotfacingHoleParameters,
	'{D3CA313F-8817-48B7-892D-6D7DFE1E407B}' : ConicHoleParameters,
	'{E4A732A0-3DA8-40E3-9E05-E65F22F080DA}' : PropertyMarking,
	'{5E6970D9-B721-4B7C-B29D-7AA4B25CBCC8}' : Chamfer,
	'{2AC5E1B7-C86E-476B-9015-F102A303B0CE}' : Chamfers,
	'{754D6A63-A68D-4574-AA01-F8C252873A1C}' : Fillet,
	'{BC5254E9-8A80-49BA-9812-689F597E0908}' : Fillets,
	'{1E0DC81A-179B-45DA-A285-06A40015C953}' : Incline,
	'{6DCEC4A9-CFA6-410B-B7A1-1FD60DCD2BAF}' : Inclines,
	'{474FF0BA-E909-468C-BD6C-9A455B420350}' : Rib,
	'{7E0D8D58-3BF2-4437-BC0D-236261C706CC}' : Ribs,
	'{0290BA8F-2F72-4CBB-B7AD-D0437F6BB15C}' : _Shell,
	'{6CFFE821-37CA-476C-9A65-6E011459752A}' : Shells,
	'{340A4B80-C3EA-4C3D-9DA2-50BB2B4ADFEE}' : _Boolean,
	'{86BA33C6-0381-4CEB-A6FD-84C39645D7D2}' : Booleans,
	'{2757F3A6-617F-4B75-8ABC-459E30561316}' : Cut,
	'{3803D968-E469-45C2-8C3B-0D5B0E00C034}' : Cuts,
	'{F4FA0EE2-9988-4FE9-AF69-D9F84368AF09}' : Loft,
	'{73F8984C-5A44-455C-973D-98E9589DB57A}' : Lofts,
	'{C2B10EDA-FAFA-4485-A7EF-0A61FD26536C}' : Coupling,
	'{B8BEEC82-BEC3-406F-93C5-4464149C3275}' : Evolution,
	'{C21B92BD-B9D0-44C7-B52F-4AFE57F7899E}' : Evolutions,
	'{D3E2C967-AB5A-4732-A7C1-D185DF7A0ED6}' : Vertex,
	'{98F55F56-45A6-4210-955A-E831907FD36F}' : Edge,
	'{B92823BB-3D0F-4994-8BB4-7BFC4B6F4CCE}' : Face,
	'{6198541B-92B1-40B1-8484-F6E18302F75E}' : Loop7,
	'{83ABCACD-F2CF-489C-BBE6-116069591839}' : OrientedEdge7,
	'{D8AF682B-5F03-4CCE-9E77-787A76D2B55F}' : UnionComponents,
	'{801B8CC1-1735-4448-BE29-A16E578D9851}' : UnionsComponents,
	'{CFDD8BF4-0D38-49E7-A859-CA3BFFCDB799}' : MoldCavity,
	'{C334E4DD-61DC-402E-BB85-0DC7C89B9BC2}' : MoldCavities,
	'{6B9C4409-D991-4E0E-A8DE-AFDD3A582AE8}' : MacroObject3D,
	'{A7238B7E-7E31-46C0-A814-ECB90B5414A5}' : MacroObjects3D,
	'{53212E12-F293-4574-BB38-62967871A216}' : NurbsSurfaceByCurvesMesh,
	'{0BB4E6A3-0BA0-4839-9F06-53179930918E}' : NurbsSurfacesByCurvesMeshs,
	'{B82A24F7-C580-4577-9F18-09E817D9CC90}' : JointSurface,
	'{0FD2565C-9396-4DF6-936A-DBBC3378BC21}' : JointSurfaces,
	'{5924E1DF-1DBA-4076-88EE-55BFA2D4088D}' : BodyReposition,
	'{B0280081-56AA-48B8-A675-30F6A4AE6445}' : BodyRepositions,
	'{2A128198-F2CF-4F33-85BF-7E4814254308}' : DistanceAngleMeasurement3D,
	'{CFA1BE63-DAEC-4B9B-AE59-A200323FDAB1}' : DistanceAngleMeasurements3D,
	'{8064EACE-0AAE-4AE9-96A1-C7A31310DDD6}' : EdgeLengthMeasurement3D,
	'{18B1FABC-67DB-4847-A0E8-95CFC542D109}' : EdgeLengthMeasurements3D,
	'{A0D30170-DD32-466A-9CDB-AC91B0795995}' : AreaMeasurement3D,
	'{D1B34114-0946-4074-9E57-A84A8325845A}' : AreaMeasurements3D,
	'{4A2700F2-2A3F-443B-9140-E631AEE572DA}' : SheetMetalSketchBend,
	'{E7BD79CF-F9EC-4EEF-8431-D0B61B54E8B6}' : SheetMetalSketchBends,
	'{D3FA6C9C-DAC5-4E55-A1B0-5A47AD9F5B40}' : SheetMetalClosedCorner,
	'{2371BFB4-D216-4BAB-8DA8-F050BDAC0554}' : SheetMetalClosedCorners,
	'{0D764BEA-4BA1-440B-8930-62E675DFBB84}' : SheetMetalPlate,
	'{76D215CE-F548-488C-ABD0-FDFE794F505F}' : SheetMetalPlates,
	'{81ABF9FE-165D-4975-AAEA-59AE4989885B}' : SheetMetalBendedStraighten,
	'{2A0B422F-D150-4A4B-BE25-2AE2F97068EF}' : SheetMetalBendedStraightens,
	'{5F2DC19A-C995-40DC-A6C5-BF5CA453E1EB}' : SheetMetalShoulder,
	'{FABB909B-C4BC-4632-8566-B7F358FD3FE0}' : SheetMetalShoulders,
	'{0F80305A-F369-4406-9519-8EC17AAA8FD6}' : SheetMetalJalousie,
	'{64EDA2CF-1A52-4766-AABF-DD451EF185CB}' : SheetMetalJalousies,
	'{4757F80E-8981-4ED5-ADF9-BCF14E592B6F}' : SheetMetalPressForming,
	'{C974E025-46FB-4EED-9456-78876DDCC4FB}' : SheetMetalPressFormings,
	'{468578BC-BEAF-4053-AED9-4E10C48305C1}' : IProductDataManager,
	'{619A7499-13DA-4C43-AD1B-53ACAA4BA5B4}' : IMeshObject3D,
	'{6774DD56-8666-4B40-B22F-74B43299342D}' : MeshObject3D,
	'{6AB4AFCD-EFD7-49FB-9FA2-0CBBAC094DE9}' : ContentDialogParam,
	'{9DC3E672-5B83-459B-AA24-052E1C8F138A}' : SheetMetalRib,
	'{E7C8CA4E-0110-45EF-B5CF-3A3D85ABCFE3}' : SheetMetalRibs,
	'{D92A7102-79CB-46D8-B18A-1804D71F5416}' : ISheetMetalRuledShell,
	'{934BCC92-BC49-4A46-9A88-70FD2E74537D}' : ISheetMetalLinearRuledShell,
	'{DA8608DC-9B21-418E-8813-AA33B50A4DAD}' : LibraryHoleParameters,
	'{98CF3E5E-0548-4616-8BB9-28C1A1092955}' : ConicCurve,
	'{4C5033FF-6870-45B1-A995-733578C23553}' : ConicCurves,
	'{46BF1402-7436-42CD-9084-DA35C498326A}' : CircularCentres,
	'{412F4305-E302-4870-863D-99015F6F0896}' : CircularsCentries,
	'{B7C0077B-FAEF-4183-B3BE-0B07529D3342}' : LinearCentres,
	'{EAFBF8C9-EA01-4550-8C56-391D57ECCE3A}' : LinearsCentries,
	'{39BC03AF-5E8D-4466-B69A-7E5C2FE8E79C}' : FullFillet,
	'{C2C76BBB-C57C-4263-8250-6289DF04EE8E}' : FullFillets,
	'{A81F2ABB-4F55-4C82-BDC8-78D10BAA8C15}' : Zone,
	'{39E54D0F-3D65-43CD-BCA5-B8D46FE19077}' : ZoneDivision,
	'{D45C07B1-E8FE-43F8-8396-5BDB05937155}' : ZonesManager,
	'{C24EB4CB-CE63-4130-AE76-86DE33A8DDD0}' : IZoneParametersByBorderPoints,
	'{CB8A3B37-B26D-400C-AE24-1395176FDC87}' : ZoneParametersByBorderPoints,
	'{C41922E4-E46F-48C2-8EF3-3A52598AFF26}' : ZoneParametersByObjects,
	'{00F35E8B-F196-4447-9546-CA9D21ECD3B7}' : ZoneDivisionParametersRegular,
	'{2D21B406-9933-4038-9196-5111472C5099}' : ZoneDivisionParametersByPlanes,
	'{5CA6F5DA-81A0-4B99-93B4-C4D68DD8F42D}' : DynamicCrossSectionStep,
	'{2180F44D-3125-45F6-8466-62793172A940}' : DynamicCrossSection,
	'{0CEFC601-D4AA-4493-8905-636F87167515}' : DynamicCrossSectionStepParametersByFreePlane,
	'{543A8DAF-A009-4D20-83EE-1ECFFAB1CD24}' : DynamicCrossSectionStepParametersByOffsetPlane,
	'{D6F7640A-CE45-4792-B301-B9F9BE8FF483}' : DynamicCrossSectionStepParametersByRotatedPlane,
	'{017A292E-8BFE-4A2C-A3F5-AC6B8D015D49}' : DynamicCrossSectionStepParametersByZone,
	'{D8A8BCBB-E337-431B-AC37-07007217190B}' : IDynamicCrossSectionStepParametersByBorderPoints,
	'{E785BB44-EA2D-4704-A645-2400A19AEBBC}' : DynamicCrossSectionStepParametersByBorderPoints,
	'{11F1CF98-3563-4DFA-B6AC-E3BCD6197085}' : AxisLine3D,
	'{D4ED8463-0728-42BD-9413-83144E174241}' : FindObjectParameters,
	'{E0C4D376-8503-4FC1-8442-794EC7F26364}' : ksFindObjectParametersNotify,
	'{7CDB34A1-2B31-4FFD-BAF7-C06B588FE0CB}' : Manipulators,
	'{46597352-925C-4D1B-89E3-6868D54FAFE6}' : IPlacement3DManipulator,
	'{575C0551-83D0-475C-B6A9-49E788A8EB41}' : Placement3DManipulator,
	'{F942D621-874A-4A51-A651-A435CE0C6304}' : EditDoubleManipulator,
	'{B05DF16E-5D90-4931-9197-815A2D1E365D}' : MouseEnterLeaveParameters7,
	'{F2C7D9B1-C665-4C44-AEA8-BD2C6938E5A6}' : RestoredSurface,
	'{F1603067-E7C1-43C2-9F8F-B83238D66454}' : RestoredSurfaces,
	'{937A14C5-7FB0-4675-80D5-AE99A73D5254}' : Styles,
	'{B357540F-DA46-471C-90F9-2018CB2DC70E}' : CurveStyle,
	'{F280E407-A09F-4A98-93A4-451260A3E4C0}' : HatchStyle,
	'{742AA7CC-8019-4854-A8FF-9EE1FFBD0460}' : IApplicationLicenseManager,
	'{BE4BA098-99B4-4C27-912B-3AD83A04E543}' : IPLMObject,
	'{95615543-48E9-4738-9B01-D8ABC2C9001B}' : IPLMObjectsManager,
	'{4FB26621-6A86-43FF-BB61-AF1B04AFD22B}' : IMultiThicknessGroupsManager,
	'{F7458066-14B5-4945-ACCC-1199F98AAFDA}' : ConditionIntersect,
	'{0031BFFF-6A43-44B4-8E0B-0DA3984CB9ED}' : ConditionIntersects,
	'{87749A4B-353E-4A5A-862A-F025B49609B5}' : TextDocumentSectionsManager,
	'{40A3F4A8-E1FE-4A31-8922-B47C8097F14F}' : TextDocumentSection,
	'{B0AA22BA-3F8B-4DC7-97FF-688AE467179D}' : TexturesParam,
	'{EE36CADB-07D1-457A-8D7C-1D2D4B240CF3}' : IApplicationServises,
}
CLSIDToPackageMap = {}
win32com.client.CLSIDToClass.RegisterCLSIDsFromDict( CLSIDToClassMap )
VTablesToPackageMap = {}
VTablesToClassMap = {
	'{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}' : 'IKompasAPIObject',
	'{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}' : 'IApplication',
	'{8BF39F08-5537-4910-84CE-B338E55F7BCF}' : 'IDocuments',
	'{901F85DE-FA5A-4314-BD75-066A79AF20A8}' : 'IKompasCollection',
	'{5C6E318D-BD6E-4AFA-8A13-977EAA0845EF}' : 'IKompasDocument',
	'{1D18C466-C085-4D68-A465-A85D0C8E3A0E}' : 'IDocumentFrames',
	'{4437FABA-990F-45E2-B1A2-7754FB326B76}' : 'IDocumentFrame',
	'{B35FF50E-2991-4630-8AB8-DC3153E7971A}' : 'IDocumentSettings',
	'{B9632C5C-86E1-4BC9-83A5-A954E407246A}' : 'ISpecificationDescriptions',
	'{9678959E-166B-45F3-BDE8-88BBF4645F5C}' : 'ISpecificationDescription',
	'{F237D2B3-DFEE-4702-B71F-E5F6923F03E6}' : 'ISpecificationStyle',
	'{BB719D42-E44C-445B-969A-0E2F63E97FC8}' : 'ISpecificationTuning',
	'{7EA65CA0-420D-4E1D-8C19-998495C4DA2F}' : 'ITextStyle',
	'{A6AD008D-58D1-48B5-BD29-E6795289FE4B}' : 'ITextFont',
	'{BB66E097-95C7-49B1-B6FD-3506C7758D09}' : 'ITabulators',
	'{2DD73B92-F8C8-49AA-AECD-B75713427FC1}' : 'ITabulator',
	'{01B1BF6F-B9E3-4E94-99A0-81394FB99B16}' : 'ISpecificationTuningSections',
	'{E68AA413-CC35-450D-BF35-0F294F59B08C}' : 'ISpecificationTuningSection',
	'{56532CB4-BD3F-442C-AFA4-0E6BEB677E61}' : 'ISpecificationSubsections',
	'{7F0E5F63-815C-46E5-B99E-C24244566C00}' : 'ISpecificationSubsection',
	'{8910CC92-AC76-4837-AB7A-5FD3C7B74728}' : 'IAdditionalBlockTunings',
	'{9CD5B016-9CE9-4E0A-8902-196D11360536}' : 'IAdditionalBlockTuning',
	'{43EFA203-F956-43D6-B603-87807DDEFD0A}' : 'IAdditionalBlockSectionTunings',
	'{E04B8464-C8D6-4BAC-99B5-AE79EBBDB205}' : 'IAdditionalBlockSectionTuning',
	'{B9CDE694-4C33-4375-A6F6-AE94DC759510}' : 'ISheetFormat',
	'{41529A95-51F0-44B0-9D55-5753BCEB23BC}' : 'ISpecificationColumnStyles',
	'{16839CAA-3AFB-49A4-A19A-C61963967649}' : 'ISpecificationColumnStyle',
	'{24AE8484-F4F4-4059-AFC7-9492A64C88E8}' : 'ISpecificationSectionStyles',
	'{4B61FC7F-4826-4B58-8CCB-7D459AD0BE7B}' : 'ISpecificationSectionStyle',
	'{90E2FBEC-A56F-423C-B89F-479673EDD895}' : 'IAdditionalBlockStyles',
	'{B2A43FA6-9BCE-4468-9662-811A6255E220}' : 'IAdditionalBlockStyle',
	'{B2B97D19-3A0B-4C9F-A6AC-DEFFAFE0D1C2}' : 'ISpecificationBaseObjects',
	'{49994ED8-96BA-4D9D-B642-5F0F1E3FED16}' : 'ISpecificationBaseObject',
	'{72EB4E8E-7952-4B36-852B-4816B7B5AFEE}' : 'ISpecificationObject',
	'{9F44BF03-DE25-4DDE-ADA0-92384199C100}' : 'ISpecificationColumns',
	'{3ECFB777-2645-42B5-A6ED-111688433B26}' : 'ISpecificationColumn',
	'{F4BAB79A-8A35-44D5-BE44-C566E444F342}' : 'ISpecificationColumnItems',
	'{2BABDD01-EACA-4137-9749-25B8C5E230EE}' : 'ISpecificationColumnItem',
	'{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}' : 'IText',
	'{AAB72FE2-DEA3-4FB6-B0DD-B926249EF67C}' : 'ITextLine',
	'{1DE74AFB-5026-4B85-861F-F0CFDBD443E6}' : 'ITextItem',
	'{9AE6C0A0-72EB-4A51-B54C-A0E57CC5F6DC}' : 'ITextTable',
	'{81FAB1C5-F566-4D06-8D3D-17FF01D3566F}' : 'IAttachedDocuments',
	'{333E9E11-D161-49AE-9791-8BEDB58B4C78}' : 'IAttachedDocument',
	'{B8BD0FC7-AB2B-4E7A-8EC2-82060D7D29A7}' : 'ISpecificationCommentObjects',
	'{3B6B80CA-2145-4184-B786-0C571DF5ACD7}' : 'ISpecificationCommentObject',
	'{7AB54196-0B76-4B01-B769-7F47637173C4}' : 'ILayoutSheets',
	'{D87B5A80-CF52-4510-ADD9-D1344FFFFC07}' : 'ILayoutSheet',
	'{250CE350-7C21-47FD-8FF2-C44A9FF177DF}' : 'IStamp',
	'{77A6D4CA-6418-4DEE-B59C-400BFD052375}' : 'IUserDataStoragesMng',
	'{9DBFB4EB-BE9F-46EF-88FF-BB603A9E786B}' : 'IUserDataStorages',
	'{DD2AF5C4-D5B9-420D-B658-F935F80A8586}' : 'IUserDataStorage',
	'{A70BF191-E1E1-4A92-8CA9-E6D3FEAD2D9A}' : 'ILoadCombinationsParam',
	'{FADCA157-95B1-4E3F-97AA-622E34DA3238}' : 'IOpenDocumentParam',
	'{CB5FDBC8-4DAE-4C4B-87D5-6FD1F2705C38}' : 'IProcessParam',
	'{5BA6324E-E555-490F-A0E2-68D3C6C88D92}' : 'IPropertyTabs',
	'{45DE8E5B-BC2B-4584-8BA7-D3014D3A2397}' : 'IPropertyTab',
	'{548241BA-FDA8-4633-981E-94552BE38D6B}' : 'IPropertyControls',
	'{E35F8FF8-03C6-460C-A2F1-294A3A29A029}' : 'IPropertyControl',
	'{34196EC3-58B2-436C-A353-427703740874}' : 'IPropertyManager',
	'{53CDC510-99EA-4736-8542-194F4D8FB32B}' : 'ILibraryManager',
	'{80F95B5B-DB8A-46B7-8C22-605A0AECD597}' : 'IProceduresLibraries',
	'{1AECE59E-DE4C-4FB9-B62B-7967573AD3B1}' : 'IProceduresLibrary',
	'{9D6E9AE1-7DDF-4354-B8D0-E12023B186FA}' : 'ILibrary',
	'{1A77F076-2295-40F9-B1AA-2838C4CA0887}' : 'IProcedures',
	'{7BF9DF08-D14D-4DA9-ABC2-FB458E7122D0}' : 'IProcedure',
	'{A6E82D68-69D5-40C0-9A85-275B22219135}' : 'IInsertsLibraries',
	'{885CAD68-B42B-45CF-8620-E0138558EFE3}' : 'IInsertsLibrary',
	'{FCBF6340-119D-4736-BB95-F1EAB4BEF1B8}' : 'IInserts',
	'{D6A6D305-6B5C-4392-B61D-D669C092EEF2}' : 'IInsert',
	'{0A8B4CD1-7158-4CE6-96E0-885376F5DE1B}' : 'IKompasError',
	'{642D03AB-4798-48A5-B075-3CD9AFA18554}' : 'IConverter',
	'{2AA9F713-2328-4E8F-B996-9DFDABC67DC9}' : 'ICheckSum',
	'{BE125ABA-EAB2-4A22-99D7-108C84B6DCC5}' : 'IProgressBarIndicator',
	'{FFB66332-17FF-47EB-AC43-32084F8F6077}' : 'ISystemSettings',
	'{76D9033D-5F87-41CC-A3E8-55EFEE94B677}' : 'ILibArraySettings',
	'{246741CF-BC91-4E69-AEEE-CF905B9C05F7}' : 'IThreadPattern',
	'{0409EC8F-88F7-4242-81E7-965ABEAE932C}' : 'IMath2D',
	'{65C82884-C41B-47A1-8C07-E8820D6718EA}' : 'ICurve2D',
	'{9D86880B-C004-475D-8221-B786FD5A228B}' : 'IPrintJob',
	'{0EC985BC-81FC-498E-BF15-03DDC870AA33}' : 'IPrintJob_Sheet',
	'{E821AE61-FA05-4B39-8908-BD37D6D044A4}' : 'IStyles',
	'{8DFD15E0-345E-4B1C-86A1-BD65F87128B5}' : 'IStyle',
	'{096E62B3-7184-4998-9925-74BB710D8D8E}' : 'IKompasDocument2D',
	'{A4737593-578B-4187-8CAD-E1056EB5404B}' : 'IViewsAndLayersManager',
	'{9CD1B5E6-C1A2-4910-8D0C-97080B14AA3D}' : 'IViews',
	'{3DD7F97B-59CB-4297-A1BA-04E5A7FFF448}' : 'IDrawingObjects',
	'{07EF021F-11C1-4015-8D87-4DC94A2A71B0}' : 'IDrawingObject',
	'{21A7BA87-1C8B-41B4-8247-CDD593546F37}' : 'IView',
	'{F6DC2898-D596-4418-A21A-D15AE07B9A40}' : 'ILayers',
	'{9AD76C38-CC48-4901-AEE5-27B48F51563C}' : 'ILayer',
	'{8BAB52D9-8EF6-43A6-A1B8-AF42D5961A94}' : 'IVariable7',
	'{C389F80D-228D-4FB1-B183-959AEA0B5906}' : 'IProperty',
	'{DBFF6D98-8F79-453E-9B8B-81E40A6D8027}' : 'ILayerGroups',
	'{265BBB5A-7B8A-4AA5-A0BB-FF64D23BE62B}' : 'ILayerGroup',
	'{BCA22E27-AB60-4BA6-87EE-92158AA6D366}' : 'ILayerFilterConditions',
	'{D743BC12-82A9-4E8F-85B2-7154A356ACC0}' : 'ILayerFilterCondition',
	'{7B60E769-06C3-4FDC-9677-7B5EF5180308}' : 'IKompasDocument3D',
	'{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}' : 'IPart7',
	'{E37256D4-9021-47AC-8FAF-3713FB2A50C3}' : 'IModelObject',
	'{EF4343FA-985D-4FE9-AD5F-439BC8F92958}' : 'IFeature7',
	'{42F8FCEF-E56F-466C-8814-BEBAC0719AE6}' : 'IParts7',
	'{125CB096-639E-479F-98DE-F27FAB23838A}' : 'IModelObjects',
	'{2B8B154E-ED76-4FF0-B3E4-FEE691D014A4}' : 'IVariableTable',
	'{BA6395F5-3506-4483-8864-4EEC220AF316}' : 'ILocalCoordinateSystem',
	'{D71AEDBE-01D4-4C7D-96DC-94981F2A1C37}' : 'IPoint3D',
	'{D51A4DCF-627D-44F5-89BA-46EF2449A212}' : 'IVector3D',
	'{437D6587-7649-4A0C-80BB-7A6E89661839}' : 'IHatchParam',
	'{9C66DE49-529C-4678-9AF1-12710CB77804}' : 'IPlacement3D',
	'{AED8F9FC-E493-4CBD-9341-9D9E39E14FDC}' : 'ISpecRough3D',
	'{95F316E1-0A18-4F42-8B70-1423250F244D}' : 'IMateConstraints3D',
	'{9E37E1F5-F770-473A-B996-A6753EDA73A5}' : 'IMateConstraint3D',
	'{4F122E22-0AA6-46E1-841F-A2504B145995}' : 'IBody7',
	'{0155AE59-92F4-4CEE-9633-8ADA943388CB}' : 'IUserFolders',
	'{67671C8A-3587-41EB-9291-39E9F94E4EA5}' : 'IUserFolder',
	'{0B93D860-69EC-4D03-8A1D-EB0C936B1D45}' : 'IZonesManager',
	'{05C71C4B-F8BC-42E9-89D5-B9BC0145ED36}' : 'IZone',
	'{D67AA2B3-2E8A-4882-B11A-3828D106CA0A}' : 'IZoneDivision',
	'{E6DF688C-5B23-436B-A027-A96BFD5484CC}' : 'ISelectionManager',
	'{E2D9EAA6-F88C-4ADB-AC32-854E32E9FEE1}' : 'IChooseManager',
	'{94F965B0-5ABB-4994-98C7-B08FA8515452}' : 'IAttribute',
	'{414CF83E-4FA3-42AB-BC26-6C6BBF91BB0F}' : 'IAttributeType',
	'{3FDE0F44-4459-49F3-A012-E64F9BFA454D}' : 'IColumnInfo',
	'{CD435B3D-175C-4E18-BAA0-81FDD7EB6A86}' : 'ITechnicalDemand3D',
	'{649F0EB2-EBC0-449B-8B61-DC3CF1953BF9}' : 'IDrawingObject1',
	'{131069F4-A4E2-4DB4-A559-85EACCC74CE4}' : 'IParametriticConstraint',
	'{58890FE8-E671-4561-994A-600DD29032E4}' : 'IKompasDocument1',
	'{FB57F1C4-44FE-4C73-9B15-87241E8735B5}' : 'IKompasDocument2D1',
	'{B21C70C9-53EC-4BB7-A9DB-BCE852CA6716}' : 'IMacroObject',
	'{BA2D820C-0DB9-47C6-A32D-34C7D8BA1B2F}' : 'ILeaders',
	'{1AF590A9-C339-477A-9F22-799C04D20BB4}' : 'IBaseLeader',
	'{8F1A7123-BD4A-4A49-8E22-1502D59B1FE6}' : 'IFindObjectParameters',
	'{0ED06421-907C-4EF0-89F7-AEFC81BEF1DF}' : 'IDrawingGroups',
	'{2C96ACB2-4877-45D9-B62D-78BBAD704458}' : 'IDrawingGroup',
	'{58E1BACA-32D5-4EAB-87E9-D14816DAC29F}' : 'ICopyObjectParam',
	'{C74D7419-0970-4904-907C-DCC5407C59B0}' : 'IProcess2D',
	'{A6E4F3B6-0554-4A67-A700-428090A6739A}' : 'IPhantom2D',
	'{92AB02F7-2C68-4A74-9E74-70C51E015FEF}' : 'IKompasDocument3D1',
	'{75F1CA7E-5071-4C1F-8A9F-F76A6E05CAF6}' : 'IDocument3DManager',
	'{D637078B-6498-40B6-9F41-83ED1EA40D1F}' : 'ILayers3D',
	'{D8ADF279-1CAC-4A2A-911B-9A44378407A0}' : 'ILayer3D',
	'{D3F08D03-3BB2-4DE6-95A9-38B5C05D8C12}' : 'ILayerGroups3D',
	'{0B176BBC-51F5-4D31-A630-6A04207E4DA1}' : 'ILayerGroup3D',
	'{77730022-3179-4674-AE49-604FABC0B6B1}' : 'IProcess3D',
	'{5FBB9528-B629-46DE-8BA6-13C5872BDD15}' : 'IManipulators',
	'{606FD023-3944-4215-A426-1E4EB82A8E32}' : 'IBaseManipulator',
	'{C2214318-5C89-40F8-A25C-C87D08B490F4}' : 'IDrawingDocument',
	'{D723AAC1-0315-4AED-99BF-88A7E55B6E6D}' : 'ISpecRough',
	'{18C80AE5-BF92-482A-9C56-3D1638F5E5F5}' : 'ITechnicalDemand',
	'{E19CE626-DF9C-48C4-A83D-3E3BC7F0DACA}' : 'IFragmentDocument',
	'{E3FA8FD0-6187-4625-89B7-3C815651944D}' : 'ISpecificationDocument',
	'{71A589EA-D32F-42C4-BBC4-A51611E85E90}' : 'ITextDocument',
	'{0075EA2A-5498-4E28-BDF3-0288EB168054}' : 'IPartDocument',
	'{F6B3F33A-3273-43EF-9B8A-7C0AF8FAA129}' : 'IAssemblyDocument',
	'{E0197BA7-C3FB-44A3-9C13-49115A150ED2}' : 'IDimensionText',
	'{534518CC-6577-4273-887A-6B833FDE6ED7}' : 'IDimensionParams',
	'{E7F1FD16-B641-4264-859C-D47217DA8B04}' : 'ILoadCombination',
	'{B9019350-FF1D-4161-B41B-CD1B020ECF36}' : 'IFrameTreesManager',
	'{5378690E-A57D-473F-84DC-CA508B34FAD7}' : 'IAttrTypeMng',
	'{CB083231-EE0D-4596-B04D-E6A020926557}' : 'IPrintJob_OutputParameters',
	'{095CE8C1-B2E7-4417-AB3D-CCE01480C08E}' : 'IPrintJob_PrinterSettings',
	'{AB64A064-53E7-4ADC-BF40-3BFC04D93963}' : 'ISaveToPreviusParam7',
	'{DC982411-CF10-4C00-946B-B5338448568A}' : 'IUserMetadataManager',
	'{4F13BB1B-44AA-42E6-BD50-30E21E434D1B}' : 'IStylesManager',
	'{5046BF60-687A-4E5D-BBEF-3CB5D95F7A41}' : 'ICurveStyle',
	'{9315D8A2-95B7-4E7F-B861-B88FA490EE2B}' : 'IHatchStyle',
	'{FD515235-4DBA-4F81-8D5C-6FE87C834562}' : 'IPropertyMng',
	'{37FD3C77-6032-4459-95E9-C8DFC43B85FF}' : 'IReport',
	'{5C65F11D-75C8-4130-951C-5EBE0ABA4F44}' : 'IReportStyle',
	'{DD114FC3-EB24-4FBD-B9E9-B01A893AA3B0}' : 'IReportStyleColumn',
	'{9D111C31-1629-4A0B-89E5-8461CDFA2157}' : 'IReportFilter',
	'{AE7377CB-28C6-468E-B667-73117BCDC300}' : 'IPropertyKeeper',
	'{29BBF2B8-A2E2-4E7D-BF04-0BB79C89EF35}' : 'IReportProcess',
	'{88803908-B243-47B0-A388-9E059CFA8E54}' : 'IReportObjectsFilter',
	'{96F02F01-04E1-44D1-9974-48330EBE801B}' : 'IAssociationTables',
	'{44F0752E-E25B-4896-95B4-6376AC23A2A9}' : 'IAssociationTable',
	'{F7E44485-B4EB-4897-A263-BE3BC1A08789}' : 'IReportTable',
	'{A1AF048D-93C0-4C21-9064-D437A71D7D53}' : 'IReportParam',
	'{7D2A79FF-EC54-4480-B9F3-46F75293B558}' : 'IPropertyControl1',
	'{1D238C4C-AAD7-4374-B372-013CF7FCEDB4}' : 'IPropertyEdit',
	'{4504EFA0-D059-4FD4-B725-FA264D190869}' : 'IPropertySeparator',
	'{8F53E9D5-07AD-412E-8C2A-509BC633C4FF}' : 'IPropertyList',
	'{9205277D-B480-4AF7-B660-CCDC653F6453}' : 'IPropertyCheckBox',
	'{3920A0BE-0628-47D5-B0F1-1DFEB77964BC}' : 'IPropertyMultiButton',
	'{E1DB38CD-A6D5-44B8-9AD0-0056B87924DD}' : 'IPropertySlideBox',
	'{5A902C6C-A030-4F37-A089-91505BAEE466}' : 'IPropertyUserControl',
	'{6682B70F-59DB-4BF0-AB01-45B65B1BDED1}' : 'IPropertyGrid',
	'{3CDFE85F-643D-4008-AE32-379C0EB3FB7F}' : 'IPropertyTextButton',
	'{F214A46D-2BA9-40AD-A32D-E696EF9C895A}' : 'IPropertySpinEdit',
	'{DB1F3224-837E-437F-8944-6FB9703F528B}' : 'IPropertyFileName',
	'{FC5CDCFB-3F67-43A1-8FC4-1278B901CE0E}' : 'IPropertyColor',
	'{FDB82760-7EA3-408E-8699-A8392ACFD810}' : 'IPropertyEditList',
	'{C2523B7E-EB4B-45DB-8E3B-9D6CCED99333}' : 'IPropertyToolBar',
	'{D18D34F5-0028-4853-998C-25A48D141B43}' : 'IPropertyBmpList',
	'{06F93FBF-C65A-49B1-83DB-C736BA33F0A5}' : 'IProcessInfoWindow',
	'{2A214701-0BCB-406C-B57F-6DFADD799A64}' : 'IPropertyLibExplorer',
	'{B2431C46-9A35-494B-A958-D9098F82C3FA}' : 'IPropertyStyleList',
	'{5A247709-EA70-443C-968E-BFECC951E14F}' : 'IPropertyGroupBegin',
	'{6AFDDAC7-EB89-440C-8AD0-866AEEEAB7CC}' : 'IPropertyGroupEnd',
	'{74191892-71FC-4820-B8A4-CB264A9E9E8E}' : 'IPropertyTwinSwitcher',
	'{64725D44-155C-412C-B0F5-F5203F5F75FD}' : 'IPropertyPoint3D',
	'{8576D0C2-3147-4CFF-AA39-FA9EF9B799E3}' : 'IPropertyPreviewText',
	'{8B2A259E-6819-4DDB-8EA3-C408F9F04054}' : 'IPropertyAggregateControl',
	'{C97E7403-B375-4544-87DD-4D3EF36388E5}' : 'IProcessContextPanel',
	'{3F23FD10-1526-414D-93BC-AB273794F654}' : 'IProcessContextIconMenu',
	'{75E9D1C7-B766-4D53-BE99-A3088C249266}' : 'IPropertyBasePoint',
	'{2F69F0E3-89DA-4B0C-8ABE-A6E996F39AD1}' : 'IPropertyMarking',
	'{3A7C6A0C-53DB-4043-9A77-6D3989175741}' : 'IProcess',
	'{89D98E20-A4F4-4F49-8FDF-FE4DC28F208F}' : 'IEditDoubleManipulator',
	'{05B6026A-4B53-4015-A7CB-94298073F86C}' : 'IMouseEnterLeaveParameters7',
	'{0825F23C-0A73-48DE-BEAB-DA2FF39962C3}' : 'IAssociationView',
	'{5F9580DA-915C-4C28-991D-5DFFE3BF3B3C}' : 'IViewDesignation',
	'{E4E42871-E799-4273-8EDB-E5EF83CC66C2}' : 'IAssociationViewElements',
	'{1B94C65D-3473-4FF2-B185-0B1C2C98FCAE}' : 'IBreakViewParam',
	'{D4C8B5AF-B2A1-4E07-9CD0-A1FC5B0BC1E1}' : 'ICutViewParam',
	'{85EFCCC7-1667-48B7-A915-BB8149915EF8}' : 'ILocalCoordinateSystem2D',
	'{E6A6A1C8-A6F9-470E-AF64-D6AB7741D684}' : 'ILocalCoordinateSystems2D',
	'{93233F05-B389-4076-BCA2-CCDB87BDB7B7}' : 'IView1',
	'{6EDA87C9-26C9-4040-AE48-33AD3EA9244F}' : 'ITexturesParam',
	'{B09A64BF-7AA6-4BF6-B8E8-AA8E8EE6E9D6}' : 'IDocument2DSettings',
	'{0DC39FC2-4FB1-489E-A76E-E47413199FA3}' : 'IDrawingDocumentSettings',
	'{A33D05CF-EFFF-4BBE-9BE0-15D283425828}' : 'IFragmentDocumentSettings',
	'{C474582A-2AD4-4ED5-A86A-A169C4DA5D54}' : 'ILibItemSettings',
	'{16777C2B-829D-4405-B5C7-71EAFCA17BFA}' : 'INewDocument3DSettings',
	'{BE6A80EE-38FE-4432-8331-BF864830761C}' : 'IColorParam7',
	'{6FFAF1BC-98C1-4562-A7A7-1D263996B1D4}' : 'IDocument3DSettings',
	'{28C513EE-057A-4094-8C18-D3FD733D2C81}' : 'IThreadDialogParam',
	'{C825C801-D6D3-4456-BD37-D48ED799E033}' : 'IApplicationDialogs',
	'{B9362883-C8EC-4603-A6AA-7F4703AAA9D9}' : 'IContentDialogParam',
	'{1DB65C7E-535E-489E-8F34-84DF7FBA09B2}' : 'IInsertionParameters',
	'{66907239-09BA-4456-AC9A-318804099628}' : 'IInsertionDefinition',
	'{040C027E-D385-4A7A-96BD-296DF0B9E70E}' : 'ISerializer',
	'{B416C2CA-CA76-4CBE-8D3A-458967F8E0CE}' : 'IHypertextReferenceParam',
	'{CF9150BA-0E3A-46DE-8973-332A00361474}' : 'ITableCell',
	'{D3715420-645E-435B-BB25-8E35AC570718}' : 'ITable',
	'{D78E47DC-172B-4824-A519-9BC2C0387B5C}' : 'ITableRange',
	'{9F2F27E7-8FB2-4C6C-A54D-35DB240060D8}' : 'ICellFormat',
	'{1E29E849-1D1E-4791-BD31-8EF00ED5D118}' : 'ICellBoundaries',
	'{4D14726D-0EC2-49CE-B02C-FEDAA6D65BBD}' : 'IPaintObject',
	'{B6674824-CD9D-4220-B2CB-9F939A9C35C8}' : 'IGabaritObject',
	'{73653933-51B5-49D6-9EF2-6667639283CC}' : 'IModelObjectNotifyResult',
	'{354EA69A-3191-4DA4-B980-821BE9B7683C}' : 'IKompasDocument3DNotifyResult',
	'{2C6E8A0F-EDC8-413C-9304-9278817B915B}' : 'IModelContainer',
	'{EE562963-395C-4748-9726-FCA9C531B1CA}' : 'ISketchs',
	'{E6BBF50D-8401-4FB3-A6B6-153D3F447255}' : 'ISketch',
	'{A160C032-CF96-4467-A682-CE2243DF76BD}' : 'IExtrusions',
	'{0D7FFE70-33EB-442C-A9B6-A205EA85A237}' : 'IExtrusion',
	'{81EBB128-3963-4759-9D4E-2829C3078B0F}' : 'IPoints3D',
	'{5CD7AC22-D8C2-42C4-96E5-5D64E44046F7}' : 'IFeaturePatterns',
	'{C020E994-FB7F-449A-A3D9-2181135F4200}' : 'IFeaturePattern',
	'{7A9B6FCC-2156-48C8-BC95-597242EE1B9E}' : 'ISurfaceThickenings',
	'{984F7DD6-A7FB-4693-862F-459CC8630B11}' : 'ISurfaceThickening',
	'{A9B14309-92B3-46BA-8841-233293A60310}' : 'IRotateds',
	'{7BB28AD1-CCAE-449C-9086-A97470543089}' : 'IRotated',
	'{B180FE26-ABEE-4F37-932F-24AAACF227A4}' : 'IScalings3D',
	'{A37EE5F1-C852-467B-B72A-00C05310174D}' : 'IScaling3D',
	'{140DE7B8-8291-4220-B7FB-9F3C4FDFB649}' : 'IBilletsObsoletes',
	'{5F754BA9-1FB7-4AAE-A3F2-F36D7CF938BF}' : 'IBilletObsolete',
	'{6CC5E3B7-B509-4B8E-87D1-0B936010120C}' : 'ICopiesGeometry',
	'{63E5636B-0661-4635-A902-6E8727E75D93}' : 'ICopyGeometry',
	'{CC78F834-4A97-4F69-9207-215308F0ABB0}' : 'ICollectionGeometry',
	'{F1B04DDA-FAAC-4D51-9567-304CFE3EC094}' : 'ICollectionsGeometry',
	'{1753E6BE-C57C-415E-931D-37EAD991D629}' : 'IUserObjects3D',
	'{1C1886BC-98DD-4AA9-B038-6849C7BCC86C}' : 'IUserObject3D',
	'{A018E8CE-26F6-4DAE-801B-378ED08A6314}' : 'IHoles3D',
	'{4C901765-3E0D-4A5D-B2F8-FA708E3CC605}' : 'IHole3D',
	'{BC710E4D-A679-40FC-B5AE-16302ABBFEB8}' : 'IThread',
	'{5E232224-2445-430F-9324-2C75BACE1D0C}' : 'IChamfers',
	'{59C6927B-FC6D-4494-9CDE-648276020929}' : 'IChamfer',
	'{7A0672EF-4C38-4FD7-8D06-DADD256E1E38}' : 'IFillets',
	'{15E3132F-4D4E-451F-B104-478A4E3E0128}' : 'IFillet',
	'{37E37D7D-58D1-4469-9B79-2254D2B9E112}' : 'IInclines',
	'{2DB9E3CE-7603-4C88-8FF5-F8985AD26C58}' : 'IIncline',
	'{70FF934F-D7A2-4D91-AB55-27174E90648B}' : 'IRibs',
	'{2D8E1F2B-1610-4AA5-8F7F-ED489C4EDEDC}' : 'IRib',
	'{0BA80020-AD0B-4442-B4C7-7AC75AA04CAC}' : 'IShells',
	'{05A5C975-D995-4069-90A3-A81391AE8D62}' : 'IShell',
	'{1739583B-BFDA-4AD2-BFE3-14302133BB21}' : 'IBooleans',
	'{1FE29BDF-0B8E-4E34-A7E5-418092C6C9C3}' : 'IBoolean',
	'{85B81047-11F3-46D3-869D-EFE37A6A8588}' : 'ICuts',
	'{D76BE44A-2AB3-4B5A-B893-3C27E227DF4D}' : 'ICut',
	'{AF5F922F-8C32-4949-A29A-BB5EC7A99D00}' : 'ILofts',
	'{DDB04ECF-12A9-496E-8069-405F7302E039}' : 'ILoft',
	'{FB39791B-2100-4F36-B352-AA4EB5FD9373}' : 'ICoupling',
	'{8D984124-C430-45B3-939A-B5264C5B1388}' : 'IEvolutions',
	'{9AE8A34A-DE20-4C56-A793-BFCBB9343903}' : 'IEvolution',
	'{2A449EF6-1554-4C66-8A98-2734DAB88E97}' : 'IUnionsComponents',
	'{2DCDD394-C325-4D41-A5FD-9E8CC7B8EC5C}' : 'IUnionComponents',
	'{EF2EE8A8-BCC8-49BA-8FF5-3BBF627C1432}' : 'IMoldCavities',
	'{C4B6D128-8013-4AF4-B4D5-40E25F2CDBD0}' : 'IMoldCavity',
	'{B4C41D1D-02E2-4A05-A493-7D25CEEC797C}' : 'IMacroObjects3D',
	'{09DBAA1E-FC4C-4E16-B033-FB9B8F7995D8}' : 'IMacroObject3D',
	'{C42BE43C-5DE5-4293-9254-5AA7F3B2EC2B}' : 'IBodyRepositions',
	'{621E42C8-0BF8-4CB8-8813-E45E2221694E}' : 'IBodyReposition',
	'{F36E8FBA-F786-4E65-8782-3F6BC2F9D006}' : 'IFullFillets',
	'{7FEA11B5-B4D3-4481-AB09-B0DE0A699189}' : 'IFullFillet',
	'{666C987F-2700-4C35-B8CE-DB8BFB5AAF02}' : 'IMassInertiaParam7',
	'{58B4011D-3C0B-499A-A441-7870B663E8CF}' : 'IExtrusion1',
	'{B90D597D-4213-4A59-98D4-0B67E719551B}' : 'IThinParameters',
	'{D2A01420-9159-48C2-8302-C1B10A13D8F8}' : 'ICutExtrusion',
	'{7BF80DAA-25F8-4AFF-AFEA-CAD390D4275D}' : 'IChooseBodies7',
	'{6D2EE9A7-4C9F-4606-91A5-9941C20701E5}' : 'IChooseObjects',
	'{F56DBE72-48CC-48AD-9DA4-10D972C903EE}' : 'ISheetMetalBodies',
	'{2DC533DC-829E-4EFF-A905-541E9220A12D}' : 'ISheetMetalBody',
	'{77A4895D-9B09-4C63-A3FF-6857F4340840}' : 'ISheetMetalContainer',
	'{6826CFD6-6A48-4EB1-8C89-7DB4E36702B4}' : 'ISheetMetalBends',
	'{B631D95F-C487-41D6-9726-C65E9F5A4505}' : 'ISheetMetalBend',
	'{AF8B8310-AF82-4B02-8733-783FFAFD4DBD}' : 'ISheetMetalLineBends',
	'{E13EF07A-B1E8-41FD-9C85-C17F01E52A03}' : 'ISheetMetalLineBend',
	'{E117BDF9-5133-4672-9B8F-06046F6B9BF3}' : 'ISheetMetalHoles',
	'{3490B8B8-00D7-4BCF-AAD8-9487BF271084}' : 'ISheetMetalHole',
	'{9515E4BB-7C60-4C3A-AF7A-847861E67B55}' : 'ISheetMetalCuts',
	'{B50B1730-BACF-46F2-B10A-6CCDF4E4A2B1}' : 'ISheetMetalCut',
	'{247539A2-BB15-4D8A-9121-67BDE48A989A}' : 'ISheetMetalSketchBends',
	'{4E4F3CB3-5596-445B-9A18-0AF559E545C5}' : 'ISheetMetalSketchBend',
	'{67037D06-603A-41DA-8513-45088FEA98A8}' : 'ISheetMetalClosedCorners',
	'{995BEE65-54D2-443E-9423-88B4323308A7}' : 'ISheetMetalClosedCorner',
	'{A1AD042D-A57F-4079-8F7A-CE4AAB5D9DAF}' : 'ISheetMetalPlates',
	'{DC733340-DCA5-4253-8AB1-045AD169E06E}' : 'ISheetMetalPlate',
	'{B19D00A4-1B8E-43FA-9DA7-EBE37EC67B67}' : 'ISheetMetalBendedStraightens',
	'{194F5AF1-1B37-4FF7-9C7A-B939CB556F3A}' : 'ISheetMetalBendedStraighten',
	'{BC21145E-5520-4871-AA24-52E19EF82211}' : 'ISheetMetalBendUnfoldParameters',
	'{0541BEE1-9273-4611-9F26-B3408C51580F}' : 'ISheetMetalPressFormings',
	'{BDB9FB08-C8C8-4446-9821-BE1BA9306602}' : 'ISheetMetalPressForming',
	'{AC0F620E-229A-42BE-8C5B-1786C54474C0}' : 'ISheetMetalShoulders',
	'{75024BD8-6D1C-4963-9733-326EFB3CB28D}' : 'ISheetMetalShoulder',
	'{914D5295-8831-4166-994C-D19C5DF149E7}' : 'ISheetMetalJalousies',
	'{13501739-CD1F-4401-8A48-B2093E974CC1}' : 'ISheetMetalJalousie',
	'{B72CC78F-D630-463F-8911-ED9BD58BBA1C}' : 'ISheetMetalRibs',
	'{ACA9C96E-5DBE-44C8-ABF5-15230282AB05}' : 'ISheetMetalRib',
	'{6D57994F-C170-4CED-968A-6AD69C1A2C7D}' : 'IPoint3DParamDisplace',
	'{C009F9ED-ED8A-4B1E-A4CE-156F43C3F6F3}' : 'IPoint3DParamIntersect',
	'{A92F2938-F1D4-475E-AAB4-962FAA4A4366}' : 'IPoint3DParamCenter',
	'{06B6BDA5-1DC6-4321-8B28-AC065D87E060}' : 'IPoint3DParamCurve',
	'{18CE6BBE-63FB-4C94-8998-E40BC5B5D1C6}' : 'IPoint3DParamSurface',
	'{B5D353DD-5F26-42FD-87D3-01C97C44E1BF}' : 'IPoint3DParamProjection',
	'{C9E03A9B-0A54-49AC-9397-8DE4465A8D1D}' : 'ISourcePart7Params',
	'{D695D345-7054-4BBD-8D36-8E1F5AEDC5ED}' : 'ISymbols3DContainer',
	'{8E30C80C-4C79-497B-A74B-84D44F96EF4D}' : 'ILineDimensions3D',
	'{3514887E-321B-4CE3-A966-3EB1A02CEEF2}' : 'IBaseLineDimension3D',
	'{153924CD-E046-4334-8798-46A6D6663DE4}' : 'IRadialDimensions3D',
	'{5711B871-1FAE-425C-898E-583442D851CD}' : 'IRadialDimension3D',
	'{79B5AC3B-9B2F-4C75-8482-3C0D6B07D911}' : 'IDiametralDimensions3D',
	'{261AE065-69B8-4B42-B103-C8746720C5BF}' : 'IDiametralDimension3D',
	'{E0E8DB05-F71B-457E-BFEB-7EC2E803E77A}' : 'IAngleDimensions3D',
	'{C22870B5-F002-4C76-9E67-46854E938824}' : 'IAngleDimension3D',
	'{C6E6BDD4-2B0E-49BF-87D3-04E800200DDC}' : 'ILeaders3D',
	'{7170F38E-8230-4C9C-B36B-0BACBB27B123}' : 'IBaseLeader3D',
	'{8533772B-1C43-4FDD-9F0E-BC92F15862C9}' : 'IRoughs3D',
	'{083A4984-199E-4591-8FC3-CB8A9D7D4303}' : 'IRough3D',
	'{8BC582B3-1F82-4D19-AF95-24CBAD412E52}' : 'IBases3D',
	'{D5B737F6-FD3D-49F8-B3D8-C8475E5E3D3A}' : 'IBase3D',
	'{82ADDA0C-B8DE-4336-A5CC-B36504A80E2D}' : 'ITolerances3D',
	'{9CF700CF-72DB-44EB-A191-3814A3CC21BD}' : 'ITolerance3D',
	'{6090C8D4-4EB0-402A-8E25-29C1FAE85F11}' : 'IThreads',
	'{F38E986B-9CC0-4492-B850-180D3A6AF713}' : 'ILineDimension3D',
	'{2AD2E4B4-B870-437A-8D57-5807729FCB05}' : 'ICurveVertexParam',
	'{C4BC0839-932F-4DBC-9A84-5D1FE8927351}' : 'ISplines3D',
	'{4D0940A0-6A4A-4CE8-A08A-EA0A4AE91942}' : 'ISpline3D',
	'{CC04CBF6-F0D4-456E-903A-C0B0D3551368}' : 'ILocalCoordinateSystems',
	'{950FEBE2-F916-4E77-A37D-B061E5C22FA8}' : 'IAuxiliaryGeomContainer',
	'{0CF9B989-29F8-495F-9DDA-8C2CAD840BB6}' : 'IPolyLines',
	'{6CE7843D-9AFA-48FF-B444-61CDF036D118}' : 'IPolyLine',
	'{E22E30F6-05EE-4FB5-9EEB-E288234F256A}' : 'IControlPoints',
	'{39F4FC2C-99E7-411B-9036-9C756A71E211}' : 'IControlPoint',
	'{4DF343A0-8744-429D-A605-0EEABB7B5F23}' : 'IConjunctivePoints',
	'{BC7AD518-9599-490B-9E2B-9711FD9B8D4C}' : 'IConjunctivePoint',
	'{986E4A45-362F-469D-A3AE-CE081B8EA93A}' : 'ISplitLines',
	'{969B49D1-E660-4E94-9343-DE5B0F397B03}' : 'ISplitLine',
	'{453E0E34-4D2D-47B2-8E95-EB05C731961D}' : 'ISurfacesIntersectionCurves',
	'{758420A0-BECB-4FDA-BDDE-1F398B41117C}' : 'ISurfacesIntersectionCurve',
	'{8B94F332-EEFD-4610-9C55-20A1F7336122}' : 'IEquidistants3D',
	'{C25DDBF4-3CC1-467D-B996-E30ED4D529B6}' : 'IEquidistant3D',
	'{E0916A32-60A7-4786-859F-C4B08402CC36}' : 'ITrimmedCurves',
	'{F86B25DD-55A8-40F7-ACC4-4795FCF7C87C}' : 'ITrimmedCurve',
	'{2E869CEE-5432-48C8-B750-5DAC8B6094D6}' : 'IConnectCurves',
	'{C3BBE1B9-976C-45EF-805F-DDA2BA801567}' : 'IConnectCurve',
	'{E530740C-AB81-4DAA-AFB2-18E90121C8DC}' : 'IFilletCurves',
	'{962810E4-0C48-4886-8B80-AEA166B1952B}' : 'IFilletCurve',
	'{0C7E7D56-F8AF-4803-9291-6351DDE52B69}' : 'IArcs3D',
	'{79CC225F-C4F9-4721-9FE8-8AF3AA887523}' : 'IArc3D',
	'{491F65E7-F227-42FD-AB49-82487EAE7775}' : 'ICurveOutLines',
	'{BC64A05C-0078-44EB-9492-ABAD7AD38E86}' : 'ICurveOutLine',
	'{7DD7BF03-5348-4345-A2A2-FC116C100B2E}' : 'ICurveByLaws',
	'{D875D25C-B52B-47C8-B04C-8CBA73623F17}' : 'ICurveByLaw',
	'{6046FD5E-434A-4B9F-826F-37ECC1730AD4}' : 'IIsoparametricCurves',
	'{D7E519C3-EA15-43CA-A2EB-D5F119A70051}' : 'IIsoparametricCurve',
	'{8A0AADFB-D56C-46BB-90E7-29BEEB42EA63}' : 'IIsoparametricCurvesSets',
	'{F6768800-D726-4530-8966-CA1DC1AC2927}' : 'IIsoparametricCurvesSet',
	'{0E670E69-68AB-4075-9CE4-99E0A1547538}' : 'ISplinesOnSurfaces',
	'{BFF82605-C64B-460E-A6D3-3C22229A8325}' : 'ISplineOnSurface',
	'{88819055-3211-47DD-908F-187B5826FE67}' : 'IProjectionCurves',
	'{535DD795-507F-41C8-AC1E-6EAF243A3792}' : 'IProjectionCurve',
	'{8062145F-C6AC-4006-A89B-F1FC6A08FCC5}' : 'ICurvesBy2Projectionses',
	'{75250D2E-1A02-4593-9002-09872F65F1CB}' : 'ICurveBy2Projections',
	'{9C1419EE-E99E-47DD-8BA3-9132E03F1307}' : 'IContours3D',
	'{05FD7844-EA39-497D-B00B-7A1154830524}' : 'IContour3D',
	'{0DFA5C90-9674-4C27-9441-ACDCD46C0AF4}' : 'ILineSegments3D',
	'{74880880-4F48-44CC-8FC3-83FE3CA7C44A}' : 'ILineSegment3D',
	'{AAADB4EE-6F26-4865-9A83-01E71A438621}' : 'IUnhistoredCurves3D',
	'{56F2843F-DE6A-43BC-ACCD-560B7FA7DD05}' : 'IUnhistoredCurve3D',
	'{AFA7329D-E69C-4980-B3B3-8A2AA39DE979}' : 'ISpirals3D',
	'{8C428C5D-37EF-43A3-8815-410F177D3577}' : 'ISpiral3D',
	'{1A156DEF-0854-4FBD-9DC6-A6B415385C25}' : 'IPointsArrsOnCurves',
	'{13783B5E-3591-4173-8DA1-6F3095B88DB4}' : 'IPointsArrOnCurve',
	'{5BD348D2-2E20-4A8D-87B7-C74EF22D0310}' : 'IPointsArrsOnSurfaces',
	'{D385FED6-763E-4B1B-B8E5-8B1926389550}' : 'IPointsArrOnSurface',
	'{7EA13B3A-7D45-4E40-A5C3-1920B53437A6}' : 'IPointsArrsFromFiles',
	'{782932B2-8969-41E1-819C-2458EA6DC8C0}' : 'IPointsArrFromFile',
	'{F2645E37-5D28-4821-8716-86C3F0B13892}' : 'IAxes3D',
	'{BC67CE6C-C27B-4C72-A2BF-F850373D8E13}' : 'IAxis3D',
	'{6D2112DD-F6E1-49CF-9678-89B0C6CC6ACA}' : 'IMathCurve3D',
	'{71B69C8B-FEAE-484F-BBDA-F7C71A94DDC7}' : 'IPlanes3D',
	'{D71C768D-89F1-4143-903A-AD2595FD8220}' : 'IPlane3D',
	'{25675C2F-10FD-4CE7-9E73-D3915D3E894E}' : 'IMathSurface3D',
	'{919DF6DB-0BA9-4EDD-B681-33E0B519834B}' : 'ILocalCSAxesDirectionParam',
	'{AD261149-1455-49BD-BA0A-B1760A0C8CB0}' : 'ILocalCSEulerParam',
	'{6C1943CE-8FDB-47D2-9B2F-95F7B851BE3D}' : 'IRoughParams',
	'{AFE08AEC-F751-42D9-A6F5-3C004E4D41A6}' : 'IBranchs3D',
	'{618485E7-D88A-4DCC-8896-7EA04D831DBB}' : 'ILocalCSOrientByObjectParam',
	'{116F7E59-F175-47D2-8346-EB3C87D60578}' : 'ILocalCSObject',
	'{2FE3B199-A6B2-4644-9950-F9905250FF0D}' : 'ISurfaceContainer',
	'{DEE5B135-4D8E-4AD8-AEA4-E763F68290B2}' : 'ISurfacePatches',
	'{B6330040-7ABA-4ECD-8C92-5B441AF11C3B}' : 'ISurfacePatch',
	'{6E177627-05D6-40B4-B955-9203F00656B5}' : 'IFaceRemovers',
	'{4CAE21E3-4183-47A6-94B8-8AD14D5775EE}' : 'IFaceRemover',
	'{70AE0BA0-2059-4EAB-BE41-A6E8C8ACFA8A}' : 'ISurfaceSewers',
	'{031FD1C7-9CB6-4E49-A27D-73B8D0B648D4}' : 'ISurfaceSewer',
	'{DB184867-6207-4FB7-9B3F-882BEAA16B4D}' : 'INurbsSurfaces',
	'{5DAFC690-B3A7-4771-8E98-F83B5BF0D454}' : 'INurbsSurface',
	'{3F3EFC1C-A0A7-4B06-BF7A-384BAB27B07F}' : 'IRuledSurfaces',
	'{95681235-7522-4A84-B01C-E76A27393552}' : 'IRuledSurface',
	'{992D7C05-7A25-46FB-AAB1-B7337E6EA74B}' : 'IEquidistantSurfaces',
	'{F665724F-7177-4B93-B51A-063BAF70CED4}' : 'IEquidistantSurface',
	'{799A9110-799B-40E5-85AF-087AD30A89B4}' : 'ITrimmedSurfaces',
	'{3D64A257-8109-491C-8CB6-F0DCF516F02E}' : 'ITrimmedSurface',
	'{5F6EE7F9-972A-4BB8-B1E4-BC1C74048FFF}' : 'IExtensionSurfaces',
	'{27FE71E1-C84D-4F59-8F9B-F0C144314C83}' : 'IExtensionSurface',
	'{46AFC862-E2DA-432B-95A3-7971BFC82CB8}' : 'IMeshPointsSurfaces',
	'{A1D85AB6-C3FD-415B-92DB-4EB4414CA78B}' : 'IMeshPointsSurface',
	'{6CA7CE7A-12C8-4103-ACC1-11001DD1B01D}' : 'ICloudPointsSurfaces',
	'{F820F8C4-9C93-4513-8BBD-CC028DAAE41D}' : 'ICloudPointsSurface',
	'{7791DDC6-7C2D-450B-BB44-660B078E52D6}' : 'IImportedSurfaces',
	'{2B98DEE2-3352-4F9B-85B7-F0D94742EFA7}' : 'IImportedSurface',
	'{9CEEC1DF-A155-4702-AD18-0D851A4B85A8}' : 'INurbsSurfacesByCurvesMeshs',
	'{D06FC62C-A572-4E6B-9C85-0A7D0F971079}' : 'INurbsSurfaceByCurvesMesh',
	'{C8AD51FA-5A71-4EE4-ADB2-DDAAA90F1621}' : 'IJointSurfaces',
	'{E9C8814E-A3C0-4E31-BFFD-ED8F3DD13016}' : 'IJointSurface',
	'{CF84B430-2579-49CA-B937-02354EB1F8A7}' : 'IRestoredSurfaces',
	'{EC25AF95-4117-4FB6-A952-1FC72BE32E60}' : 'IRestoredSurface',
	'{EB4AB3A9-8E01-4952-9119-F8D09D9572D5}' : 'IModelCurve3D',
	'{FAA408C7-1A43-499C-B2E2-06F29B48BCBB}' : 'ILinearPattern',
	'{4CF250AC-878E-4E7B-94DE-F834CD13543F}' : 'IPointDrivenPattern',
	'{B1ED4CA8-0835-4465-925D-C137559A32E0}' : 'ICircularPattern',
	'{B05FC37D-7D60-4291-BE81-E4A9E23D4740}' : 'IPathPattern',
	'{575D30E2-EFA3-40B5-9CA1-02A63E0D50D9}' : 'IDerivedPattern',
	'{C039C103-EC51-4FF1-A870-7C016BC7A0D9}' : 'IVector3DBy2VertexesParameters',
	'{47C76E89-23C0-4A82-8DFC-F770F9F380C8}' : 'IMirrorPattern',
	'{794BEC80-EBB3-4021-9710-2E7BDAC66F63}' : 'IVector3DByCoefficientsParameters',
	'{7DC2A592-FACB-4AB2-9B74-27D8116FD591}' : 'IVector3DBy2AnglesParameters',
	'{1E1F5BE3-E502-41D1-B2EB-8A8216C49B18}' : 'IVector3DByLocalCSParameters',
	'{4CBAB5B7-2350-47EB-84DA-2953F932D465}' : 'IVector3DByObjectParameters',
	'{064CF423-8D27-41E5-84C4-303F286B38B1}' : 'IVector3DAlongSurfaceNormalParameters',
	'{68C9D554-7DF1-4509-9B41-007F123EFB78}' : 'IVector3DByCurveParameters',
	'{F4593CA1-05E9-46F2-BF6C-4288371066D1}' : 'IVector3DByScreenNormalParameters',
	'{094D83C7-70C3-45EA-AA20-14E55EFA52B8}' : 'IRotated1',
	'{115A16EF-B0C3-4DEB-9D65-D2324FA075D8}' : 'ICutRotated',
	'{3191CEBB-584C-4F58-82C1-A3771F73BE12}' : 'IRotatedSurface',
	'{B505B91C-3444-4F7D-B987-5BB554932362}' : 'IExtrusionSurface',
	'{341EE39E-EC72-42A1-BA85-38F4AE2875CC}' : 'IPoint3DParamBySphere',
	'{98D8AA95-B217-4CD7-8BB4-C419F9042ACF}' : 'IPoint3DParamByCylinder',
	'{C1948CE8-0933-4D75-9446-3E143928D045}' : 'IEmbodimentsManager',
	'{83DBB66A-83B8-47D9-93FE-2A90992193E8}' : 'IEmbodiment',
	'{086DF000-A37D-4296-93FB-2129D0B1DF13}' : 'IConicSpiral3D',
	'{529DE4B2-3130-4C96-B230-32DB100BCFAC}' : 'ICylindricSpiral3D',
	'{2CB26AB2-09B9-4B7F-A776-EF02AB25FB78}' : 'IMeshAroundPointParam',
	'{8CF29D41-23E9-4E19-8DF7-C56560F1A237}' : 'IAxis3DBy2Points',
	'{AE53DF83-5D00-4851-BBCD-BEDFCA50BF1C}' : 'IAxis3DBy2Planes',
	'{2E23903D-9C7C-42B5-861A-A28DA3EEA2E6}' : 'IAxis3DByConeface',
	'{95BE2F02-3B18-4BBC-9451-54B4AB70CC7A}' : 'IAxis3DByEdge',
	'{2CC2E874-B336-4A24-BD03-9AC7E30123B6}' : 'IAxis3DByPointAndObject',
	'{C068BBE9-180D-4D82-A827-124166A451EE}' : 'IAxis3DByOperation',
	'{B815E0A4-A837-48AB-9FD8-3E9CDD5A0AB0}' : 'IPlane3DByPlaneCurve',
	'{5EDE5E22-2D26-4AE2-A765-8CA314EAAD85}' : 'IPlane3DTangentToFaceInPoint',
	'{5F5E0FA2-84D7-44D1-A946-018EBEB82926}' : 'IPlane3DByOffset',
	'{1A0E3DC8-F3F9-4C73-A3D6-87168B1E0DBD}' : 'IPlane3DBy3Points',
	'{4AD8121E-95BB-4B0F-B1D8-E0394A72DEE2}' : 'IPlane3DByAngle',
	'{5D170073-FAA3-4E00-A4B4-27E166556626}' : 'IPlane3DByEdgeAndPoint',
	'{B9FCC89D-D48C-4090-B092-B0F016B84D58}' : 'IPlane3DParallelByPoint',
	'{972D817B-DEC8-41F7-9307-A6D368975F2F}' : 'IPlane3DPerpendicularByEdge',
	'{054F3818-EABB-426A-B55A-867152CEF8BD}' : 'IPlane3DNormalToSurface',
	'{70190DEA-7DA4-4305-AD83-90D2637697BE}' : 'IPlane3DMiddle',
	'{EA6F2004-7996-4873-ABE4-8C88AC597ABC}' : 'IPlane3DByEdgeAndPlane',
	'{A4C4D3B7-0DAF-43AB-B2C2-BD3FCB6A5F8F}' : 'IPlane3DBy2Edge',
	'{A9A97838-3B17-4903-AE8C-82543C91D272}' : 'IPlane3DTangentToFace',
	'{2B32E33D-F898-4249-90E6-3770FE3BC906}' : 'IUserParameters',
	'{B7134661-5E97-45DB-9208-5E1E49BEF9C2}' : 'IToleranceRecalcsManager',
	'{07C35E20-5554-4C10-B0D4-5B07DD9CE842}' : 'IToleranceRecalc',
	'{6DBF5262-75A5-4BB9-8EF6-159F204B49D8}' : 'IThreadsParameters',
	'{527CCF94-B32B-413B-8B0B-4AFD3705CDDF}' : 'IMate3DByAngle',
	'{8D3897D5-A2D1-4CCB-B479-E629B50CF12F}' : 'IMate3DByTangent',
	'{B6CA167C-64A4-4F46-A2E2-CBC5BB019351}' : 'IMate3DSymmetry',
	'{52B90D96-D338-4A92-99D9-A90B9D2FF918}' : 'IMate3DTransmission',
	'{68EF30FE-933C-4F3A-BB9E-098ADCC66368}' : 'IMate3DCamGear',
	'{02B548BF-05EC-4FC6-944F-F4E50AB354CD}' : 'ICountersinkHoleParameters',
	'{3EBDD778-87EB-4357-BF08-47BCDE5ABB5D}' : 'ISpotfacingHoleParameters',
	'{C92C6CDF-5CDE-456C-A235-67C3E43BB141}' : 'ICountersinkSpotfacingHoleParameters',
	'{9110F9B1-83F0-4412-B2FE-2B1F416A0932}' : 'IConicHoleParameters',
	'{071C7A25-91E2-4C9D-954A-CA0FA0E94863}' : 'IHoleDisposal',
	'{6DA1F459-7AAE-4A07-9A7D-FF19F8997AD5}' : 'IShellSurface',
	'{585E265F-0AAD-4A42-8030-3A69882A9B39}' : 'IVertex',
	'{5A61CED2-DCED-4CDA-8C3C-CF710F0E727B}' : 'IEdge',
	'{299A549E-3F82-4F60-98A3-258D632AA635}' : 'IFace',
	'{CA597AE6-2ECE-4483-A997-1AFD5ABF9D3A}' : 'ITessellation7',
	'{02C63F96-1370-4147-B024-8BC6837B98FE}' : 'ILoop7',
	'{8E62D0EF-3A22-40C7-B5EA-D85FA0C9F25E}' : 'IOrientedEdge7',
	'{FF326C86-55CD-49FB-BBCE-BC033F762CF7}' : 'IDistanceAngleMeasurement3D',
	'{F16C388F-16DC-4498-8875-EC8B300CE4A0}' : 'IDistanceAngleMeasurements3D',
	'{93154762-202B-41E4-9ADA-7792EC3E6481}' : 'IEdgeLengthMeasurement3D',
	'{90749843-C25C-4E07-A432-F46201BEE90C}' : 'IEdgeLengthMeasurements3D',
	'{02D1F030-8709-4602-8BAE-E47CE1C9C13D}' : 'IAreaMeasurement3D',
	'{12126558-EA51-46E0-BAED-07E523F4B7C6}' : 'IAreaMeasurements3D',
	'{C84CB131-1565-4794-ABF5-E5BDDB9EE5DF}' : 'IMeasurementContainer',
	'{701EE4DA-4A8C-4F64-9ED3-4B51A0ABF79C}' : 'IUserDesignationCompObj',
	'{2CB2F820-A083-46E3-83F6-5AC4B27078A3}' : 'ISheetMetalUndercut',
	'{2123D327-4119-4F1D-A9E4-48462883E968}' : 'ILibraryHoleParameters',
	'{F577ED6F-C858-442F-855A-E572AA6068AA}' : 'IZoneParametersByObjects',
	'{C29D4DCA-6BDC-4E7E-BD93-163950E8A1E1}' : 'IZoneDivisionParametersRegular',
	'{3E6BA559-7A5A-4525-8CC0-304AB4164EA5}' : 'IZoneDivisionParametersByPlanes',
	'{4A8082D6-FC56-4FD4-A258-51E74A44510D}' : 'IDynamicCrossSectionStep',
	'{DC056BC2-64CD-4AFE-910E-97ACE56B647B}' : 'IDynamicCrossSection',
	'{FE4BE487-B453-45E4-8BE2-2EBD28D56CF5}' : 'IDynamicCrossSectionsManager',
	'{3918486A-85B2-4F9B-A85E-13BB754951E0}' : 'IDynamicCrossSectionStepParametersByFreePlane',
	'{E5BEB695-4C46-4897-9330-7463ED4D6725}' : 'IDynamicCrossSectionStepParametersByOffsetPlane',
	'{69ED339F-A095-467D-85F3-91C120BF01BF}' : 'IDynamicCrossSectionStepParametersByRotatedPlane',
	'{F966880F-C8EC-4455-A155-43ED46F159F5}' : 'IDynamicCrossSectionStepParametersByZone',
	'{4477B6CE-4F64-4BDF-9EAF-C07C7833CE8A}' : 'IAxisLine3D',
	'{E32E5703-0141-41CF-9917-9565648FE331}' : 'IDrawingText',
	'{C72E0E9D-7078-4AA7-95E4-E8C75CA9BCEC}' : 'IDrawingTexts',
	'{D603FEC9-75B7-4FA5-918F-47074C45B848}' : 'IDrawingContainer',
	'{B211C782-A830-468E-9F4F-C499A77078D8}' : 'ILineSegments',
	'{64ACC86F-4B10-4897-8552-BC0A556D228B}' : 'ILineSegment',
	'{4FCB4C17-3B9E-45E8-B83C-9284027BAA0D}' : 'IArcs',
	'{A22DFB7E-21E0-4B28-9CA1-29B7950CF256}' : 'IArc',
	'{968D7B84-2BC1-4354-AAFE-73192E405546}' : 'IMultilines',
	'{F6CCB098-5710-44E3-8198-8FAFD56C7A6F}' : 'IMultiline',
	'{E79F5A53-F456-4996-B620-16B725F134FB}' : 'IContour',
	'{DBA3626C-12BE-4BFF-8D42-B01A78666BC9}' : 'IDrawingContours',
	'{25509C3A-7B46-4E3F-B0E8-0E61B7548664}' : 'IDrawingContour',
	'{C8CA9255-E5FE-4396-9C3F-75EE7377C508}' : 'ICircles',
	'{5C952F95-DFED-4EEE-B39A-6699EDE08676}' : 'ICircle',
	'{8C6846A4-EE3B-4C00-A708-5C0FD01E21B7}' : 'IPoints',
	'{D0C19C87-14E7-401D-AEF5-A2E88E899F6E}' : 'IPoint',
	'{57944ECC-5491-4551-9DB9-FABC45125A63}' : 'IBeziers',
	'{6D51EC19-200C-47A2-AE55-0593AD746851}' : 'IBezier',
	'{5B3F5454-160A-4981-B093-890E9A719AE3}' : 'IMacroObjects',
	'{889A9B9C-7533-4EC5-8E2C-5ECF8228B06F}' : 'ILines',
	'{3EA0DA9B-F2C0-40C4-BE36-7103509A9389}' : 'ILine',
	'{D1A9CB2D-A259-4CCC-9CD4-FA006494BCA7}' : 'IPolyLines2D',
	'{4D0DA413-9507-4795-896F-E049FA6E44DD}' : 'IPolyLine2D',
	'{88ECED7C-181C-4D9F-84DE-44B2E360F278}' : 'INurbses',
	'{EE1AB9F4-B127-4303-A30D-C3509F6D10CD}' : 'INurbs',
	'{C6E4E32D-E077-4B14-B9DE-041BD628C38C}' : 'IRasters',
	'{DEED8D7B-404B-4F17-B42A-2F5E64818D0A}' : 'IRaster',
	'{E7A8DD07-CD6B-45A6-B6AF-155A674BC7E4}' : 'IOleDrawingObjects',
	'{9A0ECE23-7B60-44E0-9728-C56CAAA455A2}' : 'IOleDrawingObject',
	'{47633C44-93BB-4F41-A6CA-4F8CCAEA0659}' : 'IEllipses',
	'{F60C9107-D8E2-433C-A0E3-A4E508D09353}' : 'IEllipse',
	'{CC5B7FCB-B887-4A47-AE6B-2522DFA24433}' : 'IEllipseArcs',
	'{320D837F-0B27-45B0-98B4-9D21156E9857}' : 'IEllipseArc',
	'{D6BC2EE9-249F-4961-89A7-88DA854F35FE}' : 'IRectangles',
	'{42F9FC58-FEA0-4E52-A604-1A00985AB772}' : 'IRectangle',
	'{80377CB2-073E-4C38-8532-C42A078BA719}' : 'IRegularPolygons',
	'{51968648-F264-4904-A07F-653676AE1D35}' : 'IRegularPolygon',
	'{86182E5E-8FA3-4283-9DC5-43D1673C80DA}' : 'IEquidistants',
	'{EE6713F9-AD9A-466D-9FB9-D19235E42C95}' : 'IEquidistant',
	'{C485550B-29E3-4F2A-A85C-C2795E0F1F86}' : 'IInsertionObjects',
	'{B9E9CE68-371D-4600-9233-84D89A015C55}' : 'IInsertionObject',
	'{B7E776B0-9524-4254-9D1F-0CF8E0314A1B}' : 'IHatches',
	'{826C0B5B-0146-417A-8128-E581F8430F37}' : 'IHatch',
	'{60437DAD-2688-4146-B765-3FCC55C39D0F}' : 'IColourings',
	'{1E0EF1B5-08D3-40B6-893E-3EE7E4FAEC98}' : 'IColouring',
	'{D496F149-AB99-402B-B3D2-942B26069753}' : 'IConicCurves',
	'{83312BFE-F373-4994-B4B8-EA989FAD0E3C}' : 'IConicCurve',
	'{B5D1A0BE-8F3C-4143-B9C5-66F0CF0FE74D}' : 'IMark',
	'{47585370-56BD-4419-82D9-DB7CBFB1A252}' : 'IMarks',
	'{E5C5A0FF-6CAB-4179-9BF3-868D96BF6AEA}' : 'IMarkInsideForm',
	'{5A1540F9-7388-466F-A13C-EB1133423DD9}' : 'IMarkOnLine',
	'{F3D7E6A6-26EA-4D68-AD58-4DE194C47B4E}' : 'IMarkOnLeader',
	'{123C45BF-14DE-433E-B3B0-2FB642A9A418}' : 'IBuildingAxis',
	'{5AC48E97-80B1-459F-9709-1F3F374559BE}' : 'IMarkNode',
	'{EB8ACD77-8008-4F89-A311-2F4712462F72}' : 'IMarkNodes',
	'{18072E1D-1802-41F5-A434-04BB9D3F157F}' : 'IBuildingAxes',
	'{7B2820E0-2CB7-4412-9B96-F291DD790448}' : 'IStraightAxis',
	'{5A22E024-F530-45DB-A3F2-CA0587BDA1B5}' : 'IAxisJut',
	'{DAA9755A-3971-4713-B281-15995CBF2E56}' : 'IArcAxis',
	'{D84358FB-674C-4A5D-93BA-EE5D3342097B}' : 'ICircleAxis',
	'{2EDA58EE-DBDA-44CC-AD10-6895006D498C}' : 'ICutUnitMarking',
	'{23B00F94-98D3-4AD7-8827-F4088F4A9E5C}' : 'ICutUnitMarkings',
	'{86F46084-16A8-4B5C-99E9-F848216788F0}' : 'IUnitMarking',
	'{969AD901-FC09-47F5-94F5-1ABEB1A9C85C}' : 'IUnitMarkings',
	'{FD1FD236-F5BA-4FB0-A872-21FC13E6895F}' : 'IBuildingContainer',
	'{233B2298-7A45-4CE1-AEF2-30B063FDB63C}' : 'IMultiTextLeaders',
	'{1BFC5D3F-1483-4569-B4B5-7A12163A4655}' : 'IMultiTextLeader',
	'{598E649B-970C-454B-9162-1BB6C9FBFCBF}' : 'IUnitNumbers',
	'{FABAF607-CB92-47C4-9409-B7678162051D}' : 'IUnitNumber',
	'{99F27BD6-6294-45D9-AF78-A9D52E9DD799}' : 'IBraces',
	'{7F328D28-76E9-4E04-A35C-AD60339998E4}' : 'IBrace',
	'{666DA5B4-324C-493C-9A91-37D9E078EB4E}' : 'ICutLines',
	'{26E86124-DC1C-41A2-8075-E73F3EAD8474}' : 'ICutLine',
	'{F46B0086-17F2-4489-A5A7-0AA677610AFD}' : 'ISymbols2DContainer',
	'{A6F6A18A-78FA-4A77-BB75-90647E0C545C}' : 'ILineDimensions',
	'{A3767BDA-E605-4FC1-988D-81809DEB36F4}' : 'ILineDimension',
	'{12D26993-449E-42E2-A909-B047AFD6E27D}' : 'IRadialDimensions',
	'{712A9437-D772-4EAE-AF83-ABC9C22EB281}' : 'IRadialDimension',
	'{8E45FEB9-7BCD-4C9F-9767-320736980662}' : 'IDiametralDimensions',
	'{2B4CE92F-438D-4D3E-8F8D-4D14E5D0E214}' : 'IDiametralDimension',
	'{DF9ABB77-BBB6-4B29-A0E0-81DCFD525C2E}' : 'IAngleDimensions',
	'{0F2CE9EC-5D2A-4B21-B96A-46201C120ED1}' : 'IAngleDimension',
	'{4125169F-3EA8-4AC0-9E1B-5582D62600C4}' : 'IBreakLineDimensions',
	'{61164A26-855C-4220-88ED-C2BDAF49B2DB}' : 'IBreakLineDimension',
	'{3A56D35C-3242-4C49-BA99-CF790EB10356}' : 'IHeightDimensions',
	'{938BE57F-55FF-469F-82A5-B1CD6CCF8340}' : 'IHeightDimension',
	'{FE2755D9-48E2-44CC-BC24-86CF86BE08E2}' : 'IArcDimensions',
	'{11487495-B18A-4877-9E85-3DC9016DF8BD}' : 'IArcDimension',
	'{E2181A3E-5417-4D73-AB65-983DED3438E0}' : 'IBreakRadialDimensions',
	'{88491537-9E93-42F3-861C-761A75BB89D6}' : 'IBreakRadialDimension',
	'{ACC42B32-27F3-4F74-B4A5-C97D4C7B289D}' : 'IRoughs',
	'{0A192AC5-D8BC-43E9-8FC7-ACF32578DDB4}' : 'IRough',
	'{C607727C-6B0A-4FB6-AFCA-ED9D83F5C6B7}' : 'IBases',
	'{01CDFD67-69EA-4289-8F42-5B01BB9BF70B}' : 'IBase',
	'{97CDD55F-3C64-469B-B26E-A927D3300B6C}' : 'ITolerances',
	'{42DEF911-ADB2-478C-85F1-D5FEFA262EEC}' : 'ITolerance',
	'{DF92DACE-BDC6-4341-86DA-3A9C8DCFDEFE}' : 'IDrawingTables',
	'{9B421BDA-0444-4A68-B69C-1C05D05C9D28}' : 'IDrawingTable',
	'{08B45C97-6F86-4809-BBC3-78F216BD0430}' : 'IViewPointers',
	'{3EE98177-63E8-4C48-89AD-3D5CCCF84D72}' : 'IViewPointer',
	'{A0533211-CF52-4AB5-A172-3DC7D94276D1}' : 'ICentreMarkers',
	'{8FE1CADA-DE72-4A55-B303-EAF1F4748CF6}' : 'ICentreMarker',
	'{88427A6B-00AF-46E2-9B95-BC8348C2162A}' : 'IRemoteElements',
	'{A9D96CE2-9FE4-494E-87B2-20122EAC2AE4}' : 'IRemoteElement',
	'{C567E700-E163-4C8F-B329-931BB93D0223}' : 'IAxisLines',
	'{5C5CAEBD-70A9-41DB-9F74-F9760D822D95}' : 'IAxisLine',
	'{C1F0A911-8B4A-48B5-9611-5250D3FC2ACA}' : 'IWaveLines',
	'{FA2012E1-A983-47D3-9D43-B8DC619AC554}' : 'IWaveLine',
	'{2A7EADC0-5E79-4DDB-85D5-E3EDB743480D}' : 'IBrokenLines',
	'{2482EB44-5625-4FB9-A46B-781426B02510}' : 'IBrokenLine',
	'{1F7ED8F6-85DA-4B32-9306-31E3DABA3F84}' : 'ICircularsCentries',
	'{43812A86-37CD-4C6C-AE86-78576EC7E834}' : 'ICircularCentres',
	'{E0854CCB-7849-4503-BF8B-F70CF493D59B}' : 'ILinearsCentries',
	'{C1E24970-64F0-4689-A3AB-CC34698378DC}' : 'ILinearCentres',
	'{EDB023F6-0862-4CB3-AF81-62D784F455B1}' : 'IConditionIntersects',
	'{8E844A00-FC0A-47FA-9167-37BE6C77D032}' : 'IConditionIntersect',
	'{F6ED408A-C2A8-47DD-8EC3-011A7AD60335}' : 'IBreakAngleDimension',
	'{C8A55AB3-D6DD-49B8-95F0-716475855C10}' : 'IBranchs',
	'{A7419920-06B8-4F34-AC1E-9D48E0ED9DCB}' : 'ILeader',
	'{8A5D2A56-ECB6-4151-B1AC-F8548CD668CF}' : 'IMarkLeader',
	'{A8227628-4B9C-42C8-AE58-B3716A7EC1AF}' : 'IPositionLeader',
	'{CCFBE87D-1A3C-4C8B-ABE3-1C2319694314}' : 'IChangeLeader',
	'{EEF8366B-7C8D-448B-9944-BE63E82C1543}' : 'IBrandLeader',
	'{46E2F216-6BCE-4863-9DDC-CC08DC0016F7}' : 'IToleranceParam',
	'{AA485B32-FF45-4035-BFC4-AEE54E638344}' : 'IContourSegment',
	'{FB2432F1-8AE7-4D43-AFF2-A3A3BE226CFA}' : 'IContourLineSegment',
	'{ED4A6D97-4543-4842-B2C3-973FB0E90E87}' : 'IContourArc',
	'{3D99B82C-CD88-406D-A946-2D8C8E94EE73}' : 'IInsertionFragment',
	'{0C8FC5A9-57A8-4971-8E6C-68933269D42E}' : 'IInsertionView',
	'{B43FA13A-9488-422C-A9F3-D279FDA296BB}' : 'IInsertionsManager',
	'{620CC8EB-A5C0-4978-BD98-38344DC6ADC0}' : 'IAxisLineParam',
	'{7198C93A-7655-4347-9954-BA9AA28D0608}' : 'IBoundariesObject',
	'{0DBD7BCD-F78E-4BDA-BCAD-3004C60B6D06}' : 'IAnnotativeObject',
	'{AE6C238C-4398-4057-9D28-D275954D9506}' : 'IAnnotativeContainer',
	'{12B52A99-FF5F-4C08-9E5E-DF7C7AD834A8}' : 'ICurveCopyObjectParam',
	'{138D1202-CA46-4DB3-BF2B-85D260E44355}' : 'ICircleCopyObjectParam',
	'{7E553465-7C0D-4E35-B630-D7A54CD4FC2F}' : 'INurbsByPoints',
	'{EEB71F69-1C0F-4E73-9D20-523697215E0B}' : 'ITextDocumentSectionsManager',
	'{A64BE069-8FCB-43F1-AB34-9974DC7FCF5F}' : 'ITextDocumentSection',
	'{9D5CDE37-7833-4359-B25A-FE7011EA771A}' : 'IExternalTessellationObject',
	'{DC21F3D3-FFA6-4274-A976-79F34729B866}' : 'IExternalTessellationManager',
	'{C234E81D-4232-41FD-980D-8E7E6EA7B733}' : 'IExternalGDIObject',
	'{A5B8E337-EE84-4EEC-8235-A812FDD6C2DE}' : 'ICircularCopyObjectParam',
	'{592AB214-A8CF-462E-ACD5-528839113338}' : 'IMeshCopyObjectParam',
	'{E1AC2948-6191-4240-85F4-5A32321E9D46}' : 'IPropertyOpticalProps',
	'{3FBF29AA-5691-4E7B-BE08-2025F29F018E}' : 'IPropertyEditCheckBox',
	'{EFE5B123-174F-4CB0-AE85-7F291FA8AE1B}' : 'ITablePattern',
	'{65989BDB-AB09-4CC5-A1DC-6DFB5E5C6496}' : 'ICopyObjectParam1',
	'{7F3EEBF4-9277-4603-AD0A-C8DE1624F444}' : 'INewPartDocumentSettings',
	'{60DDC74B-8171-4BA6-ABD9-549FBA84E7B0}' : 'IModelObject1',
	'{698A8F34-5759-4FEC-AFEF-C8B29D072E12}' : 'IMate3DDependentPosition',
	'{4BE1AC9D-61F2-4305-95D5-2ED6C2B21A6A}' : 'IPropertyLinkButton',
	'{468578BC-BEAF-4053-AED9-4E10C48305C1}' : 'IProductDataManager',
	'{619A7499-13DA-4C43-AD1B-53ACAA4BA5B4}' : 'IMeshObject3D',
	'{D92A7102-79CB-46D8-B18A-1804D71F5416}' : 'ISheetMetalRuledShell',
	'{934BCC92-BC49-4A46-9A88-70FD2E74537D}' : 'ISheetMetalLinearRuledShell',
	'{C24EB4CB-CE63-4130-AE76-86DE33A8DDD0}' : 'IZoneParametersByBorderPoints',
	'{D8A8BCBB-E337-431B-AC37-07007217190B}' : 'IDynamicCrossSectionStepParametersByBorderPoints',
	'{46597352-925C-4D1B-89E3-6868D54FAFE6}' : 'IPlacement3DManipulator',
	'{742AA7CC-8019-4854-A8FF-9EE1FFBD0460}' : 'IApplicationLicenseManager',
	'{BE4BA098-99B4-4C27-912B-3AD83A04E543}' : 'IPLMObject',
	'{95615543-48E9-4738-9B01-D8ABC2C9001B}' : 'IPLMObjectsManager',
	'{4FB26621-6A86-43FF-BB61-AF1B04AFD22B}' : 'IMultiThicknessGroupsManager',
	'{EE36CADB-07D1-457A-8D7C-1D2D4B240CF3}' : 'IApplicationServises',
}


NamesToIIDMap = {
	'IKompasAPIObject' : '{5C799A83-C0A4-4312-BEB0-21CBD7FF4C13}',
	'IApplication' : '{6A2EFAF7-8254-45A5-9DC8-2213F16AF5D7}',
	'IDocuments' : '{8BF39F08-5537-4910-84CE-B338E55F7BCF}',
	'IKompasCollection' : '{901F85DE-FA5A-4314-BD75-066A79AF20A8}',
	'IKompasDocument' : '{5C6E318D-BD6E-4AFA-8A13-977EAA0845EF}',
	'IDocumentFrames' : '{1D18C466-C085-4D68-A465-A85D0C8E3A0E}',
	'IDocumentFrame' : '{4437FABA-990F-45E2-B1A2-7754FB326B76}',
	'IDocumentSettings' : '{B35FF50E-2991-4630-8AB8-DC3153E7971A}',
	'ISpecificationDescriptions' : '{B9632C5C-86E1-4BC9-83A5-A954E407246A}',
	'ISpecificationDescription' : '{9678959E-166B-45F3-BDE8-88BBF4645F5C}',
	'ISpecificationStyle' : '{F237D2B3-DFEE-4702-B71F-E5F6923F03E6}',
	'ISpecificationTuning' : '{BB719D42-E44C-445B-969A-0E2F63E97FC8}',
	'ITextStyle' : '{7EA65CA0-420D-4E1D-8C19-998495C4DA2F}',
	'ITextFont' : '{A6AD008D-58D1-48B5-BD29-E6795289FE4B}',
	'ITabulators' : '{BB66E097-95C7-49B1-B6FD-3506C7758D09}',
	'ITabulator' : '{2DD73B92-F8C8-49AA-AECD-B75713427FC1}',
	'ISpecificationTuningSections' : '{01B1BF6F-B9E3-4E94-99A0-81394FB99B16}',
	'ISpecificationTuningSection' : '{E68AA413-CC35-450D-BF35-0F294F59B08C}',
	'ISpecificationSubsections' : '{56532CB4-BD3F-442C-AFA4-0E6BEB677E61}',
	'ISpecificationSubsection' : '{7F0E5F63-815C-46E5-B99E-C24244566C00}',
	'IAdditionalBlockTunings' : '{8910CC92-AC76-4837-AB7A-5FD3C7B74728}',
	'IAdditionalBlockTuning' : '{9CD5B016-9CE9-4E0A-8902-196D11360536}',
	'IAdditionalBlockSectionTunings' : '{43EFA203-F956-43D6-B603-87807DDEFD0A}',
	'IAdditionalBlockSectionTuning' : '{E04B8464-C8D6-4BAC-99B5-AE79EBBDB205}',
	'ISheetFormat' : '{B9CDE694-4C33-4375-A6F6-AE94DC759510}',
	'ISpecificationColumnStyles' : '{41529A95-51F0-44B0-9D55-5753BCEB23BC}',
	'ISpecificationColumnStyle' : '{16839CAA-3AFB-49A4-A19A-C61963967649}',
	'ISpecificationSectionStyles' : '{24AE8484-F4F4-4059-AFC7-9492A64C88E8}',
	'ISpecificationSectionStyle' : '{4B61FC7F-4826-4B58-8CCB-7D459AD0BE7B}',
	'IAdditionalBlockStyles' : '{90E2FBEC-A56F-423C-B89F-479673EDD895}',
	'IAdditionalBlockStyle' : '{B2A43FA6-9BCE-4468-9662-811A6255E220}',
	'ISpecificationBaseObjects' : '{B2B97D19-3A0B-4C9F-A6AC-DEFFAFE0D1C2}',
	'ISpecificationBaseObject' : '{49994ED8-96BA-4D9D-B642-5F0F1E3FED16}',
	'ISpecificationObject' : '{72EB4E8E-7952-4B36-852B-4816B7B5AFEE}',
	'ISpecificationColumns' : '{9F44BF03-DE25-4DDE-ADA0-92384199C100}',
	'ISpecificationColumn' : '{3ECFB777-2645-42B5-A6ED-111688433B26}',
	'ISpecificationColumnItems' : '{F4BAB79A-8A35-44D5-BE44-C566E444F342}',
	'ISpecificationColumnItem' : '{2BABDD01-EACA-4137-9749-25B8C5E230EE}',
	'IText' : '{99B840FC-0150-4DAD-BC0E-AD481BAAB8C2}',
	'ITextLine' : '{AAB72FE2-DEA3-4FB6-B0DD-B926249EF67C}',
	'ITextItem' : '{1DE74AFB-5026-4B85-861F-F0CFDBD443E6}',
	'ITextTable' : '{9AE6C0A0-72EB-4A51-B54C-A0E57CC5F6DC}',
	'IAttachedDocuments' : '{81FAB1C5-F566-4D06-8D3D-17FF01D3566F}',
	'IAttachedDocument' : '{333E9E11-D161-49AE-9791-8BEDB58B4C78}',
	'ISpecificationCommentObjects' : '{B8BD0FC7-AB2B-4E7A-8EC2-82060D7D29A7}',
	'ISpecificationCommentObject' : '{3B6B80CA-2145-4184-B786-0C571DF5ACD7}',
	'ILayoutSheets' : '{7AB54196-0B76-4B01-B769-7F47637173C4}',
	'ILayoutSheet' : '{D87B5A80-CF52-4510-ADD9-D1344FFFFC07}',
	'IStamp' : '{250CE350-7C21-47FD-8FF2-C44A9FF177DF}',
	'IUserDataStoragesMng' : '{77A6D4CA-6418-4DEE-B59C-400BFD052375}',
	'IUserDataStorages' : '{9DBFB4EB-BE9F-46EF-88FF-BB603A9E786B}',
	'IUserDataStorage' : '{DD2AF5C4-D5B9-420D-B658-F935F80A8586}',
	'ILoadCombinationsParam' : '{A70BF191-E1E1-4A92-8CA9-E6D3FEAD2D9A}',
	'IOpenDocumentParam' : '{FADCA157-95B1-4E3F-97AA-622E34DA3238}',
	'IProcessParam' : '{CB5FDBC8-4DAE-4C4B-87D5-6FD1F2705C38}',
	'IPropertyTabs' : '{5BA6324E-E555-490F-A0E2-68D3C6C88D92}',
	'IPropertyTab' : '{45DE8E5B-BC2B-4584-8BA7-D3014D3A2397}',
	'IPropertyControls' : '{548241BA-FDA8-4633-981E-94552BE38D6B}',
	'IPropertyControl' : '{E35F8FF8-03C6-460C-A2F1-294A3A29A029}',
	'IPropertyManager' : '{34196EC3-58B2-436C-A353-427703740874}',
	'ILibraryManager' : '{53CDC510-99EA-4736-8542-194F4D8FB32B}',
	'IProceduresLibraries' : '{80F95B5B-DB8A-46B7-8C22-605A0AECD597}',
	'IProceduresLibrary' : '{1AECE59E-DE4C-4FB9-B62B-7967573AD3B1}',
	'ILibrary' : '{9D6E9AE1-7DDF-4354-B8D0-E12023B186FA}',
	'IProcedures' : '{1A77F076-2295-40F9-B1AA-2838C4CA0887}',
	'IProcedure' : '{7BF9DF08-D14D-4DA9-ABC2-FB458E7122D0}',
	'IInsertsLibraries' : '{A6E82D68-69D5-40C0-9A85-275B22219135}',
	'IInsertsLibrary' : '{885CAD68-B42B-45CF-8620-E0138558EFE3}',
	'IInserts' : '{FCBF6340-119D-4736-BB95-F1EAB4BEF1B8}',
	'IInsert' : '{D6A6D305-6B5C-4392-B61D-D669C092EEF2}',
	'IKompasError' : '{0A8B4CD1-7158-4CE6-96E0-885376F5DE1B}',
	'IConverter' : '{642D03AB-4798-48A5-B075-3CD9AFA18554}',
	'ICheckSum' : '{2AA9F713-2328-4E8F-B996-9DFDABC67DC9}',
	'IProgressBarIndicator' : '{BE125ABA-EAB2-4A22-99D7-108C84B6DCC5}',
	'ISystemSettings' : '{FFB66332-17FF-47EB-AC43-32084F8F6077}',
	'ILibArraySettings' : '{76D9033D-5F87-41CC-A3E8-55EFEE94B677}',
	'IThreadPattern' : '{246741CF-BC91-4E69-AEEE-CF905B9C05F7}',
	'IMath2D' : '{0409EC8F-88F7-4242-81E7-965ABEAE932C}',
	'ICurve2D' : '{65C82884-C41B-47A1-8C07-E8820D6718EA}',
	'IPrintJob' : '{9D86880B-C004-475D-8221-B786FD5A228B}',
	'IPrintJob_Sheet' : '{0EC985BC-81FC-498E-BF15-03DDC870AA33}',
	'IStyles' : '{E821AE61-FA05-4B39-8908-BD37D6D044A4}',
	'IStyle' : '{8DFD15E0-345E-4B1C-86A1-BD65F87128B5}',
	'IKompasDocument2D' : '{096E62B3-7184-4998-9925-74BB710D8D8E}',
	'IViewsAndLayersManager' : '{A4737593-578B-4187-8CAD-E1056EB5404B}',
	'IViews' : '{9CD1B5E6-C1A2-4910-8D0C-97080B14AA3D}',
	'IDrawingObjects' : '{3DD7F97B-59CB-4297-A1BA-04E5A7FFF448}',
	'IDrawingObject' : '{07EF021F-11C1-4015-8D87-4DC94A2A71B0}',
	'IView' : '{21A7BA87-1C8B-41B4-8247-CDD593546F37}',
	'ILayers' : '{F6DC2898-D596-4418-A21A-D15AE07B9A40}',
	'ILayer' : '{9AD76C38-CC48-4901-AEE5-27B48F51563C}',
	'IVariable7' : '{8BAB52D9-8EF6-43A6-A1B8-AF42D5961A94}',
	'IProperty' : '{C389F80D-228D-4FB1-B183-959AEA0B5906}',
	'ILayerGroups' : '{DBFF6D98-8F79-453E-9B8B-81E40A6D8027}',
	'ILayerGroup' : '{265BBB5A-7B8A-4AA5-A0BB-FF64D23BE62B}',
	'ILayerFilterConditions' : '{BCA22E27-AB60-4BA6-87EE-92158AA6D366}',
	'ILayerFilterCondition' : '{D743BC12-82A9-4E8F-85B2-7154A356ACC0}',
	'IKompasDocument3D' : '{7B60E769-06C3-4FDC-9677-7B5EF5180308}',
	'IPart7' : '{FA4A5FDE-A08C-4F5A-8C04-98395BA44307}',
	'IModelObject' : '{E37256D4-9021-47AC-8FAF-3713FB2A50C3}',
	'IFeature7' : '{EF4343FA-985D-4FE9-AD5F-439BC8F92958}',
	'IParts7' : '{42F8FCEF-E56F-466C-8814-BEBAC0719AE6}',
	'IModelObjects' : '{125CB096-639E-479F-98DE-F27FAB23838A}',
	'IVariableTable' : '{2B8B154E-ED76-4FF0-B3E4-FEE691D014A4}',
	'ILocalCoordinateSystem' : '{BA6395F5-3506-4483-8864-4EEC220AF316}',
	'IPoint3D' : '{D71AEDBE-01D4-4C7D-96DC-94981F2A1C37}',
	'IVector3D' : '{D51A4DCF-627D-44F5-89BA-46EF2449A212}',
	'IHatchParam' : '{437D6587-7649-4A0C-80BB-7A6E89661839}',
	'IPlacement3D' : '{9C66DE49-529C-4678-9AF1-12710CB77804}',
	'ISpecRough3D' : '{AED8F9FC-E493-4CBD-9341-9D9E39E14FDC}',
	'IMateConstraints3D' : '{95F316E1-0A18-4F42-8B70-1423250F244D}',
	'IMateConstraint3D' : '{9E37E1F5-F770-473A-B996-A6753EDA73A5}',
	'IBody7' : '{4F122E22-0AA6-46E1-841F-A2504B145995}',
	'IUserFolders' : '{0155AE59-92F4-4CEE-9633-8ADA943388CB}',
	'IUserFolder' : '{67671C8A-3587-41EB-9291-39E9F94E4EA5}',
	'IZonesManager' : '{0B93D860-69EC-4D03-8A1D-EB0C936B1D45}',
	'IZone' : '{05C71C4B-F8BC-42E9-89D5-B9BC0145ED36}',
	'IZoneDivision' : '{D67AA2B3-2E8A-4882-B11A-3828D106CA0A}',
	'ISelectionManager' : '{E6DF688C-5B23-436B-A027-A96BFD5484CC}',
	'IChooseManager' : '{E2D9EAA6-F88C-4ADB-AC32-854E32E9FEE1}',
	'IAttribute' : '{94F965B0-5ABB-4994-98C7-B08FA8515452}',
	'IAttributeType' : '{414CF83E-4FA3-42AB-BC26-6C6BBF91BB0F}',
	'IColumnInfo' : '{3FDE0F44-4459-49F3-A012-E64F9BFA454D}',
	'ITechnicalDemand3D' : '{CD435B3D-175C-4E18-BAA0-81FDD7EB6A86}',
	'IDrawingObject1' : '{649F0EB2-EBC0-449B-8B61-DC3CF1953BF9}',
	'IParametriticConstraint' : '{131069F4-A4E2-4DB4-A559-85EACCC74CE4}',
	'IKompasDocument1' : '{58890FE8-E671-4561-994A-600DD29032E4}',
	'IKompasDocument2D1' : '{FB57F1C4-44FE-4C73-9B15-87241E8735B5}',
	'IMacroObject' : '{B21C70C9-53EC-4BB7-A9DB-BCE852CA6716}',
	'ILeaders' : '{BA2D820C-0DB9-47C6-A32D-34C7D8BA1B2F}',
	'IBaseLeader' : '{1AF590A9-C339-477A-9F22-799C04D20BB4}',
	'IFindObjectParameters' : '{8F1A7123-BD4A-4A49-8E22-1502D59B1FE6}',
	'IDrawingGroups' : '{0ED06421-907C-4EF0-89F7-AEFC81BEF1DF}',
	'IDrawingGroup' : '{2C96ACB2-4877-45D9-B62D-78BBAD704458}',
	'ICopyObjectParam' : '{58E1BACA-32D5-4EAB-87E9-D14816DAC29F}',
	'IProcess2D' : '{C74D7419-0970-4904-907C-DCC5407C59B0}',
	'IPhantom2D' : '{A6E4F3B6-0554-4A67-A700-428090A6739A}',
	'IKompasDocument3D1' : '{92AB02F7-2C68-4A74-9E74-70C51E015FEF}',
	'IDocument3DManager' : '{75F1CA7E-5071-4C1F-8A9F-F76A6E05CAF6}',
	'ILayers3D' : '{D637078B-6498-40B6-9F41-83ED1EA40D1F}',
	'ILayer3D' : '{D8ADF279-1CAC-4A2A-911B-9A44378407A0}',
	'ILayerGroups3D' : '{D3F08D03-3BB2-4DE6-95A9-38B5C05D8C12}',
	'ILayerGroup3D' : '{0B176BBC-51F5-4D31-A630-6A04207E4DA1}',
	'IProcess3D' : '{77730022-3179-4674-AE49-604FABC0B6B1}',
	'IManipulators' : '{5FBB9528-B629-46DE-8BA6-13C5872BDD15}',
	'IBaseManipulator' : '{606FD023-3944-4215-A426-1E4EB82A8E32}',
	'IDrawingDocument' : '{C2214318-5C89-40F8-A25C-C87D08B490F4}',
	'ISpecRough' : '{D723AAC1-0315-4AED-99BF-88A7E55B6E6D}',
	'ITechnicalDemand' : '{18C80AE5-BF92-482A-9C56-3D1638F5E5F5}',
	'IFragmentDocument' : '{E19CE626-DF9C-48C4-A83D-3E3BC7F0DACA}',
	'ISpecificationDocument' : '{E3FA8FD0-6187-4625-89B7-3C815651944D}',
	'ITextDocument' : '{71A589EA-D32F-42C4-BBC4-A51611E85E90}',
	'IPartDocument' : '{0075EA2A-5498-4E28-BDF3-0288EB168054}',
	'IAssemblyDocument' : '{F6B3F33A-3273-43EF-9B8A-7C0AF8FAA129}',
	'IDimensionText' : '{E0197BA7-C3FB-44A3-9C13-49115A150ED2}',
	'IDimensionParams' : '{534518CC-6577-4273-887A-6B833FDE6ED7}',
	'ILoadCombination' : '{E7F1FD16-B641-4264-859C-D47217DA8B04}',
	'IFrameTreesManager' : '{B9019350-FF1D-4161-B41B-CD1B020ECF36}',
	'IAttrTypeMng' : '{5378690E-A57D-473F-84DC-CA508B34FAD7}',
	'IPrintJob_OutputParameters' : '{CB083231-EE0D-4596-B04D-E6A020926557}',
	'IPrintJob_PrinterSettings' : '{095CE8C1-B2E7-4417-AB3D-CCE01480C08E}',
	'ISaveToPreviusParam7' : '{AB64A064-53E7-4ADC-BF40-3BFC04D93963}',
	'IUserMetadataManager' : '{DC982411-CF10-4C00-946B-B5338448568A}',
	'IStylesManager' : '{4F13BB1B-44AA-42E6-BD50-30E21E434D1B}',
	'ICurveStyle' : '{5046BF60-687A-4E5D-BBEF-3CB5D95F7A41}',
	'IHatchStyle' : '{9315D8A2-95B7-4E7F-B861-B88FA490EE2B}',
	'IPropertyMng' : '{FD515235-4DBA-4F81-8D5C-6FE87C834562}',
	'IReport' : '{37FD3C77-6032-4459-95E9-C8DFC43B85FF}',
	'IReportStyle' : '{5C65F11D-75C8-4130-951C-5EBE0ABA4F44}',
	'IReportStyleColumn' : '{DD114FC3-EB24-4FBD-B9E9-B01A893AA3B0}',
	'IReportFilter' : '{9D111C31-1629-4A0B-89E5-8461CDFA2157}',
	'IPropertyKeeper' : '{AE7377CB-28C6-468E-B667-73117BCDC300}',
	'IReportProcess' : '{29BBF2B8-A2E2-4E7D-BF04-0BB79C89EF35}',
	'IReportObjectsFilter' : '{88803908-B243-47B0-A388-9E059CFA8E54}',
	'IAssociationTables' : '{96F02F01-04E1-44D1-9974-48330EBE801B}',
	'IAssociationTable' : '{44F0752E-E25B-4896-95B4-6376AC23A2A9}',
	'IReportTable' : '{F7E44485-B4EB-4897-A263-BE3BC1A08789}',
	'IReportParam' : '{A1AF048D-93C0-4C21-9064-D437A71D7D53}',
	'IPropertyControl1' : '{7D2A79FF-EC54-4480-B9F3-46F75293B558}',
	'IPropertyEdit' : '{1D238C4C-AAD7-4374-B372-013CF7FCEDB4}',
	'IPropertySeparator' : '{4504EFA0-D059-4FD4-B725-FA264D190869}',
	'IPropertyList' : '{8F53E9D5-07AD-412E-8C2A-509BC633C4FF}',
	'IPropertyCheckBox' : '{9205277D-B480-4AF7-B660-CCDC653F6453}',
	'IPropertyMultiButton' : '{3920A0BE-0628-47D5-B0F1-1DFEB77964BC}',
	'IPropertySlideBox' : '{E1DB38CD-A6D5-44B8-9AD0-0056B87924DD}',
	'IPropertyUserControl' : '{5A902C6C-A030-4F37-A089-91505BAEE466}',
	'IPropertyGrid' : '{6682B70F-59DB-4BF0-AB01-45B65B1BDED1}',
	'IPropertyTextButton' : '{3CDFE85F-643D-4008-AE32-379C0EB3FB7F}',
	'IPropertySpinEdit' : '{F214A46D-2BA9-40AD-A32D-E696EF9C895A}',
	'IPropertyFileName' : '{DB1F3224-837E-437F-8944-6FB9703F528B}',
	'IPropertyColor' : '{FC5CDCFB-3F67-43A1-8FC4-1278B901CE0E}',
	'IPropertyEditList' : '{FDB82760-7EA3-408E-8699-A8392ACFD810}',
	'IPropertyToolBar' : '{C2523B7E-EB4B-45DB-8E3B-9D6CCED99333}',
	'IPropertyBmpList' : '{D18D34F5-0028-4853-998C-25A48D141B43}',
	'IProcessInfoWindow' : '{06F93FBF-C65A-49B1-83DB-C736BA33F0A5}',
	'IPropertyLibExplorer' : '{2A214701-0BCB-406C-B57F-6DFADD799A64}',
	'IPropertyStyleList' : '{B2431C46-9A35-494B-A958-D9098F82C3FA}',
	'IPropertyGroupBegin' : '{5A247709-EA70-443C-968E-BFECC951E14F}',
	'IPropertyGroupEnd' : '{6AFDDAC7-EB89-440C-8AD0-866AEEEAB7CC}',
	'IPropertyTwinSwitcher' : '{74191892-71FC-4820-B8A4-CB264A9E9E8E}',
	'IPropertyPoint3D' : '{64725D44-155C-412C-B0F5-F5203F5F75FD}',
	'IPropertyPreviewText' : '{8576D0C2-3147-4CFF-AA39-FA9EF9B799E3}',
	'IPropertyAggregateControl' : '{8B2A259E-6819-4DDB-8EA3-C408F9F04054}',
	'IProcessContextPanel' : '{C97E7403-B375-4544-87DD-4D3EF36388E5}',
	'IProcessContextIconMenu' : '{3F23FD10-1526-414D-93BC-AB273794F654}',
	'IPropertyBasePoint' : '{75E9D1C7-B766-4D53-BE99-A3088C249266}',
	'IPropertyMarking' : '{2F69F0E3-89DA-4B0C-8ABE-A6E996F39AD1}',
	'IProcess' : '{3A7C6A0C-53DB-4043-9A77-6D3989175741}',
	'IEditDoubleManipulator' : '{89D98E20-A4F4-4F49-8FDF-FE4DC28F208F}',
	'IMouseEnterLeaveParameters7' : '{05B6026A-4B53-4015-A7CB-94298073F86C}',
	'IAssociationView' : '{0825F23C-0A73-48DE-BEAB-DA2FF39962C3}',
	'IViewDesignation' : '{5F9580DA-915C-4C28-991D-5DFFE3BF3B3C}',
	'IAssociationViewElements' : '{E4E42871-E799-4273-8EDB-E5EF83CC66C2}',
	'IBreakViewParam' : '{1B94C65D-3473-4FF2-B185-0B1C2C98FCAE}',
	'ICutViewParam' : '{D4C8B5AF-B2A1-4E07-9CD0-A1FC5B0BC1E1}',
	'ILocalCoordinateSystem2D' : '{85EFCCC7-1667-48B7-A915-BB8149915EF8}',
	'ILocalCoordinateSystems2D' : '{E6A6A1C8-A6F9-470E-AF64-D6AB7741D684}',
	'IView1' : '{93233F05-B389-4076-BCA2-CCDB87BDB7B7}',
	'ITexturesParam' : '{6EDA87C9-26C9-4040-AE48-33AD3EA9244F}',
	'IDocument2DSettings' : '{B09A64BF-7AA6-4BF6-B8E8-AA8E8EE6E9D6}',
	'IDrawingDocumentSettings' : '{0DC39FC2-4FB1-489E-A76E-E47413199FA3}',
	'IFragmentDocumentSettings' : '{A33D05CF-EFFF-4BBE-9BE0-15D283425828}',
	'ILibItemSettings' : '{C474582A-2AD4-4ED5-A86A-A169C4DA5D54}',
	'INewDocument3DSettings' : '{16777C2B-829D-4405-B5C7-71EAFCA17BFA}',
	'IColorParam7' : '{BE6A80EE-38FE-4432-8331-BF864830761C}',
	'IDocument3DSettings' : '{6FFAF1BC-98C1-4562-A7A7-1D263996B1D4}',
	'IThreadDialogParam' : '{28C513EE-057A-4094-8C18-D3FD733D2C81}',
	'IApplicationDialogs' : '{C825C801-D6D3-4456-BD37-D48ED799E033}',
	'IContentDialogParam' : '{B9362883-C8EC-4603-A6AA-7F4703AAA9D9}',
	'IInsertionParameters' : '{1DB65C7E-535E-489E-8F34-84DF7FBA09B2}',
	'IInsertionDefinition' : '{66907239-09BA-4456-AC9A-318804099628}',
	'ISerializer' : '{040C027E-D385-4A7A-96BD-296DF0B9E70E}',
	'IHypertextReferenceParam' : '{B416C2CA-CA76-4CBE-8D3A-458967F8E0CE}',
	'ITableCell' : '{CF9150BA-0E3A-46DE-8973-332A00361474}',
	'ITable' : '{D3715420-645E-435B-BB25-8E35AC570718}',
	'ITableRange' : '{D78E47DC-172B-4824-A519-9BC2C0387B5C}',
	'ICellFormat' : '{9F2F27E7-8FB2-4C6C-A54D-35DB240060D8}',
	'ICellBoundaries' : '{1E29E849-1D1E-4791-BD31-8EF00ED5D118}',
	'ksPropertyManagerNotify' : '{5A89C538-E0DD-4C21-B3D1-3BF65EEB8C3E}',
	'ksPropertyUserControlNotify' : '{5A31BB02-026C-4419-A0FF-A93CF58DCA99}',
	'ksDocumentFrameNotify' : '{6ECBB531-5609-4364-AC92-7A6A21D23313}',
	'IPaintObject' : '{4D14726D-0EC2-49CE-B02C-FEDAA6D65BBD}',
	'ksGLObject' : '{B1C65023-B908-4CAD-9238-C5026520E62C}',
	'IGabaritObject' : '{B6674824-CD9D-4220-B2CB-9F939A9C35C8}',
	'ksDrawingObjectNotify' : '{E335A73F-DF27-4D33-8CBD-E928F797FB94}',
	'ksViewsAndLayersManagerNotify' : '{FC04C62E-AB0F-4614-B3D9-0EA8671CEB08}',
	'ksLibraryManagerNotify' : '{9B9CC387-E217-4EED-BCE9-9E1D645B49EE}',
	'ksSpecificationDescriptionNotify' : '{A0DA14E6-4F92-4D18-8CD1-2BBAB695CE13}',
	'ksSpecificationObjectNotify' : '{1C4DEC41-A8EA-40EE-9AC8-F807232DB874}',
	'ksLayoutSheetsNotify' : '{58E30500-6073-4337-BFC1-32A74EA17DE8}',
	'ksModelObjectNotify' : '{7B8E86E1-4304-449D-9CEC-1B14F74A16FB}',
	'ksDocument3DNotify7' : '{C784D45B-8C68-4189-8F27-A3B0D6CFAEB2}',
	'ksProcess2DNotify' : '{7278F9EC-AC53-4861-9E9E-199B59F82A9A}',
	'ksProcess3DNotify' : '{E896DF8D-6BE9-473A-B7B4-38050CDEF537}',
	'IModelObjectNotifyResult' : '{73653933-51B5-49D6-9EF2-6667639283CC}',
	'IKompasDocument3DNotifyResult' : '{354EA69A-3191-4DA4-B980-821BE9B7683C}',
	'ksContentDialogNotify' : '{7BE2F563-98AD-4F96-891E-C568C0CCD61B}',
	'ksProcess3DManipulatorsNotify' : '{45B82B5C-D0B7-4AC5-965C-26B09612CBF6}',
	'ksPLMObjectNotify' : '{B6DB286D-A060-4107-A693-19D135C47751}',
	'IModelContainer' : '{2C6E8A0F-EDC8-413C-9304-9278817B915B}',
	'ISketchs' : '{EE562963-395C-4748-9726-FCA9C531B1CA}',
	'ISketch' : '{E6BBF50D-8401-4FB3-A6B6-153D3F447255}',
	'IExtrusions' : '{A160C032-CF96-4467-A682-CE2243DF76BD}',
	'IExtrusion' : '{0D7FFE70-33EB-442C-A9B6-A205EA85A237}',
	'IPoints3D' : '{81EBB128-3963-4759-9D4E-2829C3078B0F}',
	'IFeaturePatterns' : '{5CD7AC22-D8C2-42C4-96E5-5D64E44046F7}',
	'IFeaturePattern' : '{C020E994-FB7F-449A-A3D9-2181135F4200}',
	'ISurfaceThickenings' : '{7A9B6FCC-2156-48C8-BC95-597242EE1B9E}',
	'ISurfaceThickening' : '{984F7DD6-A7FB-4693-862F-459CC8630B11}',
	'IRotateds' : '{A9B14309-92B3-46BA-8841-233293A60310}',
	'IRotated' : '{7BB28AD1-CCAE-449C-9086-A97470543089}',
	'IScalings3D' : '{B180FE26-ABEE-4F37-932F-24AAACF227A4}',
	'IScaling3D' : '{A37EE5F1-C852-467B-B72A-00C05310174D}',
	'IBilletsObsoletes' : '{140DE7B8-8291-4220-B7FB-9F3C4FDFB649}',
	'IBilletObsolete' : '{5F754BA9-1FB7-4AAE-A3F2-F36D7CF938BF}',
	'ICopiesGeometry' : '{6CC5E3B7-B509-4B8E-87D1-0B936010120C}',
	'ICopyGeometry' : '{63E5636B-0661-4635-A902-6E8727E75D93}',
	'ICollectionGeometry' : '{CC78F834-4A97-4F69-9207-215308F0ABB0}',
	'ICollectionsGeometry' : '{F1B04DDA-FAAC-4D51-9567-304CFE3EC094}',
	'IUserObjects3D' : '{1753E6BE-C57C-415E-931D-37EAD991D629}',
	'IUserObject3D' : '{1C1886BC-98DD-4AA9-B038-6849C7BCC86C}',
	'IHoles3D' : '{A018E8CE-26F6-4DAE-801B-378ED08A6314}',
	'IHole3D' : '{4C901765-3E0D-4A5D-B2F8-FA708E3CC605}',
	'IThread' : '{BC710E4D-A679-40FC-B5AE-16302ABBFEB8}',
	'IChamfers' : '{5E232224-2445-430F-9324-2C75BACE1D0C}',
	'IChamfer' : '{59C6927B-FC6D-4494-9CDE-648276020929}',
	'IFillets' : '{7A0672EF-4C38-4FD7-8D06-DADD256E1E38}',
	'IFillet' : '{15E3132F-4D4E-451F-B104-478A4E3E0128}',
	'IInclines' : '{37E37D7D-58D1-4469-9B79-2254D2B9E112}',
	'IIncline' : '{2DB9E3CE-7603-4C88-8FF5-F8985AD26C58}',
	'IRibs' : '{70FF934F-D7A2-4D91-AB55-27174E90648B}',
	'IRib' : '{2D8E1F2B-1610-4AA5-8F7F-ED489C4EDEDC}',
	'IShells' : '{0BA80020-AD0B-4442-B4C7-7AC75AA04CAC}',
	'IShell' : '{05A5C975-D995-4069-90A3-A81391AE8D62}',
	'IBooleans' : '{1739583B-BFDA-4AD2-BFE3-14302133BB21}',
	'IBoolean' : '{1FE29BDF-0B8E-4E34-A7E5-418092C6C9C3}',
	'ICuts' : '{85B81047-11F3-46D3-869D-EFE37A6A8588}',
	'ICut' : '{D76BE44A-2AB3-4B5A-B893-3C27E227DF4D}',
	'ILofts' : '{AF5F922F-8C32-4949-A29A-BB5EC7A99D00}',
	'ILoft' : '{DDB04ECF-12A9-496E-8069-405F7302E039}',
	'ICoupling' : '{FB39791B-2100-4F36-B352-AA4EB5FD9373}',
	'IEvolutions' : '{8D984124-C430-45B3-939A-B5264C5B1388}',
	'IEvolution' : '{9AE8A34A-DE20-4C56-A793-BFCBB9343903}',
	'IUnionsComponents' : '{2A449EF6-1554-4C66-8A98-2734DAB88E97}',
	'IUnionComponents' : '{2DCDD394-C325-4D41-A5FD-9E8CC7B8EC5C}',
	'IMoldCavities' : '{EF2EE8A8-BCC8-49BA-8FF5-3BBF627C1432}',
	'IMoldCavity' : '{C4B6D128-8013-4AF4-B4D5-40E25F2CDBD0}',
	'IMacroObjects3D' : '{B4C41D1D-02E2-4A05-A493-7D25CEEC797C}',
	'IMacroObject3D' : '{09DBAA1E-FC4C-4E16-B033-FB9B8F7995D8}',
	'IBodyRepositions' : '{C42BE43C-5DE5-4293-9254-5AA7F3B2EC2B}',
	'IBodyReposition' : '{621E42C8-0BF8-4CB8-8813-E45E2221694E}',
	'IFullFillets' : '{F36E8FBA-F786-4E65-8782-3F6BC2F9D006}',
	'IFullFillet' : '{7FEA11B5-B4D3-4481-AB09-B0DE0A699189}',
	'IMassInertiaParam7' : '{666C987F-2700-4C35-B8CE-DB8BFB5AAF02}',
	'IExtrusion1' : '{58B4011D-3C0B-499A-A441-7870B663E8CF}',
	'IThinParameters' : '{B90D597D-4213-4A59-98D4-0B67E719551B}',
	'ICutExtrusion' : '{D2A01420-9159-48C2-8302-C1B10A13D8F8}',
	'IChooseBodies7' : '{7BF80DAA-25F8-4AFF-AFEA-CAD390D4275D}',
	'IChooseObjects' : '{6D2EE9A7-4C9F-4606-91A5-9941C20701E5}',
	'ISheetMetalBodies' : '{F56DBE72-48CC-48AD-9DA4-10D972C903EE}',
	'ISheetMetalBody' : '{2DC533DC-829E-4EFF-A905-541E9220A12D}',
	'ISheetMetalContainer' : '{77A4895D-9B09-4C63-A3FF-6857F4340840}',
	'ISheetMetalBends' : '{6826CFD6-6A48-4EB1-8C89-7DB4E36702B4}',
	'ISheetMetalBend' : '{B631D95F-C487-41D6-9726-C65E9F5A4505}',
	'ISheetMetalLineBends' : '{AF8B8310-AF82-4B02-8733-783FFAFD4DBD}',
	'ISheetMetalLineBend' : '{E13EF07A-B1E8-41FD-9C85-C17F01E52A03}',
	'ISheetMetalHoles' : '{E117BDF9-5133-4672-9B8F-06046F6B9BF3}',
	'ISheetMetalHole' : '{3490B8B8-00D7-4BCF-AAD8-9487BF271084}',
	'ISheetMetalCuts' : '{9515E4BB-7C60-4C3A-AF7A-847861E67B55}',
	'ISheetMetalCut' : '{B50B1730-BACF-46F2-B10A-6CCDF4E4A2B1}',
	'ISheetMetalSketchBends' : '{247539A2-BB15-4D8A-9121-67BDE48A989A}',
	'ISheetMetalSketchBend' : '{4E4F3CB3-5596-445B-9A18-0AF559E545C5}',
	'ISheetMetalClosedCorners' : '{67037D06-603A-41DA-8513-45088FEA98A8}',
	'ISheetMetalClosedCorner' : '{995BEE65-54D2-443E-9423-88B4323308A7}',
	'ISheetMetalPlates' : '{A1AD042D-A57F-4079-8F7A-CE4AAB5D9DAF}',
	'ISheetMetalPlate' : '{DC733340-DCA5-4253-8AB1-045AD169E06E}',
	'ISheetMetalBendedStraightens' : '{B19D00A4-1B8E-43FA-9DA7-EBE37EC67B67}',
	'ISheetMetalBendedStraighten' : '{194F5AF1-1B37-4FF7-9C7A-B939CB556F3A}',
	'ISheetMetalBendUnfoldParameters' : '{BC21145E-5520-4871-AA24-52E19EF82211}',
	'ISheetMetalPressFormings' : '{0541BEE1-9273-4611-9F26-B3408C51580F}',
	'ISheetMetalPressForming' : '{BDB9FB08-C8C8-4446-9821-BE1BA9306602}',
	'ISheetMetalShoulders' : '{AC0F620E-229A-42BE-8C5B-1786C54474C0}',
	'ISheetMetalShoulder' : '{75024BD8-6D1C-4963-9733-326EFB3CB28D}',
	'ISheetMetalJalousies' : '{914D5295-8831-4166-994C-D19C5DF149E7}',
	'ISheetMetalJalousie' : '{13501739-CD1F-4401-8A48-B2093E974CC1}',
	'ISheetMetalRibs' : '{B72CC78F-D630-463F-8911-ED9BD58BBA1C}',
	'ISheetMetalRib' : '{ACA9C96E-5DBE-44C8-ABF5-15230282AB05}',
	'IPoint3DParamDisplace' : '{6D57994F-C170-4CED-968A-6AD69C1A2C7D}',
	'IPoint3DParamIntersect' : '{C009F9ED-ED8A-4B1E-A4CE-156F43C3F6F3}',
	'IPoint3DParamCenter' : '{A92F2938-F1D4-475E-AAB4-962FAA4A4366}',
	'IPoint3DParamCurve' : '{06B6BDA5-1DC6-4321-8B28-AC065D87E060}',
	'IPoint3DParamSurface' : '{18CE6BBE-63FB-4C94-8998-E40BC5B5D1C6}',
	'IPoint3DParamProjection' : '{B5D353DD-5F26-42FD-87D3-01C97C44E1BF}',
	'ISourcePart7Params' : '{C9E03A9B-0A54-49AC-9397-8DE4465A8D1D}',
	'ISymbols3DContainer' : '{D695D345-7054-4BBD-8D36-8E1F5AEDC5ED}',
	'ILineDimensions3D' : '{8E30C80C-4C79-497B-A74B-84D44F96EF4D}',
	'IBaseLineDimension3D' : '{3514887E-321B-4CE3-A966-3EB1A02CEEF2}',
	'IRadialDimensions3D' : '{153924CD-E046-4334-8798-46A6D6663DE4}',
	'IRadialDimension3D' : '{5711B871-1FAE-425C-898E-583442D851CD}',
	'IDiametralDimensions3D' : '{79B5AC3B-9B2F-4C75-8482-3C0D6B07D911}',
	'IDiametralDimension3D' : '{261AE065-69B8-4B42-B103-C8746720C5BF}',
	'IAngleDimensions3D' : '{E0E8DB05-F71B-457E-BFEB-7EC2E803E77A}',
	'IAngleDimension3D' : '{C22870B5-F002-4C76-9E67-46854E938824}',
	'ILeaders3D' : '{C6E6BDD4-2B0E-49BF-87D3-04E800200DDC}',
	'IBaseLeader3D' : '{7170F38E-8230-4C9C-B36B-0BACBB27B123}',
	'IRoughs3D' : '{8533772B-1C43-4FDD-9F0E-BC92F15862C9}',
	'IRough3D' : '{083A4984-199E-4591-8FC3-CB8A9D7D4303}',
	'IBases3D' : '{8BC582B3-1F82-4D19-AF95-24CBAD412E52}',
	'IBase3D' : '{D5B737F6-FD3D-49F8-B3D8-C8475E5E3D3A}',
	'ITolerances3D' : '{82ADDA0C-B8DE-4336-A5CC-B36504A80E2D}',
	'ITolerance3D' : '{9CF700CF-72DB-44EB-A191-3814A3CC21BD}',
	'IThreads' : '{6090C8D4-4EB0-402A-8E25-29C1FAE85F11}',
	'ILineDimension3D' : '{F38E986B-9CC0-4492-B850-180D3A6AF713}',
	'ICurveVertexParam' : '{2AD2E4B4-B870-437A-8D57-5807729FCB05}',
	'ISplines3D' : '{C4BC0839-932F-4DBC-9A84-5D1FE8927351}',
	'ISpline3D' : '{4D0940A0-6A4A-4CE8-A08A-EA0A4AE91942}',
	'ILocalCoordinateSystems' : '{CC04CBF6-F0D4-456E-903A-C0B0D3551368}',
	'IAuxiliaryGeomContainer' : '{950FEBE2-F916-4E77-A37D-B061E5C22FA8}',
	'IPolyLines' : '{0CF9B989-29F8-495F-9DDA-8C2CAD840BB6}',
	'IPolyLine' : '{6CE7843D-9AFA-48FF-B444-61CDF036D118}',
	'IControlPoints' : '{E22E30F6-05EE-4FB5-9EEB-E288234F256A}',
	'IControlPoint' : '{39F4FC2C-99E7-411B-9036-9C756A71E211}',
	'IConjunctivePoints' : '{4DF343A0-8744-429D-A605-0EEABB7B5F23}',
	'IConjunctivePoint' : '{BC7AD518-9599-490B-9E2B-9711FD9B8D4C}',
	'ISplitLines' : '{986E4A45-362F-469D-A3AE-CE081B8EA93A}',
	'ISplitLine' : '{969B49D1-E660-4E94-9343-DE5B0F397B03}',
	'ISurfacesIntersectionCurves' : '{453E0E34-4D2D-47B2-8E95-EB05C731961D}',
	'ISurfacesIntersectionCurve' : '{758420A0-BECB-4FDA-BDDE-1F398B41117C}',
	'IEquidistants3D' : '{8B94F332-EEFD-4610-9C55-20A1F7336122}',
	'IEquidistant3D' : '{C25DDBF4-3CC1-467D-B996-E30ED4D529B6}',
	'ITrimmedCurves' : '{E0916A32-60A7-4786-859F-C4B08402CC36}',
	'ITrimmedCurve' : '{F86B25DD-55A8-40F7-ACC4-4795FCF7C87C}',
	'IConnectCurves' : '{2E869CEE-5432-48C8-B750-5DAC8B6094D6}',
	'IConnectCurve' : '{C3BBE1B9-976C-45EF-805F-DDA2BA801567}',
	'IFilletCurves' : '{E530740C-AB81-4DAA-AFB2-18E90121C8DC}',
	'IFilletCurve' : '{962810E4-0C48-4886-8B80-AEA166B1952B}',
	'IArcs3D' : '{0C7E7D56-F8AF-4803-9291-6351DDE52B69}',
	'IArc3D' : '{79CC225F-C4F9-4721-9FE8-8AF3AA887523}',
	'ICurveOutLines' : '{491F65E7-F227-42FD-AB49-82487EAE7775}',
	'ICurveOutLine' : '{BC64A05C-0078-44EB-9492-ABAD7AD38E86}',
	'ICurveByLaws' : '{7DD7BF03-5348-4345-A2A2-FC116C100B2E}',
	'ICurveByLaw' : '{D875D25C-B52B-47C8-B04C-8CBA73623F17}',
	'IIsoparametricCurves' : '{6046FD5E-434A-4B9F-826F-37ECC1730AD4}',
	'IIsoparametricCurve' : '{D7E519C3-EA15-43CA-A2EB-D5F119A70051}',
	'IIsoparametricCurvesSets' : '{8A0AADFB-D56C-46BB-90E7-29BEEB42EA63}',
	'IIsoparametricCurvesSet' : '{F6768800-D726-4530-8966-CA1DC1AC2927}',
	'ISplinesOnSurfaces' : '{0E670E69-68AB-4075-9CE4-99E0A1547538}',
	'ISplineOnSurface' : '{BFF82605-C64B-460E-A6D3-3C22229A8325}',
	'IProjectionCurves' : '{88819055-3211-47DD-908F-187B5826FE67}',
	'IProjectionCurve' : '{535DD795-507F-41C8-AC1E-6EAF243A3792}',
	'ICurvesBy2Projectionses' : '{8062145F-C6AC-4006-A89B-F1FC6A08FCC5}',
	'ICurveBy2Projections' : '{75250D2E-1A02-4593-9002-09872F65F1CB}',
	'IContours3D' : '{9C1419EE-E99E-47DD-8BA3-9132E03F1307}',
	'IContour3D' : '{05FD7844-EA39-497D-B00B-7A1154830524}',
	'ILineSegments3D' : '{0DFA5C90-9674-4C27-9441-ACDCD46C0AF4}',
	'ILineSegment3D' : '{74880880-4F48-44CC-8FC3-83FE3CA7C44A}',
	'IUnhistoredCurves3D' : '{AAADB4EE-6F26-4865-9A83-01E71A438621}',
	'IUnhistoredCurve3D' : '{56F2843F-DE6A-43BC-ACCD-560B7FA7DD05}',
	'ISpirals3D' : '{AFA7329D-E69C-4980-B3B3-8A2AA39DE979}',
	'ISpiral3D' : '{8C428C5D-37EF-43A3-8815-410F177D3577}',
	'IPointsArrsOnCurves' : '{1A156DEF-0854-4FBD-9DC6-A6B415385C25}',
	'IPointsArrOnCurve' : '{13783B5E-3591-4173-8DA1-6F3095B88DB4}',
	'IPointsArrsOnSurfaces' : '{5BD348D2-2E20-4A8D-87B7-C74EF22D0310}',
	'IPointsArrOnSurface' : '{D385FED6-763E-4B1B-B8E5-8B1926389550}',
	'IPointsArrsFromFiles' : '{7EA13B3A-7D45-4E40-A5C3-1920B53437A6}',
	'IPointsArrFromFile' : '{782932B2-8969-41E1-819C-2458EA6DC8C0}',
	'IAxes3D' : '{F2645E37-5D28-4821-8716-86C3F0B13892}',
	'IAxis3D' : '{BC67CE6C-C27B-4C72-A2BF-F850373D8E13}',
	'IMathCurve3D' : '{6D2112DD-F6E1-49CF-9678-89B0C6CC6ACA}',
	'IPlanes3D' : '{71B69C8B-FEAE-484F-BBDA-F7C71A94DDC7}',
	'IPlane3D' : '{D71C768D-89F1-4143-903A-AD2595FD8220}',
	'IMathSurface3D' : '{25675C2F-10FD-4CE7-9E73-D3915D3E894E}',
	'ILocalCSAxesDirectionParam' : '{919DF6DB-0BA9-4EDD-B681-33E0B519834B}',
	'ILocalCSEulerParam' : '{AD261149-1455-49BD-BA0A-B1760A0C8CB0}',
	'IRoughParams' : '{6C1943CE-8FDB-47D2-9B2F-95F7B851BE3D}',
	'IBranchs3D' : '{AFE08AEC-F751-42D9-A6F5-3C004E4D41A6}',
	'ILocalCSOrientByObjectParam' : '{618485E7-D88A-4DCC-8896-7EA04D831DBB}',
	'ILocalCSObject' : '{116F7E59-F175-47D2-8346-EB3C87D60578}',
	'ISurfaceContainer' : '{2FE3B199-A6B2-4644-9950-F9905250FF0D}',
	'ISurfacePatches' : '{DEE5B135-4D8E-4AD8-AEA4-E763F68290B2}',
	'ISurfacePatch' : '{B6330040-7ABA-4ECD-8C92-5B441AF11C3B}',
	'IFaceRemovers' : '{6E177627-05D6-40B4-B955-9203F00656B5}',
	'IFaceRemover' : '{4CAE21E3-4183-47A6-94B8-8AD14D5775EE}',
	'ISurfaceSewers' : '{70AE0BA0-2059-4EAB-BE41-A6E8C8ACFA8A}',
	'ISurfaceSewer' : '{031FD1C7-9CB6-4E49-A27D-73B8D0B648D4}',
	'INurbsSurfaces' : '{DB184867-6207-4FB7-9B3F-882BEAA16B4D}',
	'INurbsSurface' : '{5DAFC690-B3A7-4771-8E98-F83B5BF0D454}',
	'IRuledSurfaces' : '{3F3EFC1C-A0A7-4B06-BF7A-384BAB27B07F}',
	'IRuledSurface' : '{95681235-7522-4A84-B01C-E76A27393552}',
	'IEquidistantSurfaces' : '{992D7C05-7A25-46FB-AAB1-B7337E6EA74B}',
	'IEquidistantSurface' : '{F665724F-7177-4B93-B51A-063BAF70CED4}',
	'ITrimmedSurfaces' : '{799A9110-799B-40E5-85AF-087AD30A89B4}',
	'ITrimmedSurface' : '{3D64A257-8109-491C-8CB6-F0DCF516F02E}',
	'IExtensionSurfaces' : '{5F6EE7F9-972A-4BB8-B1E4-BC1C74048FFF}',
	'IExtensionSurface' : '{27FE71E1-C84D-4F59-8F9B-F0C144314C83}',
	'IMeshPointsSurfaces' : '{46AFC862-E2DA-432B-95A3-7971BFC82CB8}',
	'IMeshPointsSurface' : '{A1D85AB6-C3FD-415B-92DB-4EB4414CA78B}',
	'ICloudPointsSurfaces' : '{6CA7CE7A-12C8-4103-ACC1-11001DD1B01D}',
	'ICloudPointsSurface' : '{F820F8C4-9C93-4513-8BBD-CC028DAAE41D}',
	'IImportedSurfaces' : '{7791DDC6-7C2D-450B-BB44-660B078E52D6}',
	'IImportedSurface' : '{2B98DEE2-3352-4F9B-85B7-F0D94742EFA7}',
	'INurbsSurfacesByCurvesMeshs' : '{9CEEC1DF-A155-4702-AD18-0D851A4B85A8}',
	'INurbsSurfaceByCurvesMesh' : '{D06FC62C-A572-4E6B-9C85-0A7D0F971079}',
	'IJointSurfaces' : '{C8AD51FA-5A71-4EE4-ADB2-DDAAA90F1621}',
	'IJointSurface' : '{E9C8814E-A3C0-4E31-BFFD-ED8F3DD13016}',
	'IRestoredSurfaces' : '{CF84B430-2579-49CA-B937-02354EB1F8A7}',
	'IRestoredSurface' : '{EC25AF95-4117-4FB6-A952-1FC72BE32E60}',
	'IModelCurve3D' : '{EB4AB3A9-8E01-4952-9119-F8D09D9572D5}',
	'ILinearPattern' : '{FAA408C7-1A43-499C-B2E2-06F29B48BCBB}',
	'IPointDrivenPattern' : '{4CF250AC-878E-4E7B-94DE-F834CD13543F}',
	'ICircularPattern' : '{B1ED4CA8-0835-4465-925D-C137559A32E0}',
	'IPathPattern' : '{B05FC37D-7D60-4291-BE81-E4A9E23D4740}',
	'IDerivedPattern' : '{575D30E2-EFA3-40B5-9CA1-02A63E0D50D9}',
	'IVector3DBy2VertexesParameters' : '{C039C103-EC51-4FF1-A870-7C016BC7A0D9}',
	'IMirrorPattern' : '{47C76E89-23C0-4A82-8DFC-F770F9F380C8}',
	'IVector3DByCoefficientsParameters' : '{794BEC80-EBB3-4021-9710-2E7BDAC66F63}',
	'IVector3DBy2AnglesParameters' : '{7DC2A592-FACB-4AB2-9B74-27D8116FD591}',
	'IVector3DByLocalCSParameters' : '{1E1F5BE3-E502-41D1-B2EB-8A8216C49B18}',
	'IVector3DByObjectParameters' : '{4CBAB5B7-2350-47EB-84DA-2953F932D465}',
	'IVector3DAlongSurfaceNormalParameters' : '{064CF423-8D27-41E5-84C4-303F286B38B1}',
	'IVector3DByCurveParameters' : '{68C9D554-7DF1-4509-9B41-007F123EFB78}',
	'IVector3DByScreenNormalParameters' : '{F4593CA1-05E9-46F2-BF6C-4288371066D1}',
	'IRotated1' : '{094D83C7-70C3-45EA-AA20-14E55EFA52B8}',
	'ICutRotated' : '{115A16EF-B0C3-4DEB-9D65-D2324FA075D8}',
	'IRotatedSurface' : '{3191CEBB-584C-4F58-82C1-A3771F73BE12}',
	'IExtrusionSurface' : '{B505B91C-3444-4F7D-B987-5BB554932362}',
	'IPoint3DParamBySphere' : '{341EE39E-EC72-42A1-BA85-38F4AE2875CC}',
	'IPoint3DParamByCylinder' : '{98D8AA95-B217-4CD7-8BB4-C419F9042ACF}',
	'IEmbodimentsManager' : '{C1948CE8-0933-4D75-9446-3E143928D045}',
	'IEmbodiment' : '{83DBB66A-83B8-47D9-93FE-2A90992193E8}',
	'IConicSpiral3D' : '{086DF000-A37D-4296-93FB-2129D0B1DF13}',
	'ICylindricSpiral3D' : '{529DE4B2-3130-4C96-B230-32DB100BCFAC}',
	'IMeshAroundPointParam' : '{2CB26AB2-09B9-4B7F-A776-EF02AB25FB78}',
	'IAxis3DBy2Points' : '{8CF29D41-23E9-4E19-8DF7-C56560F1A237}',
	'IAxis3DBy2Planes' : '{AE53DF83-5D00-4851-BBCD-BEDFCA50BF1C}',
	'IAxis3DByConeface' : '{2E23903D-9C7C-42B5-861A-A28DA3EEA2E6}',
	'IAxis3DByEdge' : '{95BE2F02-3B18-4BBC-9451-54B4AB70CC7A}',
	'IAxis3DByPointAndObject' : '{2CC2E874-B336-4A24-BD03-9AC7E30123B6}',
	'IAxis3DByOperation' : '{C068BBE9-180D-4D82-A827-124166A451EE}',
	'IPlane3DByPlaneCurve' : '{B815E0A4-A837-48AB-9FD8-3E9CDD5A0AB0}',
	'IPlane3DTangentToFaceInPoint' : '{5EDE5E22-2D26-4AE2-A765-8CA314EAAD85}',
	'IPlane3DByOffset' : '{5F5E0FA2-84D7-44D1-A946-018EBEB82926}',
	'IPlane3DBy3Points' : '{1A0E3DC8-F3F9-4C73-A3D6-87168B1E0DBD}',
	'IPlane3DByAngle' : '{4AD8121E-95BB-4B0F-B1D8-E0394A72DEE2}',
	'IPlane3DByEdgeAndPoint' : '{5D170073-FAA3-4E00-A4B4-27E166556626}',
	'IPlane3DParallelByPoint' : '{B9FCC89D-D48C-4090-B092-B0F016B84D58}',
	'IPlane3DPerpendicularByEdge' : '{972D817B-DEC8-41F7-9307-A6D368975F2F}',
	'IPlane3DNormalToSurface' : '{054F3818-EABB-426A-B55A-867152CEF8BD}',
	'IPlane3DMiddle' : '{70190DEA-7DA4-4305-AD83-90D2637697BE}',
	'IPlane3DByEdgeAndPlane' : '{EA6F2004-7996-4873-ABE4-8C88AC597ABC}',
	'IPlane3DBy2Edge' : '{A4C4D3B7-0DAF-43AB-B2C2-BD3FCB6A5F8F}',
	'IPlane3DTangentToFace' : '{A9A97838-3B17-4903-AE8C-82543C91D272}',
	'IUserParameters' : '{2B32E33D-F898-4249-90E6-3770FE3BC906}',
	'IToleranceRecalcsManager' : '{B7134661-5E97-45DB-9208-5E1E49BEF9C2}',
	'IToleranceRecalc' : '{07C35E20-5554-4C10-B0D4-5B07DD9CE842}',
	'IThreadsParameters' : '{6DBF5262-75A5-4BB9-8EF6-159F204B49D8}',
	'IMate3DByAngle' : '{527CCF94-B32B-413B-8B0B-4AFD3705CDDF}',
	'IMate3DByTangent' : '{8D3897D5-A2D1-4CCB-B479-E629B50CF12F}',
	'IMate3DSymmetry' : '{B6CA167C-64A4-4F46-A2E2-CBC5BB019351}',
	'IMate3DTransmission' : '{52B90D96-D338-4A92-99D9-A90B9D2FF918}',
	'IMate3DCamGear' : '{68EF30FE-933C-4F3A-BB9E-098ADCC66368}',
	'ICountersinkHoleParameters' : '{02B548BF-05EC-4FC6-944F-F4E50AB354CD}',
	'ISpotfacingHoleParameters' : '{3EBDD778-87EB-4357-BF08-47BCDE5ABB5D}',
	'ICountersinkSpotfacingHoleParameters' : '{C92C6CDF-5CDE-456C-A235-67C3E43BB141}',
	'IConicHoleParameters' : '{9110F9B1-83F0-4412-B2FE-2B1F416A0932}',
	'IHoleDisposal' : '{071C7A25-91E2-4C9D-954A-CA0FA0E94863}',
	'IShellSurface' : '{6DA1F459-7AAE-4A07-9A7D-FF19F8997AD5}',
	'IVertex' : '{585E265F-0AAD-4A42-8030-3A69882A9B39}',
	'IEdge' : '{5A61CED2-DCED-4CDA-8C3C-CF710F0E727B}',
	'IFace' : '{299A549E-3F82-4F60-98A3-258D632AA635}',
	'ITessellation7' : '{CA597AE6-2ECE-4483-A997-1AFD5ABF9D3A}',
	'ILoop7' : '{02C63F96-1370-4147-B024-8BC6837B98FE}',
	'IOrientedEdge7' : '{8E62D0EF-3A22-40C7-B5EA-D85FA0C9F25E}',
	'IDistanceAngleMeasurement3D' : '{FF326C86-55CD-49FB-BBCE-BC033F762CF7}',
	'IDistanceAngleMeasurements3D' : '{F16C388F-16DC-4498-8875-EC8B300CE4A0}',
	'IEdgeLengthMeasurement3D' : '{93154762-202B-41E4-9ADA-7792EC3E6481}',
	'IEdgeLengthMeasurements3D' : '{90749843-C25C-4E07-A432-F46201BEE90C}',
	'IAreaMeasurement3D' : '{02D1F030-8709-4602-8BAE-E47CE1C9C13D}',
	'IAreaMeasurements3D' : '{12126558-EA51-46E0-BAED-07E523F4B7C6}',
	'IMeasurementContainer' : '{C84CB131-1565-4794-ABF5-E5BDDB9EE5DF}',
	'IUserDesignationCompObj' : '{701EE4DA-4A8C-4F64-9ED3-4B51A0ABF79C}',
	'ISheetMetalUndercut' : '{2CB2F820-A083-46E3-83F6-5AC4B27078A3}',
	'ILibraryHoleParameters' : '{2123D327-4119-4F1D-A9E4-48462883E968}',
	'IZoneParametersByObjects' : '{F577ED6F-C858-442F-855A-E572AA6068AA}',
	'IZoneDivisionParametersRegular' : '{C29D4DCA-6BDC-4E7E-BD93-163950E8A1E1}',
	'IZoneDivisionParametersByPlanes' : '{3E6BA559-7A5A-4525-8CC0-304AB4164EA5}',
	'IDynamicCrossSectionStep' : '{4A8082D6-FC56-4FD4-A258-51E74A44510D}',
	'IDynamicCrossSection' : '{DC056BC2-64CD-4AFE-910E-97ACE56B647B}',
	'IDynamicCrossSectionsManager' : '{FE4BE487-B453-45E4-8BE2-2EBD28D56CF5}',
	'IDynamicCrossSectionStepParametersByFreePlane' : '{3918486A-85B2-4F9B-A85E-13BB754951E0}',
	'IDynamicCrossSectionStepParametersByOffsetPlane' : '{E5BEB695-4C46-4897-9330-7463ED4D6725}',
	'IDynamicCrossSectionStepParametersByRotatedPlane' : '{69ED339F-A095-467D-85F3-91C120BF01BF}',
	'IDynamicCrossSectionStepParametersByZone' : '{F966880F-C8EC-4455-A155-43ED46F159F5}',
	'IAxisLine3D' : '{4477B6CE-4F64-4BDF-9EAF-C07C7833CE8A}',
	'IDrawingText' : '{E32E5703-0141-41CF-9917-9565648FE331}',
	'IDrawingTexts' : '{C72E0E9D-7078-4AA7-95E4-E8C75CA9BCEC}',
	'IDrawingContainer' : '{D603FEC9-75B7-4FA5-918F-47074C45B848}',
	'ILineSegments' : '{B211C782-A830-468E-9F4F-C499A77078D8}',
	'ILineSegment' : '{64ACC86F-4B10-4897-8552-BC0A556D228B}',
	'IArcs' : '{4FCB4C17-3B9E-45E8-B83C-9284027BAA0D}',
	'IArc' : '{A22DFB7E-21E0-4B28-9CA1-29B7950CF256}',
	'IMultilines' : '{968D7B84-2BC1-4354-AAFE-73192E405546}',
	'IMultiline' : '{F6CCB098-5710-44E3-8198-8FAFD56C7A6F}',
	'IContour' : '{E79F5A53-F456-4996-B620-16B725F134FB}',
	'IDrawingContours' : '{DBA3626C-12BE-4BFF-8D42-B01A78666BC9}',
	'IDrawingContour' : '{25509C3A-7B46-4E3F-B0E8-0E61B7548664}',
	'ICircles' : '{C8CA9255-E5FE-4396-9C3F-75EE7377C508}',
	'ICircle' : '{5C952F95-DFED-4EEE-B39A-6699EDE08676}',
	'IPoints' : '{8C6846A4-EE3B-4C00-A708-5C0FD01E21B7}',
	'IPoint' : '{D0C19C87-14E7-401D-AEF5-A2E88E899F6E}',
	'IBeziers' : '{57944ECC-5491-4551-9DB9-FABC45125A63}',
	'IBezier' : '{6D51EC19-200C-47A2-AE55-0593AD746851}',
	'IMacroObjects' : '{5B3F5454-160A-4981-B093-890E9A719AE3}',
	'ILines' : '{889A9B9C-7533-4EC5-8E2C-5ECF8228B06F}',
	'ILine' : '{3EA0DA9B-F2C0-40C4-BE36-7103509A9389}',
	'IPolyLines2D' : '{D1A9CB2D-A259-4CCC-9CD4-FA006494BCA7}',
	'IPolyLine2D' : '{4D0DA413-9507-4795-896F-E049FA6E44DD}',
	'INurbses' : '{88ECED7C-181C-4D9F-84DE-44B2E360F278}',
	'INurbs' : '{EE1AB9F4-B127-4303-A30D-C3509F6D10CD}',
	'IRasters' : '{C6E4E32D-E077-4B14-B9DE-041BD628C38C}',
	'IRaster' : '{DEED8D7B-404B-4F17-B42A-2F5E64818D0A}',
	'IOleDrawingObjects' : '{E7A8DD07-CD6B-45A6-B6AF-155A674BC7E4}',
	'IOleDrawingObject' : '{9A0ECE23-7B60-44E0-9728-C56CAAA455A2}',
	'IEllipses' : '{47633C44-93BB-4F41-A6CA-4F8CCAEA0659}',
	'IEllipse' : '{F60C9107-D8E2-433C-A0E3-A4E508D09353}',
	'IEllipseArcs' : '{CC5B7FCB-B887-4A47-AE6B-2522DFA24433}',
	'IEllipseArc' : '{320D837F-0B27-45B0-98B4-9D21156E9857}',
	'IRectangles' : '{D6BC2EE9-249F-4961-89A7-88DA854F35FE}',
	'IRectangle' : '{42F9FC58-FEA0-4E52-A604-1A00985AB772}',
	'IRegularPolygons' : '{80377CB2-073E-4C38-8532-C42A078BA719}',
	'IRegularPolygon' : '{51968648-F264-4904-A07F-653676AE1D35}',
	'IEquidistants' : '{86182E5E-8FA3-4283-9DC5-43D1673C80DA}',
	'IEquidistant' : '{EE6713F9-AD9A-466D-9FB9-D19235E42C95}',
	'IInsertionObjects' : '{C485550B-29E3-4F2A-A85C-C2795E0F1F86}',
	'IInsertionObject' : '{B9E9CE68-371D-4600-9233-84D89A015C55}',
	'IHatches' : '{B7E776B0-9524-4254-9D1F-0CF8E0314A1B}',
	'IHatch' : '{826C0B5B-0146-417A-8128-E581F8430F37}',
	'IColourings' : '{60437DAD-2688-4146-B765-3FCC55C39D0F}',
	'IColouring' : '{1E0EF1B5-08D3-40B6-893E-3EE7E4FAEC98}',
	'IConicCurves' : '{D496F149-AB99-402B-B3D2-942B26069753}',
	'IConicCurve' : '{83312BFE-F373-4994-B4B8-EA989FAD0E3C}',
	'IMark' : '{B5D1A0BE-8F3C-4143-B9C5-66F0CF0FE74D}',
	'IMarks' : '{47585370-56BD-4419-82D9-DB7CBFB1A252}',
	'IMarkInsideForm' : '{E5C5A0FF-6CAB-4179-9BF3-868D96BF6AEA}',
	'IMarkOnLine' : '{5A1540F9-7388-466F-A13C-EB1133423DD9}',
	'IMarkOnLeader' : '{F3D7E6A6-26EA-4D68-AD58-4DE194C47B4E}',
	'IBuildingAxis' : '{123C45BF-14DE-433E-B3B0-2FB642A9A418}',
	'IMarkNode' : '{5AC48E97-80B1-459F-9709-1F3F374559BE}',
	'IMarkNodes' : '{EB8ACD77-8008-4F89-A311-2F4712462F72}',
	'IBuildingAxes' : '{18072E1D-1802-41F5-A434-04BB9D3F157F}',
	'IStraightAxis' : '{7B2820E0-2CB7-4412-9B96-F291DD790448}',
	'IAxisJut' : '{5A22E024-F530-45DB-A3F2-CA0587BDA1B5}',
	'IArcAxis' : '{DAA9755A-3971-4713-B281-15995CBF2E56}',
	'ICircleAxis' : '{D84358FB-674C-4A5D-93BA-EE5D3342097B}',
	'ICutUnitMarking' : '{2EDA58EE-DBDA-44CC-AD10-6895006D498C}',
	'ICutUnitMarkings' : '{23B00F94-98D3-4AD7-8827-F4088F4A9E5C}',
	'IUnitMarking' : '{86F46084-16A8-4B5C-99E9-F848216788F0}',
	'IUnitMarkings' : '{969AD901-FC09-47F5-94F5-1ABEB1A9C85C}',
	'IBuildingContainer' : '{FD1FD236-F5BA-4FB0-A872-21FC13E6895F}',
	'IMultiTextLeaders' : '{233B2298-7A45-4CE1-AEF2-30B063FDB63C}',
	'IMultiTextLeader' : '{1BFC5D3F-1483-4569-B4B5-7A12163A4655}',
	'IUnitNumbers' : '{598E649B-970C-454B-9162-1BB6C9FBFCBF}',
	'IUnitNumber' : '{FABAF607-CB92-47C4-9409-B7678162051D}',
	'IBraces' : '{99F27BD6-6294-45D9-AF78-A9D52E9DD799}',
	'IBrace' : '{7F328D28-76E9-4E04-A35C-AD60339998E4}',
	'ICutLines' : '{666DA5B4-324C-493C-9A91-37D9E078EB4E}',
	'ICutLine' : '{26E86124-DC1C-41A2-8075-E73F3EAD8474}',
	'ISymbols2DContainer' : '{F46B0086-17F2-4489-A5A7-0AA677610AFD}',
	'ILineDimensions' : '{A6F6A18A-78FA-4A77-BB75-90647E0C545C}',
	'ILineDimension' : '{A3767BDA-E605-4FC1-988D-81809DEB36F4}',
	'IRadialDimensions' : '{12D26993-449E-42E2-A909-B047AFD6E27D}',
	'IRadialDimension' : '{712A9437-D772-4EAE-AF83-ABC9C22EB281}',
	'IDiametralDimensions' : '{8E45FEB9-7BCD-4C9F-9767-320736980662}',
	'IDiametralDimension' : '{2B4CE92F-438D-4D3E-8F8D-4D14E5D0E214}',
	'IAngleDimensions' : '{DF9ABB77-BBB6-4B29-A0E0-81DCFD525C2E}',
	'IAngleDimension' : '{0F2CE9EC-5D2A-4B21-B96A-46201C120ED1}',
	'IBreakLineDimensions' : '{4125169F-3EA8-4AC0-9E1B-5582D62600C4}',
	'IBreakLineDimension' : '{61164A26-855C-4220-88ED-C2BDAF49B2DB}',
	'IHeightDimensions' : '{3A56D35C-3242-4C49-BA99-CF790EB10356}',
	'IHeightDimension' : '{938BE57F-55FF-469F-82A5-B1CD6CCF8340}',
	'IArcDimensions' : '{FE2755D9-48E2-44CC-BC24-86CF86BE08E2}',
	'IArcDimension' : '{11487495-B18A-4877-9E85-3DC9016DF8BD}',
	'IBreakRadialDimensions' : '{E2181A3E-5417-4D73-AB65-983DED3438E0}',
	'IBreakRadialDimension' : '{88491537-9E93-42F3-861C-761A75BB89D6}',
	'IRoughs' : '{ACC42B32-27F3-4F74-B4A5-C97D4C7B289D}',
	'IRough' : '{0A192AC5-D8BC-43E9-8FC7-ACF32578DDB4}',
	'IBases' : '{C607727C-6B0A-4FB6-AFCA-ED9D83F5C6B7}',
	'IBase' : '{01CDFD67-69EA-4289-8F42-5B01BB9BF70B}',
	'ITolerances' : '{97CDD55F-3C64-469B-B26E-A927D3300B6C}',
	'ITolerance' : '{42DEF911-ADB2-478C-85F1-D5FEFA262EEC}',
	'IDrawingTables' : '{DF92DACE-BDC6-4341-86DA-3A9C8DCFDEFE}',
	'IDrawingTable' : '{9B421BDA-0444-4A68-B69C-1C05D05C9D28}',
	'IViewPointers' : '{08B45C97-6F86-4809-BBC3-78F216BD0430}',
	'IViewPointer' : '{3EE98177-63E8-4C48-89AD-3D5CCCF84D72}',
	'ICentreMarkers' : '{A0533211-CF52-4AB5-A172-3DC7D94276D1}',
	'ICentreMarker' : '{8FE1CADA-DE72-4A55-B303-EAF1F4748CF6}',
	'IRemoteElements' : '{88427A6B-00AF-46E2-9B95-BC8348C2162A}',
	'IRemoteElement' : '{A9D96CE2-9FE4-494E-87B2-20122EAC2AE4}',
	'IAxisLines' : '{C567E700-E163-4C8F-B329-931BB93D0223}',
	'IAxisLine' : '{5C5CAEBD-70A9-41DB-9F74-F9760D822D95}',
	'IWaveLines' : '{C1F0A911-8B4A-48B5-9611-5250D3FC2ACA}',
	'IWaveLine' : '{FA2012E1-A983-47D3-9D43-B8DC619AC554}',
	'IBrokenLines' : '{2A7EADC0-5E79-4DDB-85D5-E3EDB743480D}',
	'IBrokenLine' : '{2482EB44-5625-4FB9-A46B-781426B02510}',
	'ICircularsCentries' : '{1F7ED8F6-85DA-4B32-9306-31E3DABA3F84}',
	'ICircularCentres' : '{43812A86-37CD-4C6C-AE86-78576EC7E834}',
	'ILinearsCentries' : '{E0854CCB-7849-4503-BF8B-F70CF493D59B}',
	'ILinearCentres' : '{C1E24970-64F0-4689-A3AB-CC34698378DC}',
	'IConditionIntersects' : '{EDB023F6-0862-4CB3-AF81-62D784F455B1}',
	'IConditionIntersect' : '{8E844A00-FC0A-47FA-9167-37BE6C77D032}',
	'IBreakAngleDimension' : '{F6ED408A-C2A8-47DD-8EC3-011A7AD60335}',
	'IBranchs' : '{C8A55AB3-D6DD-49B8-95F0-716475855C10}',
	'ILeader' : '{A7419920-06B8-4F34-AC1E-9D48E0ED9DCB}',
	'IMarkLeader' : '{8A5D2A56-ECB6-4151-B1AC-F8548CD668CF}',
	'IPositionLeader' : '{A8227628-4B9C-42C8-AE58-B3716A7EC1AF}',
	'IChangeLeader' : '{CCFBE87D-1A3C-4C8B-ABE3-1C2319694314}',
	'IBrandLeader' : '{EEF8366B-7C8D-448B-9944-BE63E82C1543}',
	'IToleranceParam' : '{46E2F216-6BCE-4863-9DDC-CC08DC0016F7}',
	'IContourSegment' : '{AA485B32-FF45-4035-BFC4-AEE54E638344}',
	'IContourLineSegment' : '{FB2432F1-8AE7-4D43-AFF2-A3A3BE226CFA}',
	'IContourArc' : '{ED4A6D97-4543-4842-B2C3-973FB0E90E87}',
	'IInsertionFragment' : '{3D99B82C-CD88-406D-A946-2D8C8E94EE73}',
	'IInsertionView' : '{0C8FC5A9-57A8-4971-8E6C-68933269D42E}',
	'IInsertionsManager' : '{B43FA13A-9488-422C-A9F3-D279FDA296BB}',
	'IAxisLineParam' : '{620CC8EB-A5C0-4978-BD98-38344DC6ADC0}',
	'IBoundariesObject' : '{7198C93A-7655-4347-9954-BA9AA28D0608}',
	'IAnnotativeObject' : '{0DBD7BCD-F78E-4BDA-BCAD-3004C60B6D06}',
	'IAnnotativeContainer' : '{AE6C238C-4398-4057-9D28-D275954D9506}',
	'ICurveCopyObjectParam' : '{12B52A99-FF5F-4C08-9E5E-DF7C7AD834A8}',
	'ICircleCopyObjectParam' : '{138D1202-CA46-4DB3-BF2B-85D260E44355}',
	'INurbsByPoints' : '{7E553465-7C0D-4E35-B630-D7A54CD4FC2F}',
	'ITextDocumentSectionsManager' : '{EEB71F69-1C0F-4E73-9D20-523697215E0B}',
	'ITextDocumentSection' : '{A64BE069-8FCB-43F1-AB34-9974DC7FCF5F}',
	'IExternalTessellationObject' : '{9D5CDE37-7833-4359-B25A-FE7011EA771A}',
	'IExternalTessellationManager' : '{DC21F3D3-FFA6-4274-A976-79F34729B866}',
	'IExternalGDIObject' : '{C234E81D-4232-41FD-980D-8E7E6EA7B733}',
	'ksDocumentFileNotify' : '{324C1A45-67AD-41FB-BE57-624F930646F1}',
	'ksKompasObjectNotify' : '{C7CB743A-C59D-4C27-8CB6-971C2A393F2F}',
	'ksSelectionMngNotify' : '{A421368A-34B6-4DDF-9A52-73B3488EE83F}',
	'ksStampNotify' : '{404E7D5A-A13F-4CFF-8214-FEA7012110CB}',
	'ICircularCopyObjectParam' : '{A5B8E337-EE84-4EEC-8235-A812FDD6C2DE}',
	'IMeshCopyObjectParam' : '{592AB214-A8CF-462E-ACD5-528839113338}',
	'IPropertyOpticalProps' : '{E1AC2948-6191-4240-85F4-5A32321E9D46}',
	'IPropertyEditCheckBox' : '{3FBF29AA-5691-4E7B-BE08-2025F29F018E}',
	'ITablePattern' : '{EFE5B123-174F-4CB0-AE85-7F291FA8AE1B}',
	'ICopyObjectParam1' : '{65989BDB-AB09-4CC5-A1DC-6DFB5E5C6496}',
	'INewPartDocumentSettings' : '{7F3EEBF4-9277-4603-AD0A-C8DE1624F444}',
	'IModelObject1' : '{60DDC74B-8171-4BA6-ABD9-549FBA84E7B0}',
	'IMate3DDependentPosition' : '{698A8F34-5759-4FEC-AFEF-C8B29D072E12}',
	'IPropertyLinkButton' : '{4BE1AC9D-61F2-4305-95D5-2ED6C2B21A6A}',
	'IProductDataManager' : '{468578BC-BEAF-4053-AED9-4E10C48305C1}',
	'IMeshObject3D' : '{619A7499-13DA-4C43-AD1B-53ACAA4BA5B4}',
	'ISheetMetalRuledShell' : '{D92A7102-79CB-46D8-B18A-1804D71F5416}',
	'ISheetMetalLinearRuledShell' : '{934BCC92-BC49-4A46-9A88-70FD2E74537D}',
	'IZoneParametersByBorderPoints' : '{C24EB4CB-CE63-4130-AE76-86DE33A8DDD0}',
	'IDynamicCrossSectionStepParametersByBorderPoints' : '{D8A8BCBB-E337-431B-AC37-07007217190B}',
	'ksFindObjectParametersNotify' : '{E0C4D376-8503-4FC1-8442-794EC7F26364}',
	'IPlacement3DManipulator' : '{46597352-925C-4D1B-89E3-6868D54FAFE6}',
	'IApplicationLicenseManager' : '{742AA7CC-8019-4854-A8FF-9EE1FFBD0460}',
	'IPLMObject' : '{BE4BA098-99B4-4C27-912B-3AD83A04E543}',
	'IPLMObjectsManager' : '{95615543-48E9-4738-9B01-D8ABC2C9001B}',
	'IMultiThicknessGroupsManager' : '{4FB26621-6A86-43FF-BB61-AF1B04AFD22B}',
	'IApplicationServises' : '{EE36CADB-07D1-457A-8D7C-1D2D4B240CF3}',
}


